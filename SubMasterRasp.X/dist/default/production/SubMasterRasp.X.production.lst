

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Mar 15 15:22:48 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     	FNCALL	_main,_Init
   868                           	FNCALL	_main,_UART_Init
   869                           	FNCALL	_main,_spiInit
   870                           	FNCALL	_UART_Init,___aldiv
   871                           	FNROOT	_main
   872                           	FNCALL	_isr,_UART_Read
   873                           	FNCALL	_isr,_spiRead
   874                           	FNCALL	_isr,_spiWrite
   875                           	FNCALL	_spiRead,_spiReceiveWait
   876                           	FNCALL	intlevel1,_isr
   877                           	global	intlevel1
   878                           	FNROOT	intlevel1
   879                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   880                           global __pidataBANK0
   881                           __pidataBANK0:
   882  032A                     	file	"SubMasterProyect.c"
   883                           	line	56
   884                           
   885                           ;initializer for _ValorE
   886                           	retlw	032h
   887  032A  3432               	line	55
   888                           
   889                           ;initializer for _ValorD
   890                           	retlw	028h
   891  032B  3428               	line	54
   892                           
   893                           ;initializer for _ValorC
   894                           	retlw	01Eh
   895  032C  341E               	line	53
   896                           
   897                           ;initializer for _ValorB
   898                           	retlw	014h
   899  032D  3414               	line	52
   900                           
   901                           ;initializer for _ValorA
   902                           	retlw	0Ah
   903  032E  340A               	line	43
   904                           
   905                           ;initializer for _SENSOR4
   906                           	retlw	028h
   907  032F  3428               	line	42
   908                           
   909                           ;initializer for _SENSOR3
   910                           	retlw	01Eh
   911  0330  341E               	line	41
   912                           
   913                           ;initializer for _SENSOR2
   914                           	retlw	014h
   915  0331  3414               	line	40
   916                           
   917                           ;initializer for _SENSOR1
   918                           	retlw	0Ah
   919  0332  340A               	global	_controla
   920                           	global	_Valor5
   921                           	global	_Valor2
   922                           	global	_Valor1
   923                           	global	_VERIFICADOR
   924                           	global	_Valor4
   925                           	global	_Valor3
   926                           	global	_RCREG
   927                           _RCREG	set	0x1A
   928  001A                     	global	_TXREG
   929                           _TXREG	set	0x19
   930  0019                     	global	_RCSTAbits
   931                           _RCSTAbits	set	0x18
   932  0018                     	global	_SSPBUF
   933                           _SSPBUF	set	0x13
   934  0013                     	global	_SSPCON
   935                           _SSPCON	set	0x14
   936  0014                     	global	_PIR1bits
   937                           _PIR1bits	set	0xC
   938  000C                     	global	_INTCON
   939                           _INTCON	set	0xB
   940  000B                     	global	_PORTEbits
   941                           _PORTEbits	set	0x9
   942  0009                     	global	_PORTD
   943                           _PORTD	set	0x8
   944  0008                     	global	_PORTE
   945                           _PORTE	set	0x9
   946  0009                     	global	_PORTC
   947                           _PORTC	set	0x7
   948  0007                     	global	_PORTB
   949                           _PORTB	set	0x6
   950  0006                     	global	_PORTA
   951                           _PORTA	set	0x5
   952  0005                     	global	_PEIE
   953                           _PEIE	set	0x5E
   954  005E                     	global	_GIE
   955                           _GIE	set	0x5F
   956  005F                     	global	_RCIF
   957                           _RCIF	set	0x65
   958  0065                     	global	_SSPIF
   959                           _SSPIF	set	0x63
   960  0063                     	global	_SPBRG
   961                           _SPBRG	set	0x99
   962  0099                     	global	_TXSTAbits
   963                           _TXSTAbits	set	0x98
   964  0098                     	global	_SSPSTATbits
   965                           _SSPSTATbits	set	0x94
   966  0094                     	global	_SSPSTAT
   967                           _SSPSTAT	set	0x94
   968  0094                     	global	_OSCCONbits
   969                           _OSCCONbits	set	0x8F
   970  008F                     	global	_TRISE
   971                           _TRISE	set	0x89
   972  0089                     	global	_TRISD
   973                           _TRISD	set	0x88
   974  0088                     	global	_TRISB
   975                           _TRISB	set	0x86
   976  0086                     	global	_TRISA
   977                           _TRISA	set	0x85
   978  0085                     	global	_TRISCbits
   979                           _TRISCbits	set	0x87
   980  0087                     	global	_PIE1bits
   981                           _PIE1bits	set	0x8C
   982  008C                     	global	_OSCCON
   983                           _OSCCON	set	0x8F
   984  008F                     	global	_TRMT
   985                           _TRMT	set	0x4C1
   986  04C1                     	global	_TRISC3
   987                           _TRISC3	set	0x43B
   988  043B                     	global	_TRISC5
   989                           _TRISC5	set	0x43D
   990  043D                     	global	_RCIE
   991                           _RCIE	set	0x465
   992  0465                     	global	_ANSELH
   993                           _ANSELH	set	0x189
   994  0189                     	global	_ANSEL
   995                           _ANSEL	set	0x188
   996  0188                     ; #config settings
   997                           global __CFG_FOSC$INTRC_NOCLKOUT
   998                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   999  0000                     global __CFG_WDTE$OFF
  1000                           __CFG_WDTE$OFF equ 0x0
  1001  0000                     global __CFG_PWRTE$OFF
  1002                           __CFG_PWRTE$OFF equ 0x0
  1003  0000                     global __CFG_MCLRE$OFF
  1004                           __CFG_MCLRE$OFF equ 0x0
  1005  0000                     global __CFG_CP$OFF
  1006                           __CFG_CP$OFF equ 0x0
  1007  0000                     global __CFG_CPD$OFF
  1008                           __CFG_CPD$OFF equ 0x0
  1009  0000                     global __CFG_BOREN$OFF
  1010                           __CFG_BOREN$OFF equ 0x0
  1011  0000                     global __CFG_IESO$OFF
  1012                           __CFG_IESO$OFF equ 0x0
  1013  0000                     global __CFG_FCMEN$OFF
  1014                           __CFG_FCMEN$OFF equ 0x0
  1015  0000                     global __CFG_LVP$OFF
  1016                           __CFG_LVP$OFF equ 0x0
  1017  0000                     global __CFG_BOR4V$BOR40V
  1018                           __CFG_BOR4V$BOR40V equ 0x0
  1019  0000                     global __CFG_WRT$OFF
  1020                           __CFG_WRT$OFF equ 0x0
  1021  0000                     	file	"C:\Users\DIBUJO~1\AppData\Local\Temp\sf3c."
  1022                           	line	#
  1023                           psect cinit,class=CODE,delta=2
  1024                           global start_initialization
  1025                           start_initialization:
  1026  000F                     
  1027                           global __initialization
  1028                           __initialization:
  1029  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1030                           global __pbssCOMMON
  1031                           __pbssCOMMON:
  1032  0070                     _controla:
  1033  0070                            ds      1
  1034  0070                     
  1035                           _Valor5:
  1036  0071                            ds      1
  1037  0071                     
  1038                           _Valor2:
  1039  0072                            ds      1
  1040  0072                     
  1041                           _Valor1:
  1042  0073                            ds      1
  1043  0073                     
  1044                           _VERIFICADOR:
  1045  0074                            ds      1
  1046  0074                     
  1047                           psect	bssBANK0,class=BANK0,space=1,noexec
  1048                           global __pbssBANK0
  1049                           __pbssBANK0:
  1050  004B                     _dato:
  1051  004B                            ds      1
  1052  004B                     
  1053                           _Valor4:
  1054  004C                            ds      1
  1055  004C                     
  1056                           _Valor3:
  1057  004D                            ds      1
  1058  004D                     
  1059                           psect	dataBANK0,class=BANK0,space=1,noexec
  1060                           global __pdataBANK0
  1061                           __pdataBANK0:
  1062  0042                     	file	"SubMasterProyect.c"
  1063                           	line	56
  1064                           _ValorE:
  1065  0042                            ds      1
  1066  0042                     
  1067                           psect	dataBANK0
  1068                           	file	"SubMasterProyect.c"
  1069                           	line	55
  1070                           _ValorD:
  1071  0043                            ds      1
  1072  0043                     
  1073                           psect	dataBANK0
  1074                           	file	"SubMasterProyect.c"
  1075                           	line	54
  1076                           _ValorC:
  1077  0044                            ds      1
  1078  0044                     
  1079                           psect	dataBANK0
  1080                           	file	"SubMasterProyect.c"
  1081                           	line	53
  1082                           _ValorB:
  1083  0045                            ds      1
  1084  0045                     
  1085                           psect	dataBANK0
  1086                           	file	"SubMasterProyect.c"
  1087                           	line	52
  1088                           _ValorA:
  1089  0046                            ds      1
  1090  0046                     
  1091                           psect	dataBANK0
  1092                           	file	"SubMasterProyect.c"
  1093                           	line	43
  1094                           _SENSOR4:
  1095  0047                            ds      1
  1096  0047                     
  1097                           psect	dataBANK0
  1098                           	file	"SubMasterProyect.c"
  1099                           	line	42
  1100                           _SENSOR3:
  1101  0048                            ds      1
  1102  0048                     
  1103                           psect	dataBANK0
  1104                           	file	"SubMasterProyect.c"
  1105                           	line	41
  1106                           _SENSOR2:
  1107  0049                            ds      1
  1108  0049                     
  1109                           psect	dataBANK0
  1110                           	file	"SubMasterProyect.c"
  1111                           	line	40
  1112                           _SENSOR1:
  1113  004A                            ds      1
  1114  004A                     
  1115                           	file	"C:\Users\DIBUJO~1\AppData\Local\Temp\sf3c."
  1116                           	line	#
  1117                           global btemp
  1118                           psect inittext,class=CODE,delta=2
  1119                           global init_fetch0,btemp
  1120                           ;	Called with low address in FSR and high address in W
  1121                           init_fetch0:
  1122  0302                     	movf btemp,w
  1123  0302  087E               	movwf pclath
  1124  0303  008A               	movf btemp+1,w
  1125  0304  087F               	movwf pc
  1126  0305  0082               global init_ram0
  1127                           ;Called with:
  1128                           ;	high address of idata address in btemp 
  1129                           ;	low address of idata address in btemp+1 
  1130                           ;	low address of data in FSR
  1131                           ;	high address + 1 of data in btemp-1
  1132                           init_ram0:
  1133  0306                     	fcall init_fetch0
  1134  0306  120A  118A  2302  120A  118A  	movwf indf,f
  1135  030B  0080               	incf fsr,f
  1136  030C  0A84               	movf fsr,w
  1137  030D  0804               	xorwf btemp-1,w
  1138  030E  067D               	btfsc status,2
  1139  030F  1903               	retlw 0
  1140  0310  3400               	incf btemp+1,f
  1141  0311  0AFF               	btfsc status,2
  1142  0312  1903               	incf btemp,f
  1143  0313  0AFE               	goto init_ram0
  1144  0314  2B06               ; Initialize objects allocated to BANK0
  1145                           psect cinit,class=CODE,delta=2,merge=1
  1146                           global init_ram0, __pidataBANK0
  1147                           	bcf	status, 7	;select IRP bank0
  1148  000F  1383               	movlw low(__pdataBANK0+9)
  1149  0010  304B               	movwf btemp-1,f
  1150  0011  00FD               	movlw high(__pidataBANK0)
  1151  0012  3003               	movwf btemp,f
  1152  0013  00FE               	movlw low(__pidataBANK0)
  1153  0014  302A               	movwf btemp+1,f
  1154  0015  00FF               	movlw low(__pdataBANK0)
  1155  0016  3042               	movwf fsr,f
  1156  0017  0084               	fcall init_ram0
  1157  0018  120A  118A  2306  120A  118A  	line	#
  1158                           ; Clear objects allocated to BANK0
  1159                           psect cinit,class=CODE,delta=2,merge=1
  1160                           	clrf	((__pbssBANK0)+0)&07Fh
  1161  001D  01CB               	clrf	((__pbssBANK0)+1)&07Fh
  1162  001E  01CC               	clrf	((__pbssBANK0)+2)&07Fh
  1163  001F  01CD               ; Clear objects allocated to COMMON
  1164                           psect cinit,class=CODE,delta=2,merge=1
  1165                           	clrf	((__pbssCOMMON)+0)&07Fh
  1166  0020  01F0               	clrf	((__pbssCOMMON)+1)&07Fh
  1167  0021  01F1               	clrf	((__pbssCOMMON)+2)&07Fh
  1168  0022  01F2               	clrf	((__pbssCOMMON)+3)&07Fh
  1169  0023  01F3               	clrf	((__pbssCOMMON)+4)&07Fh
  1170  0024  01F4               psect cinit,class=CODE,delta=2,merge=1
  1171                           global end_of_initialization,__end_of__initialization
  1172                           
  1173                           ;End of C runtime variable initialization code
  1174                           
  1175                           end_of_initialization:
  1176  0025                     __end_of__initialization:
  1177  0025                     clrf status
  1178  0025  0183               ljmp _main	;jump to C main() function
  1179  0026  120A  118A  2A7D   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1180                           global __pcstackCOMMON
  1181                           __pcstackCOMMON:
  1182  0075                     ?_spiRead:	; 1 bytes @ 0x0
  1183  0075                     ??_spiRead:	; 1 bytes @ 0x0
  1184  0075                     ?_spiWrite:	; 1 bytes @ 0x0
  1185  0075                     ??_spiWrite:	; 1 bytes @ 0x0
  1186  0075                     ?_UART_Read:	; 1 bytes @ 0x0
  1187  0075                     ??_UART_Read:	; 1 bytes @ 0x0
  1188  0075                     ?_Init:	; 1 bytes @ 0x0
  1189  0075                     ?_isr:	; 1 bytes @ 0x0
  1190  0075                     ?_main:	; 1 bytes @ 0x0
  1191  0075                     ?_spiReceiveWait:	; 1 bytes @ 0x0
  1192  0075                     ??_spiReceiveWait:	; 1 bytes @ 0x0
  1193  0075                     	global	spiWrite@dat
  1194                           spiWrite@dat:	; 1 bytes @ 0x0
  1195  0075                     	ds	1
  1196  0075                     ??_isr:	; 1 bytes @ 0x1
  1197  0076                     	ds	3
  1198  0076                     ??_Init:	; 1 bytes @ 0x4
  1199  0079                     ??_spiInit:	; 1 bytes @ 0x4
  1200  0079                     ??___aldiv:	; 1 bytes @ 0x4
  1201  0079                     	global	spiInit@sType
  1202                           spiInit@sType:	; 1 bytes @ 0x4
  1203  0079                     	ds	1
  1204  0079                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1205                           global __pcstackBANK0
  1206                           __pcstackBANK0:
  1207  0020                     ?_spiInit:	; 1 bytes @ 0x0
  1208  0020                     	global	?___aldiv
  1209                           ?___aldiv:	; 4 bytes @ 0x0
  1210  0020                     	global	spiInit@sDataSample
  1211                           spiInit@sDataSample:	; 1 bytes @ 0x0
  1212  0020                     	global	___aldiv@divisor
  1213                           ___aldiv@divisor:	; 4 bytes @ 0x0
  1214  0020                     	ds	1
  1215  0020                     	global	spiInit@sClockIdle
  1216                           spiInit@sClockIdle:	; 1 bytes @ 0x1
  1217  0021                     	ds	1
  1218  0021                     	global	spiInit@sTransmitEdge
  1219                           spiInit@sTransmitEdge:	; 1 bytes @ 0x2
  1220  0022                     	ds	2
  1221  0022                     	global	___aldiv@dividend
  1222                           ___aldiv@dividend:	; 4 bytes @ 0x4
  1223  0024                     	ds	4
  1224  0024                     	global	___aldiv@counter
  1225                           ___aldiv@counter:	; 1 bytes @ 0x8
  1226  0028                     	ds	1
  1227  0028                     	global	___aldiv@sign
  1228                           ___aldiv@sign:	; 1 bytes @ 0x9
  1229  0029                     	ds	1
  1230  0029                     	global	___aldiv@quotient
  1231                           ___aldiv@quotient:	; 4 bytes @ 0xA
  1232  002A                     	ds	4
  1233  002A                     ?_UART_Init:	; 1 bytes @ 0xE
  1234  002E                     	global	UART_Init@baudrate
  1235                           UART_Init@baudrate:	; 4 bytes @ 0xE
  1236  002E                     	ds	4
  1237  002E                     ??_UART_Init:	; 1 bytes @ 0x12
  1238  0032                     	ds	12
  1239  0032                     	global	UART_Init@x
  1240                           UART_Init@x:	; 2 bytes @ 0x1E
  1241  003E                     	ds	2
  1242  003E                     ??_main:	; 1 bytes @ 0x20
  1243  0040                     	ds	2
  1244  0040                     ;!
  1245                           ;!Data Sizes:
  1246                           ;!    Strings     0
  1247                           ;!    Constant    0
  1248                           ;!    Data        9
  1249                           ;!    BSS         8
  1250                           ;!    Persistent  0
  1251                           ;!    Stack       0
  1252                           ;!
  1253                           ;!Auto Spaces:
  1254                           ;!    Space          Size  Autos    Used
  1255                           ;!    COMMON           14      5      10
  1256                           ;!    BANK0            80     34      46
  1257                           ;!    BANK1            80      0       0
  1258                           ;!    BANK3            96      0       0
  1259                           ;!    BANK2            96      0       0
  1260                           
  1261                           ;!
  1262                           ;!Pointer List with Targets:
  1263                           ;!
  1264                           ;!    None.
  1265                           
  1266                           
  1267                           ;!
  1268                           ;!Critical Paths under _main in COMMON
  1269                           ;!
  1270                           ;!    _main->_spiInit
  1271                           ;!    _UART_Init->___aldiv
  1272                           ;!
  1273                           ;!Critical Paths under _isr in COMMON
  1274                           ;!
  1275                           ;!    _isr->_spiWrite
  1276                           ;!
  1277                           ;!Critical Paths under _main in BANK0
  1278                           ;!
  1279                           ;!    _main->_UART_Init
  1280                           ;!    _UART_Init->___aldiv
  1281                           ;!
  1282                           ;!Critical Paths under _isr in BANK0
  1283                           ;!
  1284                           ;!    None.
  1285                           ;!
  1286                           ;!Critical Paths under _main in BANK1
  1287                           ;!
  1288                           ;!    None.
  1289                           ;!
  1290                           ;!Critical Paths under _isr in BANK1
  1291                           ;!
  1292                           ;!    None.
  1293                           ;!
  1294                           ;!Critical Paths under _main in BANK3
  1295                           ;!
  1296                           ;!    None.
  1297                           ;!
  1298                           ;!Critical Paths under _isr in BANK3
  1299                           ;!
  1300                           ;!    None.
  1301                           ;!
  1302                           ;!Critical Paths under _main in BANK2
  1303                           ;!
  1304                           ;!    None.
  1305                           ;!
  1306                           ;!Critical Paths under _isr in BANK2
  1307                           ;!
  1308                           ;!    None.
  1309                           
  1310 ;;
  1311 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1312 ;;
  1313                           
  1314                           ;!
  1315                           ;!Call Graph Tables:
  1316                           ;!
  1317                           ;! ---------------------------------------------------------------------------------
  1318                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1319                           ;! ---------------------------------------------------------------------------------
  1320                           ;! (0) _main                                                 2     2      0    1373
  1321                           ;!                                             32 BANK0      2     2      0
  1322                           ;!                               _Init
  1323                           ;!                          _UART_Init
  1324                           ;!                            _spiInit
  1325                           ;! ---------------------------------------------------------------------------------
  1326                           ;! (1) _spiInit                                              4     1      3     456
  1327                           ;!                                              4 COMMON     1     1      0
  1328                           ;!                                              0 BANK0      3     0      3
  1329                           ;! ---------------------------------------------------------------------------------
  1330                           ;! (1) _UART_Init                                           18    14      4     917
  1331                           ;!                                             14 BANK0     18    14      4
  1332                           ;!                            ___aldiv
  1333                           ;! ---------------------------------------------------------------------------------
  1334                           ;! (2) ___aldiv                                             15     7      8     604
  1335                           ;!                                              4 COMMON     1     1      0
  1336                           ;!                                              0 BANK0     14     6      8
  1337                           ;! ---------------------------------------------------------------------------------
  1338                           ;! (1) _Init                                                 0     0      0       0
  1339                           ;! ---------------------------------------------------------------------------------
  1340                           ;! Estimated maximum stack depth 2
  1341                           ;! ---------------------------------------------------------------------------------
  1342                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1343                           ;! ---------------------------------------------------------------------------------
  1344                           ;! (3) _isr                                                  3     3      0      22
  1345                           ;!                                              1 COMMON     3     3      0
  1346                           ;!                          _UART_Read
  1347                           ;!                            _spiRead
  1348                           ;!                           _spiWrite
  1349                           ;! ---------------------------------------------------------------------------------
  1350                           ;! (4) _spiWrite                                             1     1      0      22
  1351                           ;!                                              0 COMMON     1     1      0
  1352                           ;! ---------------------------------------------------------------------------------
  1353                           ;! (4) _spiRead                                              0     0      0       0
  1354                           ;!                     _spiReceiveWait
  1355                           ;! ---------------------------------------------------------------------------------
  1356                           ;! (5) _spiReceiveWait                                       0     0      0       0
  1357                           ;! ---------------------------------------------------------------------------------
  1358                           ;! (4) _UART_Read                                            0     0      0       0
  1359                           ;! ---------------------------------------------------------------------------------
  1360                           ;! Estimated maximum stack depth 5
  1361                           ;! ---------------------------------------------------------------------------------
  1362                           ;!
  1363                           ;! Call Graph Graphs:
  1364                           ;!
  1365                           ;! _main (ROOT)
  1366                           ;!   _Init
  1367                           ;!   _UART_Init
  1368                           ;!     ___aldiv
  1369                           ;!   _spiInit
  1370                           ;!
  1371                           ;! _isr (ROOT)
  1372                           ;!   _UART_Read
  1373                           ;!   _spiRead
  1374                           ;!     _spiReceiveWait
  1375                           ;!   _spiWrite
  1376                           ;!
  1377                           
  1378                           ;! Address spaces:
  1379                           
  1380                           ;!Name               Size   Autos  Total    Cost      Usage
  1381                           ;!BANK3               60      0       0       9        0.0%
  1382                           ;!BITBANK3            60      0       0       8        0.0%
  1383                           ;!SFR3                 0      0       0       4        0.0%
  1384                           ;!BITSFR3              0      0       0       4        0.0%
  1385                           ;!BANK2               60      0       0      11        0.0%
  1386                           ;!BITBANK2            60      0       0      10        0.0%
  1387                           ;!SFR2                 0      0       0       5        0.0%
  1388                           ;!BITSFR2              0      0       0       5        0.0%
  1389                           ;!BANK1               50      0       0       7        0.0%
  1390                           ;!BITBANK1            50      0       0       6        0.0%
  1391                           ;!SFR1                 0      0       0       2        0.0%
  1392                           ;!BITSFR1              0      0       0       2        0.0%
  1393                           ;!BANK0               50     22      2E       5       57.5%
  1394                           ;!BITBANK0            50      0       0       4        0.0%
  1395                           ;!SFR0                 0      0       0       1        0.0%
  1396                           ;!BITSFR0              0      0       0       1        0.0%
  1397                           ;!COMMON               E      5       A       1       71.4%
  1398                           ;!BITCOMMON            E      0       0       0        0.0%
  1399                           ;!CODE                 0      0       0       0        0.0%
  1400                           ;!DATA                 0      0      38      12        0.0%
  1401                           ;!ABS                  0      0      38       3        0.0%
  1402                           ;!NULL                 0      0       0       0        0.0%
  1403                           ;!STACK                0      0       0       2        0.0%
  1404                           ;!EEDATA             100      0       0       0        0.0%
  1405                           
  1406                           	global	_main
  1407                           
  1408 ;; *************** function _main *****************
  1409 ;; Defined at:
  1410 ;;		line 110 in file "SubMasterProyect.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg, status,2, status,0, pclath, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : B00/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1424 ;;      Params:         0       0       0       0       0
  1425 ;;      Locals:         0       0       0       0       0
  1426 ;;      Temps:          0       2       0       0       0
  1427 ;;      Totals:         0       2       0       0       0
  1428 ;;Total ram usage:        2 bytes
  1429 ;; Hardware stack levels required when called:    5
  1430 ;; This function calls:
  1431 ;;		_Init
  1432 ;;		_UART_Init
  1433 ;;		_spiInit
  1434 ;; This function is called by:
  1435 ;;		Startup code after reset
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1439                           	file	"SubMasterProyect.c"
  1440                           	line	110
  1441                           global __pmaintext
  1442                           __pmaintext:	;psect for function _main
  1443  027D                     psect	maintext
  1444                           	file	"SubMasterProyect.c"
  1445                           	line	110
  1446                           	global	__size_of_main
  1447                           	__size_of_main	equ	__end_of_main-_main
  1448  004C                     	
  1449                           _main:	
  1450  027D                     ;incstack = 0
  1451                           	opt	stack 3
  1452                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1453                           	line	111
  1454                           	
  1455                           l1289:	
  1456  027D                     ;SubMasterProyect.c: 111:     Init();
  1457                           	fcall	_Init
  1458  027D  120A  118A  22E7  120A  118A  	line	112
  1459                           ;SubMasterProyect.c: 112:     spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOC
                                 K_IDLE_HIGH, SPI_ACTIVE_2_IDLE);
  1460                           	bcf	status, 5	;RP0=0, select bank0
  1461  0282  1283               	bcf	status, 6	;RP1=0, select bank0
  1462  0283  1303               	clrf	(spiInit@sDataSample)
  1463  0284  01A0               	movlw	low(010h)
  1464  0285  3010               	movwf	(??_main+0)+0
  1465  0286  00C0               	movf	(??_main+0)+0,w
  1466  0287  0840               	movwf	(spiInit@sClockIdle)
  1467  0288  00A1               	movlw	low(040h)
  1468  0289  3040               	movwf	(??_main+1)+0
  1469  028A  00C1               	movf	(??_main+1)+0,w
  1470  028B  0841               	movwf	(spiInit@sTransmitEdge)
  1471  028C  00A2               	movlw	low(025h)
  1472  028D  3025               	fcall	_spiInit
  1473  028E  120A  118A  22C9  120A  118A  	line	113
  1474                           ;SubMasterProyect.c: 113:     UART_Init(9600);
  1475                           	movlw	0
  1476  0293  3000               	bcf	status, 5	;RP0=0, select bank0
  1477  0294  1283               	bcf	status, 6	;RP1=0, select bank0
  1478  0295  1303               	movwf	(UART_Init@baudrate+3)
  1479  0296  00B1               	movlw	0
  1480  0297  3000               	movwf	(UART_Init@baudrate+2)
  1481  0298  00B0               	movlw	025h
  1482  0299  3025               	movwf	(UART_Init@baudrate+1)
  1483  029A  00AF               	movlw	080h
  1484  029B  3080               	movwf	(UART_Init@baudrate)
  1485  029C  00AE               
  1486                           	fcall	_UART_Init
  1487  029D  120A  118A  2029  120A  118A  	line	115
  1488                           	
  1489                           l1291:	
  1490  02A2                     ;SubMasterProyect.c: 115:     PORTA = 0;
  1491                           	bcf	status, 5	;RP0=0, select bank0
  1492  02A2  1283               	bcf	status, 6	;RP1=0, select bank0
  1493  02A3  1303               	clrf	(5)	;volatile
  1494  02A4  0185               	line	116
  1495                           	
  1496                           l1293:	
  1497  02A5                     ;SubMasterProyect.c: 116:     PORTB = 0;
  1498                           	clrf	(6)	;volatile
  1499  02A5  0186               	line	117
  1500                           	
  1501                           l1295:	
  1502  02A6                     ;SubMasterProyect.c: 117:     PORTC = 0;
  1503                           	clrf	(7)	;volatile
  1504  02A6  0187               	line	118
  1505                           	
  1506                           l1297:	
  1507  02A7                     ;SubMasterProyect.c: 118:     PORTE = 0;
  1508                           	clrf	(9)	;volatile
  1509  02A7  0189               	line	119
  1510                           	
  1511                           l1299:	
  1512  02A8                     ;SubMasterProyect.c: 119:     PORTD = 0;
  1513                           	clrf	(8)	;volatile
  1514  02A8  0188               	goto	l1301
  1515  02A9  2AAA               	line	122
  1516                           ;SubMasterProyect.c: 122:     while(1){
  1517                           	
  1518                           l121:	
  1519  02AA                     	line	127
  1520                           	
  1521                           l1301:	
  1522  02AA                     ;SubMasterProyect.c: 127:         PORTA = Valor1;
  1523                           	movf	(_Valor1),w
  1524  02AA  0873               	movwf	(5)	;volatile
  1525  02AB  0085               	line	128
  1526                           	
  1527                           l1303:	
  1528  02AC                     ;SubMasterProyect.c: 128:         PORTB = Valor2;
  1529                           	movf	(_Valor2),w
  1530  02AC  0872               	movwf	(6)	;volatile
  1531  02AD  0086               	line	129
  1532                           	
  1533                           l1305:	
  1534  02AE                     ;SubMasterProyect.c: 129:         PORTD = Valor3;
  1535                           	movf	(_Valor3),w
  1536  02AE  084D               	movwf	(8)	;volatile
  1537  02AF  0088               	line	133
  1538                           	
  1539                           l1307:	
  1540  02B0                     ;SubMasterProyect.c: 133:         if (Valor4 == 1){
  1541                           		decf	((_Valor4)),w
  1542  02B0  034C               	btfss	status,2
  1543  02B1  1D03               	goto	u841
  1544  02B2  2AB4               	goto	u840
  1545  02B3  2AB5               u841:
  1546  02B4                     	goto	l122
  1547  02B4  2AB7               u840:
  1548  02B5                     	line	134
  1549                           	
  1550                           l1309:	
  1551  02B5                     ;SubMasterProyect.c: 134:             PORTEbits.RE0 =1;
  1552                           	bsf	(9),0	;volatile
  1553  02B5  1409               	line	135
  1554                           ;SubMasterProyect.c: 135:         }else {
  1555                           	goto	l1311
  1556  02B6  2AB9               	
  1557                           l122:	
  1558  02B7                     	line	136
  1559                           ;SubMasterProyect.c: 136:             PORTEbits.RE0 =0;
  1560                           	bcf	(9),0	;volatile
  1561  02B7  1009               	goto	l1311
  1562  02B8  2AB9               	line	137
  1563                           ;SubMasterProyect.c: 137:         }
  1564                           	
  1565                           l123:	
  1566  02B9                     	line	140
  1567                           	
  1568                           l1311:	
  1569  02B9                     ;SubMasterProyect.c: 140:         if (Valor5 == 1){
  1570                           		decf	((_Valor5)),w
  1571  02B9  0371               	btfss	status,2
  1572  02BA  1D03               	goto	u851
  1573  02BB  2ABD               	goto	u850
  1574  02BC  2ABE               u851:
  1575  02BD                     	goto	l124
  1576  02BD  2AC0               u850:
  1577  02BE                     	line	141
  1578                           	
  1579                           l1313:	
  1580  02BE                     ;SubMasterProyect.c: 141:             PORTEbits.RE1 =1;
  1581                           	bsf	(9),1	;volatile
  1582  02BE  1489               	line	142
  1583                           ;SubMasterProyect.c: 142:         }else {
  1584                           	goto	l1315
  1585  02BF  2AC2               	
  1586                           l124:	
  1587  02C0                     	line	143
  1588                           ;SubMasterProyect.c: 143:             PORTEbits.RE1 =0;
  1589                           	bcf	(9),1	;volatile
  1590  02C0  1089               	goto	l1315
  1591  02C1  2AC2               	line	144
  1592                           ;SubMasterProyect.c: 144:         }
  1593                           	
  1594                           l125:	
  1595  02C2                     	line	146
  1596                           	
  1597                           l1315:	
  1598  02C2                     ;SubMasterProyect.c: 146:         PORTB = Valor5;
  1599                           	movf	(_Valor5),w
  1600  02C2  0871               	movwf	(6)	;volatile
  1601  02C3  0086               	goto	l1301
  1602  02C4  2AAA               	line	149
  1603                           ;SubMasterProyect.c: 149:     }
  1604                           	
  1605                           l126:	
  1606  02C5                     	goto	l1301
  1607  02C5  2AAA               	
  1608                           l127:	
  1609  02C6                     	line	153
  1610                           ;SubMasterProyect.c: 152:     return;
  1611                           	
  1612                           l128:	
  1613  02C6                     	global	start
  1614                           	ljmp	start
  1615  02C6  120A  118A  280C   	opt stack 0
  1616                           GLOBAL	__end_of_main
  1617                           	__end_of_main:
  1618  02C9                     	signat	_main,89
  1619                           	global	_spiInit
  1620                           
  1621 ;; *************** function _spiInit *****************
  1622 ;; Defined at:
  1623 ;;		line 12 in file "SPI.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  sType           1    wreg     enum E1264
  1626 ;;  sDataSample     1    0[BANK0 ] enum E1272
  1627 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  1628 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  sType           1    4[COMMON] enum E1264
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1640 ;;      Params:         0       3       0       0       0
  1641 ;;      Locals:         1       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0
  1643 ;;      Totals:         1       3       0       0       0
  1644 ;;Total ram usage:        4 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    3
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1654                           	file	"SPI.c"
  1655                           	line	12
  1656                           global __ptext1
  1657                           __ptext1:	;psect for function _spiInit
  1658  02C9                     psect	text1
  1659                           	file	"SPI.c"
  1660                           	line	12
  1661                           	global	__size_of_spiInit
  1662                           	__size_of_spiInit	equ	__end_of_spiInit-_spiInit
  1663  001E                     	
  1664                           _spiInit:	
  1665  02C9                     ;incstack = 0
  1666                           	opt	stack 4
  1667                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1668                           ;spiInit@sType stored from wreg
  1669                           	movwf	(spiInit@sType)
  1670  02C9  00F9               	line	14
  1671                           	
  1672                           l1251:	
  1673  02CA                     ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
                                 ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1674                           	bsf	status, 5	;RP0=1, select bank1
  1675  02CA  1683               	bcf	status, 6	;RP1=0, select bank1
  1676  02CB  1303               	bcf	(1085/8)^080h,(1085)&7	;volatile
  1677  02CC  1287               	line	15
  1678                           ;SPI.c: 15:     if(sType & 0b00000100)
  1679                           	btfss	(spiInit@sType),(2)&7
  1680  02CD  1D79               	goto	u751
  1681  02CE  2AD0               	goto	u750
  1682  02CF  2AD1               u751:
  1683  02D0                     	goto	l1257
  1684  02D0  2AD9               u750:
  1685  02D1                     	line	17
  1686                           	
  1687                           l1253:	
  1688  02D1                     ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1689                           	bcf	status, 5	;RP0=0, select bank0
  1690  02D1  1283               	bcf	status, 6	;RP1=0, select bank0
  1691  02D2  1303               	movf	(spiInit@sTransmitEdge),w
  1692  02D3  0822               	bsf	status, 5	;RP0=1, select bank1
  1693  02D4  1683               	bcf	status, 6	;RP1=0, select bank1
  1694  02D5  1303               	movwf	(148)^080h	;volatile
  1695  02D6  0094               	line	18
  1696                           	
  1697                           l1255:	
  1698  02D7                     ;SPI.c: 18:         TRISC3 = 1;
  1699                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  1700  02D7  1587               	line	19
  1701                           ;SPI.c: 19:     }
  1702                           	goto	l163
  1703  02D8  2AE1               	line	20
  1704                           ;SPI.c: 20:     else
  1705                           	
  1706                           l162:	
  1707  02D9                     	line	22
  1708                           	
  1709                           l1257:	
  1710  02D9                     ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1711                           	bcf	status, 5	;RP0=0, select bank0
  1712  02D9  1283               	bcf	status, 6	;RP1=0, select bank0
  1713  02DA  1303               	movf	(spiInit@sDataSample),w
  1714  02DB  0820               	iorwf	(spiInit@sTransmitEdge),w
  1715  02DC  0422               	bsf	status, 5	;RP0=1, select bank1
  1716  02DD  1683               	bcf	status, 6	;RP1=0, select bank1
  1717  02DE  1303               	movwf	(148)^080h	;volatile
  1718  02DF  0094               	line	23
  1719                           	
  1720                           l1259:	
  1721  02E0                     ;SPI.c: 23:         TRISC3 = 0;
  1722                           	bcf	(1083/8)^080h,(1083)&7	;volatile
  1723  02E0  1187               	line	24
  1724                           ;SPI.c: 24:     }
  1725                           	
  1726                           l163:	
  1727  02E1                     	line	26
  1728                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1729                           	movf	(spiInit@sType),w
  1730  02E1  0879               	bcf	status, 5	;RP0=0, select bank0
  1731  02E2  1283               	bcf	status, 6	;RP1=0, select bank0
  1732  02E3  1303               	iorwf	(spiInit@sClockIdle),w
  1733  02E4  0421               	movwf	(20)	;volatile
  1734  02E5  0094               	line	27
  1735                           	
  1736                           l164:	
  1737  02E6                     	return
  1738  02E6  0008               	opt stack 0
  1739                           GLOBAL	__end_of_spiInit
  1740                           	__end_of_spiInit:
  1741  02E7                     	signat	_spiInit,16505
  1742                           	global	_UART_Init
  1743                           
  1744 ;; *************** function _UART_Init *****************
  1745 ;; Defined at:
  1746 ;;		line 12 in file "USARTinit.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  baudrate        4   14[BANK0 ] const long 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  x               2   30[BANK0 ] unsigned int 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      unsigned char 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0, pclath, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         0       4       0       0       0
  1761 ;;      Locals:         0       2       0       0       0
  1762 ;;      Temps:          0      12       0       0       0
  1763 ;;      Totals:         0      18       0       0       0
  1764 ;;Total ram usage:       18 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    4
  1767 ;; This function calls:
  1768 ;;		___aldiv
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1774                           	file	"USARTinit.c"
  1775                           	line	12
  1776                           global __ptext2
  1777                           __ptext2:	;psect for function _UART_Init
  1778  0029                     psect	text2
  1779                           	file	"USARTinit.c"
  1780                           	line	12
  1781                           	global	__size_of_UART_Init
  1782                           	__size_of_UART_Init	equ	__end_of_UART_Init-_UART_Init
  1783  00ED                     	
  1784                           _UART_Init:	
  1785  0029                     ;incstack = 0
  1786                           	opt	stack 3
  1787                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1788                           	line	15
  1789                           	
  1790                           l1261:	
  1791  0029                     ;USARTinit.c: 12: char UART_Init(const long int baudrate);USARTinit.c: 13: {;USARTinit.c
                                 : 14:   unsigned int x;;USARTinit.c: 15:   x = (8000000 - baudrate*64)/(baudrate*64);
  1792                           	bcf	status, 5	;RP0=0, select bank0
  1793  0029  1283               	bcf	status, 6	;RP1=0, select bank0
  1794  002A  1303               	movf	(UART_Init@baudrate),w
  1795  002B  082E               	movwf	(??_UART_Init+0)+0
  1796  002C  00B2               	movf	(UART_Init@baudrate+1),w
  1797  002D  082F               	movwf	((??_UART_Init+0)+0+1)
  1798  002E  00B3               	movf	(UART_Init@baudrate+2),w
  1799  002F  0830               	movwf	((??_UART_Init+0)+0+2)
  1800  0030  00B4               	movf	(UART_Init@baudrate+3),w
  1801  0031  0831               	movwf	((??_UART_Init+0)+0+3)
  1802  0032  00B5               	movlw	06h
  1803  0033  3006               u765:
  1804  0034                     	clrc
  1805  0034  1003               	rlf	(??_UART_Init+0)+0,f
  1806  0035  0DB2               	rlf	(??_UART_Init+0)+1,f
  1807  0036  0DB3               	rlf	(??_UART_Init+0)+2,f
  1808  0037  0DB4               	rlf	(??_UART_Init+0)+3,f
  1809  0038  0DB5               u760:
  1810  0039                     	addlw	-1
  1811  0039  3EFF               	skipz
  1812  003A  1D03               	goto	u765
  1813  003B  2834               	movf	3+(??_UART_Init+0)+0,w
  1814  003C  0835               	movwf	(___aldiv@divisor+3)
  1815  003D  00A3               	movf	2+(??_UART_Init+0)+0,w
  1816  003E  0834               	movwf	(___aldiv@divisor+2)
  1817  003F  00A2               	movf	1+(??_UART_Init+0)+0,w
  1818  0040  0833               	movwf	(___aldiv@divisor+1)
  1819  0041  00A1               	movf	0+(??_UART_Init+0)+0,w
  1820  0042  0832               	movwf	(___aldiv@divisor)
  1821  0043  00A0               
  1822                           	movlw	0
  1823  0044  3000               	movwf	((??_UART_Init+4)+0)
  1824  0045  00B6               	movlw	012h
  1825  0046  3012               	movwf	((??_UART_Init+4)+0+1)
  1826  0047  00B7               	movlw	07Ah
  1827  0048  307A               	movwf	((??_UART_Init+4)+0+2)
  1828  0049  00B8               	movlw	0
  1829  004A  3000               	movwf	((??_UART_Init+4)+0+3)
  1830  004B  00B9               	movf	(UART_Init@baudrate),w
  1831  004C  082E               	movwf	(??_UART_Init+8)+0
  1832  004D  00BA               	movf	(UART_Init@baudrate+1),w
  1833  004E  082F               	movwf	((??_UART_Init+8)+0+1)
  1834  004F  00BB               	movf	(UART_Init@baudrate+2),w
  1835  0050  0830               	movwf	((??_UART_Init+8)+0+2)
  1836  0051  00BC               	movf	(UART_Init@baudrate+3),w
  1837  0052  0831               	movwf	((??_UART_Init+8)+0+3)
  1838  0053  00BD               	movlw	06h
  1839  0054  3006               u775:
  1840  0055                     	clrc
  1841  0055  1003               	rlf	(??_UART_Init+8)+0,f
  1842  0056  0DBA               	rlf	(??_UART_Init+8)+1,f
  1843  0057  0DBB               	rlf	(??_UART_Init+8)+2,f
  1844  0058  0DBC               	rlf	(??_UART_Init+8)+3,f
  1845  0059  0DBD               u770:
  1846  005A                     	addlw	-1
  1847  005A  3EFF               	skipz
  1848  005B  1D03               	goto	u775
  1849  005C  2855               	comf	(??_UART_Init+8)+0,f
  1850  005D  09BA               	comf	(??_UART_Init+8)+1,f
  1851  005E  09BB               	comf	(??_UART_Init+8)+2,f
  1852  005F  09BC               	comf	(??_UART_Init+8)+3,f
  1853  0060  09BD               	incf	(??_UART_Init+8)+0,f
  1854  0061  0ABA               	skipnz
  1855  0062  1903               	incf	(??_UART_Init+8)+1,f
  1856  0063  0ABB               	skipnz
  1857  0064  1903               	incf	(??_UART_Init+8)+2,f
  1858  0065  0ABC               	skipnz
  1859  0066  1903               	incf	(??_UART_Init+8)+3,f
  1860  0067  0ABD               	movf	0+(??_UART_Init+8)+0,w
  1861  0068  083A               	addwf	(??_UART_Init+4)+0,f
  1862  0069  07B6               	movf	1+(??_UART_Init+8)+0,w
  1863  006A  083B               	skipnc
  1864  006B  1803               	incfsz	1+(??_UART_Init+8)+0,w
  1865  006C  0F3B               	goto	u780
  1866  006D  286F               	goto	u781
  1867  006E  2870               u780:
  1868  006F                     	addwf	(??_UART_Init+4)+1,f
  1869  006F  07B7               u781:
  1870  0070                     	movf	2+(??_UART_Init+8)+0,w
  1871  0070  083C               	skipnc
  1872  0071  1803               	incfsz	2+(??_UART_Init+8)+0,w
  1873  0072  0F3C               	goto	u782
  1874  0073  2875               	goto	u783
  1875  0074  2876               u782:
  1876  0075                     	addwf	(??_UART_Init+4)+2,f
  1877  0075  07B8               u783:
  1878  0076                     	movf	3+(??_UART_Init+8)+0,w
  1879  0076  083D               	skipnc
  1880  0077  1803               	incf	3+(??_UART_Init+8)+0,w
  1881  0078  0A3D               	addwf	(??_UART_Init+4)+3,f
  1882  0079  07B9               	movf	3+(??_UART_Init+4)+0,w
  1883  007A  0839               	movwf	(___aldiv@dividend+3)
  1884  007B  00A7               	movf	2+(??_UART_Init+4)+0,w
  1885  007C  0838               	movwf	(___aldiv@dividend+2)
  1886  007D  00A6               	movf	1+(??_UART_Init+4)+0,w
  1887  007E  0837               	movwf	(___aldiv@dividend+1)
  1888  007F  00A5               	movf	0+(??_UART_Init+4)+0,w
  1889  0080  0836               	movwf	(___aldiv@dividend)
  1890  0081  00A4               
  1891                           	fcall	___aldiv
  1892  0082  120A  118A  21D7  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1893  0087  1283               	bcf	status, 6	;RP1=0, select bank0
  1894  0088  1303               	movf	(1+(?___aldiv)),w
  1895  0089  0821               	movwf	(UART_Init@x+1)
  1896  008A  00BF               	movf	(0+(?___aldiv)),w
  1897  008B  0820               	movwf	(UART_Init@x)
  1898  008C  00BE               	line	16
  1899                           	
  1900                           l1263:	
  1901  008D                     ;USARTinit.c: 16:   if(x>255)
  1902                           	movlw	01h
  1903  008D  3001               	subwf	(UART_Init@x+1),w
  1904  008E  023F               	movlw	0
  1905  008F  3000               	skipnz
  1906  0090  1903               	subwf	(UART_Init@x),w
  1907  0091  023E               	skipc
  1908  0092  1C03               	goto	u791
  1909  0093  2895               	goto	u790
  1910  0094  2896               u791:
  1911  0095                     	goto	l1269
  1912  0095  28FC               u790:
  1913  0096                     	line	18
  1914                           	
  1915                           l1265:	
  1916  0096                     ;USARTinit.c: 17:   {;USARTinit.c: 18:     x = (8000000 - baudrate*16)/(baudrate*16);
  1917                           	movf	(UART_Init@baudrate),w
  1918  0096  082E               	movwf	(??_UART_Init+0)+0
  1919  0097  00B2               	movf	(UART_Init@baudrate+1),w
  1920  0098  082F               	movwf	((??_UART_Init+0)+0+1)
  1921  0099  00B3               	movf	(UART_Init@baudrate+2),w
  1922  009A  0830               	movwf	((??_UART_Init+0)+0+2)
  1923  009B  00B4               	movf	(UART_Init@baudrate+3),w
  1924  009C  0831               	movwf	((??_UART_Init+0)+0+3)
  1925  009D  00B5               	movlw	04h
  1926  009E  3004               u805:
  1927  009F                     	clrc
  1928  009F  1003               	rlf	(??_UART_Init+0)+0,f
  1929  00A0  0DB2               	rlf	(??_UART_Init+0)+1,f
  1930  00A1  0DB3               	rlf	(??_UART_Init+0)+2,f
  1931  00A2  0DB4               	rlf	(??_UART_Init+0)+3,f
  1932  00A3  0DB5               u800:
  1933  00A4                     	addlw	-1
  1934  00A4  3EFF               	skipz
  1935  00A5  1D03               	goto	u805
  1936  00A6  289F               	movf	3+(??_UART_Init+0)+0,w
  1937  00A7  0835               	movwf	(___aldiv@divisor+3)
  1938  00A8  00A3               	movf	2+(??_UART_Init+0)+0,w
  1939  00A9  0834               	movwf	(___aldiv@divisor+2)
  1940  00AA  00A2               	movf	1+(??_UART_Init+0)+0,w
  1941  00AB  0833               	movwf	(___aldiv@divisor+1)
  1942  00AC  00A1               	movf	0+(??_UART_Init+0)+0,w
  1943  00AD  0832               	movwf	(___aldiv@divisor)
  1944  00AE  00A0               
  1945                           	movlw	0
  1946  00AF  3000               	movwf	((??_UART_Init+4)+0)
  1947  00B0  00B6               	movlw	012h
  1948  00B1  3012               	movwf	((??_UART_Init+4)+0+1)
  1949  00B2  00B7               	movlw	07Ah
  1950  00B3  307A               	movwf	((??_UART_Init+4)+0+2)
  1951  00B4  00B8               	movlw	0
  1952  00B5  3000               	movwf	((??_UART_Init+4)+0+3)
  1953  00B6  00B9               	movf	(UART_Init@baudrate),w
  1954  00B7  082E               	movwf	(??_UART_Init+8)+0
  1955  00B8  00BA               	movf	(UART_Init@baudrate+1),w
  1956  00B9  082F               	movwf	((??_UART_Init+8)+0+1)
  1957  00BA  00BB               	movf	(UART_Init@baudrate+2),w
  1958  00BB  0830               	movwf	((??_UART_Init+8)+0+2)
  1959  00BC  00BC               	movf	(UART_Init@baudrate+3),w
  1960  00BD  0831               	movwf	((??_UART_Init+8)+0+3)
  1961  00BE  00BD               	movlw	04h
  1962  00BF  3004               u815:
  1963  00C0                     	clrc
  1964  00C0  1003               	rlf	(??_UART_Init+8)+0,f
  1965  00C1  0DBA               	rlf	(??_UART_Init+8)+1,f
  1966  00C2  0DBB               	rlf	(??_UART_Init+8)+2,f
  1967  00C3  0DBC               	rlf	(??_UART_Init+8)+3,f
  1968  00C4  0DBD               u810:
  1969  00C5                     	addlw	-1
  1970  00C5  3EFF               	skipz
  1971  00C6  1D03               	goto	u815
  1972  00C7  28C0               	comf	(??_UART_Init+8)+0,f
  1973  00C8  09BA               	comf	(??_UART_Init+8)+1,f
  1974  00C9  09BB               	comf	(??_UART_Init+8)+2,f
  1975  00CA  09BC               	comf	(??_UART_Init+8)+3,f
  1976  00CB  09BD               	incf	(??_UART_Init+8)+0,f
  1977  00CC  0ABA               	skipnz
  1978  00CD  1903               	incf	(??_UART_Init+8)+1,f
  1979  00CE  0ABB               	skipnz
  1980  00CF  1903               	incf	(??_UART_Init+8)+2,f
  1981  00D0  0ABC               	skipnz
  1982  00D1  1903               	incf	(??_UART_Init+8)+3,f
  1983  00D2  0ABD               	movf	0+(??_UART_Init+8)+0,w
  1984  00D3  083A               	addwf	(??_UART_Init+4)+0,f
  1985  00D4  07B6               	movf	1+(??_UART_Init+8)+0,w
  1986  00D5  083B               	skipnc
  1987  00D6  1803               	incfsz	1+(??_UART_Init+8)+0,w
  1988  00D7  0F3B               	goto	u820
  1989  00D8  28DA               	goto	u821
  1990  00D9  28DB               u820:
  1991  00DA                     	addwf	(??_UART_Init+4)+1,f
  1992  00DA  07B7               u821:
  1993  00DB                     	movf	2+(??_UART_Init+8)+0,w
  1994  00DB  083C               	skipnc
  1995  00DC  1803               	incfsz	2+(??_UART_Init+8)+0,w
  1996  00DD  0F3C               	goto	u822
  1997  00DE  28E0               	goto	u823
  1998  00DF  28E1               u822:
  1999  00E0                     	addwf	(??_UART_Init+4)+2,f
  2000  00E0  07B8               u823:
  2001  00E1                     	movf	3+(??_UART_Init+8)+0,w
  2002  00E1  083D               	skipnc
  2003  00E2  1803               	incf	3+(??_UART_Init+8)+0,w
  2004  00E3  0A3D               	addwf	(??_UART_Init+4)+3,f
  2005  00E4  07B9               	movf	3+(??_UART_Init+4)+0,w
  2006  00E5  0839               	movwf	(___aldiv@dividend+3)
  2007  00E6  00A7               	movf	2+(??_UART_Init+4)+0,w
  2008  00E7  0838               	movwf	(___aldiv@dividend+2)
  2009  00E8  00A6               	movf	1+(??_UART_Init+4)+0,w
  2010  00E9  0837               	movwf	(___aldiv@dividend+1)
  2011  00EA  00A5               	movf	0+(??_UART_Init+4)+0,w
  2012  00EB  0836               	movwf	(___aldiv@dividend)
  2013  00EC  00A4               
  2014                           	fcall	___aldiv
  2015  00ED  120A  118A  21D7  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2016  00F2  1283               	bcf	status, 6	;RP1=0, select bank0
  2017  00F3  1303               	movf	(1+(?___aldiv)),w
  2018  00F4  0821               	movwf	(UART_Init@x+1)
  2019  00F5  00BF               	movf	(0+(?___aldiv)),w
  2020  00F6  0820               	movwf	(UART_Init@x)
  2021  00F7  00BE               	line	19
  2022                           	
  2023                           l1267:	
  2024  00F8                     ;USARTinit.c: 19:     TXSTAbits.BRGH=1;
  2025                           	bsf	status, 5	;RP0=1, select bank1
  2026  00F8  1683               	bcf	status, 6	;RP1=0, select bank1
  2027  00F9  1303               	bsf	(152)^080h,2	;volatile
  2028  00FA  1518               	goto	l1269
  2029  00FB  28FC               	line	20
  2030                           ;USARTinit.c: 20:   }
  2031                           	
  2032                           l198:	
  2033  00FC                     	line	21
  2034                           	
  2035                           l1269:	
  2036  00FC                     ;USARTinit.c: 21:   if(x<256)
  2037                           	movlw	01h
  2038  00FC  3001               	bcf	status, 5	;RP0=0, select bank0
  2039  00FD  1283               	subwf	(UART_Init@x+1),w
  2040  00FE  023F               	movlw	0
  2041  00FF  3000               	skipnz
  2042  0100  1903               	subwf	(UART_Init@x),w
  2043  0101  023E               	skipnc
  2044  0102  1803               	goto	u831
  2045  0103  2905               	goto	u830
  2046  0104  2906               u831:
  2047  0105                     	goto	l200
  2048  0105  2915               u830:
  2049  0106                     	line	23
  2050                           	
  2051                           l1271:	
  2052  0106                     ;USARTinit.c: 22:   {;USARTinit.c: 23:     SPBRG = x;
  2053                           	movf	(UART_Init@x),w
  2054  0106  083E               	bsf	status, 5	;RP0=1, select bank1
  2055  0107  1683               	bcf	status, 6	;RP1=0, select bank1
  2056  0108  1303               	movwf	(153)^080h	;volatile
  2057  0109  0099               	line	25
  2058                           	
  2059                           l1273:	
  2060  010A                     ;USARTinit.c: 25:     TXSTAbits.TX9=0;
  2061                           	bcf	(152)^080h,6	;volatile
  2062  010A  1318               	line	26
  2063                           	
  2064                           l1275:	
  2065  010B                     ;USARTinit.c: 26:     TXSTAbits.TXEN=1;
  2066                           	bsf	(152)^080h,5	;volatile
  2067  010B  1698               	line	27
  2068                           	
  2069                           l1277:	
  2070  010C                     ;USARTinit.c: 27:     TXSTAbits.SYNC=0;
  2071                           	bcf	(152)^080h,4	;volatile
  2072  010C  1218               	line	30
  2073                           	
  2074                           l1279:	
  2075  010D                     ;USARTinit.c: 30:     RCSTAbits.SPEN=1;
  2076                           	bcf	status, 5	;RP0=0, select bank0
  2077  010D  1283               	bcf	status, 6	;RP1=0, select bank0
  2078  010E  1303               	bsf	(24),7	;volatile
  2079  010F  1798               	line	31
  2080                           	
  2081                           l1281:	
  2082  0110                     ;USARTinit.c: 31:     RCSTAbits.RX9=0;
  2083                           	bcf	(24),6	;volatile
  2084  0110  1318               	line	32
  2085                           	
  2086                           l1283:	
  2087  0111                     ;USARTinit.c: 32:     RCSTAbits.CREN=1;
  2088                           	bsf	(24),4	;volatile
  2089  0111  1618               	line	33
  2090                           	
  2091                           l1285:	
  2092  0112                     ;USARTinit.c: 33:     RCSTAbits.ADDEN=0;
  2093                           	bcf	(24),3	;volatile
  2094  0112  1198               	goto	l200
  2095  0113  2915               	line	34
  2096                           	
  2097                           l1287:	
  2098  0114                     ;USARTinit.c: 34:     return 1;;	Return value of _UART_Init is never used
  2099                           	goto	l200
  2100  0114  2915               	line	35
  2101                           ;USARTinit.c: 35:   }
  2102                           	
  2103                           l199:	
  2104  0115                     	line	37
  2105                           ;USARTinit.c: 36:   return 0;;	Return value of _UART_Init is never used
  2106                           	
  2107                           l200:	
  2108  0115                     	return
  2109  0115  0008               	opt stack 0
  2110                           GLOBAL	__end_of_UART_Init
  2111                           	__end_of_UART_Init:
  2112  0116                     	signat	_UART_Init,4217
  2113                           	global	___aldiv
  2114                           
  2115 ;; *************** function ___aldiv *****************
  2116 ;; Defined at:
  2117 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  divisor         4    0[BANK0 ] long 
  2120 ;;  dividend        4    4[BANK0 ] long 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  quotient        4   10[BANK0 ] long 
  2123 ;;  sign            1    9[BANK0 ] unsigned char 
  2124 ;;  counter         1    8[BANK0 ] unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  4    0[BANK0 ] long 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2134 ;;      Params:         0       8       0       0       0
  2135 ;;      Locals:         0       6       0       0       0
  2136 ;;      Temps:          1       0       0       0       0
  2137 ;;      Totals:         1      14       0       0       0
  2138 ;;Total ram usage:       15 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    3
  2141 ;; This function calls:
  2142 ;;		Nothing
  2143 ;; This function is called by:
  2144 ;;		_UART_Init
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           psect	text3,local,class=CODE,delta=2,merge=1,group=1
  2148                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  2149                           	line	5
  2150                           global __ptext3
  2151                           __ptext3:	;psect for function ___aldiv
  2152  01D7                     psect	text3
  2153                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  2154                           	line	5
  2155                           	global	__size_of___aldiv
  2156                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  2157  00A6                     	
  2158                           ___aldiv:	
  2159  01D7                     ;incstack = 0
  2160                           	opt	stack 3
  2161                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2162                           	line	13
  2163                           	
  2164                           l1045:	
  2165  01D7                     	bcf	status, 5	;RP0=0, select bank0
  2166  01D7  1283               	bcf	status, 6	;RP1=0, select bank0
  2167  01D8  1303               	clrf	(___aldiv@sign)
  2168  01D9  01A9               	line	14
  2169                           	
  2170                           l1047:	
  2171  01DA                     	btfss	(___aldiv@divisor+3),7
  2172  01DA  1FA3               	goto	u401
  2173  01DB  29DD               	goto	u400
  2174  01DC  29DE               u401:
  2175  01DD                     	goto	l381
  2176  01DD  29EB               u400:
  2177  01DE                     	line	15
  2178                           	
  2179                           l1049:	
  2180  01DE                     	comf	(___aldiv@divisor),f
  2181  01DE  09A0               	comf	(___aldiv@divisor+1),f
  2182  01DF  09A1               	comf	(___aldiv@divisor+2),f
  2183  01E0  09A2               	comf	(___aldiv@divisor+3),f
  2184  01E1  09A3               	incf	(___aldiv@divisor),f
  2185  01E2  0AA0               	skipnz
  2186  01E3  1903               	incf	(___aldiv@divisor+1),f
  2187  01E4  0AA1               	skipnz
  2188  01E5  1903               	incf	(___aldiv@divisor+2),f
  2189  01E6  0AA2               	skipnz
  2190  01E7  1903               	incf	(___aldiv@divisor+3),f
  2191  01E8  0AA3               	line	16
  2192                           	clrf	(___aldiv@sign)
  2193  01E9  01A9               	incf	(___aldiv@sign),f
  2194  01EA  0AA9               	line	17
  2195                           	
  2196                           l381:	
  2197  01EB                     	line	18
  2198                           	btfss	(___aldiv@dividend+3),7
  2199  01EB  1FA7               	goto	u411
  2200  01EC  29EE               	goto	u410
  2201  01ED  29EF               u411:
  2202  01EE                     	goto	l1055
  2203  01EE  29FF               u410:
  2204  01EF                     	line	19
  2205                           	
  2206                           l1051:	
  2207  01EF                     	comf	(___aldiv@dividend),f
  2208  01EF  09A4               	comf	(___aldiv@dividend+1),f
  2209  01F0  09A5               	comf	(___aldiv@dividend+2),f
  2210  01F1  09A6               	comf	(___aldiv@dividend+3),f
  2211  01F2  09A7               	incf	(___aldiv@dividend),f
  2212  01F3  0AA4               	skipnz
  2213  01F4  1903               	incf	(___aldiv@dividend+1),f
  2214  01F5  0AA5               	skipnz
  2215  01F6  1903               	incf	(___aldiv@dividend+2),f
  2216  01F7  0AA6               	skipnz
  2217  01F8  1903               	incf	(___aldiv@dividend+3),f
  2218  01F9  0AA7               	line	20
  2219                           	
  2220                           l1053:	
  2221  01FA                     	movlw	low(01h)
  2222  01FA  3001               	movwf	(??___aldiv+0)+0
  2223  01FB  00F9               	movf	(??___aldiv+0)+0,w
  2224  01FC  0879               	xorwf	(___aldiv@sign),f
  2225  01FD  06A9               	goto	l1055
  2226  01FE  29FF               	line	21
  2227                           	
  2228                           l382:	
  2229  01FF                     	line	22
  2230                           	
  2231                           l1055:	
  2232  01FF                     	movlw	high highword(0)
  2233  01FF  3000               	movwf	(___aldiv@quotient+3)
  2234  0200  00AD               	movlw	low highword(0)
  2235  0201  3000               	movwf	(___aldiv@quotient+2)
  2236  0202  00AC               	movlw	high(0)
  2237  0203  3000               	movwf	(___aldiv@quotient+1)
  2238  0204  00AB               	movlw	low(0)
  2239  0205  3000               	movwf	(___aldiv@quotient)
  2240  0206  00AA               
  2241                           	line	23
  2242                           	
  2243                           l1057:	
  2244  0207                     	movf	(___aldiv@divisor+3),w
  2245  0207  0823               	iorwf	(___aldiv@divisor+2),w
  2246  0208  0422               	iorwf	(___aldiv@divisor+1),w
  2247  0209  0421               	iorwf	(___aldiv@divisor),w
  2248  020A  0420               	skipnz
  2249  020B  1903               	goto	u421
  2250  020C  2A0E               	goto	u420
  2251  020D  2A0F               u421:
  2252  020E                     	goto	l1077
  2253  020E  2A62               u420:
  2254  020F                     	line	24
  2255                           	
  2256                           l1059:	
  2257  020F                     	clrf	(___aldiv@counter)
  2258  020F  01A8               	incf	(___aldiv@counter),f
  2259  0210  0AA8               	line	25
  2260                           	goto	l1063
  2261  0211  2A20               	
  2262                           l385:	
  2263  0212                     	line	26
  2264                           	
  2265                           l1061:	
  2266  0212                     	movlw	01h
  2267  0212  3001               	movwf	(??___aldiv+0)+0
  2268  0213  00F9               u435:
  2269  0214                     	clrc
  2270  0214  1003               	rlf	(___aldiv@divisor),f
  2271  0215  0DA0               	rlf	(___aldiv@divisor+1),f
  2272  0216  0DA1               	rlf	(___aldiv@divisor+2),f
  2273  0217  0DA2               	rlf	(___aldiv@divisor+3),f
  2274  0218  0DA3               	decfsz	(??___aldiv+0)+0
  2275  0219  0BF9               	goto	u435
  2276  021A  2A14               	line	27
  2277                           	movlw	low(01h)
  2278  021B  3001               	movwf	(??___aldiv+0)+0
  2279  021C  00F9               	movf	(??___aldiv+0)+0,w
  2280  021D  0879               	addwf	(___aldiv@counter),f
  2281  021E  07A8               	goto	l1063
  2282  021F  2A20               	line	28
  2283                           	
  2284                           l384:	
  2285  0220                     	line	25
  2286                           	
  2287                           l1063:	
  2288  0220                     	btfss	(___aldiv@divisor+3),(31)&7
  2289  0220  1FA3               	goto	u441
  2290  0221  2A23               	goto	u440
  2291  0222  2A24               u441:
  2292  0223                     	goto	l1061
  2293  0223  2A12               u440:
  2294  0224                     	goto	l1065
  2295  0224  2A26               	
  2296                           l386:	
  2297  0225                     	goto	l1065
  2298  0225  2A26               	line	29
  2299                           	
  2300                           l387:	
  2301  0226                     	line	30
  2302                           	
  2303                           l1065:	
  2304  0226                     	movlw	01h
  2305  0226  3001               	movwf	(??___aldiv+0)+0
  2306  0227  00F9               u455:
  2307  0228                     	clrc
  2308  0228  1003               	rlf	(___aldiv@quotient),f
  2309  0229  0DAA               	rlf	(___aldiv@quotient+1),f
  2310  022A  0DAB               	rlf	(___aldiv@quotient+2),f
  2311  022B  0DAC               	rlf	(___aldiv@quotient+3),f
  2312  022C  0DAD               	decfsz	(??___aldiv+0)+0
  2313  022D  0BF9               	goto	u455
  2314  022E  2A28               	line	31
  2315                           	
  2316                           l1067:	
  2317  022F                     	movf	(___aldiv@divisor+3),w
  2318  022F  0823               	subwf	(___aldiv@dividend+3),w
  2319  0230  0227               	skipz
  2320  0231  1D03               	goto	u465
  2321  0232  2A3D               	movf	(___aldiv@divisor+2),w
  2322  0233  0822               	subwf	(___aldiv@dividend+2),w
  2323  0234  0226               	skipz
  2324  0235  1D03               	goto	u465
  2325  0236  2A3D               	movf	(___aldiv@divisor+1),w
  2326  0237  0821               	subwf	(___aldiv@dividend+1),w
  2327  0238  0225               	skipz
  2328  0239  1D03               	goto	u465
  2329  023A  2A3D               	movf	(___aldiv@divisor),w
  2330  023B  0820               	subwf	(___aldiv@dividend),w
  2331  023C  0224               u465:
  2332  023D                     	skipc
  2333  023D  1C03               	goto	u461
  2334  023E  2A40               	goto	u460
  2335  023F  2A41               u461:
  2336  0240                     	goto	l1073
  2337  0240  2A51               u460:
  2338  0241                     	line	32
  2339                           	
  2340                           l1069:	
  2341  0241                     	movf	(___aldiv@divisor),w
  2342  0241  0820               	subwf	(___aldiv@dividend),f
  2343  0242  02A4               	movf	(___aldiv@divisor+1),w
  2344  0243  0821               	skipc
  2345  0244  1C03               	incfsz	(___aldiv@divisor+1),w
  2346  0245  0F21               	subwf	(___aldiv@dividend+1),f
  2347  0246  02A5               	movf	(___aldiv@divisor+2),w
  2348  0247  0822               	skipc
  2349  0248  1C03               	incfsz	(___aldiv@divisor+2),w
  2350  0249  0F22               	subwf	(___aldiv@dividend+2),f
  2351  024A  02A6               	movf	(___aldiv@divisor+3),w
  2352  024B  0823               	skipc
  2353  024C  1C03               	incfsz	(___aldiv@divisor+3),w
  2354  024D  0F23               	subwf	(___aldiv@dividend+3),f
  2355  024E  02A7               	line	33
  2356                           	
  2357                           l1071:	
  2358  024F                     	bsf	(___aldiv@quotient)+(0/8),(0)&7
  2359  024F  142A               	goto	l1073
  2360  0250  2A51               	line	34
  2361                           	
  2362                           l388:	
  2363  0251                     	line	35
  2364                           	
  2365                           l1073:	
  2366  0251                     	movlw	01h
  2367  0251  3001               u475:
  2368  0252                     	clrc
  2369  0252  1003               	rrf	(___aldiv@divisor+3),f
  2370  0253  0CA3               	rrf	(___aldiv@divisor+2),f
  2371  0254  0CA2               	rrf	(___aldiv@divisor+1),f
  2372  0255  0CA1               	rrf	(___aldiv@divisor),f
  2373  0256  0CA0               	addlw	-1
  2374  0257  3EFF               	skipz
  2375  0258  1D03               	goto	u475
  2376  0259  2A52               
  2377                           	line	36
  2378                           	
  2379                           l1075:	
  2380  025A                     	movlw	01h
  2381  025A  3001               	subwf	(___aldiv@counter),f
  2382  025B  02A8               	btfss	status,2
  2383  025C  1D03               	goto	u481
  2384  025D  2A5F               	goto	u480
  2385  025E  2A60               u481:
  2386  025F                     	goto	l1065
  2387  025F  2A26               u480:
  2388  0260                     	goto	l1077
  2389  0260  2A62               	
  2390                           l389:	
  2391  0261                     	goto	l1077
  2392  0261  2A62               	line	37
  2393                           	
  2394                           l383:	
  2395  0262                     	line	38
  2396                           	
  2397                           l1077:	
  2398  0262                     	movf	((___aldiv@sign)),w
  2399  0262  0829               	btfsc	status,2
  2400  0263  1903               	goto	u491
  2401  0264  2A66               	goto	u490
  2402  0265  2A67               u491:
  2403  0266                     	goto	l1081
  2404  0266  2A73               u490:
  2405  0267                     	line	39
  2406                           	
  2407                           l1079:	
  2408  0267                     	comf	(___aldiv@quotient),f
  2409  0267  09AA               	comf	(___aldiv@quotient+1),f
  2410  0268  09AB               	comf	(___aldiv@quotient+2),f
  2411  0269  09AC               	comf	(___aldiv@quotient+3),f
  2412  026A  09AD               	incf	(___aldiv@quotient),f
  2413  026B  0AAA               	skipnz
  2414  026C  1903               	incf	(___aldiv@quotient+1),f
  2415  026D  0AAB               	skipnz
  2416  026E  1903               	incf	(___aldiv@quotient+2),f
  2417  026F  0AAC               	skipnz
  2418  0270  1903               	incf	(___aldiv@quotient+3),f
  2419  0271  0AAD               	goto	l1081
  2420  0272  2A73               	
  2421                           l390:	
  2422  0273                     	line	40
  2423                           	
  2424                           l1081:	
  2425  0273                     	movf	(___aldiv@quotient+3),w
  2426  0273  082D               	movwf	(?___aldiv+3)
  2427  0274  00A3               	movf	(___aldiv@quotient+2),w
  2428  0275  082C               	movwf	(?___aldiv+2)
  2429  0276  00A2               	movf	(___aldiv@quotient+1),w
  2430  0277  082B               	movwf	(?___aldiv+1)
  2431  0278  00A1               	movf	(___aldiv@quotient),w
  2432  0279  082A               	movwf	(?___aldiv)
  2433  027A  00A0               
  2434                           	goto	l391
  2435  027B  2A7C               	
  2436                           l1083:	
  2437  027C                     	line	41
  2438                           	
  2439                           l391:	
  2440  027C                     	return
  2441  027C  0008               	opt stack 0
  2442                           GLOBAL	__end_of___aldiv
  2443                           	__end_of___aldiv:
  2444  027D                     	signat	___aldiv,8316
  2445                           	global	_Init
  2446                           
  2447 ;; *************** function _Init *****************
  2448 ;; Defined at:
  2449 ;;		line 159 in file "SubMasterProyect.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;		None
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;		None
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg, status,2
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2463 ;;      Params:         0       0       0       0       0
  2464 ;;      Locals:         0       0       0       0       0
  2465 ;;      Temps:          0       0       0       0       0
  2466 ;;      Totals:         0       0       0       0       0
  2467 ;;Total ram usage:        0 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; Hardware stack levels required when called:    3
  2470 ;; This function calls:
  2471 ;;		Nothing
  2472 ;; This function is called by:
  2473 ;;		_main
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2477                           	file	"SubMasterProyect.c"
  2478                           	line	159
  2479                           global __ptext4
  2480                           __ptext4:	;psect for function _Init
  2481  02E7                     psect	text4
  2482                           	file	"SubMasterProyect.c"
  2483                           	line	159
  2484                           	global	__size_of_Init
  2485                           	__size_of_Init	equ	__end_of_Init-_Init
  2486  001B                     	
  2487                           _Init:	
  2488  02E7                     ;incstack = 0
  2489                           	opt	stack 4
  2490                           ; Regs used in _Init: [wreg+status,2]
  2491                           	line	160
  2492                           	
  2493                           l1099:	
  2494  02E7                     ;SubMasterProyect.c: 160:     OSCCON = 0b01110001;
  2495                           	movlw	low(071h)
  2496  02E7  3071               	bsf	status, 5	;RP0=1, select bank1
  2497  02E8  1683               	bcf	status, 6	;RP1=0, select bank1
  2498  02E9  1303               	movwf	(143)^080h	;volatile
  2499  02EA  008F               	line	161
  2500                           	
  2501                           l1101:	
  2502  02EB                     ;SubMasterProyect.c: 161:     ANSEL = 0;
  2503                           	bsf	status, 5	;RP0=1, select bank3
  2504  02EB  1683               	bsf	status, 6	;RP1=1, select bank3
  2505  02EC  1703               	clrf	(392)^0180h	;volatile
  2506  02ED  0188               	line	162
  2507                           	
  2508                           l1103:	
  2509  02EE                     ;SubMasterProyect.c: 162:     ANSELH = 0;
  2510                           	clrf	(393)^0180h	;volatile
  2511  02EE  0189               	line	164
  2512                           ;SubMasterProyect.c: 164:     INTCON = 0b11000000;
  2513                           	movlw	low(0C0h)
  2514  02EF  30C0               	movwf	(11)	;volatile
  2515  02F0  008B               	line	166
  2516                           	
  2517                           l1105:	
  2518  02F1                     ;SubMasterProyect.c: 166:     PIR1bits.SSPIF = 0;
  2519                           	bcf	status, 5	;RP0=0, select bank0
  2520  02F1  1283               	bcf	status, 6	;RP1=0, select bank0
  2521  02F2  1303               	bcf	(12),3	;volatile
  2522  02F3  118C               	line	167
  2523                           	
  2524                           l1107:	
  2525  02F4                     ;SubMasterProyect.c: 167:     PIE1bits.SSPIE = 1;
  2526                           	bsf	status, 5	;RP0=1, select bank1
  2527  02F4  1683               	bcf	status, 6	;RP1=0, select bank1
  2528  02F5  1303               	bsf	(140)^080h,3	;volatile
  2529  02F6  158C               	line	170
  2530                           	
  2531                           l1109:	
  2532  02F7                     ;SubMasterProyect.c: 170:     TRISCbits.TRISC7 = 1;
  2533                           	bsf	(135)^080h,7	;volatile
  2534  02F7  1787               	line	171
  2535                           	
  2536                           l1111:	
  2537  02F8                     ;SubMasterProyect.c: 171:     TRISCbits.TRISC6 = 1;
  2538                           	bsf	(135)^080h,6	;volatile
  2539  02F8  1707               	line	173
  2540                           	
  2541                           l1113:	
  2542  02F9                     ;SubMasterProyect.c: 173:     TRISA = 0;
  2543                           	clrf	(133)^080h	;volatile
  2544  02F9  0185               	line	174
  2545                           	
  2546                           l1115:	
  2547  02FA                     ;SubMasterProyect.c: 174:     TRISB = 0;
  2548                           	clrf	(134)^080h	;volatile
  2549  02FA  0186               	line	175
  2550                           	
  2551                           l1117:	
  2552  02FB                     ;SubMasterProyect.c: 175:     TRISD = 0;
  2553                           	clrf	(136)^080h	;volatile
  2554  02FB  0188               	line	176
  2555                           	
  2556                           l1119:	
  2557  02FC                     ;SubMasterProyect.c: 176:     TRISE = 0;
  2558                           	clrf	(137)^080h	;volatile
  2559  02FC  0189               	line	180
  2560                           	
  2561                           l1121:	
  2562  02FD                     ;SubMasterProyect.c: 180:     GIE=1;
  2563                           	bsf	(95/8),(95)&7	;volatile
  2564  02FD  178B               	line	181
  2565                           	
  2566                           l1123:	
  2567  02FE                     ;SubMasterProyect.c: 181:     PEIE=1;
  2568                           	bsf	(94/8),(94)&7	;volatile
  2569  02FE  170B               	line	182
  2570                           	
  2571                           l1125:	
  2572  02FF                     ;SubMasterProyect.c: 182:     RCIE=1;
  2573                           	bsf	(1125/8)^080h,(1125)&7	;volatile
  2574  02FF  168C               	goto	l131
  2575  0300  2B01               	line	183
  2576                           	
  2577                           l1127:	
  2578  0301                     	line	185
  2579                           ;SubMasterProyect.c: 183:     return;
  2580                           	
  2581                           l131:	
  2582  0301                     	return
  2583  0301  0008               	opt stack 0
  2584                           GLOBAL	__end_of_Init
  2585                           	__end_of_Init:
  2586  0302                     	signat	_Init,89
  2587                           	global	_isr
  2588                           
  2589 ;; *************** function _isr *****************
  2590 ;; Defined at:
  2591 ;;		line 65 in file "SubMasterProyect.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0, pclath, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2605 ;;      Params:         0       0       0       0       0
  2606 ;;      Locals:         0       0       0       0       0
  2607 ;;      Temps:          3       0       0       0       0
  2608 ;;      Totals:         3       0       0       0       0
  2609 ;;Total ram usage:        3 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    2
  2612 ;; This function calls:
  2613 ;;		_UART_Read
  2614 ;;		_spiRead
  2615 ;;		_spiWrite
  2616 ;; This function is called by:
  2617 ;;		Interrupt level 1
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2621                           	line	65
  2622                           global __ptext5
  2623                           __ptext5:	;psect for function _isr
  2624  0116                     psect	text5
  2625                           	file	"SubMasterProyect.c"
  2626                           	line	65
  2627                           	global	__size_of_isr
  2628                           	__size_of_isr	equ	__end_of_isr-_isr
  2629  00C1                     	
  2630                           _isr:	
  2631  0116                     ;incstack = 0
  2632                           	opt	stack 3
  2633                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2634                           psect	intentry,class=CODE,delta=2
  2635                           global __pintentry
  2636                           __pintentry:
  2637  0004                     global interrupt_function
  2638                           interrupt_function:
  2639  0004                     	global saved_w
  2640                           	saved_w	set	btemp+0
  2641  007E                     	movwf	saved_w
  2642  0004  00FE               	swapf	status,w
  2643  0005  0E03               	movwf	(??_isr+1)
  2644  0006  00F7               	movf	pclath,w
  2645  0007  080A               	movwf	(??_isr+2)
  2646  0008  00F8               	ljmp	_isr
  2647  0009  120A  118A  2916   psect	text5
  2648                           	line	66
  2649                           	
  2650                           i1l1167:	
  2651  0116                     ;SubMasterProyect.c: 66:     if(SSPIF == 1){
  2652                           	bcf	status, 5	;RP0=0, select bank0
  2653  0116  1283               	bcf	status, 6	;RP1=0, select bank0
  2654  0117  1303               	btfss	(99/8),(99)&7	;volatile
  2655  0118  1D8C               	goto	u60_21
  2656  0119  291B               	goto	u60_20
  2657  011A  291C               u60_21:
  2658  011B                     	goto	i1l95
  2659  011B  2970               u60_20:
  2660  011C                     	line	67
  2661                           	
  2662                           i1l1169:	
  2663  011C                     ;SubMasterProyect.c: 67:         VERIFICADOR = spiRead();
  2664                           	fcall	_spiRead
  2665  011C  120A  118A  2320  120A  118A  	movwf	(??_isr+0)+0
  2666  0121  00F6               	movf	(??_isr+0)+0,w
  2667  0122  0876               	movwf	(_VERIFICADOR)
  2668  0123  00F4               	line	68
  2669                           	
  2670                           i1l1171:	
  2671  0124                     ;SubMasterProyect.c: 68:         if(VERIFICADOR == 1){
  2672                           		decf	((_VERIFICADOR)),w
  2673  0124  0374               	btfss	status,2
  2674  0125  1D03               	goto	u61_21
  2675  0126  2928               	goto	u61_20
  2676  0127  2929               u61_21:
  2677  0128                     	goto	i1l1175
  2678  0128  2930               u61_20:
  2679  0129                     	line	69
  2680                           	
  2681                           i1l1173:	
  2682  0129                     ;SubMasterProyect.c: 69:             spiWrite(Valor1);
  2683                           	movf	(_Valor1),w
  2684  0129  0873               	fcall	_spiWrite
  2685  012A  120A  118A  233C  120A  118A  	line	70
  2686                           ;SubMasterProyect.c: 70:         }
  2687                           	goto	i1l1191
  2688  012F  296C               	line	71
  2689                           ;SubMasterProyect.c: 71:         else if(VERIFICADOR == 2){
  2690                           	
  2691                           i1l96:	
  2692  0130                     	
  2693                           i1l1175:	
  2694  0130                     		movlw	2
  2695  0130  3002               	xorwf	((_VERIFICADOR)),w
  2696  0131  0674               	btfss	status,2
  2697  0132  1D03               	goto	u62_21
  2698  0133  2935               	goto	u62_20
  2699  0134  2936               u62_21:
  2700  0135                     	goto	i1l1179
  2701  0135  293D               u62_20:
  2702  0136                     	line	72
  2703                           	
  2704                           i1l1177:	
  2705  0136                     ;SubMasterProyect.c: 72:             spiWrite(Valor2);
  2706                           	movf	(_Valor2),w
  2707  0136  0872               	fcall	_spiWrite
  2708  0137  120A  118A  233C  120A  118A  	line	73
  2709                           ;SubMasterProyect.c: 73:         }
  2710                           	goto	i1l1191
  2711  013C  296C               	line	74
  2712                           ;SubMasterProyect.c: 74:         else if(VERIFICADOR == 3){
  2713                           	
  2714                           i1l98:	
  2715  013D                     	
  2716                           i1l1179:	
  2717  013D                     		movlw	3
  2718  013D  3003               	xorwf	((_VERIFICADOR)),w
  2719  013E  0674               	btfss	status,2
  2720  013F  1D03               	goto	u63_21
  2721  0140  2942               	goto	u63_20
  2722  0141  2943               u63_21:
  2723  0142                     	goto	i1l1183
  2724  0142  294C               u63_20:
  2725  0143                     	line	75
  2726                           	
  2727                           i1l1181:	
  2728  0143                     ;SubMasterProyect.c: 75:             spiWrite(Valor3);
  2729                           	bcf	status, 5	;RP0=0, select bank0
  2730  0143  1283               	bcf	status, 6	;RP1=0, select bank0
  2731  0144  1303               	movf	(_Valor3),w
  2732  0145  084D               	fcall	_spiWrite
  2733  0146  120A  118A  233C  120A  118A  	line	76
  2734                           ;SubMasterProyect.c: 76:         }
  2735                           	goto	i1l1191
  2736  014B  296C               	line	77
  2737                           ;SubMasterProyect.c: 77:         else if(VERIFICADOR == 4){
  2738                           	
  2739                           i1l100:	
  2740  014C                     	
  2741                           i1l1183:	
  2742  014C                     		movlw	4
  2743  014C  3004               	xorwf	((_VERIFICADOR)),w
  2744  014D  0674               	btfss	status,2
  2745  014E  1D03               	goto	u64_21
  2746  014F  2951               	goto	u64_20
  2747  0150  2952               u64_21:
  2748  0151                     	goto	i1l1187
  2749  0151  295B               u64_20:
  2750  0152                     	line	78
  2751                           	
  2752                           i1l1185:	
  2753  0152                     ;SubMasterProyect.c: 78:             spiWrite(Valor4);
  2754                           	bcf	status, 5	;RP0=0, select bank0
  2755  0152  1283               	bcf	status, 6	;RP1=0, select bank0
  2756  0153  1303               	movf	(_Valor4),w
  2757  0154  084C               	fcall	_spiWrite
  2758  0155  120A  118A  233C  120A  118A  	line	79
  2759                           ;SubMasterProyect.c: 79:         }
  2760                           	goto	i1l1191
  2761  015A  296C               	line	80
  2762                           ;SubMasterProyect.c: 80:         else if(VERIFICADOR == 5){
  2763                           	
  2764                           i1l102:	
  2765  015B                     	
  2766                           i1l1187:	
  2767  015B                     		movlw	5
  2768  015B  3005               	xorwf	((_VERIFICADOR)),w
  2769  015C  0674               	btfss	status,2
  2770  015D  1D03               	goto	u65_21
  2771  015E  2960               	goto	u65_20
  2772  015F  2961               u65_21:
  2773  0160                     	goto	i1l1191
  2774  0160  296C               u65_20:
  2775  0161                     	line	81
  2776                           	
  2777                           i1l1189:	
  2778  0161                     ;SubMasterProyect.c: 81:             spiWrite(Valor5);
  2779                           	movf	(_Valor5),w
  2780  0161  0871               	fcall	_spiWrite
  2781  0162  120A  118A  233C  120A  118A  	goto	i1l1191
  2782  0167  296C               	line	82
  2783                           ;SubMasterProyect.c: 82:         }
  2784                           	
  2785                           i1l104:	
  2786  0168                     	goto	i1l1191
  2787  0168  296C               	
  2788                           i1l103:	
  2789  0169                     	goto	i1l1191
  2790  0169  296C               	
  2791                           i1l101:	
  2792  016A                     	goto	i1l1191
  2793  016A  296C               	
  2794                           i1l99:	
  2795  016B                     	goto	i1l1191
  2796  016B  296C               	
  2797                           i1l97:	
  2798  016C                     	line	84
  2799                           	
  2800                           i1l1191:	
  2801  016C                     ;SubMasterProyect.c: 84:         SSPIF = 0;
  2802                           	bcf	status, 5	;RP0=0, select bank0
  2803  016C  1283               	bcf	status, 6	;RP1=0, select bank0
  2804  016D  1303               	bcf	(99/8),(99)&7	;volatile
  2805  016E  118C               	line	85
  2806                           ;SubMasterProyect.c: 85:     }
  2807                           	goto	i1l116
  2808  016F  29D0               	line	86
  2809                           ;SubMasterProyect.c: 86:     else if(RCIF==1)
  2810                           	
  2811                           i1l95:	
  2812  0170                     	btfss	(101/8),(101)&7	;volatile
  2813  0170  1E8C               	goto	u66_21
  2814  0171  2973               	goto	u66_20
  2815  0172  2974               u66_21:
  2816  0173                     	goto	i1l116
  2817  0173  29D0               u66_20:
  2818  0174                     	line	88
  2819                           	
  2820                           i1l1193:	
  2821  0174                     ;SubMasterProyect.c: 87:   {;SubMasterProyect.c: 88:         controla = UART_Read();
  2822                           	fcall	_UART_Read
  2823  0174  120A  118A  2315  120A  118A  	movwf	(??_isr+0)+0
  2824  0179  00F6               	movf	(??_isr+0)+0,w
  2825  017A  0876               	movwf	(_controla)
  2826  017B  00F0               	line	89
  2827                           	
  2828                           i1l1195:	
  2829  017C                     ;SubMasterProyect.c: 89:         if (controla == 255){
  2830                           		incf	((_controla)),w
  2831  017C  0A70               	btfss	status,2
  2832  017D  1D03               	goto	u67_21
  2833  017E  2980               	goto	u67_20
  2834  017F  2981               u67_21:
  2835  0180                     	goto	i1l1199
  2836  0180  298A               u67_20:
  2837  0181                     	line	90
  2838                           	
  2839                           i1l1197:	
  2840  0181                     ;SubMasterProyect.c: 90:             Valor1 = UART_Read();
  2841                           	fcall	_UART_Read
  2842  0181  120A  118A  2315  120A  118A  	movwf	(??_isr+0)+0
  2843  0186  00F6               	movf	(??_isr+0)+0,w
  2844  0187  0876               	movwf	(_Valor1)
  2845  0188  00F3               	line	91
  2846                           ;SubMasterProyect.c: 91:         } else if (controla == 254){
  2847                           	goto	i1l116
  2848  0189  29D0               	
  2849                           i1l107:	
  2850  018A                     	
  2851                           i1l1199:	
  2852  018A                     		movlw	254
  2853  018A  30FE               	xorwf	((_controla)),w
  2854  018B  0670               	btfss	status,2
  2855  018C  1D03               	goto	u68_21
  2856  018D  298F               	goto	u68_20
  2857  018E  2990               u68_21:
  2858  018F                     	goto	i1l1203
  2859  018F  2999               u68_20:
  2860  0190                     	line	92
  2861                           	
  2862                           i1l1201:	
  2863  0190                     ;SubMasterProyect.c: 92:             Valor2 = UART_Read();
  2864                           	fcall	_UART_Read
  2865  0190  120A  118A  2315  120A  118A  	movwf	(??_isr+0)+0
  2866  0195  00F6               	movf	(??_isr+0)+0,w
  2867  0196  0876               	movwf	(_Valor2)
  2868  0197  00F2               	line	93
  2869                           ;SubMasterProyect.c: 93:         } else if (controla == 253){
  2870                           	goto	i1l116
  2871  0198  29D0               	
  2872                           i1l109:	
  2873  0199                     	
  2874                           i1l1203:	
  2875  0199                     		movlw	253
  2876  0199  30FD               	xorwf	((_controla)),w
  2877  019A  0670               	btfss	status,2
  2878  019B  1D03               	goto	u69_21
  2879  019C  299E               	goto	u69_20
  2880  019D  299F               u69_21:
  2881  019E                     	goto	i1l1207
  2882  019E  29AA               u69_20:
  2883  019F                     	line	94
  2884                           	
  2885                           i1l1205:	
  2886  019F                     ;SubMasterProyect.c: 94:             Valor3 = UART_Read();
  2887                           	fcall	_UART_Read
  2888  019F  120A  118A  2315  120A  118A  	movwf	(??_isr+0)+0
  2889  01A4  00F6               	movf	(??_isr+0)+0,w
  2890  01A5  0876               	bcf	status, 5	;RP0=0, select bank0
  2891  01A6  1283               	bcf	status, 6	;RP1=0, select bank0
  2892  01A7  1303               	movwf	(_Valor3)
  2893  01A8  00CD               	line	95
  2894                           ;SubMasterProyect.c: 95:         } else if (controla == 252){
  2895                           	goto	i1l116
  2896  01A9  29D0               	
  2897                           i1l111:	
  2898  01AA                     	
  2899                           i1l1207:	
  2900  01AA                     		movlw	252
  2901  01AA  30FC               	xorwf	((_controla)),w
  2902  01AB  0670               	btfss	status,2
  2903  01AC  1D03               	goto	u70_21
  2904  01AD  29AF               	goto	u70_20
  2905  01AE  29B0               u70_21:
  2906  01AF                     	goto	i1l1211
  2907  01AF  29BB               u70_20:
  2908  01B0                     	line	96
  2909                           	
  2910                           i1l1209:	
  2911  01B0                     ;SubMasterProyect.c: 96:             Valor4 = UART_Read();
  2912                           	fcall	_UART_Read
  2913  01B0  120A  118A  2315  120A  118A  	movwf	(??_isr+0)+0
  2914  01B5  00F6               	movf	(??_isr+0)+0,w
  2915  01B6  0876               	bcf	status, 5	;RP0=0, select bank0
  2916  01B7  1283               	bcf	status, 6	;RP1=0, select bank0
  2917  01B8  1303               	movwf	(_Valor4)
  2918  01B9  00CC               	line	97
  2919                           ;SubMasterProyect.c: 97:         } else if (controla == 251){
  2920                           	goto	i1l116
  2921  01BA  29D0               	
  2922                           i1l113:	
  2923  01BB                     	
  2924                           i1l1211:	
  2925  01BB                     		movlw	251
  2926  01BB  30FB               	xorwf	((_controla)),w
  2927  01BC  0670               	btfss	status,2
  2928  01BD  1D03               	goto	u71_21
  2929  01BE  29C0               	goto	u71_20
  2930  01BF  29C1               u71_21:
  2931  01C0                     	goto	i1l116
  2932  01C0  29D0               u71_20:
  2933  01C1                     	line	98
  2934                           	
  2935                           i1l1213:	
  2936  01C1                     ;SubMasterProyect.c: 98:             Valor5 = UART_Read();
  2937                           	fcall	_UART_Read
  2938  01C1  120A  118A  2315  120A  118A  	movwf	(??_isr+0)+0
  2939  01C6  00F6               	movf	(??_isr+0)+0,w
  2940  01C7  0876               	movwf	(_Valor5)
  2941  01C8  00F1               	goto	i1l116
  2942  01C9  29D0               	line	99
  2943                           ;SubMasterProyect.c: 99:         }
  2944                           	
  2945                           i1l115:	
  2946  01CA                     	goto	i1l116
  2947  01CA  29D0               	
  2948                           i1l114:	
  2949  01CB                     	goto	i1l116
  2950  01CB  29D0               	
  2951                           i1l112:	
  2952  01CC                     	goto	i1l116
  2953  01CC  29D0               	
  2954                           i1l110:	
  2955  01CD                     	goto	i1l116
  2956  01CD  29D0               	
  2957                           i1l108:	
  2958  01CE                     	goto	i1l116
  2959  01CE  29D0               	line	101
  2960                           ;SubMasterProyect.c: 101:   }
  2961                           	
  2962                           i1l106:	
  2963  01CF                     	goto	i1l116
  2964  01CF  29D0               	
  2965                           i1l105:	
  2966  01D0                     	line	103
  2967                           	
  2968                           i1l116:	
  2969  01D0                     	movf	(??_isr+2),w
  2970  01D0  0878               	movwf	pclath
  2971  01D1  008A               	swapf	(??_isr+1)^0FFFFFF80h,w
  2972  01D2  0E77               	movwf	status
  2973  01D3  0083               	swapf	saved_w,f
  2974  01D4  0EFE               	swapf	saved_w,w
  2975  01D5  0E7E               	retfie
  2976  01D6  0009               	opt stack 0
  2977                           GLOBAL	__end_of_isr
  2978                           	__end_of_isr:
  2979  01D7                     	signat	_isr,89
  2980                           	global	_spiWrite
  2981                           
  2982 ;; *************** function _spiWrite *****************
  2983 ;; Defined at:
  2984 ;;		line 34 in file "SPI.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;  dat             1    wreg     unsigned char 
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;  dat             1    0[COMMON] unsigned char 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2998 ;;      Params:         0       0       0       0       0
  2999 ;;      Locals:         1       0       0       0       0
  3000 ;;      Temps:          0       0       0       0       0
  3001 ;;      Totals:         1       0       0       0       0
  3002 ;;Total ram usage:        1 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_isr
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3011                           	file	"SPI.c"
  3012                           	line	34
  3013                           global __ptext6
  3014                           __ptext6:	;psect for function _spiWrite
  3015  033C                     psect	text6
  3016                           	file	"SPI.c"
  3017                           	line	34
  3018                           	global	__size_of_spiWrite
  3019                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  3020  0006                     	
  3021                           _spiWrite:	
  3022  033C                     ;incstack = 0
  3023                           	opt	stack 4
  3024                           ; Regs used in _spiWrite: [wreg]
  3025                           ;spiWrite@dat stored from wreg
  3026                           	movwf	(spiWrite@dat)
  3027  033C  00F5               	line	36
  3028                           	
  3029                           i1l1091:	
  3030  033D                     ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  3031                           	movf	(spiWrite@dat),w
  3032  033D  0875               	bcf	status, 5	;RP0=0, select bank0
  3033  033E  1283               	bcf	status, 6	;RP1=0, select bank0
  3034  033F  1303               	movwf	(19)	;volatile
  3035  0340  0093               	line	37
  3036                           	
  3037                           i1l173:	
  3038  0341                     	return
  3039  0341  0008               	opt stack 0
  3040                           GLOBAL	__end_of_spiWrite
  3041                           	__end_of_spiWrite:
  3042  0342                     	signat	_spiWrite,4217
  3043                           	global	_spiRead
  3044                           
  3045 ;; *************** function _spiRead *****************
  3046 ;; Defined at:
  3047 ;;		line 47 in file "SPI.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;		None
  3050 ;; Auto vars:     Size  Location     Type
  3051 ;;		None
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      unsigned char 
  3054 ;; Registers used:
  3055 ;;		wreg, status,2, status,0, pclath, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3061 ;;      Params:         0       0       0       0       0
  3062 ;;      Locals:         0       0       0       0       0
  3063 ;;      Temps:          0       0       0       0       0
  3064 ;;      Totals:         0       0       0       0       0
  3065 ;;Total ram usage:        0 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    1
  3068 ;; This function calls:
  3069 ;;		_spiReceiveWait
  3070 ;; This function is called by:
  3071 ;;		_isr
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3075                           	line	47
  3076                           global __ptext7
  3077                           __ptext7:	;psect for function _spiRead
  3078  0320                     psect	text7
  3079                           	file	"SPI.c"
  3080                           	line	47
  3081                           	global	__size_of_spiRead
  3082                           	__size_of_spiRead	equ	__end_of_spiRead-_spiRead
  3083  000A                     	
  3084                           _spiRead:	
  3085  0320                     ;incstack = 0
  3086                           	opt	stack 3
  3087                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  3088                           	line	49
  3089                           	
  3090                           i1l1085:	
  3091  0320                     ;SPI.c: 49:     spiReceiveWait();
  3092                           	fcall	_spiReceiveWait
  3093  0320  120A  118A  2333  120A  118A  	line	50
  3094                           	
  3095                           i1l1087:	
  3096  0325                     ;SPI.c: 50:     return(SSPBUF);
  3097                           	bcf	status, 5	;RP0=0, select bank0
  3098  0325  1283               	bcf	status, 6	;RP1=0, select bank0
  3099  0326  1303               	movf	(19),w	;volatile
  3100  0327  0813               	goto	i1l181
  3101  0328  2B29               	
  3102                           i1l1089:	
  3103  0329                     	line	51
  3104                           	
  3105                           i1l181:	
  3106  0329                     	return
  3107  0329  0008               	opt stack 0
  3108                           GLOBAL	__end_of_spiRead
  3109                           	__end_of_spiRead:
  3110  032A                     	signat	_spiRead,89
  3111                           	global	_spiReceiveWait
  3112                           
  3113 ;; *************** function _spiReceiveWait *****************
  3114 ;; Defined at:
  3115 ;;		line 29 in file "SPI.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		None
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         0       0       0       0       0
  3130 ;;      Locals:         0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0
  3132 ;;      Totals:         0       0       0       0       0
  3133 ;;Total ram usage:        0 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_spiRead
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3142                           	line	29
  3143                           global __ptext8
  3144                           __ptext8:	;psect for function _spiReceiveWait
  3145  0333                     psect	text8
  3146                           	file	"SPI.c"
  3147                           	line	29
  3148                           	global	__size_of_spiReceiveWait
  3149                           	__size_of_spiReceiveWait	equ	__end_of_spiReceiveWait-_spiReceiveWait
  3150  0009                     	
  3151                           _spiReceiveWait:	
  3152  0333                     ;incstack = 0
  3153                           	opt	stack 3
  3154                           ; Regs used in _spiReceiveWait: []
  3155                           	line	31
  3156                           	
  3157                           i1l1043:	
  3158  0333                     ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  3159                           	goto	i1l167
  3160  0333  2B34               	
  3161                           i1l168:	
  3162  0334                     	
  3163                           i1l167:	
  3164  0334                     	bsf	status, 5	;RP0=1, select bank1
  3165  0334  1683               	bcf	status, 6	;RP1=0, select bank1
  3166  0335  1303               	btfss	(148)^080h,0	;volatile
  3167  0336  1C14               	goto	u39_21
  3168  0337  2B39               	goto	u39_20
  3169  0338  2B3A               u39_21:
  3170  0339                     	goto	i1l167
  3171  0339  2B34               u39_20:
  3172  033A                     	goto	i1l170
  3173  033A  2B3B               	
  3174                           i1l169:	
  3175  033B                     	line	32
  3176                           	
  3177                           i1l170:	
  3178  033B                     	return
  3179  033B  0008               	opt stack 0
  3180                           GLOBAL	__end_of_spiReceiveWait
  3181                           	__end_of_spiReceiveWait:
  3182  033C                     	signat	_spiReceiveWait,89
  3183                           	global	_UART_Read
  3184                           
  3185 ;; *************** function _UART_Read *****************
  3186 ;; Defined at:
  3187 ;;		line 62 in file "USARTinit.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      unsigned char 
  3194 ;; Registers used:
  3195 ;;		wreg
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3201 ;;      Params:         0       0       0       0       0
  3202 ;;      Locals:         0       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0
  3204 ;;      Totals:         0       0       0       0       0
  3205 ;;Total ram usage:        0 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_isr
  3211 ;;		_UART_Read_Text
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3215                           	file	"USARTinit.c"
  3216                           	line	62
  3217                           global __ptext9
  3218                           __ptext9:	;psect for function _UART_Read
  3219  0315                     psect	text9
  3220                           	file	"USARTinit.c"
  3221                           	line	62
  3222                           	global	__size_of_UART_Read
  3223                           	__size_of_UART_Read	equ	__end_of_UART_Read-_UART_Read
  3224  000B                     	
  3225                           _UART_Read:	
  3226  0315                     ;incstack = 0
  3227                           	opt	stack 4
  3228                           ; Regs used in _UART_Read: [wreg]
  3229                           	line	64
  3230                           	
  3231                           i1l1093:	
  3232  0315                     ;USARTinit.c: 64:   while(!RCIF);
  3233                           	goto	i1l221
  3234  0315  2B16               	
  3235                           i1l222:	
  3236  0316                     	
  3237                           i1l221:	
  3238  0316                     	bcf	status, 5	;RP0=0, select bank0
  3239  0316  1283               	bcf	status, 6	;RP1=0, select bank0
  3240  0317  1303               	btfss	(101/8),(101)&7	;volatile
  3241  0318  1E8C               	goto	u50_21
  3242  0319  2B1B               	goto	u50_20
  3243  031A  2B1C               u50_21:
  3244  031B                     	goto	i1l221
  3245  031B  2B16               u50_20:
  3246  031C                     	goto	i1l1095
  3247  031C  2B1D               	
  3248                           i1l223:	
  3249  031D                     	line	65
  3250                           	
  3251                           i1l1095:	
  3252  031D                     ;USARTinit.c: 65:   return RCREG;
  3253                           	movf	(26),w	;volatile
  3254  031D  081A               	goto	i1l224
  3255  031E  2B1F               	
  3256                           i1l1097:	
  3257  031F                     	line	66
  3258                           	
  3259                           i1l224:	
  3260  031F                     	return
  3261  031F  0008               	opt stack 0
  3262                           GLOBAL	__end_of_UART_Read
  3263                           	__end_of_UART_Read:
  3264  0320                     	signat	_UART_Read,89
  3265                           global	___latbits
  3266                           ___latbits	equ	2
  3267  0002                     	global	btemp
  3268                           	btemp set 07Eh
  3269  007E                     
  3270                           	DABS	1,126,2	;btemp
  3271                           	global	wtemp0
  3272                           	wtemp0 set btemp+0
  3273  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     34      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit
    _UART_Init->___aldiv

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1373
                                             32 BANK0      2     2      0
                               _Init
                          _UART_Init
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     917
                                             14 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      22
                                              1 COMMON     3     3      0
                          _UART_Read
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _UART_Init
     ___aldiv
   _spiInit

 _isr (ROOT)
   _UART_Read
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     22      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      38      12        0.0%
ABS                  0      0      38       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Mar 15 15:22:48 2020

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      fsr 0004                       l200 0115                       l121 02AA  
                     l122 02B7                       l131 0301                       l123 02B9  
                     l124 02C0                       l125 02C2                       l126 02C5  
                     l127 02C6                       l128 02C6                       l162 02D9  
                     l163 02E1                       l164 02E6                       l381 01EB  
                     l390 0273                       l382 01FF                       l198 00FC  
                     l391 027C                       l383 0262                       l199 0115  
                     l384 0220                       l385 0212                       l386 0225  
                     l387 0226                       l388 0251                       l389 0261  
                     _GIE 005F                       u400 01DE                       u401 01DD  
                     u410 01EF                       u411 01EE                       u420 020F  
                     u421 020E                       u440 0224                       u441 0223  
            __CFG_CPD$OFF 0000                       u435 0214                       u460 0241  
                     u461 0240                       u455 0228                       u480 0260  
                     u800 00A4                       u481 025F                       u465 023D  
                     u490 0267                       u810 00C5                       u491 0266  
                     u475 0252                       u820 00DA                       u821 00DB  
                     u805 009F                       u830 0106                       u822 00E0  
                     u750 02D1                       u831 0105                       u823 00E1  
                     u815 00C0                       u751 02D0                       u760 0039  
                     u840 02B5                       u841 02B4                       u770 005A  
                     u850 02BE                       u851 02BD                       u780 006F  
                     u781 0070                       u765 0034                       u790 0096  
                     u782 0075                       u791 0095                       u783 0076  
                     u775 0055                       _isr 0116                       indf 0000  
            __CFG_LVP$OFF 0000                      l1101 02EB                      l1111 02F8  
                    l1103 02EE                      l1121 02FD                      l1113 02F9  
                    l1105 02F1                      l1123 02FE                      l1115 02FA  
                    l1107 02F4                      l1051 01EF                      l1125 02FF  
                    l1117 02FB                      l1109 02F7                      l1061 0212  
                    l1053 01FA                      l1045 01D7                      l1301 02AA  
                    l1127 0301                      l1119 02FC                      l1071 024F  
                    l1063 0220                      l1055 01FF                      l1047 01DA  
                    l1311 02B9                      l1303 02AC                      l1081 0273  
                    l1073 0251                      l1065 0226                      l1057 0207  
                    l1049 01DE                      l1313 02BE                      l1305 02AE  
                    l1083 027C                      l1075 025A                      l1067 022F  
                    l1059 020F                      l1251 02CA                      l1315 02C2  
                    l1307 02B0                      l1069 0241                      l1077 0262  
                    l1261 0029                      l1253 02D1                      l1309 02B5  
                    l1079 0267                      l1271 0106                      l1263 008D  
                    l1255 02D7                      l1281 0110                      l1273 010A  
                    l1265 0096                      l1257 02D9                      l1099 02E7  
                    l1283 0111                      l1275 010B                      l1267 00F8  
                    l1259 02E0                      l1291 02A2                      l1285 0112  
                    l1277 010C                      l1269 00FC                      l1293 02A5  
                    l1287 0114                      l1279 010D                      l1295 02A6  
                    l1297 02A7                      l1289 027D                      l1299 02A8  
                    ?_isr 0075                      _PEIE 005E                      _RCIE 0465  
                    _RCIF 0065                      i1l95 0170                      i1l96 0130  
                    i1l97 016C                      i1l98 013D                      i1l99 016B  
                    _TRMT 04C1                      _Init 02E7              __CFG_WRT$OFF 0000  
                    _dato 004B                      _main 027D                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_isr 0076  
                   ?_Init 0075           __end_of___aldiv 027D                     ?_main 0075  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l100 014C  
                   i1l101 016A                     i1l110 01CD                     i1l102 015B  
                   i1l111 01AA                     i1l103 0169                     i1l112 01CC  
                   i1l104 0168                     i1l105 01D0                     i1l113 01BB  
                   i1l106 01CF                     i1l114 01CB                     i1l115 01CA  
                   i1l107 018A                     i1l108 01CE                     i1l116 01D0  
                   i1l221 0316                     i1l109 0199                     i1l222 0316  
                   i1l223 031D                     i1l224 031F                     i1l170 033B  
                   i1l181 0329                     i1l173 0341                     i1l167 0334  
                   i1l168 0334                     i1l169 033B                     _RCREG 001A  
                   u50_20 031C                     u50_21 031B                     _SPBRG 0099  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     u60_20 011C  
                   u60_21 011B                     u61_20 0129                     u61_21 0128  
                   u70_20 01B0                     u62_20 0136                     u70_21 01AF  
                   u62_21 0135                     u39_20 033A                     u71_20 01C1  
                   u63_20 0143                     u39_21 0339                     u71_21 01C0  
                   u63_21 0142                     u64_20 0152                     u64_21 0151  
                   u65_20 0161                     u65_21 0160                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088                     _TRISE 0089  
                   u66_20 0174                     _SSPIF 0063                     u66_21 0173  
                   u67_20 0181                     u67_21 0180                     u68_20 0190  
                   u68_21 018F                     u69_20 019F                     u69_21 019E  
                   _TXREG 0019            __CFG_FCMEN$OFF 0000        __size_of_UART_Init 00ED  
      __size_of_UART_Read 000B            __CFG_BOREN$OFF 0000                     pclath 000A  
         __end_of_spiInit 02E7           __end_of_spiRead 032A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_Init 0302              __end_of_main 02C9                    ??_Init 0079  
                  ??_main 0040                    _ANSELH 0189                    i1l1201 0190  
                  i1l1043 0333                    i1l1211 01BB                    i1l1203 0199  
                  i1l1213 01C1                    i1l1205 019F                    i1l1207 01AA  
                  i1l1209 01B0                    i1l1091 033D                    i1l1171 0124  
                  i1l1093 0315                    i1l1085 0320                    i1l1181 0143  
                  i1l1173 0129                    i1l1095 031D                    i1l1087 0325  
                  i1l1183 014C                    i1l1191 016C                    i1l1175 0130  
                  i1l1167 0116                    i1l1097 031F                    i1l1089 0329  
                  i1l1193 0174                    i1l1185 0152                    i1l1177 0136  
                  i1l1169 011C                    i1l1195 017C                    i1l1187 015B  
                  i1l1179 013D                    i1l1197 0181                    i1l1189 0161  
                  i1l1199 018A                    _INTCON 000B                    _OSCCON 008F  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000                    _Valor1 0073  
                  _Valor2 0072                    _Valor3 004D                    _Valor4 004C  
                  _Valor5 0071                    _ValorA 0046                    _ValorB 0045  
                  _ValorC 0044                    _ValorD 0043                    _ValorE 0042  
       __end_of_UART_Init 0116         __end_of_UART_Read 0320                 ??___aldiv 0079  
                  saved_w 007E          __end_of_spiWrite 0342                 ??_spiInit 0079  
               ??_spiRead 0075   __end_of__initialization 0025            __pcstackCOMMON 0075  
            __pidataBANK0 032A                __pbssBANK0 004B                __pmaintext 027D  
              __pintentry 0004   __size_of_spiReceiveWait 0009                   _SENSOR1 004A  
                 _SENSOR2 0049                   _SENSOR3 0048                   _SENSOR4 0047  
                 _SSPSTAT 0094                 ?_spiWrite 0075                   ___aldiv 01D7  
                 __ptext1 02C9                   __ptext2 0029                   __ptext3 01D7  
                 __ptext4 02E7                   __ptext5 0116                   __ptext6 033C  
                 __ptext7 0320                   __ptext8 0333                   __ptext9 0315  
            __size_of_isr 00C1          ___aldiv@dividend 0024                   _spiInit 02C9  
                 _spiRead 0320      end_of_initialization 0025                 _RCSTAbits 0018  
        ___aldiv@quotient 002A                ??_spiWrite 0075                 _UART_Init 0029  
               _UART_Read 0315                 _PORTEbits 0009                 _TRISCbits 0087  
             spiWrite@dat 0075                 _TXSTAbits 0098            _spiReceiveWait 0333  
              ?_UART_Init 002E                ?_UART_Read 0075       start_initialization 000F  
             __end_of_isr 01D7  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 033C  
              init_fetch0 0302               __pdataBANK0 0042               __pbssCOMMON 0070  
               ___latbits 0002             __pcstackBANK0 0020           ?_spiReceiveWait 0075  
                ?___aldiv 0020               ??_UART_Init 0032               ??_UART_Read 0075  
       __size_of_spiWrite 0006                  ?_spiInit 0020                  ?_spiRead 0075  
              UART_Init@x 003E           ___aldiv@divisor 0020      spiInit@sTransmitEdge 0022  
       interrupt_function 0004           ___aldiv@counter 0028                  _PIE1bits 008C  
      spiInit@sDataSample 0020                  _PIR1bits 000C         UART_Init@baudrate 002E  
        __size_of___aldiv 00A6          __size_of_spiInit 001E          __size_of_spiRead 000A  
       __CFG_BOR4V$BOR40V 0000                  _controla 0070             __size_of_Init 001B  
           __size_of_main 004C                  _spiWrite 033C              spiInit@sType 0079  
       spiInit@sClockIdle 0021                  init_ram0 0306               _VERIFICADOR 0074  
                intlevel1 0000          ??_spiReceiveWait 0075                _OSCCONbits 008F  
            ___aldiv@sign 0029  
