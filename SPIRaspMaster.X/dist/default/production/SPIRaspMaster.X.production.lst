

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat May 09 22:25:36 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     	FNCALL	_main,_ConvNum
   868                           	FNCALL	_main,_Lcd_Init_8bits
   869                           	FNCALL	_main,_Lcd_Set_Cursor_8bits
   870                           	FNCALL	_main,_Lcd_Write_Char
   871                           	FNCALL	_main,_Lcd_Write_String
   872                           	FNCALL	_main,_init
   873                           	FNCALL	_main,_initOsc
   874                           	FNCALL	_main,_num_to_string
   875                           	FNCALL	_main,_spiRead
   876                           	FNCALL	_main,_spiWrite
   877                           	FNCALL	_spiRead,_spiReceiveWait
   878                           	FNCALL	_num_to_string,___awdiv
   879                           	FNCALL	_num_to_string,___awmod
   880                           	FNCALL	_init,_spiInit
   881                           	FNCALL	_Lcd_Write_String,_Lcd_Write_Char
   882                           	FNCALL	_Lcd_Init_8bits,_Lcd_Cmd_8bits
   883                           	FNCALL	_ConvNum,_Lcd_Set_Cursor_8bits
   884                           	FNCALL	_ConvNum,_Lcd_Write_Char
   885                           	FNCALL	_Lcd_Write_Char,_Lcd_Port
   886                           	FNCALL	_Lcd_Set_Cursor_8bits,_Lcd_Cmd_8bits
   887                           	FNROOT	_main
   888                           	global	_valor2
   889                           	global	_data3
   890                           	global	_data2
   891                           	global	_data1
   892                           	global	_valor3
   893                           	global	_valor1
   894                           	global	_PORTBbits
   895                           _PORTBbits	set	0x6
   896  0006                     	global	_PORTE
   897                           _PORTE	set	0x9
   898  0009                     	global	_PORTC
   899                           _PORTC	set	0x7
   900  0007                     	global	_PORTB
   901                           _PORTB	set	0x6
   902  0006                     	global	_PORTCbits
   903                           _PORTCbits	set	0x7
   904  0007                     	global	_PORTD
   905                           _PORTD	set	0x8
   906  0008                     	global	_PORTA
   907                           _PORTA	set	0x5
   908  0005                     	global	_PORTEbits
   909                           _PORTEbits	set	0x9
   910  0009                     	global	_SSPBUF
   911                           _SSPBUF	set	0x13
   912  0013                     	global	_SSPCON
   913                           _SSPCON	set	0x14
   914  0014                     	global	_TRISE
   915                           _TRISE	set	0x89
   916  0089                     	global	_TRISCbits
   917                           _TRISCbits	set	0x87
   918  0087                     	global	_TRISC
   919                           _TRISC	set	0x87
   920  0087                     	global	_TRISD
   921                           _TRISD	set	0x88
   922  0088                     	global	_TRISB
   923                           _TRISB	set	0x86
   924  0086                     	global	_TRISA
   925                           _TRISA	set	0x85
   926  0085                     	global	_SSPSTATbits
   927                           _SSPSTATbits	set	0x94
   928  0094                     	global	_SSPSTAT
   929                           _SSPSTAT	set	0x94
   930  0094                     	global	_OSCCONbits
   931                           _OSCCONbits	set	0x8F
   932  008F                     	global	_TRISC3
   933                           _TRISC3	set	0x43B
   934  043B                     	global	_TRISC5
   935                           _TRISC5	set	0x43D
   936  043D                     	global	_ANSELH
   937                           _ANSELH	set	0x189
   938  0189                     	global	_ANSEL
   939                           _ANSEL	set	0x188
   940  0188                     psect	strings,class=STRING,delta=2,noexec
   941                           global __pstrings
   942                           __pstrings:
   943  0003                     stringtab:
   944  0003                     	global    __stringtab
   945                           __stringtab:
   946  0003                     ;	String table - string pointers are 1 byte each
   947                           stringcode:stringdir:
   948  0003                     movlw high(stringdir)
      + 0003                     stringdir:	
   949  0003  3000               movwf pclath
   950  0004  008A               movf fsr,w
   951  0005  0804               incf fsr
   952  0006  0A84               	addwf pc
   953  0007  0782               	global __stringbase
   954                           __stringbase:
   955  0008                     	retlw	0
   956  0008  3400               psect	strings
   957                           	global    __end_of__stringtab
   958                           __end_of__stringtab:
   959  0009                     	
   960                           STR_1:	
   961  0009                     	retlw	32	;' '
   962  0009  3420               	retlw	83	;'S'
   963  000A  3453               	retlw	49	;'1'
   964  000B  3431               	retlw	58	;':'
   965  000C  343A               	retlw	32	;' '
   966  000D  3420               	retlw	32	;' '
   967  000E  3420               	retlw	32	;' '
   968  000F  3420               	retlw	83	;'S'
   969  0010  3453               	retlw	50	;'2'
   970  0011  3432               	retlw	58	;':'
   971  0012  343A               	retlw	32	;' '
   972  0013  3420               	retlw	32	;' '
   973  0014  3420               	retlw	83	;'S'
   974  0015  3453               	retlw	51	;'3'
   975  0016  3433               	retlw	58	;':'
   976  0017  343A               	retlw	32	;' '
   977  0018  3420               	retlw	0
   978  0019  3400               psect	strings
   979                           	
   980                           STR_8:	
   981  001A                     	retlw	79	;'O'
   982  001A  344F               	retlw	78	;'N'
   983  001B  344E               	retlw	32	;' '
   984  001C  3420               	retlw	0
   985  001D  3400               psect	strings
   986                           	
   987                           STR_9:	
   988  001E                     	retlw	79	;'O'
   989  001E  344F               	retlw	70	;'F'
   990  001F  3446               	retlw	70	;'F'
   991  0020  3446               	retlw	0
   992  0021  3400               psect	strings
   993                           	
   994                           STR_3:	
   995  0022                     	retlw	46	;'.'
   996  0022  342E               	retlw	0
   997  0023  3400               psect	strings
   998                           	
   999                           STR_5:	
  1000  0024                     	retlw	50	;'2'
  1001  0024  3432               	retlw	0
  1002  0025  3400               psect	strings
  1003                           	
  1004                           STR_7:	
  1005  0026                     	retlw	52	;'4'
  1006  0026  3434               	retlw	0
  1007  0027  3400               psect	strings
  1008                           	
  1009                           STR_6:	
  1010  0028                     	retlw	54	;'6'
  1011  0028  3436               	retlw	0
  1012  0029  3400               psect	strings
  1013                           	
  1014                           STR_4:	
  1015  002A                     	retlw	67	;'C'
  1016  002A  3443               	retlw	0
  1017  002B  3400               psect	strings
  1018                           	
  1019                           STR_2:	
  1020  002C                     	retlw	83	;'S'
  1021  002C  3453               	retlw	0
  1022  002D  3400               psect	strings
  1023                           ; #config settings
  1024                           global __CFG_FOSC$INTRC_NOCLKOUT
  1025                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1026  0000                     global __CFG_WDTE$OFF
  1027                           __CFG_WDTE$OFF equ 0x0
  1028  0000                     global __CFG_PWRTE$OFF
  1029                           __CFG_PWRTE$OFF equ 0x0
  1030  0000                     global __CFG_MCLRE$OFF
  1031                           __CFG_MCLRE$OFF equ 0x0
  1032  0000                     global __CFG_CP$OFF
  1033                           __CFG_CP$OFF equ 0x0
  1034  0000                     global __CFG_CPD$OFF
  1035                           __CFG_CPD$OFF equ 0x0
  1036  0000                     global __CFG_BOREN$ON
  1037                           __CFG_BOREN$ON equ 0x0
  1038  0000                     global __CFG_IESO$OFF
  1039                           __CFG_IESO$OFF equ 0x0
  1040  0000                     global __CFG_FCMEN$OFF
  1041                           __CFG_FCMEN$OFF equ 0x0
  1042  0000                     global __CFG_LVP$OFF
  1043                           __CFG_LVP$OFF equ 0x0
  1044  0000                     global __CFG_BOR4V$BOR40V
  1045                           __CFG_BOR4V$BOR40V equ 0x0
  1046  0000                     global __CFG_WRT$OFF
  1047                           __CFG_WRT$OFF equ 0x0
  1048  0000                     	file	"C:\Users\DIBUJO~1\AppData\Local\Temp\sfjc."
  1049                           	line	#
  1050                           psect cinit,class=CODE,delta=2
  1051                           global start_initialization
  1052                           start_initialization:
  1053  07F2                     
  1054                           global __initialization
  1055                           __initialization:
  1056  07F2                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1057                           global __pbssCOMMON
  1058                           __pbssCOMMON:
  1059  007D                     _valor2:
  1060  007D                            ds      1
  1061  007D                     
  1062                           psect	bssBANK0,class=BANK0,space=1,noexec
  1063                           global __pbssBANK0
  1064                           __pbssBANK0:
  1065  0020                     _porcentaje:
  1066  0020                            ds      2
  1067  0020                     
  1068                           _temp1:
  1069  0022                            ds      2
  1070  0022                     
  1071                           _data3:
  1072  0024                            ds      2
  1073  0024                     
  1074                           _data2:
  1075  0026                            ds      2
  1076  0026                     
  1077                           _data1:
  1078  0028                            ds      2
  1079  0028                     
  1080                           _temp:
  1081  002A                            ds      2
  1082  002A                     
  1083                           _datat3:
  1084  002C                            ds      1
  1085  002C                     
  1086                           _datat2:
  1087  002D                            ds      1
  1088  002D                     
  1089                           _datat1:
  1090  002E                            ds      1
  1091  002E                     
  1092                           _controla:
  1093  002F                            ds      1
  1094  002F                     
  1095                           _valor5:
  1096  0030                            ds      1
  1097  0030                     
  1098                           _valor4:
  1099  0031                            ds      1
  1100  0031                     
  1101                           _valor3:
  1102  0032                            ds      1
  1103  0032                     
  1104                           _valor1:
  1105  0033                            ds      1
  1106  0033                     
  1107                           _contador:
  1108  0034                            ds      1
  1109  0034                     
  1110                           _dato:
  1111  0035                            ds      1
  1112  0035                     
  1113                           	file	"C:\Users\DIBUJO~1\AppData\Local\Temp\sfjc."
  1114                           	line	#
  1115                           psect clrtext,class=CODE,delta=2
  1116                           global clear_ram0
  1117                           ;	Called with FSR containing the base address, and
  1118                           ;	W with the last address+1
  1119                           clear_ram0:
  1120  0366                     	clrwdt			;clear the watchdog before getting into this loop
  1121  0366  0064               clrloop0:
  1122  0367                     	clrf	indf		;clear RAM location pointed to by FSR
  1123  0367  0180               	incf	fsr,f		;increment pointer
  1124  0368  0A84               	xorwf	fsr,w		;XOR with final address
  1125  0369  0604               	btfsc	status,2	;have we reached the end yet?
  1126  036A  1903               	retlw	0		;all done for this memory range, return
  1127  036B  3400               	xorwf	fsr,w		;XOR again to restore value
  1128  036C  0604               	goto	clrloop0		;do the next byte
  1129  036D  2B67               
  1130                           ; Clear objects allocated to COMMON
  1131                           psect cinit,class=CODE,delta=2,merge=1
  1132                           	clrf	((__pbssCOMMON)+0)&07Fh
  1133  07F2  01FD               ; Clear objects allocated to BANK0
  1134                           psect cinit,class=CODE,delta=2,merge=1
  1135                           	bcf	status, 7	;select IRP bank0
  1136  07F3  1383               	movlw	low(__pbssBANK0)
  1137  07F4  3020               	movwf	fsr
  1138  07F5  0084               	movlw	low((__pbssBANK0)+016h)
  1139  07F6  3036               	fcall	clear_ram0
  1140  07F7  120A  118A  2366  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1141                           global end_of_initialization,__end_of__initialization
  1142                           
  1143                           ;End of C runtime variable initialization code
  1144                           
  1145                           end_of_initialization:
  1146  07FC                     __end_of__initialization:
  1147  07FC                     clrf status
  1148  07FC  0183               ljmp _main	;jump to C main() function
  1149  07FD  120A  118A  2E6F   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1150                           global __pcstackCOMMON
  1151                           __pcstackCOMMON:
  1152  0070                     ?_init:	; 1 bytes @ 0x0
  1153  0070                     ?_Lcd_Init_8bits:	; 1 bytes @ 0x0
  1154  0070                     ?_initOsc:	; 1 bytes @ 0x0
  1155  0070                     ??_initOsc:	; 1 bytes @ 0x0
  1156  0070                     ?_spiInit:	; 1 bytes @ 0x0
  1157  0070                     ?_spiReceiveWait:	; 1 bytes @ 0x0
  1158  0070                     ??_spiReceiveWait:	; 1 bytes @ 0x0
  1159  0070                     ?_spiWrite:	; 1 bytes @ 0x0
  1160  0070                     ??_spiWrite:	; 1 bytes @ 0x0
  1161  0070                     ?_spiRead:	; 1 bytes @ 0x0
  1162  0070                     ??_spiRead:	; 1 bytes @ 0x0
  1163  0070                     ?_main:	; 1 bytes @ 0x0
  1164  0070                     ?_Lcd_Port:	; 1 bytes @ 0x0
  1165  0070                     ??_Lcd_Port:	; 1 bytes @ 0x0
  1166  0070                     ?_Lcd_Cmd_8bits:	; 1 bytes @ 0x0
  1167  0070                     ??_Lcd_Cmd_8bits:	; 1 bytes @ 0x0
  1168  0070                     	global	?___awdiv
  1169                           ?___awdiv:	; 2 bytes @ 0x0
  1170  0070                     	global	?___awmod
  1171                           ?___awmod:	; 2 bytes @ 0x0
  1172  0070                     	global	spiInit@sDataSample
  1173                           spiInit@sDataSample:	; 1 bytes @ 0x0
  1174  0070                     	global	spiWrite@dat
  1175                           spiWrite@dat:	; 1 bytes @ 0x0
  1176  0070                     	global	Lcd_Port@a
  1177                           Lcd_Port@a:	; 1 bytes @ 0x0
  1178  0070                     	global	___awdiv@divisor
  1179                           ___awdiv@divisor:	; 2 bytes @ 0x0
  1180  0070                     	global	___awmod@divisor
  1181                           ___awmod@divisor:	; 2 bytes @ 0x0
  1182  0070                     	ds	1
  1183  0070                     ?_Lcd_Write_Char:	; 1 bytes @ 0x1
  1184  0071                     	global	spiInit@sClockIdle
  1185                           spiInit@sClockIdle:	; 1 bytes @ 0x1
  1186  0071                     	global	Lcd_Cmd_8bits@comando
  1187                           Lcd_Cmd_8bits@comando:	; 1 bytes @ 0x1
  1188  0071                     	global	Lcd_Write_Char@modo
  1189                           Lcd_Write_Char@modo:	; 2 bytes @ 0x1
  1190  0071                     	ds	1
  1191  0071                     ??_Lcd_Init_8bits:	; 1 bytes @ 0x2
  1192  0072                     ?_Lcd_Set_Cursor_8bits:	; 1 bytes @ 0x2
  1193  0072                     	global	initOsc@frec
  1194                           initOsc@frec:	; 1 bytes @ 0x2
  1195  0072                     	global	spiInit@sTransmitEdge
  1196                           spiInit@sTransmitEdge:	; 1 bytes @ 0x2
  1197  0072                     	global	Lcd_Set_Cursor_8bits@x
  1198                           Lcd_Set_Cursor_8bits@x:	; 1 bytes @ 0x2
  1199  0072                     	global	___awdiv@dividend
  1200                           ___awdiv@dividend:	; 2 bytes @ 0x2
  1201  0072                     	global	___awmod@dividend
  1202                           ___awmod@dividend:	; 2 bytes @ 0x2
  1203  0072                     	ds	1
  1204  0072                     ??_Lcd_Set_Cursor_8bits:	; 1 bytes @ 0x3
  1205  0073                     ??_Lcd_Write_Char:	; 1 bytes @ 0x3
  1206  0073                     ??_spiInit:	; 1 bytes @ 0x3
  1207  0073                     	global	spiInit@sType
  1208                           spiInit@sType:	; 1 bytes @ 0x3
  1209  0073                     	global	Lcd_Set_Cursor_8bits@y
  1210                           Lcd_Set_Cursor_8bits@y:	; 1 bytes @ 0x3
  1211  0073                     	ds	1
  1212  0073                     ??_init:	; 1 bytes @ 0x4
  1213  0074                     ??___awdiv:	; 1 bytes @ 0x4
  1214  0074                     ??___awmod:	; 1 bytes @ 0x4
  1215  0074                     	global	Lcd_Write_Char@temp
  1216                           Lcd_Write_Char@temp:	; 1 bytes @ 0x4
  1217  0074                     	ds	1
  1218  0074                     	global	Lcd_Write_Char@y
  1219                           Lcd_Write_Char@y:	; 1 bytes @ 0x5
  1220  0075                     	global	___awdiv@counter
  1221                           ___awdiv@counter:	; 1 bytes @ 0x5
  1222  0075                     	global	___awmod@counter
  1223                           ___awmod@counter:	; 1 bytes @ 0x5
  1224  0075                     	ds	1
  1225  0075                     	global	Lcd_Write_Char@a
  1226                           Lcd_Write_Char@a:	; 1 bytes @ 0x6
  1227  0076                     	global	___awdiv@sign
  1228                           ___awdiv@sign:	; 1 bytes @ 0x6
  1229  0076                     	global	___awmod@sign
  1230                           ___awmod@sign:	; 1 bytes @ 0x6
  1231  0076                     	ds	1
  1232  0076                     ?_Lcd_Write_String:	; 1 bytes @ 0x7
  1233  0077                     ?_ConvNum:	; 1 bytes @ 0x7
  1234  0077                     	global	ConvNum@digito
  1235                           ConvNum@digito:	; 2 bytes @ 0x7
  1236  0077                     	global	Lcd_Write_String@modo
  1237                           Lcd_Write_String@modo:	; 2 bytes @ 0x7
  1238  0077                     	global	___awdiv@quotient
  1239                           ___awdiv@quotient:	; 2 bytes @ 0x7
  1240  0077                     	ds	2
  1241  0077                     ??_Lcd_Write_String:	; 1 bytes @ 0x9
  1242  0079                     ?_num_to_string:	; 1 bytes @ 0x9
  1243  0079                     	global	ConvNum@punt
  1244                           ConvNum@punt:	; 1 bytes @ 0x9
  1245  0079                     	global	num_to_string@numero
  1246                           num_to_string@numero:	; 2 bytes @ 0x9
  1247  0079                     	global	Lcd_Write_String@i
  1248                           Lcd_Write_String@i:	; 2 bytes @ 0x9
  1249  0079                     	ds	1
  1250  0079                     ??_ConvNum:	; 1 bytes @ 0xA
  1251  007A                     	ds	1
  1252  007A                     ??_num_to_string:	; 1 bytes @ 0xB
  1253  007B                     	global	Lcd_Write_String@a
  1254                           Lcd_Write_String@a:	; 1 bytes @ 0xB
  1255  007B                     	global	ConvNum@numerito
  1256                           ConvNum@numerito:	; 2 bytes @ 0xB
  1257  007B                     	ds	2
  1258  007B                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1259                           global __pcstackBANK0
  1260                           __pcstackBANK0:
  1261  0036                     ??_main:	; 1 bytes @ 0x0
  1262  0036                     	ds	2
  1263  0036                     ;!
  1264                           ;!Data Sizes:
  1265                           ;!    Strings     37
  1266                           ;!    Constant    0
  1267                           ;!    Data        0
  1268                           ;!    BSS         23
  1269                           ;!    Persistent  0
  1270                           ;!    Stack       0
  1271                           ;!
  1272                           ;!Auto Spaces:
  1273                           ;!    Space          Size  Autos    Used
  1274                           ;!    COMMON           14     13      14
  1275                           ;!    BANK0            80      2      24
  1276                           ;!    BANK1            80      0       0
  1277                           ;!    BANK3            96      0       0
  1278                           ;!    BANK2            96      0       0
  1279                           
  1280                           ;!
  1281                           ;!Pointer List with Targets:
  1282                           ;!
  1283                           ;!    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
  1284                           ;!		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[2]), STR_6(CODE[2]), 
  1285                           ;!		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
  1286                           ;!		 -> STR_1(CODE[17]), 
  1287                           ;!
  1288                           
  1289                           
  1290                           ;!
  1291                           ;!Critical Paths under _main in COMMON
  1292                           ;!
  1293                           ;!    _main->_ConvNum
  1294                           ;!    _num_to_string->___awdiv
  1295                           ;!    _init->_spiInit
  1296                           ;!    _Lcd_Write_String->_Lcd_Write_Char
  1297                           ;!    _Lcd_Init_8bits->_Lcd_Cmd_8bits
  1298                           ;!    _ConvNum->_Lcd_Write_Char
  1299                           ;!    _Lcd_Write_Char->_Lcd_Port
  1300                           ;!    _Lcd_Set_Cursor_8bits->_Lcd_Cmd_8bits
  1301                           ;!
  1302                           ;!Critical Paths under _main in BANK0
  1303                           ;!
  1304                           ;!    None.
  1305                           ;!
  1306                           ;!Critical Paths under _main in BANK1
  1307                           ;!
  1308                           ;!    None.
  1309                           ;!
  1310                           ;!Critical Paths under _main in BANK3
  1311                           ;!
  1312                           ;!    None.
  1313                           ;!
  1314                           ;!Critical Paths under _main in BANK2
  1315                           ;!
  1316                           ;!    None.
  1317                           
  1318 ;;
  1319 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1320 ;;
  1321                           
  1322                           ;!
  1323                           ;!Call Graph Tables:
  1324                           ;!
  1325                           ;! ---------------------------------------------------------------------------------
  1326                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1327                           ;! ---------------------------------------------------------------------------------
  1328                           ;! (0) _main                                                 2     2      0    7176
  1329                           ;!                                              0 BANK0      2     2      0
  1330                           ;!                            _ConvNum
  1331                           ;!                     _Lcd_Init_8bits
  1332                           ;!               _Lcd_Set_Cursor_8bits
  1333                           ;!                     _Lcd_Write_Char
  1334                           ;!                   _Lcd_Write_String
  1335                           ;!                               _init
  1336                           ;!                            _initOsc
  1337                           ;!                      _num_to_string
  1338                           ;!                            _spiRead
  1339                           ;!                           _spiWrite
  1340                           ;! ---------------------------------------------------------------------------------
  1341                           ;! (1) _spiWrite                                             1     1      0      22
  1342                           ;!                                              0 COMMON     1     1      0
  1343                           ;! ---------------------------------------------------------------------------------
  1344                           ;! (1) _spiRead                                              0     0      0       0
  1345                           ;!                     _spiReceiveWait
  1346                           ;! ---------------------------------------------------------------------------------
  1347                           ;! (2) _spiReceiveWait                                       0     0      0       0
  1348                           ;! ---------------------------------------------------------------------------------
  1349                           ;! (1) _num_to_string                                        2     0      2    1977
  1350                           ;!                                              9 COMMON     2     0      2
  1351                           ;!                            ___awdiv
  1352                           ;!                            ___awmod
  1353                           ;! ---------------------------------------------------------------------------------
  1354                           ;! (2) ___awmod                                              7     3      4     904
  1355                           ;!                                              0 COMMON     7     3      4
  1356                           ;! ---------------------------------------------------------------------------------
  1357                           ;! (2) ___awdiv                                              9     5      4     908
  1358                           ;!                                              0 COMMON     9     5      4
  1359                           ;! ---------------------------------------------------------------------------------
  1360                           ;! (1) _initOsc                                              3     3      0      22
  1361                           ;!                                              0 COMMON     3     3      0
  1362                           ;! ---------------------------------------------------------------------------------
  1363                           ;! (1) _init                                                 0     0      0     360
  1364                           ;!                            _spiInit
  1365                           ;! ---------------------------------------------------------------------------------
  1366                           ;! (2) _spiInit                                              4     1      3     360
  1367                           ;!                                              0 COMMON     4     1      3
  1368                           ;! ---------------------------------------------------------------------------------
  1369                           ;! (1) _Lcd_Write_String                                     5     3      2    1565
  1370                           ;!                                              7 COMMON     5     3      2
  1371                           ;!                     _Lcd_Write_Char
  1372                           ;! ---------------------------------------------------------------------------------
  1373                           ;! (1) _Lcd_Init_8bits                                       2     2      0      22
  1374                           ;!                                              2 COMMON     2     2      0
  1375                           ;!                      _Lcd_Cmd_8bits
  1376                           ;! ---------------------------------------------------------------------------------
  1377                           ;! (1) _ConvNum                                              6     3      3    1790
  1378                           ;!                                              7 COMMON     6     3      3
  1379                           ;!               _Lcd_Set_Cursor_8bits
  1380                           ;!                     _Lcd_Write_Char
  1381                           ;! ---------------------------------------------------------------------------------
  1382                           ;! (2) _Lcd_Write_Char                                       6     4      2     472
  1383                           ;!                                              1 COMMON     6     4      2
  1384                           ;!                           _Lcd_Port
  1385                           ;! ---------------------------------------------------------------------------------
  1386                           ;! (3) _Lcd_Port                                             1     1      0      88
  1387                           ;!                                              0 COMMON     1     1      0
  1388                           ;! ---------------------------------------------------------------------------------
  1389                           ;! (1) _Lcd_Set_Cursor_8bits                                 2     1      1     946
  1390                           ;!                                              2 COMMON     2     1      1
  1391                           ;!                      _Lcd_Cmd_8bits
  1392                           ;! ---------------------------------------------------------------------------------
  1393                           ;! (2) _Lcd_Cmd_8bits                                        2     2      0      22
  1394                           ;!                                              0 COMMON     2     2      0
  1395                           ;! ---------------------------------------------------------------------------------
  1396                           ;! Estimated maximum stack depth 3
  1397                           ;! ---------------------------------------------------------------------------------
  1398                           ;!
  1399                           ;! Call Graph Graphs:
  1400                           ;!
  1401                           ;! _main (ROOT)
  1402                           ;!   _ConvNum
  1403                           ;!     _Lcd_Set_Cursor_8bits
  1404                           ;!       _Lcd_Cmd_8bits
  1405                           ;!     _Lcd_Write_Char
  1406                           ;!       _Lcd_Port
  1407                           ;!   _Lcd_Init_8bits
  1408                           ;!     _Lcd_Cmd_8bits
  1409                           ;!   _Lcd_Set_Cursor_8bits
  1410                           ;!     _Lcd_Cmd_8bits
  1411                           ;!   _Lcd_Write_Char
  1412                           ;!     _Lcd_Port
  1413                           ;!   _Lcd_Write_String
  1414                           ;!     _Lcd_Write_Char
  1415                           ;!       _Lcd_Port
  1416                           ;!   _init
  1417                           ;!     _spiInit
  1418                           ;!   _initOsc
  1419                           ;!   _num_to_string
  1420                           ;!     ___awdiv
  1421                           ;!     ___awmod
  1422                           ;!   _spiRead
  1423                           ;!     _spiReceiveWait
  1424                           ;!   _spiWrite
  1425                           ;!
  1426                           
  1427                           ;! Address spaces:
  1428                           
  1429                           ;!Name               Size   Autos  Total    Cost      Usage
  1430                           ;!BITCOMMON            E      0       0       0        0.0%
  1431                           ;!EEDATA             100      0       0       0        0.0%
  1432                           ;!NULL                 0      0       0       0        0.0%
  1433                           ;!CODE                 0      0       0       0        0.0%
  1434                           ;!COMMON               E      D       E       1      100.0%
  1435                           ;!BITSFR0              0      0       0       1        0.0%
  1436                           ;!SFR0                 0      0       0       1        0.0%
  1437                           ;!BITSFR1              0      0       0       2        0.0%
  1438                           ;!SFR1                 0      0       0       2        0.0%
  1439                           ;!STACK                0      0       0       2        0.0%
  1440                           ;!ABS                  0      0      26       3        0.0%
  1441                           ;!BITBANK0            50      0       0       4        0.0%
  1442                           ;!BITSFR3              0      0       0       4        0.0%
  1443                           ;!SFR3                 0      0       0       4        0.0%
  1444                           ;!BANK0               50      2      18       5       30.0%
  1445                           ;!BITSFR2              0      0       0       5        0.0%
  1446                           ;!SFR2                 0      0       0       5        0.0%
  1447                           ;!BITBANK1            50      0       0       6        0.0%
  1448                           ;!BANK1               50      0       0       7        0.0%
  1449                           ;!BITBANK3            60      0       0       8        0.0%
  1450                           ;!BANK3               60      0       0       9        0.0%
  1451                           ;!BITBANK2            60      0       0      10        0.0%
  1452                           ;!BANK2               60      0       0      11        0.0%
  1453                           ;!DATA                 0      0      26      12        0.0%
  1454                           
  1455                           	global	_main
  1456                           
  1457 ;; *************** function _main *****************
  1458 ;; Defined at:
  1459 ;;		line 76 in file "MainSPIRaspMaster.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : B00/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1473 ;;      Params:         0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0
  1475 ;;      Temps:          0       2       0       0       0
  1476 ;;      Totals:         0       2       0       0       0
  1477 ;;Total ram usage:        2 bytes
  1478 ;; Hardware stack levels required when called:    3
  1479 ;; This function calls:
  1480 ;;		_ConvNum
  1481 ;;		_Lcd_Init_8bits
  1482 ;;		_Lcd_Set_Cursor_8bits
  1483 ;;		_Lcd_Write_Char
  1484 ;;		_Lcd_Write_String
  1485 ;;		_init
  1486 ;;		_initOsc
  1487 ;;		_num_to_string
  1488 ;;		_spiRead
  1489 ;;		_spiWrite
  1490 ;; This function is called by:
  1491 ;;		Startup code after reset
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1495                           	file	"MainSPIRaspMaster.c"
  1496                           	line	76
  1497                           global __pmaintext
  1498                           __pmaintext:	;psect for function _main
  1499  066F                     psect	maintext
  1500                           	file	"MainSPIRaspMaster.c"
  1501                           	line	76
  1502                           	global	__size_of_main
  1503                           	__size_of_main	equ	__end_of_main-_main
  1504  0183                     	
  1505                           _main:	
  1506  066F                     ;incstack = 0
  1507                           	opt	stack 5
  1508                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1509                           	line	77
  1510                           	
  1511                           l1438:	
  1512  066F                     ;MainSPIRaspMaster.c: 77:     init();
  1513                           	fcall	_init
  1514  066F  120A  118A  23E4  120A  118A  	line	78
  1515                           	
  1516                           l1440:	
  1517  0674                     ;MainSPIRaspMaster.c: 78:     initOsc(7);
  1518                           	movlw	low(07h)
  1519  0674  3007               	fcall	_initOsc
  1520  0675  120A  118A  253E  120A  118A  	line	79
  1521                           	
  1522                           l1442:	
  1523  067A                     ;MainSPIRaspMaster.c: 79:     Lcd_Init_8bits();
  1524                           	fcall	_Lcd_Init_8bits
  1525  067A  120A  118A  2454  120A  118A  	line	90
  1526                           	
  1527                           l1444:	
  1528  067F                     ;MainSPIRaspMaster.c: 90:     Lcd_Set_Cursor_8bits(1,1);
  1529                           	clrf	(Lcd_Set_Cursor_8bits@x)
  1530  067F  01F2               	incf	(Lcd_Set_Cursor_8bits@x),f
  1531  0680  0AF2               	movlw	low(01h)
  1532  0681  3001               	fcall	_Lcd_Set_Cursor_8bits
  1533  0682  120A  118A  23A7  120A  118A  	line	91
  1534                           	
  1535                           l1446:	
  1536  0687                     ;MainSPIRaspMaster.c: 91:     Lcd_Write_String(" S1:   S2:  S3: ",8);
  1537                           	movlw	08h
  1538  0687  3008               	movwf	(Lcd_Write_String@modo)
  1539  0688  00F7               	movlw	0
  1540  0689  3000               	movwf	((Lcd_Write_String@modo))+1
  1541  068A  00F8               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1542  068B  3001               	fcall	_Lcd_Write_String
  1543  068C  120A  118A  2429  120A  118A  	line	93
  1544                           ;MainSPIRaspMaster.c: 93:     Lcd_Set_Cursor_8bits(2,3);
  1545                           	movlw	low(03h)
  1546  0691  3003               	bcf	status, 5	;RP0=0, select bank0
  1547  0692  1283               	bcf	status, 6	;RP1=0, select bank0
  1548  0693  1303               	movwf	(??_main+0)+0
  1549  0694  00B6               	movf	(??_main+0)+0,w
  1550  0695  0836               	movwf	(Lcd_Set_Cursor_8bits@x)
  1551  0696  00F2               	movlw	low(02h)
  1552  0697  3002               	fcall	_Lcd_Set_Cursor_8bits
  1553  0698  120A  118A  23A7  120A  118A  	line	94
  1554                           	
  1555                           l1448:	
  1556  069D                     ;MainSPIRaspMaster.c: 94:     Lcd_Write_String("S",8);
  1557                           	movlw	08h
  1558  069D  3008               	movwf	(Lcd_Write_String@modo)
  1559  069E  00F7               	movlw	0
  1560  069F  3000               	movwf	((Lcd_Write_String@modo))+1
  1561  06A0  00F8               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1562  06A1  3024               	fcall	_Lcd_Write_String
  1563  06A2  120A  118A  2429  120A  118A  	line	95
  1564                           	
  1565                           l1450:	
  1566  06A7                     ;MainSPIRaspMaster.c: 95:     Lcd_Set_Cursor_8bits(2,7);
  1567                           	movlw	low(07h)
  1568  06A7  3007               	bcf	status, 5	;RP0=0, select bank0
  1569  06A8  1283               	bcf	status, 6	;RP1=0, select bank0
  1570  06A9  1303               	movwf	(??_main+0)+0
  1571  06AA  00B6               	movf	(??_main+0)+0,w
  1572  06AB  0836               	movwf	(Lcd_Set_Cursor_8bits@x)
  1573  06AC  00F2               	movlw	low(02h)
  1574  06AD  3002               	fcall	_Lcd_Set_Cursor_8bits
  1575  06AE  120A  118A  23A7  120A  118A  	line	96
  1576                           ;MainSPIRaspMaster.c: 96:     Lcd_Write_String(".",8);
  1577                           	movlw	08h
  1578  06B3  3008               	movwf	(Lcd_Write_String@modo)
  1579  06B4  00F7               	movlw	0
  1580  06B5  3000               	movwf	((Lcd_Write_String@modo))+1
  1581  06B6  00F8               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  1582  06B7  301A               	fcall	_Lcd_Write_String
  1583  06B8  120A  118A  2429  120A  118A  	line	98
  1584                           	
  1585                           l1452:	
  1586  06BD                     ;MainSPIRaspMaster.c: 98:     Lcd_Set_Cursor_8bits(2,9);
  1587                           	movlw	low(09h)
  1588  06BD  3009               	bcf	status, 5	;RP0=0, select bank0
  1589  06BE  1283               	bcf	status, 6	;RP1=0, select bank0
  1590  06BF  1303               	movwf	(??_main+0)+0
  1591  06C0  00B6               	movf	(??_main+0)+0,w
  1592  06C1  0836               	movwf	(Lcd_Set_Cursor_8bits@x)
  1593  06C2  00F2               	movlw	low(02h)
  1594  06C3  3002               	fcall	_Lcd_Set_Cursor_8bits
  1595  06C4  120A  118A  23A7  120A  118A  	line	99
  1596                           	
  1597                           l1454:	
  1598  06C9                     ;MainSPIRaspMaster.c: 99:     Lcd_Write_Char(223,8);
  1599                           	movlw	08h
  1600  06C9  3008               	movwf	(Lcd_Write_Char@modo)
  1601  06CA  00F1               	movlw	0
  1602  06CB  3000               	movwf	((Lcd_Write_Char@modo))+1
  1603  06CC  00F2               	movlw	low(0DFh)
  1604  06CD  30DF               	fcall	_Lcd_Write_Char
  1605  06CE  120A  118A  24EA  120A  118A  	line	100
  1606                           	
  1607                           l1456:	
  1608  06D3                     ;MainSPIRaspMaster.c: 100:     Lcd_Set_Cursor_8bits(2,10);
  1609                           	movlw	low(0Ah)
  1610  06D3  300A               	bcf	status, 5	;RP0=0, select bank0
  1611  06D4  1283               	bcf	status, 6	;RP1=0, select bank0
  1612  06D5  1303               	movwf	(??_main+0)+0
  1613  06D6  00B6               	movf	(??_main+0)+0,w
  1614  06D7  0836               	movwf	(Lcd_Set_Cursor_8bits@x)
  1615  06D8  00F2               	movlw	low(02h)
  1616  06D9  3002               	fcall	_Lcd_Set_Cursor_8bits
  1617  06DA  120A  118A  23A7  120A  118A  	line	101
  1618                           	
  1619                           l1458:	
  1620  06DF                     ;MainSPIRaspMaster.c: 101:     Lcd_Write_String("C",8);
  1621                           	movlw	08h
  1622  06DF  3008               	movwf	(Lcd_Write_String@modo)
  1623  06E0  00F7               	movlw	0
  1624  06E1  3000               	movwf	((Lcd_Write_String@modo))+1
  1625  06E2  00F8               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  1626  06E3  3022               	fcall	_Lcd_Write_String
  1627  06E4  120A  118A  2429  120A  118A  	goto	l1460
  1628  06E9  2EEA               	line	103
  1629                           ;MainSPIRaspMaster.c: 103:     while (1){
  1630                           	
  1631                           l143:	
  1632  06EA                     	line	106
  1633                           	
  1634                           l1460:	
  1635  06EA                     ;MainSPIRaspMaster.c: 106:         PORTEbits.RE2 =0;
  1636                           	bcf	status, 5	;RP0=0, select bank0
  1637  06EA  1283               	bcf	status, 6	;RP1=0, select bank0
  1638  06EB  1303               	bcf	(9),2	;volatile
  1639  06EC  1109               	line	108
  1640                           ;MainSPIRaspMaster.c: 108:         spiWrite(0x01);
  1641                           	movlw	low(01h)
  1642  06ED  3001               	fcall	_spiWrite
  1643  06EE  120A  118A  2360  120A  118A  	line	109
  1644                           ;MainSPIRaspMaster.c: 109:         valor1= spiRead();
  1645                           	fcall	_spiRead
  1646  06F3  120A  118A  2377  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1647  06F8  1283               	bcf	status, 6	;RP1=0, select bank0
  1648  06F9  1303               	movwf	(??_main+0)+0
  1649  06FA  00B6               	movf	(??_main+0)+0,w
  1650  06FB  0836               	movwf	(_valor1)
  1651  06FC  00B3               	line	110
  1652                           	
  1653                           l1462:	
  1654  06FD                     ;MainSPIRaspMaster.c: 110:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1655                           	opt asmopt_push
  1656                           opt asmopt_off
  1657                           movlw	13
  1658  06FD  300D               	bcf	status, 5	;RP0=0, select bank0
  1659  06FE  1283               	bcf	status, 6	;RP1=0, select bank0
  1660  06FF  1303               movwf	((??_main+0)+0+1),f
  1661  0700  00B7               	movlw	251
  1662  0701  30FB               movwf	((??_main+0)+0),f
  1663  0702  00B6               	u1237:
  1664  0703                     decfsz	((??_main+0)+0),f
  1665  0703  0BB6               	goto	u1237
  1666  0704  2F03               	decfsz	((??_main+0)+0+1),f
  1667  0705  0BB7               	goto	u1237
  1668  0706  2F03               opt asmopt_pop
  1669                           
  1670                           	line	112
  1671                           	
  1672                           l1464:	
  1673  0707                     ;MainSPIRaspMaster.c: 112:         spiWrite(0x02);
  1674                           	movlw	low(02h)
  1675  0707  3002               	fcall	_spiWrite
  1676  0708  120A  118A  2360  120A  118A  	line	113
  1677                           	
  1678                           l1466:	
  1679  070D                     ;MainSPIRaspMaster.c: 113:         valor2= spiRead();
  1680                           	fcall	_spiRead
  1681  070D  120A  118A  2377  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1682  0712  1283               	bcf	status, 6	;RP1=0, select bank0
  1683  0713  1303               	movwf	(??_main+0)+0
  1684  0714  00B6               	movf	(??_main+0)+0,w
  1685  0715  0836               	movwf	(_valor2)
  1686  0716  00FD               	line	114
  1687                           	
  1688                           l1468:	
  1689  0717                     ;MainSPIRaspMaster.c: 114:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1690                           	opt asmopt_push
  1691                           opt asmopt_off
  1692                           movlw	13
  1693  0717  300D               	bcf	status, 5	;RP0=0, select bank0
  1694  0718  1283               	bcf	status, 6	;RP1=0, select bank0
  1695  0719  1303               movwf	((??_main+0)+0+1),f
  1696  071A  00B7               	movlw	251
  1697  071B  30FB               movwf	((??_main+0)+0),f
  1698  071C  00B6               	u1247:
  1699  071D                     decfsz	((??_main+0)+0),f
  1700  071D  0BB6               	goto	u1247
  1701  071E  2F1D               	decfsz	((??_main+0)+0+1),f
  1702  071F  0BB7               	goto	u1247
  1703  0720  2F1D               opt asmopt_pop
  1704                           
  1705                           	line	116
  1706                           ;MainSPIRaspMaster.c: 116:         spiWrite(0x03);
  1707                           	movlw	low(03h)
  1708  0721  3003               	fcall	_spiWrite
  1709  0722  120A  118A  2360  120A  118A  	line	117
  1710                           ;MainSPIRaspMaster.c: 117:         valor3= spiRead();
  1711                           	fcall	_spiRead
  1712  0727  120A  118A  2377  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1713  072C  1283               	bcf	status, 6	;RP1=0, select bank0
  1714  072D  1303               	movwf	(??_main+0)+0
  1715  072E  00B6               	movf	(??_main+0)+0,w
  1716  072F  0836               	movwf	(_valor3)
  1717  0730  00B2               	line	118
  1718                           	
  1719                           l1470:	
  1720  0731                     ;MainSPIRaspMaster.c: 118:         _delay((unsigned long)((5)*(8000000/4000.0)));
  1721                           	opt asmopt_push
  1722                           opt asmopt_off
  1723                           movlw	13
  1724  0731  300D               	bcf	status, 5	;RP0=0, select bank0
  1725  0732  1283               	bcf	status, 6	;RP1=0, select bank0
  1726  0733  1303               movwf	((??_main+0)+0+1),f
  1727  0734  00B7               	movlw	251
  1728  0735  30FB               movwf	((??_main+0)+0),f
  1729  0736  00B6               	u1257:
  1730  0737                     decfsz	((??_main+0)+0),f
  1731  0737  0BB6               	goto	u1257
  1732  0738  2F37               	decfsz	((??_main+0)+0+1),f
  1733  0739  0BB7               	goto	u1257
  1734  073A  2F37               opt asmopt_pop
  1735                           
  1736                           	line	128
  1737                           	
  1738                           l1472:	
  1739  073B                     ;MainSPIRaspMaster.c: 128:         PORTEbits.RE2 = 1;
  1740                           	bcf	status, 5	;RP0=0, select bank0
  1741  073B  1283               	bcf	status, 6	;RP1=0, select bank0
  1742  073C  1303               	bsf	(9),2	;volatile
  1743  073D  1509               	line	131
  1744                           	
  1745                           l1474:	
  1746  073E                     ;MainSPIRaspMaster.c: 131:         PORTA = valor2;
  1747                           	movf	(_valor2),w
  1748  073E  087D               	movwf	(5)	;volatile
  1749  073F  0085               	line	132
  1750                           	
  1751                           l1476:	
  1752  0740                     ;MainSPIRaspMaster.c: 132:         PORTD = valor3;
  1753                           	movf	(_valor3),w
  1754  0740  0832               	movwf	(8)	;volatile
  1755  0741  0088               	line	134
  1756                           	
  1757                           l1478:	
  1758  0742                     ;MainSPIRaspMaster.c: 134:         num_to_string(valor2);
  1759                           	movf	(_valor2),w
  1760  0742  087D               	movwf	(??_main+0)+0
  1761  0743  00B6               	clrf	(??_main+0)+0+1
  1762  0744  01B7               	movf	0+(??_main+0)+0,w
  1763  0745  0836               	movwf	(num_to_string@numero)
  1764  0746  00F9               	movf	1+(??_main+0)+0,w
  1765  0747  0837               	movwf	(num_to_string@numero+1)
  1766  0748  00FA               	fcall	_num_to_string
  1767  0749  120A  118A  249F  120A  118A  	line	135
  1768                           	
  1769                           l1480:	
  1770  074E                     ;MainSPIRaspMaster.c: 135:         ConvNum(data1,2);
  1771                           	bcf	status, 5	;RP0=0, select bank0
  1772  074E  1283               	bcf	status, 6	;RP1=0, select bank0
  1773  074F  1303               	movf	(_data1+1),w
  1774  0750  0829               	movwf	(ConvNum@digito+1)
  1775  0751  00F8               	movf	(_data1),w
  1776  0752  0828               	movwf	(ConvNum@digito)
  1777  0753  00F7               	movlw	low(02h)
  1778  0754  3002               	movwf	(??_main+0)+0
  1779  0755  00B6               	movf	(??_main+0)+0,w
  1780  0756  0836               	movwf	(ConvNum@punt)
  1781  0757  00F9               	fcall	_ConvNum
  1782  0758  120A  118A  23C5  120A  118A  	line	136
  1783                           	
  1784                           l1482:	
  1785  075D                     ;MainSPIRaspMaster.c: 136:         ConvNum(data2,1);
  1786                           	bcf	status, 5	;RP0=0, select bank0
  1787  075D  1283               	bcf	status, 6	;RP1=0, select bank0
  1788  075E  1303               	movf	(_data2+1),w
  1789  075F  0827               	movwf	(ConvNum@digito+1)
  1790  0760  00F8               	movf	(_data2),w
  1791  0761  0826               	movwf	(ConvNum@digito)
  1792  0762  00F7               	clrf	(ConvNum@punt)
  1793  0763  01F9               	incf	(ConvNum@punt),f
  1794  0764  0AF9               	fcall	_ConvNum
  1795  0765  120A  118A  23C5  120A  118A  	line	145
  1796                           	
  1797                           l1484:	
  1798  076A                     ;MainSPIRaspMaster.c: 145:         Lcd_Set_Cursor_8bits(2,5);
  1799                           	movlw	low(05h)
  1800  076A  3005               	bcf	status, 5	;RP0=0, select bank0
  1801  076B  1283               	bcf	status, 6	;RP1=0, select bank0
  1802  076C  1303               	movwf	(??_main+0)+0
  1803  076D  00B6               	movf	(??_main+0)+0,w
  1804  076E  0836               	movwf	(Lcd_Set_Cursor_8bits@x)
  1805  076F  00F2               	movlw	low(02h)
  1806  0770  3002               	fcall	_Lcd_Set_Cursor_8bits
  1807  0771  120A  118A  23A7  120A  118A  	line	146
  1808                           	
  1809                           l1486:	
  1810  0776                     ;MainSPIRaspMaster.c: 146:         Lcd_Write_String("2",8);
  1811                           	movlw	08h
  1812  0776  3008               	movwf	(Lcd_Write_String@modo)
  1813  0777  00F7               	movlw	0
  1814  0778  3000               	movwf	((Lcd_Write_String@modo))+1
  1815  0779  00F8               	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  1816  077A  301C               	fcall	_Lcd_Write_String
  1817  077B  120A  118A  2429  120A  118A  	line	148
  1818                           	
  1819                           l1488:	
  1820  0780                     ;MainSPIRaspMaster.c: 148:          Lcd_Set_Cursor_8bits(2,6);
  1821                           	movlw	low(06h)
  1822  0780  3006               	bcf	status, 5	;RP0=0, select bank0
  1823  0781  1283               	bcf	status, 6	;RP1=0, select bank0
  1824  0782  1303               	movwf	(??_main+0)+0
  1825  0783  00B6               	movf	(??_main+0)+0,w
  1826  0784  0836               	movwf	(Lcd_Set_Cursor_8bits@x)
  1827  0785  00F2               	movlw	low(02h)
  1828  0786  3002               	fcall	_Lcd_Set_Cursor_8bits
  1829  0787  120A  118A  23A7  120A  118A  	line	149
  1830                           	
  1831                           l1490:	
  1832  078C                     ;MainSPIRaspMaster.c: 149:         Lcd_Write_String("6",8);
  1833                           	movlw	08h
  1834  078C  3008               	movwf	(Lcd_Write_String@modo)
  1835  078D  00F7               	movlw	0
  1836  078E  3000               	movwf	((Lcd_Write_String@modo))+1
  1837  078F  00F8               	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  1838  0790  3020               	fcall	_Lcd_Write_String
  1839  0791  120A  118A  2429  120A  118A  	line	151
  1840                           	
  1841                           l1492:	
  1842  0796                     ;MainSPIRaspMaster.c: 151:          Lcd_Set_Cursor_8bits(2,8);
  1843                           	movlw	low(08h)
  1844  0796  3008               	bcf	status, 5	;RP0=0, select bank0
  1845  0797  1283               	bcf	status, 6	;RP1=0, select bank0
  1846  0798  1303               	movwf	(??_main+0)+0
  1847  0799  00B6               	movf	(??_main+0)+0,w
  1848  079A  0836               	movwf	(Lcd_Set_Cursor_8bits@x)
  1849  079B  00F2               	movlw	low(02h)
  1850  079C  3002               	fcall	_Lcd_Set_Cursor_8bits
  1851  079D  120A  118A  23A7  120A  118A  	line	152
  1852                           	
  1853                           l1494:	
  1854  07A2                     ;MainSPIRaspMaster.c: 152:         Lcd_Write_String("4",8);
  1855                           	movlw	08h
  1856  07A2  3008               	movwf	(Lcd_Write_String@modo)
  1857  07A3  00F7               	movlw	0
  1858  07A4  3000               	movwf	((Lcd_Write_String@modo))+1
  1859  07A5  00F8               	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  1860  07A6  301E               	fcall	_Lcd_Write_String
  1861  07A7  120A  118A  2429  120A  118A  	line	155
  1862                           	
  1863                           l1496:	
  1864  07AC                     ;MainSPIRaspMaster.c: 155:         if (valor1 == 1){
  1865                           	bcf	status, 5	;RP0=0, select bank0
  1866  07AC  1283               	bcf	status, 6	;RP1=0, select bank0
  1867  07AD  1303               		decf	((_valor1)),w
  1868  07AE  0333               	btfss	status,2
  1869  07AF  1D03               	goto	u681
  1870  07B0  2FB2               	goto	u680
  1871  07B1  2FB3               u681:
  1872  07B2                     	goto	l1504
  1873  07B2  2FCB               u680:
  1874  07B3                     	line	156
  1875                           	
  1876                           l1498:	
  1877  07B3                     ;MainSPIRaspMaster.c: 156:             Lcd_Set_Cursor_8bits(2,14);
  1878                           	movlw	low(0Eh)
  1879  07B3  300E               	movwf	(??_main+0)+0
  1880  07B4  00B6               	movf	(??_main+0)+0,w
  1881  07B5  0836               	movwf	(Lcd_Set_Cursor_8bits@x)
  1882  07B6  00F2               	movlw	low(02h)
  1883  07B7  3002               	fcall	_Lcd_Set_Cursor_8bits
  1884  07B8  120A  118A  23A7  120A  118A  	line	157
  1885                           	
  1886                           l1500:	
  1887  07BD                     ;MainSPIRaspMaster.c: 157:             Lcd_Write_String("ON ",8);
  1888                           	movlw	08h
  1889  07BD  3008               	movwf	(Lcd_Write_String@modo)
  1890  07BE  00F7               	movlw	0
  1891  07BF  3000               	movwf	((Lcd_Write_String@modo))+1
  1892  07C0  00F8               	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  1893  07C1  3012               	fcall	_Lcd_Write_String
  1894  07C2  120A  118A  2429  120A  118A  	line	158
  1895                           	
  1896                           l1502:	
  1897  07C7                     ;MainSPIRaspMaster.c: 158:             PORTCbits.RC0 =1;
  1898                           	bcf	status, 5	;RP0=0, select bank0
  1899  07C7  1283               	bcf	status, 6	;RP1=0, select bank0
  1900  07C8  1303               	bsf	(7),0	;volatile
  1901  07C9  1407               	line	159
  1902                           ;MainSPIRaspMaster.c: 159:         }else {
  1903                           	goto	l1510
  1904  07CA  2FE3               	
  1905                           l144:	
  1906  07CB                     	line	160
  1907                           	
  1908                           l1504:	
  1909  07CB                     ;MainSPIRaspMaster.c: 160:             Lcd_Set_Cursor_8bits(2,14);
  1910                           	movlw	low(0Eh)
  1911  07CB  300E               	movwf	(??_main+0)+0
  1912  07CC  00B6               	movf	(??_main+0)+0,w
  1913  07CD  0836               	movwf	(Lcd_Set_Cursor_8bits@x)
  1914  07CE  00F2               	movlw	low(02h)
  1915  07CF  3002               	fcall	_Lcd_Set_Cursor_8bits
  1916  07D0  120A  118A  23A7  120A  118A  	line	161
  1917                           	
  1918                           l1506:	
  1919  07D5                     ;MainSPIRaspMaster.c: 161:             Lcd_Write_String("OFF",8);
  1920                           	movlw	08h
  1921  07D5  3008               	movwf	(Lcd_Write_String@modo)
  1922  07D6  00F7               	movlw	0
  1923  07D7  3000               	movwf	((Lcd_Write_String@modo))+1
  1924  07D8  00F8               	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  1925  07D9  3016               	fcall	_Lcd_Write_String
  1926  07DA  120A  118A  2429  120A  118A  	line	162
  1927                           	
  1928                           l1508:	
  1929  07DF                     ;MainSPIRaspMaster.c: 162:             PORTCbits.RC0 =0;
  1930                           	bcf	status, 5	;RP0=0, select bank0
  1931  07DF  1283               	bcf	status, 6	;RP1=0, select bank0
  1932  07E0  1303               	bcf	(7),0	;volatile
  1933  07E1  1007               	goto	l1510
  1934  07E2  2FE3               	line	163
  1935                           ;MainSPIRaspMaster.c: 163:         }
  1936                           	
  1937                           l145:	
  1938  07E3                     	line	168
  1939                           	
  1940                           l1510:	
  1941  07E3                     ;MainSPIRaspMaster.c: 168:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1942                           	opt asmopt_push
  1943                           opt asmopt_off
  1944                           movlw	130
  1945  07E3  3082               	bcf	status, 5	;RP0=0, select bank0
  1946  07E4  1283               	bcf	status, 6	;RP1=0, select bank0
  1947  07E5  1303               movwf	((??_main+0)+0+1),f
  1948  07E6  00B7               	movlw	221
  1949  07E7  30DD               movwf	((??_main+0)+0),f
  1950  07E8  00B6               	u1267:
  1951  07E9                     decfsz	((??_main+0)+0),f
  1952  07E9  0BB6               	goto	u1267
  1953  07EA  2FE9               	decfsz	((??_main+0)+0+1),f
  1954  07EB  0BB7               	goto	u1267
  1955  07EC  2FE9               opt asmopt_pop
  1956                           
  1957                           	goto	l1460
  1958  07ED  2EEA               	line	171
  1959                           ;MainSPIRaspMaster.c: 171:     }
  1960                           	
  1961                           l146:	
  1962  07EE                     	goto	l1460
  1963  07EE  2EEA               	
  1964                           l147:	
  1965  07EF                     	line	175
  1966                           ;MainSPIRaspMaster.c: 174:     return;
  1967                           	
  1968                           l148:	
  1969  07EF                     	global	start
  1970                           	ljmp	start
  1971  07EF  120A  118A  2800   	opt stack 0
  1972                           GLOBAL	__end_of_main
  1973                           	__end_of_main:
  1974  07F2                     	signat	_main,89
  1975                           	global	_spiWrite
  1976                           
  1977 ;; *************** function _spiWrite *****************
  1978 ;; Defined at:
  1979 ;;		line 34 in file "SPI.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  dat             1    wreg     unsigned char 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  dat             1    0[COMMON] unsigned char 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1993 ;;      Params:         0       0       0       0       0
  1994 ;;      Locals:         1       0       0       0       0
  1995 ;;      Temps:          0       0       0       0       0
  1996 ;;      Totals:         1       0       0       0       0
  1997 ;;Total ram usage:        1 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2006                           	file	"SPI.c"
  2007                           	line	34
  2008                           global __ptext1
  2009                           __ptext1:	;psect for function _spiWrite
  2010  0360                     psect	text1
  2011                           	file	"SPI.c"
  2012                           	line	34
  2013                           	global	__size_of_spiWrite
  2014                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  2015  0006                     	
  2016                           _spiWrite:	
  2017  0360                     ;incstack = 0
  2018                           	opt	stack 7
  2019                           ; Regs used in _spiWrite: [wreg]
  2020                           ;spiWrite@dat stored from wreg
  2021                           	movwf	(spiWrite@dat)
  2022  0360  00F0               	line	36
  2023                           	
  2024                           l1360:	
  2025  0361                     ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  2026                           	movf	(spiWrite@dat),w
  2027  0361  0870               	bcf	status, 5	;RP0=0, select bank0
  2028  0362  1283               	bcf	status, 6	;RP1=0, select bank0
  2029  0363  1303               	movwf	(19)	;volatile
  2030  0364  0093               	line	37
  2031                           	
  2032                           l42:	
  2033  0365                     	return
  2034  0365  0008               	opt stack 0
  2035                           GLOBAL	__end_of_spiWrite
  2036                           	__end_of_spiWrite:
  2037  0366                     	signat	_spiWrite,4217
  2038                           	global	_spiRead
  2039                           
  2040 ;; *************** function _spiRead *****************
  2041 ;; Defined at:
  2042 ;;		line 47 in file "SPI.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      unsigned char 
  2049 ;; Registers used:
  2050 ;;		wreg, status,2, status,0, pclath, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2056 ;;      Params:         0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0
  2058 ;;      Temps:          0       0       0       0       0
  2059 ;;      Totals:         0       0       0       0       0
  2060 ;;Total ram usage:        0 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; Hardware stack levels required when called:    1
  2063 ;; This function calls:
  2064 ;;		_spiReceiveWait
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2070                           	line	47
  2071                           global __ptext2
  2072                           __ptext2:	;psect for function _spiRead
  2073  0377                     psect	text2
  2074                           	file	"SPI.c"
  2075                           	line	47
  2076                           	global	__size_of_spiRead
  2077                           	__size_of_spiRead	equ	__end_of_spiRead-_spiRead
  2078  000A                     	
  2079                           _spiRead:	
  2080  0377                     ;incstack = 0
  2081                           	opt	stack 6
  2082                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2083                           	line	49
  2084                           	
  2085                           l1362:	
  2086  0377                     ;SPI.c: 49:     spiReceiveWait();
  2087                           	fcall	_spiReceiveWait
  2088  0377  120A  118A  236E  120A  118A  	line	50
  2089                           	
  2090                           l1364:	
  2091  037C                     ;SPI.c: 50:     return(SSPBUF);
  2092                           	bcf	status, 5	;RP0=0, select bank0
  2093  037C  1283               	bcf	status, 6	;RP1=0, select bank0
  2094  037D  1303               	movf	(19),w	;volatile
  2095  037E  0813               	goto	l50
  2096  037F  2B80               	
  2097                           l1366:	
  2098  0380                     	line	51
  2099                           	
  2100                           l50:	
  2101  0380                     	return
  2102  0380  0008               	opt stack 0
  2103                           GLOBAL	__end_of_spiRead
  2104                           	__end_of_spiRead:
  2105  0381                     	signat	_spiRead,89
  2106                           	global	_spiReceiveWait
  2107                           
  2108 ;; *************** function _spiReceiveWait *****************
  2109 ;; Defined at:
  2110 ;;		line 29 in file "SPI.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		None
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2124 ;;      Params:         0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0
  2127 ;;      Totals:         0       0       0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_spiRead
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2137                           	line	29
  2138                           global __ptext3
  2139                           __ptext3:	;psect for function _spiReceiveWait
  2140  036E                     psect	text3
  2141                           	file	"SPI.c"
  2142                           	line	29
  2143                           	global	__size_of_spiReceiveWait
  2144                           	__size_of_spiReceiveWait	equ	__end_of_spiReceiveWait-_spiReceiveWait
  2145  0009                     	
  2146                           _spiReceiveWait:	
  2147  036E                     ;incstack = 0
  2148                           	opt	stack 6
  2149                           ; Regs used in _spiReceiveWait: []
  2150                           	line	31
  2151                           	
  2152                           l1226:	
  2153  036E                     ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  2154                           	goto	l36
  2155  036E  2B6F               	
  2156                           l37:	
  2157  036F                     	
  2158                           l36:	
  2159  036F                     	bsf	status, 5	;RP0=1, select bank1
  2160  036F  1683               	bcf	status, 6	;RP1=0, select bank1
  2161  0370  1303               	btfss	(148)^080h,0	;volatile
  2162  0371  1C14               	goto	u421
  2163  0372  2B74               	goto	u420
  2164  0373  2B75               u421:
  2165  0374                     	goto	l36
  2166  0374  2B6F               u420:
  2167  0375                     	goto	l39
  2168  0375  2B76               	
  2169                           l38:	
  2170  0376                     	line	32
  2171                           	
  2172                           l39:	
  2173  0376                     	return
  2174  0376  0008               	opt stack 0
  2175                           GLOBAL	__end_of_spiReceiveWait
  2176                           	__end_of_spiReceiveWait:
  2177  0377                     	signat	_spiReceiveWait,89
  2178                           	global	_num_to_string
  2179                           
  2180 ;; *************** function _num_to_string *****************
  2181 ;; Defined at:
  2182 ;;		line 221 in file "MainSPIRaspMaster.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  numero          2    9[COMMON] int 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      void 
  2189 ;; Registers used:
  2190 ;;		wreg, status,2, status,0, pclath, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2196 ;;      Params:         2       0       0       0       0
  2197 ;;      Locals:         0       0       0       0       0
  2198 ;;      Temps:          0       0       0       0       0
  2199 ;;      Totals:         2       0       0       0       0
  2200 ;;Total ram usage:        2 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    1
  2203 ;; This function calls:
  2204 ;;		___awdiv
  2205 ;;		___awmod
  2206 ;; This function is called by:
  2207 ;;		_main
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2211                           	file	"MainSPIRaspMaster.c"
  2212                           	line	221
  2213                           global __ptext4
  2214                           __ptext4:	;psect for function _num_to_string
  2215  049F                     psect	text4
  2216                           	file	"MainSPIRaspMaster.c"
  2217                           	line	221
  2218                           	global	__size_of_num_to_string
  2219                           	__size_of_num_to_string	equ	__end_of_num_to_string-_num_to_string
  2220  004B                     	
  2221                           _num_to_string:	
  2222  049F                     ;incstack = 0
  2223                           	opt	stack 6
  2224                           ; Regs used in _num_to_string: [wreg+status,2+status,0+pclath+cstack]
  2225                           	line	222
  2226                           	
  2227                           l1418:	
  2228  049F                     ;MainSPIRaspMaster.c: 222:     data1 = numero%10;
  2229                           	movlw	0Ah
  2230  049F  300A               	movwf	(___awmod@divisor)
  2231  04A0  00F0               	movlw	0
  2232  04A1  3000               	movwf	((___awmod@divisor))+1
  2233  04A2  00F1               	movf	(num_to_string@numero+1),w
  2234  04A3  087A               	movwf	(___awmod@dividend+1)
  2235  04A4  00F3               	movf	(num_to_string@numero),w
  2236  04A5  0879               	movwf	(___awmod@dividend)
  2237  04A6  00F2               	fcall	___awmod
  2238  04A7  120A  118A  259B  120A  118A  	movf	(1+(?___awmod)),w
  2239  04AC  0871               	bcf	status, 5	;RP0=0, select bank0
  2240  04AD  1283               	bcf	status, 6	;RP1=0, select bank0
  2241  04AE  1303               	movwf	(_data1+1)
  2242  04AF  00A9               	movf	(0+(?___awmod)),w
  2243  04B0  0870               	movwf	(_data1)
  2244  04B1  00A8               	line	223
  2245                           ;MainSPIRaspMaster.c: 223:     numero = numero/10;
  2246                           	movlw	0Ah
  2247  04B2  300A               	movwf	(___awdiv@divisor)
  2248  04B3  00F0               	movlw	0
  2249  04B4  3000               	movwf	((___awdiv@divisor))+1
  2250  04B5  00F1               	movf	(num_to_string@numero+1),w
  2251  04B6  087A               	movwf	(___awdiv@dividend+1)
  2252  04B7  00F3               	movf	(num_to_string@numero),w
  2253  04B8  0879               	movwf	(___awdiv@dividend)
  2254  04B9  00F2               	fcall	___awdiv
  2255  04BA  120A  118A  25FE  120A  118A  	movf	(1+(?___awdiv)),w
  2256  04BF  0871               	movwf	(num_to_string@numero+1)
  2257  04C0  00FA               	movf	(0+(?___awdiv)),w
  2258  04C1  0870               	movwf	(num_to_string@numero)
  2259  04C2  00F9               	line	224
  2260                           ;MainSPIRaspMaster.c: 224:     data2 = numero%10;
  2261                           	movlw	0Ah
  2262  04C3  300A               	movwf	(___awmod@divisor)
  2263  04C4  00F0               	movlw	0
  2264  04C5  3000               	movwf	((___awmod@divisor))+1
  2265  04C6  00F1               	movf	(num_to_string@numero+1),w
  2266  04C7  087A               	movwf	(___awmod@dividend+1)
  2267  04C8  00F3               	movf	(num_to_string@numero),w
  2268  04C9  0879               	movwf	(___awmod@dividend)
  2269  04CA  00F2               	fcall	___awmod
  2270  04CB  120A  118A  259B  120A  118A  	movf	(1+(?___awmod)),w
  2271  04D0  0871               	bcf	status, 5	;RP0=0, select bank0
  2272  04D1  1283               	bcf	status, 6	;RP1=0, select bank0
  2273  04D2  1303               	movwf	(_data2+1)
  2274  04D3  00A7               	movf	(0+(?___awmod)),w
  2275  04D4  0870               	movwf	(_data2)
  2276  04D5  00A6               	line	225
  2277                           ;MainSPIRaspMaster.c: 225:     data3 = numero/10;
  2278                           	movlw	0Ah
  2279  04D6  300A               	movwf	(___awdiv@divisor)
  2280  04D7  00F0               	movlw	0
  2281  04D8  3000               	movwf	((___awdiv@divisor))+1
  2282  04D9  00F1               	movf	(num_to_string@numero+1),w
  2283  04DA  087A               	movwf	(___awdiv@dividend+1)
  2284  04DB  00F3               	movf	(num_to_string@numero),w
  2285  04DC  0879               	movwf	(___awdiv@dividend)
  2286  04DD  00F2               	fcall	___awdiv
  2287  04DE  120A  118A  25FE  120A  118A  	movf	(1+(?___awdiv)),w
  2288  04E3  0871               	bcf	status, 5	;RP0=0, select bank0
  2289  04E4  1283               	bcf	status, 6	;RP1=0, select bank0
  2290  04E5  1303               	movwf	(_data3+1)
  2291  04E6  00A5               	movf	(0+(?___awdiv)),w
  2292  04E7  0870               	movwf	(_data3)
  2293  04E8  00A4               	line	226
  2294                           	
  2295                           l157:	
  2296  04E9                     	return
  2297  04E9  0008               	opt stack 0
  2298                           GLOBAL	__end_of_num_to_string
  2299                           	__end_of_num_to_string:
  2300  04EA                     	signat	_num_to_string,4217
  2301                           	global	___awmod
  2302                           
  2303 ;; *************** function ___awmod *****************
  2304 ;; Defined at:
  2305 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  divisor         2    0[COMMON] int 
  2308 ;;  dividend        2    2[COMMON] int 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;  sign            1    6[COMMON] unsigned char 
  2311 ;;  counter         1    5[COMMON] unsigned char 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  2    0[COMMON] int 
  2314 ;; Registers used:
  2315 ;;		wreg, status,2, status,0
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2321 ;;      Params:         4       0       0       0       0
  2322 ;;      Locals:         2       0       0       0       0
  2323 ;;      Temps:          1       0       0       0       0
  2324 ;;      Totals:         7       0       0       0       0
  2325 ;;Total ram usage:        7 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_num_to_string
  2331 ;;		_float_to_string
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  2335                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  2336                           	line	5
  2337                           global __ptext5
  2338                           __ptext5:	;psect for function ___awmod
  2339  059B                     psect	text5
  2340                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  2341                           	line	5
  2342                           	global	__size_of___awmod
  2343                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  2344  0063                     	
  2345                           ___awmod:	
  2346  059B                     ;incstack = 0
  2347                           	opt	stack 6
  2348                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2349                           	line	12
  2350                           	
  2351                           l1312:	
  2352  059B                     	clrf	(___awmod@sign)
  2353  059B  01F6               	line	13
  2354                           	
  2355                           l1314:	
  2356  059C                     	btfss	(___awmod@dividend+1),7
  2357  059C  1FF3               	goto	u581
  2358  059D  2D9F               	goto	u580
  2359  059E  2DA0               u581:
  2360  059F                     	goto	l1320
  2361  059F  2DA8               u580:
  2362  05A0                     	line	14
  2363                           	
  2364                           l1316:	
  2365  05A0                     	comf	(___awmod@dividend),f
  2366  05A0  09F2               	comf	(___awmod@dividend+1),f
  2367  05A1  09F3               	incf	(___awmod@dividend),f
  2368  05A2  0AF2               	skipnz
  2369  05A3  1903               	incf	(___awmod@dividend+1),f
  2370  05A4  0AF3               	line	15
  2371                           	
  2372                           l1318:	
  2373  05A5                     	clrf	(___awmod@sign)
  2374  05A5  01F6               	incf	(___awmod@sign),f
  2375  05A6  0AF6               	goto	l1320
  2376  05A7  2DA8               	line	16
  2377                           	
  2378                           l475:	
  2379  05A8                     	line	17
  2380                           	
  2381                           l1320:	
  2382  05A8                     	btfss	(___awmod@divisor+1),7
  2383  05A8  1FF1               	goto	u591
  2384  05A9  2DAB               	goto	u590
  2385  05AA  2DAC               u591:
  2386  05AB                     	goto	l1324
  2387  05AB  2DB2               u590:
  2388  05AC                     	line	18
  2389                           	
  2390                           l1322:	
  2391  05AC                     	comf	(___awmod@divisor),f
  2392  05AC  09F0               	comf	(___awmod@divisor+1),f
  2393  05AD  09F1               	incf	(___awmod@divisor),f
  2394  05AE  0AF0               	skipnz
  2395  05AF  1903               	incf	(___awmod@divisor+1),f
  2396  05B0  0AF1               	goto	l1324
  2397  05B1  2DB2               	
  2398                           l476:	
  2399  05B2                     	line	19
  2400                           	
  2401                           l1324:	
  2402  05B2                     	movf	((___awmod@divisor)),w
  2403  05B2  0870               iorwf	((___awmod@divisor+1)),w
  2404  05B3  0471               	btfsc	status,2
  2405  05B4  1903               	goto	u601
  2406  05B5  2DB7               	goto	u600
  2407  05B6  2DB8               u601:
  2408  05B7                     	goto	l1342
  2409  05B7  2DED               u600:
  2410  05B8                     	line	20
  2411                           	
  2412                           l1326:	
  2413  05B8                     	clrf	(___awmod@counter)
  2414  05B8  01F5               	incf	(___awmod@counter),f
  2415  05B9  0AF5               	line	21
  2416                           	goto	l1332
  2417  05BA  2DC7               	
  2418                           l479:	
  2419  05BB                     	line	22
  2420                           	
  2421                           l1328:	
  2422  05BB                     	movlw	01h
  2423  05BB  3001               	
  2424                           u615:
  2425  05BC                     	clrc
  2426  05BC  1003               	rlf	(___awmod@divisor),f
  2427  05BD  0DF0               	rlf	(___awmod@divisor+1),f
  2428  05BE  0DF1               	addlw	-1
  2429  05BF  3EFF               	skipz
  2430  05C0  1D03               	goto	u615
  2431  05C1  2DBC               	line	23
  2432                           	
  2433                           l1330:	
  2434  05C2                     	movlw	low(01h)
  2435  05C2  3001               	movwf	(??___awmod+0)+0
  2436  05C3  00F4               	movf	(??___awmod+0)+0,w
  2437  05C4  0874               	addwf	(___awmod@counter),f
  2438  05C5  07F5               	goto	l1332
  2439  05C6  2DC7               	line	24
  2440                           	
  2441                           l478:	
  2442  05C7                     	line	21
  2443                           	
  2444                           l1332:	
  2445  05C7                     	btfss	(___awmod@divisor+1),(15)&7
  2446  05C7  1FF1               	goto	u621
  2447  05C8  2DCA               	goto	u620
  2448  05C9  2DCB               u621:
  2449  05CA                     	goto	l1328
  2450  05CA  2DBB               u620:
  2451  05CB                     	goto	l1334
  2452  05CB  2DCD               	
  2453                           l480:	
  2454  05CC                     	goto	l1334
  2455  05CC  2DCD               	line	25
  2456                           	
  2457                           l481:	
  2458  05CD                     	line	26
  2459                           	
  2460                           l1334:	
  2461  05CD                     	movf	(___awmod@divisor+1),w
  2462  05CD  0871               	subwf	(___awmod@dividend+1),w
  2463  05CE  0273               	skipz
  2464  05CF  1D03               	goto	u635
  2465  05D0  2DD3               	movf	(___awmod@divisor),w
  2466  05D1  0870               	subwf	(___awmod@dividend),w
  2467  05D2  0272               u635:
  2468  05D3                     	skipc
  2469  05D3  1C03               	goto	u631
  2470  05D4  2DD6               	goto	u630
  2471  05D5  2DD7               u631:
  2472  05D6                     	goto	l1338
  2473  05D6  2DDE               u630:
  2474  05D7                     	line	27
  2475                           	
  2476                           l1336:	
  2477  05D7                     	movf	(___awmod@divisor),w
  2478  05D7  0870               	subwf	(___awmod@dividend),f
  2479  05D8  02F2               	movf	(___awmod@divisor+1),w
  2480  05D9  0871               	skipc
  2481  05DA  1C03               	decf	(___awmod@dividend+1),f
  2482  05DB  03F3               	subwf	(___awmod@dividend+1),f
  2483  05DC  02F3               	goto	l1338
  2484  05DD  2DDE               	
  2485                           l482:	
  2486  05DE                     	line	28
  2487                           	
  2488                           l1338:	
  2489  05DE                     	movlw	01h
  2490  05DE  3001               	
  2491                           u645:
  2492  05DF                     	clrc
  2493  05DF  1003               	rrf	(___awmod@divisor+1),f
  2494  05E0  0CF1               	rrf	(___awmod@divisor),f
  2495  05E1  0CF0               	addlw	-1
  2496  05E2  3EFF               	skipz
  2497  05E3  1D03               	goto	u645
  2498  05E4  2DDF               	line	29
  2499                           	
  2500                           l1340:	
  2501  05E5                     	movlw	01h
  2502  05E5  3001               	subwf	(___awmod@counter),f
  2503  05E6  02F5               	btfss	status,2
  2504  05E7  1D03               	goto	u651
  2505  05E8  2DEA               	goto	u650
  2506  05E9  2DEB               u651:
  2507  05EA                     	goto	l1334
  2508  05EA  2DCD               u650:
  2509  05EB                     	goto	l1342
  2510  05EB  2DED               	
  2511                           l483:	
  2512  05EC                     	goto	l1342
  2513  05EC  2DED               	line	30
  2514                           	
  2515                           l477:	
  2516  05ED                     	line	31
  2517                           	
  2518                           l1342:	
  2519  05ED                     	movf	((___awmod@sign)),w
  2520  05ED  0876               	btfsc	status,2
  2521  05EE  1903               	goto	u661
  2522  05EF  2DF1               	goto	u660
  2523  05F0  2DF2               u661:
  2524  05F1                     	goto	l1346
  2525  05F1  2DF8               u660:
  2526  05F2                     	line	32
  2527                           	
  2528                           l1344:	
  2529  05F2                     	comf	(___awmod@dividend),f
  2530  05F2  09F2               	comf	(___awmod@dividend+1),f
  2531  05F3  09F3               	incf	(___awmod@dividend),f
  2532  05F4  0AF2               	skipnz
  2533  05F5  1903               	incf	(___awmod@dividend+1),f
  2534  05F6  0AF3               	goto	l1346
  2535  05F7  2DF8               	
  2536                           l484:	
  2537  05F8                     	line	33
  2538                           	
  2539                           l1346:	
  2540  05F8                     	movf	(___awmod@dividend+1),w
  2541  05F8  0873               	movwf	(?___awmod+1)
  2542  05F9  00F1               	movf	(___awmod@dividend),w
  2543  05FA  0872               	movwf	(?___awmod)
  2544  05FB  00F0               	goto	l485
  2545  05FC  2DFD               	
  2546                           l1348:	
  2547  05FD                     	line	34
  2548                           	
  2549                           l485:	
  2550  05FD                     	return
  2551  05FD  0008               	opt stack 0
  2552                           GLOBAL	__end_of___awmod
  2553                           	__end_of___awmod:
  2554  05FE                     	signat	___awmod,8314
  2555                           	global	___awdiv
  2556                           
  2557 ;; *************** function ___awdiv *****************
  2558 ;; Defined at:
  2559 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  divisor         2    0[COMMON] int 
  2562 ;;  dividend        2    2[COMMON] int 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;  quotient        2    7[COMMON] int 
  2565 ;;  sign            1    6[COMMON] unsigned char 
  2566 ;;  counter         1    5[COMMON] unsigned char 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  2    0[COMMON] int 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2576 ;;      Params:         4       0       0       0       0
  2577 ;;      Locals:         4       0       0       0       0
  2578 ;;      Temps:          1       0       0       0       0
  2579 ;;      Totals:         9       0       0       0       0
  2580 ;;Total ram usage:        9 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_num_to_string
  2586 ;;		_float_to_string
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  2590                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2591                           	line	5
  2592                           global __ptext6
  2593                           __ptext6:	;psect for function ___awdiv
  2594  05FE                     psect	text6
  2595                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2596                           	line	5
  2597                           	global	__size_of___awdiv
  2598                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  2599  0071                     	
  2600                           ___awdiv:	
  2601  05FE                     ;incstack = 0
  2602                           	opt	stack 6
  2603                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2604                           	line	13
  2605                           	
  2606                           l1268:	
  2607  05FE                     	clrf	(___awdiv@sign)
  2608  05FE  01F6               	line	14
  2609                           	
  2610                           l1270:	
  2611  05FF                     	btfss	(___awdiv@divisor+1),7
  2612  05FF  1FF1               	goto	u481
  2613  0600  2E02               	goto	u480
  2614  0601  2E03               u481:
  2615  0602                     	goto	l1276
  2616  0602  2E0B               u480:
  2617  0603                     	line	15
  2618                           	
  2619                           l1272:	
  2620  0603                     	comf	(___awdiv@divisor),f
  2621  0603  09F0               	comf	(___awdiv@divisor+1),f
  2622  0604  09F1               	incf	(___awdiv@divisor),f
  2623  0605  0AF0               	skipnz
  2624  0606  1903               	incf	(___awdiv@divisor+1),f
  2625  0607  0AF1               	line	16
  2626                           	
  2627                           l1274:	
  2628  0608                     	clrf	(___awdiv@sign)
  2629  0608  01F6               	incf	(___awdiv@sign),f
  2630  0609  0AF6               	goto	l1276
  2631  060A  2E0B               	line	17
  2632                           	
  2633                           l462:	
  2634  060B                     	line	18
  2635                           	
  2636                           l1276:	
  2637  060B                     	btfss	(___awdiv@dividend+1),7
  2638  060B  1FF3               	goto	u491
  2639  060C  2E0E               	goto	u490
  2640  060D  2E0F               u491:
  2641  060E                     	goto	l1282
  2642  060E  2E19               u490:
  2643  060F                     	line	19
  2644                           	
  2645                           l1278:	
  2646  060F                     	comf	(___awdiv@dividend),f
  2647  060F  09F2               	comf	(___awdiv@dividend+1),f
  2648  0610  09F3               	incf	(___awdiv@dividend),f
  2649  0611  0AF2               	skipnz
  2650  0612  1903               	incf	(___awdiv@dividend+1),f
  2651  0613  0AF3               	line	20
  2652                           	
  2653                           l1280:	
  2654  0614                     	movlw	low(01h)
  2655  0614  3001               	movwf	(??___awdiv+0)+0
  2656  0615  00F4               	movf	(??___awdiv+0)+0,w
  2657  0616  0874               	xorwf	(___awdiv@sign),f
  2658  0617  06F6               	goto	l1282
  2659  0618  2E19               	line	21
  2660                           	
  2661                           l463:	
  2662  0619                     	line	22
  2663                           	
  2664                           l1282:	
  2665  0619                     	clrf	(___awdiv@quotient)
  2666  0619  01F7               	clrf	(___awdiv@quotient+1)
  2667  061A  01F8               	line	23
  2668                           	
  2669                           l1284:	
  2670  061B                     	movf	((___awdiv@divisor)),w
  2671  061B  0870               iorwf	((___awdiv@divisor+1)),w
  2672  061C  0471               	btfsc	status,2
  2673  061D  1903               	goto	u501
  2674  061E  2E20               	goto	u500
  2675  061F  2E21               u501:
  2676  0620                     	goto	l1304
  2677  0620  2E5E               u500:
  2678  0621                     	line	24
  2679                           	
  2680                           l1286:	
  2681  0621                     	clrf	(___awdiv@counter)
  2682  0621  01F5               	incf	(___awdiv@counter),f
  2683  0622  0AF5               	line	25
  2684                           	goto	l1292
  2685  0623  2E30               	
  2686                           l466:	
  2687  0624                     	line	26
  2688                           	
  2689                           l1288:	
  2690  0624                     	movlw	01h
  2691  0624  3001               	
  2692                           u515:
  2693  0625                     	clrc
  2694  0625  1003               	rlf	(___awdiv@divisor),f
  2695  0626  0DF0               	rlf	(___awdiv@divisor+1),f
  2696  0627  0DF1               	addlw	-1
  2697  0628  3EFF               	skipz
  2698  0629  1D03               	goto	u515
  2699  062A  2E25               	line	27
  2700                           	
  2701                           l1290:	
  2702  062B                     	movlw	low(01h)
  2703  062B  3001               	movwf	(??___awdiv+0)+0
  2704  062C  00F4               	movf	(??___awdiv+0)+0,w
  2705  062D  0874               	addwf	(___awdiv@counter),f
  2706  062E  07F5               	goto	l1292
  2707  062F  2E30               	line	28
  2708                           	
  2709                           l465:	
  2710  0630                     	line	25
  2711                           	
  2712                           l1292:	
  2713  0630                     	btfss	(___awdiv@divisor+1),(15)&7
  2714  0630  1FF1               	goto	u521
  2715  0631  2E33               	goto	u520
  2716  0632  2E34               u521:
  2717  0633                     	goto	l1288
  2718  0633  2E24               u520:
  2719  0634                     	goto	l1294
  2720  0634  2E36               	
  2721                           l467:	
  2722  0635                     	goto	l1294
  2723  0635  2E36               	line	29
  2724                           	
  2725                           l468:	
  2726  0636                     	line	30
  2727                           	
  2728                           l1294:	
  2729  0636                     	movlw	01h
  2730  0636  3001               	
  2731                           u535:
  2732  0637                     	clrc
  2733  0637  1003               	rlf	(___awdiv@quotient),f
  2734  0638  0DF7               	rlf	(___awdiv@quotient+1),f
  2735  0639  0DF8               	addlw	-1
  2736  063A  3EFF               	skipz
  2737  063B  1D03               	goto	u535
  2738  063C  2E37               	line	31
  2739                           	movf	(___awdiv@divisor+1),w
  2740  063D  0871               	subwf	(___awdiv@dividend+1),w
  2741  063E  0273               	skipz
  2742  063F  1D03               	goto	u545
  2743  0640  2E43               	movf	(___awdiv@divisor),w
  2744  0641  0870               	subwf	(___awdiv@dividend),w
  2745  0642  0272               u545:
  2746  0643                     	skipc
  2747  0643  1C03               	goto	u541
  2748  0644  2E46               	goto	u540
  2749  0645  2E47               u541:
  2750  0646                     	goto	l1300
  2751  0646  2E4F               u540:
  2752  0647                     	line	32
  2753                           	
  2754                           l1296:	
  2755  0647                     	movf	(___awdiv@divisor),w
  2756  0647  0870               	subwf	(___awdiv@dividend),f
  2757  0648  02F2               	movf	(___awdiv@divisor+1),w
  2758  0649  0871               	skipc
  2759  064A  1C03               	decf	(___awdiv@dividend+1),f
  2760  064B  03F3               	subwf	(___awdiv@dividend+1),f
  2761  064C  02F3               	line	33
  2762                           	
  2763                           l1298:	
  2764  064D                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  2765  064D  1477               	goto	l1300
  2766  064E  2E4F               	line	34
  2767                           	
  2768                           l469:	
  2769  064F                     	line	35
  2770                           	
  2771                           l1300:	
  2772  064F                     	movlw	01h
  2773  064F  3001               	
  2774                           u555:
  2775  0650                     	clrc
  2776  0650  1003               	rrf	(___awdiv@divisor+1),f
  2777  0651  0CF1               	rrf	(___awdiv@divisor),f
  2778  0652  0CF0               	addlw	-1
  2779  0653  3EFF               	skipz
  2780  0654  1D03               	goto	u555
  2781  0655  2E50               	line	36
  2782                           	
  2783                           l1302:	
  2784  0656                     	movlw	01h
  2785  0656  3001               	subwf	(___awdiv@counter),f
  2786  0657  02F5               	btfss	status,2
  2787  0658  1D03               	goto	u561
  2788  0659  2E5B               	goto	u560
  2789  065A  2E5C               u561:
  2790  065B                     	goto	l1294
  2791  065B  2E36               u560:
  2792  065C                     	goto	l1304
  2793  065C  2E5E               	
  2794                           l470:	
  2795  065D                     	goto	l1304
  2796  065D  2E5E               	line	37
  2797                           	
  2798                           l464:	
  2799  065E                     	line	38
  2800                           	
  2801                           l1304:	
  2802  065E                     	movf	((___awdiv@sign)),w
  2803  065E  0876               	btfsc	status,2
  2804  065F  1903               	goto	u571
  2805  0660  2E62               	goto	u570
  2806  0661  2E63               u571:
  2807  0662                     	goto	l1308
  2808  0662  2E69               u570:
  2809  0663                     	line	39
  2810                           	
  2811                           l1306:	
  2812  0663                     	comf	(___awdiv@quotient),f
  2813  0663  09F7               	comf	(___awdiv@quotient+1),f
  2814  0664  09F8               	incf	(___awdiv@quotient),f
  2815  0665  0AF7               	skipnz
  2816  0666  1903               	incf	(___awdiv@quotient+1),f
  2817  0667  0AF8               	goto	l1308
  2818  0668  2E69               	
  2819                           l471:	
  2820  0669                     	line	40
  2821                           	
  2822                           l1308:	
  2823  0669                     	movf	(___awdiv@quotient+1),w
  2824  0669  0878               	movwf	(?___awdiv+1)
  2825  066A  00F1               	movf	(___awdiv@quotient),w
  2826  066B  0877               	movwf	(?___awdiv)
  2827  066C  00F0               	goto	l472
  2828  066D  2E6E               	
  2829                           l1310:	
  2830  066E                     	line	41
  2831                           	
  2832                           l472:	
  2833  066E                     	return
  2834  066E  0008               	opt stack 0
  2835                           GLOBAL	__end_of___awdiv
  2836                           	__end_of___awdiv:
  2837  066F                     	signat	___awdiv,8314
  2838                           	global	_initOsc
  2839                           
  2840 ;; *************** function _initOsc *****************
  2841 ;; Defined at:
  2842 ;;		line 9 in file "FuncionOscilador.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  frec            1    wreg     unsigned char 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  frec            1    2[COMMON] unsigned char 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2856 ;;      Params:         0       0       0       0       0
  2857 ;;      Locals:         1       0       0       0       0
  2858 ;;      Temps:          2       0       0       0       0
  2859 ;;      Totals:         3       0       0       0       0
  2860 ;;Total ram usage:        3 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_main
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2869                           	file	"FuncionOscilador.c"
  2870                           	line	9
  2871                           global __ptext7
  2872                           __ptext7:	;psect for function _initOsc
  2873  053E                     psect	text7
  2874                           	file	"FuncionOscilador.c"
  2875                           	line	9
  2876                           	global	__size_of_initOsc
  2877                           	__size_of_initOsc	equ	__end_of_initOsc-_initOsc
  2878  005D                     	
  2879                           _initOsc:	
  2880  053E                     ;incstack = 0
  2881                           	opt	stack 7
  2882                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  2883                           ;initOsc@frec stored from wreg
  2884                           	movwf	(initOsc@frec)
  2885  053E  00F2               	line	10
  2886                           	
  2887                           l1350:	
  2888  053F                     ;FuncionOscilador.c: 10:     switch(frec){
  2889                           	goto	l1354
  2890  053F  2D77               	line	11
  2891                           ;FuncionOscilador.c: 11:         case 0:
  2892                           	
  2893                           l6:	
  2894  0540                     	line	12
  2895                           ;FuncionOscilador.c: 12:             OSCCONbits.IRCF0 = 0;
  2896                           	bsf	status, 5	;RP0=1, select bank1
  2897  0540  1683               	bcf	status, 6	;RP1=0, select bank1
  2898  0541  1303               	bcf	(143)^080h,4	;volatile
  2899  0542  120F               	line	13
  2900                           ;FuncionOscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  2901                           	bcf	(143)^080h,5	;volatile
  2902  0543  128F               	line	14
  2903                           ;FuncionOscilador.c: 14:             OSCCONbits.IRCF2 = 0;
  2904                           	bcf	(143)^080h,6	;volatile
  2905  0544  130F               	line	15
  2906                           ;FuncionOscilador.c: 15:             break;
  2907                           	goto	l7
  2908  0545  2D99               	line	16
  2909                           ;FuncionOscilador.c: 16:         case 1:
  2910                           	
  2911                           l8:	
  2912  0546                     	line	17
  2913                           ;FuncionOscilador.c: 17:             OSCCONbits.IRCF0 = 1;
  2914                           	bsf	status, 5	;RP0=1, select bank1
  2915  0546  1683               	bcf	status, 6	;RP1=0, select bank1
  2916  0547  1303               	bsf	(143)^080h,4	;volatile
  2917  0548  160F               	line	18
  2918                           ;FuncionOscilador.c: 18:             OSCCONbits.IRCF1 = 0;
  2919                           	bcf	(143)^080h,5	;volatile
  2920  0549  128F               	line	19
  2921                           ;FuncionOscilador.c: 19:             OSCCONbits.IRCF2 = 0;
  2922                           	bcf	(143)^080h,6	;volatile
  2923  054A  130F               	line	20
  2924                           ;FuncionOscilador.c: 20:             break;
  2925                           	goto	l7
  2926  054B  2D99               	line	21
  2927                           ;FuncionOscilador.c: 21:         case 2:
  2928                           	
  2929                           l9:	
  2930  054C                     	line	22
  2931                           ;FuncionOscilador.c: 22:             OSCCONbits.IRCF0 = 0;
  2932                           	bsf	status, 5	;RP0=1, select bank1
  2933  054C  1683               	bcf	status, 6	;RP1=0, select bank1
  2934  054D  1303               	bcf	(143)^080h,4	;volatile
  2935  054E  120F               	line	23
  2936                           ;FuncionOscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  2937                           	bsf	(143)^080h,5	;volatile
  2938  054F  168F               	line	24
  2939                           ;FuncionOscilador.c: 24:             OSCCONbits.IRCF2 = 0;
  2940                           	bcf	(143)^080h,6	;volatile
  2941  0550  130F               	line	25
  2942                           ;FuncionOscilador.c: 25:             break;
  2943                           	goto	l7
  2944  0551  2D99               	line	26
  2945                           ;FuncionOscilador.c: 26:         case 3:
  2946                           	
  2947                           l10:	
  2948  0552                     	line	27
  2949                           ;FuncionOscilador.c: 27:             OSCCONbits.IRCF0 = 1;
  2950                           	bsf	status, 5	;RP0=1, select bank1
  2951  0552  1683               	bcf	status, 6	;RP1=0, select bank1
  2952  0553  1303               	bsf	(143)^080h,4	;volatile
  2953  0554  160F               	line	28
  2954                           ;FuncionOscilador.c: 28:             OSCCONbits.IRCF1 = 1;
  2955                           	bsf	(143)^080h,5	;volatile
  2956  0555  168F               	line	29
  2957                           ;FuncionOscilador.c: 29:             OSCCONbits.IRCF2 = 0;
  2958                           	bcf	(143)^080h,6	;volatile
  2959  0556  130F               	line	30
  2960                           ;FuncionOscilador.c: 30:             break;
  2961                           	goto	l7
  2962  0557  2D99               	line	31
  2963                           ;FuncionOscilador.c: 31:         case 4:
  2964                           	
  2965                           l11:	
  2966  0558                     	line	32
  2967                           ;FuncionOscilador.c: 32:             OSCCONbits.IRCF0 = 0;
  2968                           	bsf	status, 5	;RP0=1, select bank1
  2969  0558  1683               	bcf	status, 6	;RP1=0, select bank1
  2970  0559  1303               	bcf	(143)^080h,4	;volatile
  2971  055A  120F               	line	33
  2972                           ;FuncionOscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  2973                           	bcf	(143)^080h,5	;volatile
  2974  055B  128F               	line	34
  2975                           ;FuncionOscilador.c: 34:             OSCCONbits.IRCF2 = 1;
  2976                           	bsf	(143)^080h,6	;volatile
  2977  055C  170F               	line	35
  2978                           ;FuncionOscilador.c: 35:             break;
  2979                           	goto	l7
  2980  055D  2D99               	line	36
  2981                           ;FuncionOscilador.c: 36:         case 5:
  2982                           	
  2983                           l12:	
  2984  055E                     	line	37
  2985                           ;FuncionOscilador.c: 37:             OSCCONbits.IRCF0 = 1;
  2986                           	bsf	status, 5	;RP0=1, select bank1
  2987  055E  1683               	bcf	status, 6	;RP1=0, select bank1
  2988  055F  1303               	bsf	(143)^080h,4	;volatile
  2989  0560  160F               	line	38
  2990                           ;FuncionOscilador.c: 38:             OSCCONbits.IRCF1 = 0;
  2991                           	bcf	(143)^080h,5	;volatile
  2992  0561  128F               	line	39
  2993                           ;FuncionOscilador.c: 39:             OSCCONbits.IRCF2 = 1;
  2994                           	bsf	(143)^080h,6	;volatile
  2995  0562  170F               	line	40
  2996                           ;FuncionOscilador.c: 40:             break;
  2997                           	goto	l7
  2998  0563  2D99               	line	42
  2999                           ;FuncionOscilador.c: 42:         case 6:
  3000                           	
  3001                           l13:	
  3002  0564                     	line	43
  3003                           ;FuncionOscilador.c: 43:             OSCCONbits.IRCF0 = 0;
  3004                           	bsf	status, 5	;RP0=1, select bank1
  3005  0564  1683               	bcf	status, 6	;RP1=0, select bank1
  3006  0565  1303               	bcf	(143)^080h,4	;volatile
  3007  0566  120F               	line	44
  3008                           ;FuncionOscilador.c: 44:             OSCCONbits.IRCF1 = 1;
  3009                           	bsf	(143)^080h,5	;volatile
  3010  0567  168F               	line	45
  3011                           ;FuncionOscilador.c: 45:             OSCCONbits.IRCF2 = 1;
  3012                           	bsf	(143)^080h,6	;volatile
  3013  0568  170F               	line	46
  3014                           ;FuncionOscilador.c: 46:             break;
  3015                           	goto	l7
  3016  0569  2D99               	line	47
  3017                           ;FuncionOscilador.c: 47:         case 7:
  3018                           	
  3019                           l14:	
  3020  056A                     	line	48
  3021                           ;FuncionOscilador.c: 48:             OSCCONbits.IRCF0 = 1;
  3022                           	bsf	status, 5	;RP0=1, select bank1
  3023  056A  1683               	bcf	status, 6	;RP1=0, select bank1
  3024  056B  1303               	bsf	(143)^080h,4	;volatile
  3025  056C  160F               	line	49
  3026                           ;FuncionOscilador.c: 49:             OSCCONbits.IRCF1 = 1;
  3027                           	bsf	(143)^080h,5	;volatile
  3028  056D  168F               	line	50
  3029                           ;FuncionOscilador.c: 50:             OSCCONbits.IRCF2 = 1;
  3030                           	bsf	(143)^080h,6	;volatile
  3031  056E  170F               	line	51
  3032                           ;FuncionOscilador.c: 51:             break;
  3033                           	goto	l7
  3034  056F  2D99               	line	52
  3035                           ;FuncionOscilador.c: 52:         default:
  3036                           	
  3037                           l15:	
  3038  0570                     	line	53
  3039                           ;FuncionOscilador.c: 53:             OSCCONbits.IRCF0 = 0;
  3040                           	bsf	status, 5	;RP0=1, select bank1
  3041  0570  1683               	bcf	status, 6	;RP1=0, select bank1
  3042  0571  1303               	bcf	(143)^080h,4	;volatile
  3043  0572  120F               	line	54
  3044                           ;FuncionOscilador.c: 54:             OSCCONbits.IRCF1 = 1;
  3045                           	bsf	(143)^080h,5	;volatile
  3046  0573  168F               	line	55
  3047                           ;FuncionOscilador.c: 55:             OSCCONbits.IRCF2 = 1;
  3048                           	bsf	(143)^080h,6	;volatile
  3049  0574  170F               	line	56
  3050                           ;FuncionOscilador.c: 56:             break;
  3051                           	goto	l7
  3052  0575  2D99               	line	57
  3053                           	
  3054                           l1352:	
  3055  0576                     ;FuncionOscilador.c: 57:     }
  3056                           	goto	l7
  3057  0576  2D99               	
  3058                           l5:	
  3059  0577                     	
  3060                           l1354:	
  3061  0577                     	movf	(initOsc@frec),w
  3062  0577  0872               	movwf	(??_initOsc+0)+0
  3063  0578  00F0               	clrf	(??_initOsc+0)+0+1
  3064  0579  01F1               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  3065                           ; Switch size 1, requested type "space"
  3066                           ; Number of cases is 1, Range of values is 0 to 0
  3067                           ; switch strategies available:
  3068                           ; Name         Instructions Cycles
  3069                           ; simple_byte            4     3 (average)
  3070                           ; direct_byte           11     8 (fixed)
  3071                           ; jumptable            260     6 (fixed)
  3072                           ;	Chosen strategy is simple_byte
  3073                           
  3074                           	movf 1+(??_initOsc+0)+0,w
  3075  057A  0871               	opt asmopt_push
  3076                           	opt asmopt_off
  3077                           	xorlw	0^0	; case 0
  3078  057B  3A00               	skipnz
  3079  057C  1903               	goto	l1774
  3080  057D  2D7F               	goto	l15
  3081  057E  2D70               	opt asmopt_pop
  3082                           	
  3083                           l1774:	
  3084  057F                     ; Switch size 1, requested type "space"
  3085                           ; Number of cases is 8, Range of values is 0 to 7
  3086                           ; switch strategies available:
  3087                           ; Name         Instructions Cycles
  3088                           ; simple_byte           25    13 (average)
  3089                           ; direct_byte           32     8 (fixed)
  3090                           ; jumptable            260     6 (fixed)
  3091                           ;	Chosen strategy is simple_byte
  3092                           
  3093                           	movf 0+(??_initOsc+0)+0,w
  3094  057F  0870               	opt asmopt_push
  3095                           	opt asmopt_off
  3096                           	xorlw	0^0	; case 0
  3097  0580  3A00               	skipnz
  3098  0581  1903               	goto	l6
  3099  0582  2D40               	xorlw	1^0	; case 1
  3100  0583  3A01               	skipnz
  3101  0584  1903               	goto	l8
  3102  0585  2D46               	xorlw	2^1	; case 2
  3103  0586  3A03               	skipnz
  3104  0587  1903               	goto	l9
  3105  0588  2D4C               	xorlw	3^2	; case 3
  3106  0589  3A01               	skipnz
  3107  058A  1903               	goto	l10
  3108  058B  2D52               	xorlw	4^3	; case 4
  3109  058C  3A07               	skipnz
  3110  058D  1903               	goto	l11
  3111  058E  2D58               	xorlw	5^4	; case 5
  3112  058F  3A01               	skipnz
  3113  0590  1903               	goto	l12
  3114  0591  2D5E               	xorlw	6^5	; case 6
  3115  0592  3A03               	skipnz
  3116  0593  1903               	goto	l13
  3117  0594  2D64               	xorlw	7^6	; case 7
  3118  0595  3A01               	skipnz
  3119  0596  1903               	goto	l14
  3120  0597  2D6A               	goto	l15
  3121  0598  2D70               	opt asmopt_pop
  3122                           
  3123                           	
  3124                           l7:	
  3125  0599                     	line	59
  3126                           ;FuncionOscilador.c: 59:     OSCCONbits.SCS = 1;
  3127                           	bsf	(143)^080h,0	;volatile
  3128  0599  140F               	line	60
  3129                           	
  3130                           l16:	
  3131  059A                     	return
  3132  059A  0008               	opt stack 0
  3133                           GLOBAL	__end_of_initOsc
  3134                           	__end_of_initOsc:
  3135  059B                     	signat	_initOsc,4217
  3136                           	global	_init
  3137                           
  3138 ;; *************** function _init *****************
  3139 ;; Defined at:
  3140 ;;		line 177 in file "MainSPIRaspMaster.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;		None
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;		None
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3154 ;;      Params:         0       0       0       0       0
  3155 ;;      Locals:         0       0       0       0       0
  3156 ;;      Temps:          0       0       0       0       0
  3157 ;;      Totals:         0       0       0       0       0
  3158 ;;Total ram usage:        0 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    1
  3161 ;; This function calls:
  3162 ;;		_spiInit
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3168                           	file	"MainSPIRaspMaster.c"
  3169                           	line	177
  3170                           global __ptext8
  3171                           __ptext8:	;psect for function _init
  3172  03E4                     psect	text8
  3173                           	file	"MainSPIRaspMaster.c"
  3174                           	line	177
  3175                           	global	__size_of_init
  3176                           	__size_of_init	equ	__end_of_init-_init
  3177  0022                     	
  3178                           _init:	
  3179  03E4                     ;incstack = 0
  3180                           	opt	stack 6
  3181                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  3182                           	line	179
  3183                           	
  3184                           l1368:	
  3185  03E4                     ;MainSPIRaspMaster.c: 179:     TRISA = 0;
  3186                           	bsf	status, 5	;RP0=1, select bank1
  3187  03E4  1683               	bcf	status, 6	;RP1=0, select bank1
  3188  03E5  1303               	clrf	(133)^080h	;volatile
  3189  03E6  0185               	line	180
  3190                           ;MainSPIRaspMaster.c: 180:     TRISB = 0;
  3191                           	clrf	(134)^080h	;volatile
  3192  03E7  0186               	line	181
  3193                           ;MainSPIRaspMaster.c: 181:     TRISD = 0;
  3194                           	clrf	(136)^080h	;volatile
  3195  03E8  0188               	line	184
  3196                           ;MainSPIRaspMaster.c: 184:     TRISC = 0;
  3197                           	clrf	(135)^080h	;volatile
  3198  03E9  0187               	line	185
  3199                           	
  3200                           l1370:	
  3201  03EA                     ;MainSPIRaspMaster.c: 185:     TRISCbits.TRISC7 = 1;
  3202                           	bsf	(135)^080h,7	;volatile
  3203  03EA  1787               	line	186
  3204                           	
  3205                           l1372:	
  3206  03EB                     ;MainSPIRaspMaster.c: 186:     TRISCbits.TRISC6 = 1;
  3207                           	bsf	(135)^080h,6	;volatile
  3208  03EB  1707               	line	188
  3209                           	
  3210                           l1374:	
  3211  03EC                     ;MainSPIRaspMaster.c: 188:     TRISCbits.TRISC5 = 0;
  3212                           	bcf	(135)^080h,5	;volatile
  3213  03EC  1287               	line	189
  3214                           	
  3215                           l1376:	
  3216  03ED                     ;MainSPIRaspMaster.c: 189:     TRISCbits.TRISC4 = 1;
  3217                           	bsf	(135)^080h,4	;volatile
  3218  03ED  1607               	line	190
  3219                           	
  3220                           l1378:	
  3221  03EE                     ;MainSPIRaspMaster.c: 190:     TRISCbits.TRISC3 = 0;
  3222                           	bcf	(135)^080h,3	;volatile
  3223  03EE  1187               	line	193
  3224                           ;MainSPIRaspMaster.c: 193:     TRISE = 0;
  3225                           	clrf	(137)^080h	;volatile
  3226  03EF  0189               	line	195
  3227                           ;MainSPIRaspMaster.c: 195:     ANSEL = 0;
  3228                           	bsf	status, 5	;RP0=1, select bank3
  3229  03F0  1683               	bsf	status, 6	;RP1=1, select bank3
  3230  03F1  1703               	clrf	(392)^0180h	;volatile
  3231  03F2  0188               	line	196
  3232                           ;MainSPIRaspMaster.c: 196:     ANSELH = 0;
  3233                           	clrf	(393)^0180h	;volatile
  3234  03F3  0189               	line	198
  3235                           ;MainSPIRaspMaster.c: 198:     PORTA = 0;
  3236                           	bcf	status, 5	;RP0=0, select bank0
  3237  03F4  1283               	bcf	status, 6	;RP1=0, select bank0
  3238  03F5  1303               	clrf	(5)	;volatile
  3239  03F6  0185               	line	199
  3240                           ;MainSPIRaspMaster.c: 199:     PORTB = 0;
  3241                           	clrf	(6)	;volatile
  3242  03F7  0186               	line	200
  3243                           ;MainSPIRaspMaster.c: 200:     PORTD = 0;
  3244                           	clrf	(8)	;volatile
  3245  03F8  0188               	line	201
  3246                           ;MainSPIRaspMaster.c: 201:     PORTC = 0;
  3247                           	clrf	(7)	;volatile
  3248  03F9  0187               	line	202
  3249                           ;MainSPIRaspMaster.c: 202:     PORTE = 0;
  3250                           	clrf	(9)	;volatile
  3251  03FA  0189               	line	207
  3252                           	
  3253                           l1380:	
  3254  03FB                     ;MainSPIRaspMaster.c: 207:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_
                                 CLOCK_IDLE_LOW, SPI_IDLE_2_ACTIVE);
  3255                           	clrf	(spiInit@sDataSample)
  3256  03FB  01F0               	clrf	(spiInit@sClockIdle)
  3257  03FC  01F1               	clrf	(spiInit@sTransmitEdge)
  3258  03FD  01F2               	movlw	low(020h)
  3259  03FE  3020               	fcall	_spiInit
  3260  03FF  120A  118A  2391  120A  118A  	goto	l151
  3261  0404  2C05               	line	208
  3262                           	
  3263                           l1382:	
  3264  0405                     	line	209
  3265                           ;MainSPIRaspMaster.c: 208:     return;
  3266                           	
  3267                           l151:	
  3268  0405                     	return
  3269  0405  0008               	opt stack 0
  3270                           GLOBAL	__end_of_init
  3271                           	__end_of_init:
  3272  0406                     	signat	_init,89
  3273                           	global	_spiInit
  3274                           
  3275 ;; *************** function _spiInit *****************
  3276 ;; Defined at:
  3277 ;;		line 12 in file "SPI.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  sType           1    wreg     enum E1264
  3280 ;;  sDataSample     1    0[COMMON] enum E1272
  3281 ;;  sClockIdle      1    1[COMMON] enum E1276
  3282 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  sType           1    3[COMMON] enum E1264
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3294 ;;      Params:         3       0       0       0       0
  3295 ;;      Locals:         1       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0
  3297 ;;      Totals:         4       0       0       0       0
  3298 ;;Total ram usage:        4 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_init
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3307                           	file	"SPI.c"
  3308                           	line	12
  3309                           global __ptext9
  3310                           __ptext9:	;psect for function _spiInit
  3311  0391                     psect	text9
  3312                           	file	"SPI.c"
  3313                           	line	12
  3314                           	global	__size_of_spiInit
  3315                           	__size_of_spiInit	equ	__end_of_spiInit-_spiInit
  3316  0016                     	
  3317                           _spiInit:	
  3318  0391                     ;incstack = 0
  3319                           	opt	stack 6
  3320                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  3321                           ;spiInit@sType stored from wreg
  3322                           	movwf	(spiInit@sType)
  3323  0391  00F3               	line	14
  3324                           	
  3325                           l1216:	
  3326  0392                     ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
                                 ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  3327                           	bsf	status, 5	;RP0=1, select bank1
  3328  0392  1683               	bcf	status, 6	;RP1=0, select bank1
  3329  0393  1303               	bcf	(1085/8)^080h,(1085)&7	;volatile
  3330  0394  1287               	line	15
  3331                           ;SPI.c: 15:     if(sType & 0b00000100)
  3332                           	btfss	(spiInit@sType),(2)&7
  3333  0395  1D73               	goto	u411
  3334  0396  2B98               	goto	u410
  3335  0397  2B99               u411:
  3336  0398                     	goto	l1222
  3337  0398  2B9D               u410:
  3338  0399                     	line	17
  3339                           	
  3340                           l1218:	
  3341  0399                     ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  3342                           	movf	(spiInit@sTransmitEdge),w
  3343  0399  0872               	movwf	(148)^080h	;volatile
  3344  039A  0094               	line	18
  3345                           	
  3346                           l1220:	
  3347  039B                     ;SPI.c: 18:         TRISC3 = 1;
  3348                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  3349  039B  1587               	line	19
  3350                           ;SPI.c: 19:     }
  3351                           	goto	l32
  3352  039C  2BA1               	line	20
  3353                           ;SPI.c: 20:     else
  3354                           	
  3355                           l31:	
  3356  039D                     	line	22
  3357                           	
  3358                           l1222:	
  3359  039D                     ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  3360                           	movf	(spiInit@sDataSample),w
  3361  039D  0870               	iorwf	(spiInit@sTransmitEdge),w
  3362  039E  0472               	movwf	(148)^080h	;volatile
  3363  039F  0094               	line	23
  3364                           	
  3365                           l1224:	
  3366  03A0                     ;SPI.c: 23:         TRISC3 = 0;
  3367                           	bcf	(1083/8)^080h,(1083)&7	;volatile
  3368  03A0  1187               	line	24
  3369                           ;SPI.c: 24:     }
  3370                           	
  3371                           l32:	
  3372  03A1                     	line	26
  3373                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  3374                           	movf	(spiInit@sType),w
  3375  03A1  0873               	iorwf	(spiInit@sClockIdle),w
  3376  03A2  0471               	bcf	status, 5	;RP0=0, select bank0
  3377  03A3  1283               	bcf	status, 6	;RP1=0, select bank0
  3378  03A4  1303               	movwf	(20)	;volatile
  3379  03A5  0094               	line	27
  3380                           	
  3381                           l33:	
  3382  03A6                     	return
  3383  03A6  0008               	opt stack 0
  3384                           GLOBAL	__end_of_spiInit
  3385                           	__end_of_spiInit:
  3386  03A7                     	signat	_spiInit,16505
  3387                           	global	_Lcd_Write_String
  3388                           
  3389 ;; *************** function _Lcd_Write_String *****************
  3390 ;; Defined at:
  3391 ;;		line 127 in file "LCD.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;  a               1    wreg     PTR unsigned char 
  3394 ;;		 -> STR_9(4), STR_8(4), STR_7(2), STR_6(2), 
  3395 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  3396 ;;		 -> STR_1(17), 
  3397 ;;  modo            2    7[COMMON] int 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  a               1   11[COMMON] PTR unsigned char 
  3400 ;;		 -> STR_9(4), STR_8(4), STR_7(2), STR_6(2), 
  3401 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  3402 ;;		 -> STR_1(17), 
  3403 ;;  i               2    9[COMMON] int 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  1    wreg      void 
  3406 ;; Registers used:
  3407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3413 ;;      Params:         2       0       0       0       0
  3414 ;;      Locals:         3       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0
  3416 ;;      Totals:         5       0       0       0       0
  3417 ;;Total ram usage:        5 bytes
  3418 ;; Hardware stack levels used:    1
  3419 ;; Hardware stack levels required when called:    2
  3420 ;; This function calls:
  3421 ;;		_Lcd_Write_Char
  3422 ;; This function is called by:
  3423 ;;		_main
  3424 ;; This function uses a non-reentrant model
  3425 ;;
  3426                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3427                           	file	"LCD.c"
  3428                           	line	127
  3429                           global __ptext10
  3430                           __ptext10:	;psect for function _Lcd_Write_String
  3431  0429                     psect	text10
  3432                           	file	"LCD.c"
  3433                           	line	127
  3434                           	global	__size_of_Lcd_Write_String
  3435                           	__size_of_Lcd_Write_String	equ	__end_of_Lcd_Write_String-_Lcd_Write_String
  3436  002B                     	
  3437                           _Lcd_Write_String:	
  3438  0429                     ;incstack = 0
  3439                           	opt	stack 5
  3440                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3441                           ;Lcd_Write_String@a stored from wreg
  3442                           	movwf	(Lcd_Write_String@a)
  3443  0429  00FB               	line	130
  3444                           	
  3445                           l1410:	
  3446  042A                     ;LCD.c: 127: void Lcd_Write_String(char *a,int modo);LCD.c: 128: {;LCD.c: 129:  int i;;L
                                 CD.c: 130:  for(i=0;a[i]!='\0';i++)
  3447                           	clrf	(Lcd_Write_String@i)
  3448  042A  01F9               	clrf	(Lcd_Write_String@i+1)
  3449  042B  01FA               	goto	l1416
  3450  042C  2C45               	
  3451                           l204:	
  3452  042D                     	line	131
  3453                           	
  3454                           l1412:	
  3455  042D                     ;LCD.c: 131:     Lcd_Write_Char(a[i],modo);
  3456                           	movf	(Lcd_Write_String@modo+1),w
  3457  042D  0878               	movwf	(Lcd_Write_Char@modo+1)
  3458  042E  00F2               	movf	(Lcd_Write_String@modo),w
  3459  042F  0877               	movwf	(Lcd_Write_Char@modo)
  3460  0430  00F1               	movf	(Lcd_Write_String@i),w
  3461  0431  0879               	addwf	(Lcd_Write_String@a),w
  3462  0432  077B               	movwf	fsr0
  3463  0433  0084               	fcall	stringdir
  3464  0434  120A  118A  2003  120A  118A  	fcall	_Lcd_Write_Char
  3465  0439  120A  118A  24EA  120A  118A  	
  3466                           l1414:	
  3467  043E                     	movlw	01h
  3468  043E  3001               	addwf	(Lcd_Write_String@i),f
  3469  043F  07F9               	skipnc
  3470  0440  1803               	incf	(Lcd_Write_String@i+1),f
  3471  0441  0AFA               	movlw	0
  3472  0442  3000               	addwf	(Lcd_Write_String@i+1),f
  3473  0443  07FA               	goto	l1416
  3474  0444  2C45               	
  3475                           l203:	
  3476  0445                     	
  3477                           l1416:	
  3478  0445                     	movf	(Lcd_Write_String@i),w
  3479  0445  0879               	addwf	(Lcd_Write_String@a),w
  3480  0446  077B               	movwf	fsr0
  3481  0447  0084               	fcall	stringdir
  3482  0448  120A  118A  2003  120A  118A  	xorlw	0
  3483  044D  3A00               	skipz
  3484  044E  1D03               	goto	u671
  3485  044F  2C51               	goto	u670
  3486  0450  2C52               u671:
  3487  0451                     	goto	l1412
  3488  0451  2C2D               u670:
  3489  0452                     	goto	l206
  3490  0452  2C53               	
  3491                           l205:	
  3492  0453                     	line	132
  3493                           	
  3494                           l206:	
  3495  0453                     	return
  3496  0453  0008               	opt stack 0
  3497                           GLOBAL	__end_of_Lcd_Write_String
  3498                           	__end_of_Lcd_Write_String:
  3499  0454                     	signat	_Lcd_Write_String,8313
  3500                           	global	_Lcd_Init_8bits
  3501                           
  3502 ;; *************** function _Lcd_Init_8bits *****************
  3503 ;; Defined at:
  3504 ;;		line 193 in file "LCD.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;		None
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;		None
  3509 ;; Return value:  Size  Location     Type
  3510 ;;                  1    wreg      void 
  3511 ;; Registers used:
  3512 ;;		wreg, status,2, status,0, pclath, cstack
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3518 ;;      Params:         0       0       0       0       0
  3519 ;;      Locals:         0       0       0       0       0
  3520 ;;      Temps:          2       0       0       0       0
  3521 ;;      Totals:         2       0       0       0       0
  3522 ;;Total ram usage:        2 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    1
  3525 ;; This function calls:
  3526 ;;		_Lcd_Cmd_8bits
  3527 ;; This function is called by:
  3528 ;;		_main
  3529 ;; This function uses a non-reentrant model
  3530 ;;
  3531                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3532                           	line	193
  3533                           global __ptext11
  3534                           __ptext11:	;psect for function _Lcd_Init_8bits
  3535  0454                     psect	text11
  3536                           	file	"LCD.c"
  3537                           	line	193
  3538                           	global	__size_of_Lcd_Init_8bits
  3539                           	__size_of_Lcd_Init_8bits	equ	__end_of_Lcd_Init_8bits-_Lcd_Init_8bits
  3540  004B                     	
  3541                           _Lcd_Init_8bits:	
  3542  0454                     ;incstack = 0
  3543                           	opt	stack 6
  3544                           ; Regs used in _Lcd_Init_8bits: [wreg+status,2+status,0+pclath+cstack]
  3545                           	line	195
  3546                           	
  3547                           l1384:	
  3548  0454                     ;LCD.c: 195:     PORTB = 0;
  3549                           	bcf	status, 5	;RP0=0, select bank0
  3550  0454  1283               	bcf	status, 6	;RP1=0, select bank0
  3551  0455  1303               	clrf	(6)	;volatile
  3552  0456  0186               	line	196
  3553                           	
  3554                           l1386:	
  3555  0457                     ;LCD.c: 196:     _delay((unsigned long)((20)*(500000/4000.0)));
  3556                           	opt asmopt_push
  3557                           opt asmopt_off
  3558                           movlw	4
  3559  0457  3004               movwf	((??_Lcd_Init_8bits+0)+0+1),f
  3560  0458  00F3               	movlw	61
  3561  0459  303D               movwf	((??_Lcd_Init_8bits+0)+0),f
  3562  045A  00F2               	u1277:
  3563  045B                     decfsz	((??_Lcd_Init_8bits+0)+0),f
  3564  045B  0BF2               	goto	u1277
  3565  045C  2C5B               	decfsz	((??_Lcd_Init_8bits+0)+0+1),f
  3566  045D  0BF3               	goto	u1277
  3567  045E  2C5B               	nop2
  3568  045F  2C60               opt asmopt_pop
  3569                           
  3570                           	line	197
  3571                           	
  3572                           l1388:	
  3573  0460                     ;LCD.c: 197:     Lcd_Cmd_8bits(0x030);
  3574                           	movlw	low(030h)
  3575  0460  3030               	fcall	_Lcd_Cmd_8bits
  3576  0461  120A  118A  2381  120A  118A  	line	198
  3577                           	
  3578                           l1390:	
  3579  0466                     ;LCD.c: 198:     _delay((unsigned long)((5)*(500000/4000.0)));
  3580                           	opt asmopt_push
  3581                           opt asmopt_off
  3582                           	movlw	208
  3583  0466  30D0               movwf	((??_Lcd_Init_8bits+0)+0),f
  3584  0467  00F2               	u1287:
  3585  0468                     decfsz	(??_Lcd_Init_8bits+0)+0,f
  3586  0468  0BF2               	goto	u1287
  3587  0469  2C68               opt asmopt_pop
  3588                           
  3589                           	line	199
  3590                           	
  3591                           l1392:	
  3592  046A                     ;LCD.c: 199:     Lcd_Cmd_8bits(0x030);
  3593                           	movlw	low(030h)
  3594  046A  3030               	fcall	_Lcd_Cmd_8bits
  3595  046B  120A  118A  2381  120A  118A  	line	200
  3596                           	
  3597                           l1394:	
  3598  0470                     ;LCD.c: 200:     _delay((unsigned long)((160)*(500000/4000000.0)));
  3599                           	opt asmopt_push
  3600                           opt asmopt_off
  3601                           	movlw	6
  3602  0470  3006               movwf	((??_Lcd_Init_8bits+0)+0),f
  3603  0471  00F2               	u1297:
  3604  0472                     decfsz	(??_Lcd_Init_8bits+0)+0,f
  3605  0472  0BF2               	goto	u1297
  3606  0473  2C72               	nop
  3607  0474  0000               opt asmopt_pop
  3608                           
  3609                           	line	201
  3610                           	
  3611                           l1396:	
  3612  0475                     ;LCD.c: 201:     Lcd_Cmd_8bits(0x030);
  3613                           	movlw	low(030h)
  3614  0475  3030               	fcall	_Lcd_Cmd_8bits
  3615  0476  120A  118A  2381  120A  118A  	line	202
  3616                           	
  3617                           l1398:	
  3618  047B                     ;LCD.c: 202:     _delay((unsigned long)((160)*(500000/4000000.0)));
  3619                           	opt asmopt_push
  3620                           opt asmopt_off
  3621                           	movlw	6
  3622  047B  3006               movwf	((??_Lcd_Init_8bits+0)+0),f
  3623  047C  00F2               	u1307:
  3624  047D                     decfsz	(??_Lcd_Init_8bits+0)+0,f
  3625  047D  0BF2               	goto	u1307
  3626  047E  2C7D               	nop
  3627  047F  0000               opt asmopt_pop
  3628                           
  3629                           	line	204
  3630                           	
  3631                           l1400:	
  3632  0480                     ;LCD.c: 204:     Lcd_Cmd_8bits(0x38);
  3633                           	movlw	low(038h)
  3634  0480  3038               	fcall	_Lcd_Cmd_8bits
  3635  0481  120A  118A  2381  120A  118A  	line	208
  3636                           	
  3637                           l1402:	
  3638  0486                     ;LCD.c: 208:     Lcd_Cmd_8bits(0x14);
  3639                           	movlw	low(014h)
  3640  0486  3014               	fcall	_Lcd_Cmd_8bits
  3641  0487  120A  118A  2381  120A  118A  	line	209
  3642                           	
  3643                           l1404:	
  3644  048C                     ;LCD.c: 209:     Lcd_Cmd_8bits(0x6);
  3645                           	movlw	low(06h)
  3646  048C  3006               	fcall	_Lcd_Cmd_8bits
  3647  048D  120A  118A  2381  120A  118A  	line	210
  3648                           	
  3649                           l1406:	
  3650  0492                     ;LCD.c: 210:     Lcd_Cmd_8bits(0xc);
  3651                           	movlw	low(0Ch)
  3652  0492  300C               	fcall	_Lcd_Cmd_8bits
  3653  0493  120A  118A  2381  120A  118A  	line	211
  3654                           	
  3655                           l1408:	
  3656  0498                     ;LCD.c: 211:     Lcd_Cmd_8bits(0x2);
  3657                           	movlw	low(02h)
  3658  0498  3002               	fcall	_Lcd_Cmd_8bits
  3659  0499  120A  118A  2381  120A  118A  	line	212
  3660                           	
  3661                           l233:	
  3662  049E                     	return
  3663  049E  0008               	opt stack 0
  3664                           GLOBAL	__end_of_Lcd_Init_8bits
  3665                           	__end_of_Lcd_Init_8bits:
  3666  049F                     	signat	_Lcd_Init_8bits,89
  3667                           	global	_ConvNum
  3668                           
  3669 ;; *************** function _ConvNum *****************
  3670 ;; Defined at:
  3671 ;;		line 229 in file "MainSPIRaspMaster.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  digito          2    7[COMMON] int 
  3674 ;;  punt            1    9[COMMON] unsigned char 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  numerito        2   11[COMMON] int 
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  1    wreg      void 
  3679 ;; Registers used:
  3680 ;;		wreg, status,2, status,0, pclath, cstack
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3686 ;;      Params:         3       0       0       0       0
  3687 ;;      Locals:         2       0       0       0       0
  3688 ;;      Temps:          1       0       0       0       0
  3689 ;;      Totals:         6       0       0       0       0
  3690 ;;Total ram usage:        6 bytes
  3691 ;; Hardware stack levels used:    1
  3692 ;; Hardware stack levels required when called:    2
  3693 ;; This function calls:
  3694 ;;		_Lcd_Set_Cursor_8bits
  3695 ;;		_Lcd_Write_Char
  3696 ;; This function is called by:
  3697 ;;		_main
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3701                           	file	"MainSPIRaspMaster.c"
  3702                           	line	229
  3703                           global __ptext12
  3704                           __ptext12:	;psect for function _ConvNum
  3705  03C5                     psect	text12
  3706                           	file	"MainSPIRaspMaster.c"
  3707                           	line	229
  3708                           	global	__size_of_ConvNum
  3709                           	__size_of_ConvNum	equ	__end_of_ConvNum-_ConvNum
  3710  001F                     	
  3711                           _ConvNum:	
  3712  03C5                     ;incstack = 0
  3713                           	opt	stack 5
  3714                           ; Regs used in _ConvNum: [wreg+status,2+status,0+pclath+cstack]
  3715                           	line	230
  3716                           	
  3717                           l1420:	
  3718  03C5                     ;MainSPIRaspMaster.c: 230:     Lcd_Set_Cursor_8bits(2,punt);
  3719                           	movf	(ConvNum@punt),w
  3720  03C5  0879               	movwf	(??_ConvNum+0)+0
  3721  03C6  00FA               	movf	(??_ConvNum+0)+0,w
  3722  03C7  087A               	movwf	(Lcd_Set_Cursor_8bits@x)
  3723  03C8  00F2               	movlw	low(02h)
  3724  03C9  3002               	fcall	_Lcd_Set_Cursor_8bits
  3725  03CA  120A  118A  23A7  120A  118A  	line	231
  3726                           	
  3727                           l1422:	
  3728  03CF                     ;MainSPIRaspMaster.c: 231:     int numerito = 0;
  3729                           	clrf	(ConvNum@numerito)
  3730  03CF  01FB               	clrf	(ConvNum@numerito+1)
  3731  03D0  01FC               	line	232
  3732                           	
  3733                           l1424:	
  3734  03D1                     ;MainSPIRaspMaster.c: 232:     numerito = digito + 48;
  3735                           	movf	(ConvNum@digito),w
  3736  03D1  0877               	addlw	low(030h)
  3737  03D2  3E30               	movwf	(ConvNum@numerito)
  3738  03D3  00FB               	movf	(ConvNum@digito+1),w
  3739  03D4  0878               	skipnc
  3740  03D5  1803               	addlw	1
  3741  03D6  3E01               	addlw	high(030h)
  3742  03D7  3E00               	movwf	1+(ConvNum@numerito)
  3743  03D8  00FC               	line	233
  3744                           	
  3745                           l1426:	
  3746  03D9                     ;MainSPIRaspMaster.c: 233:     Lcd_Write_Char(numerito,8);
  3747                           	movlw	08h
  3748  03D9  3008               	movwf	(Lcd_Write_Char@modo)
  3749  03DA  00F1               	movlw	0
  3750  03DB  3000               	movwf	((Lcd_Write_Char@modo))+1
  3751  03DC  00F2               	movf	(ConvNum@numerito),w
  3752  03DD  087B               	fcall	_Lcd_Write_Char
  3753  03DE  120A  118A  24EA  120A  118A  	line	234
  3754                           	
  3755                           l160:	
  3756  03E3                     	return
  3757  03E3  0008               	opt stack 0
  3758                           GLOBAL	__end_of_ConvNum
  3759                           	__end_of_ConvNum:
  3760  03E4                     	signat	_ConvNum,8313
  3761                           	global	_Lcd_Write_Char
  3762                           
  3763 ;; *************** function _Lcd_Write_Char *****************
  3764 ;; Defined at:
  3765 ;;		line 98 in file "LCD.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  a               1    wreg     unsigned char 
  3768 ;;  modo            2    1[COMMON] int 
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;  a               1    6[COMMON] unsigned char 
  3771 ;;  y               1    5[COMMON] unsigned char 
  3772 ;;  temp            1    4[COMMON] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0, pclath, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3782 ;;      Params:         2       0       0       0       0
  3783 ;;      Locals:         3       0       0       0       0
  3784 ;;      Temps:          1       0       0       0       0
  3785 ;;      Totals:         6       0       0       0       0
  3786 ;;Total ram usage:        6 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    1
  3789 ;; This function calls:
  3790 ;;		_Lcd_Port
  3791 ;; This function is called by:
  3792 ;;		_main
  3793 ;;		_ConvNum
  3794 ;;		_Lcd_Write_String
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3798                           	file	"LCD.c"
  3799                           	line	98
  3800                           global __ptext13
  3801                           __ptext13:	;psect for function _Lcd_Write_Char
  3802  04EA                     psect	text13
  3803                           	file	"LCD.c"
  3804                           	line	98
  3805                           	global	__size_of_Lcd_Write_Char
  3806                           	__size_of_Lcd_Write_Char	equ	__end_of_Lcd_Write_Char-_Lcd_Write_Char
  3807  0054                     	
  3808                           _Lcd_Write_Char:	
  3809  04EA                     ;incstack = 0
  3810                           	opt	stack 5
  3811                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3812                           ;Lcd_Write_Char@a stored from wreg
  3813                           	movwf	(Lcd_Write_Char@a)
  3814  04EA  00F6               	line	100
  3815                           	
  3816                           l1236:	
  3817  04EB                     ;LCD.c: 98: void Lcd_Write_Char(char a,int modo);LCD.c: 99: {;LCD.c: 100:     if(modo==4
                                 )
  3818                           		movlw	4
  3819  04EB  3004               	xorwf	((Lcd_Write_Char@modo)),w
  3820  04EC  0671               iorwf	((Lcd_Write_Char@modo+1)),w
  3821  04ED  0472               	btfss	status,2
  3822  04EE  1D03               	goto	u451
  3823  04EF  2CF1               	goto	u450
  3824  04F0  2CF2               u451:
  3825  04F1                     	goto	l1258
  3826  04F1  2D26               u450:
  3827  04F2                     	line	103
  3828                           	
  3829                           l1238:	
  3830  04F2                     ;LCD.c: 101:     {;LCD.c: 102:    char temp,y;;LCD.c: 103:    temp = a&0x0F;
  3831                           	movf	(Lcd_Write_Char@a),w
  3832  04F2  0876               	andlw	0Fh
  3833  04F3  390F               	movwf	(??_Lcd_Write_Char+0)+0
  3834  04F4  00F3               	movf	(??_Lcd_Write_Char+0)+0,w
  3835  04F5  0873               	movwf	(Lcd_Write_Char@temp)
  3836  04F6  00F4               	line	104
  3837                           ;LCD.c: 104:    y = a&0xF0;
  3838                           	movf	(Lcd_Write_Char@a),w
  3839  04F7  0876               	andlw	0F0h
  3840  04F8  39F0               	movwf	(??_Lcd_Write_Char+0)+0
  3841  04F9  00F3               	movf	(??_Lcd_Write_Char+0)+0,w
  3842  04FA  0873               	movwf	(Lcd_Write_Char@y)
  3843  04FB  00F5               	line	105
  3844                           	
  3845                           l1240:	
  3846  04FC                     ;LCD.c: 105:    PORTEbits.RE0 = 1;
  3847                           	bcf	status, 5	;RP0=0, select bank0
  3848  04FC  1283               	bcf	status, 6	;RP1=0, select bank0
  3849  04FD  1303               	bsf	(9),0	;volatile
  3850  04FE  1409               	line	106
  3851                           	
  3852                           l1242:	
  3853  04FF                     ;LCD.c: 106:    Lcd_Port(y>>4);
  3854                           	movf	(Lcd_Write_Char@y),w
  3855  04FF  0875               	movwf	(??_Lcd_Write_Char+0)+0
  3856  0500  00F3               	movlw	04h
  3857  0501  3004               u465:
  3858  0502                     	clrc
  3859  0502  1003               	rrf	(??_Lcd_Write_Char+0)+0,f
  3860  0503  0CF3               	addlw	-1
  3861  0504  3EFF               	skipz
  3862  0505  1D03               	goto	u465
  3863  0506  2D02               	movf	0+(??_Lcd_Write_Char+0)+0,w
  3864  0507  0873               	fcall	_Lcd_Port
  3865  0508  120A  118A  2406  120A  118A  	line	107
  3866                           	
  3867                           l1244:	
  3868  050D                     ;LCD.c: 107:    PORTEbits.RE1 = 1;
  3869                           	bcf	status, 5	;RP0=0, select bank0
  3870  050D  1283               	bcf	status, 6	;RP1=0, select bank0
  3871  050E  1303               	bsf	(9),1	;volatile
  3872  050F  1489               	line	108
  3873                           	
  3874                           l1246:	
  3875  0510                     ;LCD.c: 108:    _delay((unsigned long)((40)*(500000/4000000.0)));
  3876                           		opt asmopt_push
  3877                           	opt asmopt_off
  3878                           	nop2	;2 cycle nop
  3879  0510  2D11               	nop2	;2 cycle nop
  3880  0511  2D12               	nop
  3881  0512  0000               	opt asmopt_pop
  3882                           
  3883                           	line	109
  3884                           	
  3885                           l1248:	
  3886  0513                     ;LCD.c: 109:    PORTEbits.RE1 = 0;
  3887                           	bcf	status, 5	;RP0=0, select bank0
  3888  0513  1283               	bcf	status, 6	;RP1=0, select bank0
  3889  0514  1303               	bcf	(9),1	;volatile
  3890  0515  1089               	line	110
  3891                           	
  3892                           l1250:	
  3893  0516                     ;LCD.c: 110:    Lcd_Port(temp);
  3894                           	movf	(Lcd_Write_Char@temp),w
  3895  0516  0874               	fcall	_Lcd_Port
  3896  0517  120A  118A  2406  120A  118A  	line	111
  3897                           	
  3898                           l1252:	
  3899  051C                     ;LCD.c: 111:    PORTEbits.RE1 = 1;
  3900                           	bcf	status, 5	;RP0=0, select bank0
  3901  051C  1283               	bcf	status, 6	;RP1=0, select bank0
  3902  051D  1303               	bsf	(9),1	;volatile
  3903  051E  1489               	line	112
  3904                           	
  3905                           l1254:	
  3906  051F                     ;LCD.c: 112:    _delay((unsigned long)((40)*(500000/4000000.0)));
  3907                           		opt asmopt_push
  3908                           	opt asmopt_off
  3909                           	nop2	;2 cycle nop
  3910  051F  2D20               	nop2	;2 cycle nop
  3911  0520  2D21               	nop
  3912  0521  0000               	opt asmopt_pop
  3913                           
  3914                           	line	113
  3915                           	
  3916                           l1256:	
  3917  0522                     ;LCD.c: 113:    PORTEbits.RE1 = 0;
  3918                           	bcf	status, 5	;RP0=0, select bank0
  3919  0522  1283               	bcf	status, 6	;RP1=0, select bank0
  3920  0523  1303               	bcf	(9),1	;volatile
  3921  0524  1089               	line	114
  3922                           ;LCD.c: 114:     }
  3923                           	goto	l200
  3924  0525  2D3D               	line	117
  3925                           ;LCD.c: 117:     else if(modo==8)
  3926                           	
  3927                           l197:	
  3928  0526                     	
  3929                           l1258:	
  3930  0526                     		movlw	8
  3931  0526  3008               	xorwf	((Lcd_Write_Char@modo)),w
  3932  0527  0671               iorwf	((Lcd_Write_Char@modo+1)),w
  3933  0528  0472               	btfss	status,2
  3934  0529  1D03               	goto	u471
  3935  052A  2D2C               	goto	u470
  3936  052B  2D2D               u471:
  3937  052C                     	goto	l200
  3938  052C  2D3D               u470:
  3939  052D                     	line	119
  3940                           	
  3941                           l1260:	
  3942  052D                     ;LCD.c: 118:     {;LCD.c: 119:     PORTEbits.RE0 = 1;
  3943                           	bcf	status, 5	;RP0=0, select bank0
  3944  052D  1283               	bcf	status, 6	;RP1=0, select bank0
  3945  052E  1303               	bsf	(9),0	;volatile
  3946  052F  1409               	line	120
  3947                           	
  3948                           l1262:	
  3949  0530                     ;LCD.c: 120:     PORTB = a;
  3950                           	movf	(Lcd_Write_Char@a),w
  3951  0530  0876               	movwf	(6)	;volatile
  3952  0531  0086               	line	121
  3953                           	
  3954                           l1264:	
  3955  0532                     ;LCD.c: 121:     PORTEbits.RE1 = 1;
  3956                           	bsf	(9),1	;volatile
  3957  0532  1489               	line	122
  3958                           ;LCD.c: 122:     _delay((unsigned long)((1)*(500000/4000.0)));
  3959                           	opt asmopt_push
  3960                           opt asmopt_off
  3961                           	movlw	41
  3962  0533  3029               movwf	((??_Lcd_Write_Char+0)+0),f
  3963  0534  00F3               	u1317:
  3964  0535                     decfsz	(??_Lcd_Write_Char+0)+0,f
  3965  0535  0BF3               	goto	u1317
  3966  0536  2D35               	nop
  3967  0537  0000               opt asmopt_pop
  3968                           
  3969                           	line	123
  3970                           	
  3971                           l1266:	
  3972  0538                     ;LCD.c: 123:     PORTEbits.RE1 = 0;
  3973                           	bcf	status, 5	;RP0=0, select bank0
  3974  0538  1283               	bcf	status, 6	;RP1=0, select bank0
  3975  0539  1303               	bcf	(9),1	;volatile
  3976  053A  1089               	goto	l200
  3977  053B  2D3D               	line	124
  3978                           ;LCD.c: 124:     }
  3979                           	
  3980                           l199:	
  3981  053C                     	goto	l200
  3982  053C  2D3D               	
  3983                           l198:	
  3984  053D                     	line	125
  3985                           	
  3986                           l200:	
  3987  053D                     	return
  3988  053D  0008               	opt stack 0
  3989                           GLOBAL	__end_of_Lcd_Write_Char
  3990                           	__end_of_Lcd_Write_Char:
  3991  053E                     	signat	_Lcd_Write_Char,8313
  3992                           	global	_Lcd_Port
  3993                           
  3994 ;; *************** function _Lcd_Port *****************
  3995 ;; Defined at:
  3996 ;;		line 20 in file "LCD.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  a               1    wreg     unsigned char 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  a               1    0[COMMON] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4010 ;;      Params:         0       0       0       0       0
  4011 ;;      Locals:         1       0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0
  4013 ;;      Totals:         1       0       0       0       0
  4014 ;;Total ram usage:        1 bytes
  4015 ;; Hardware stack levels used:    1
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_Lcd_Write_Char
  4020 ;;		_Lcd_Cmd
  4021 ;;		_Lcd_Init
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4025                           	line	20
  4026                           global __ptext14
  4027                           __ptext14:	;psect for function _Lcd_Port
  4028  0406                     psect	text14
  4029                           	file	"LCD.c"
  4030                           	line	20
  4031                           	global	__size_of_Lcd_Port
  4032                           	__size_of_Lcd_Port	equ	__end_of_Lcd_Port-_Lcd_Port
  4033  0023                     	
  4034                           _Lcd_Port:	
  4035  0406                     ;incstack = 0
  4036                           	opt	stack 5
  4037                           ; Regs used in _Lcd_Port: [wreg]
  4038                           ;Lcd_Port@a stored from wreg
  4039                           	movwf	(Lcd_Port@a)
  4040  0406  00F0               	line	23
  4041                           	
  4042                           l1198:	
  4043  0407                     ;LCD.c: 20: void Lcd_Port(char a);LCD.c: 21: {;LCD.c: 23:  if(a & 1)
  4044                           	btfss	(Lcd_Port@a),(0)&7
  4045  0407  1C70               	goto	u371
  4046  0408  2C0A               	goto	u370
  4047  0409  2C0B               u371:
  4048  040A                     	goto	l171
  4049  040A  2C0F               u370:
  4050  040B                     	line	24
  4051                           	
  4052                           l1200:	
  4053  040B                     ;LCD.c: 24:   PORTBbits.RB4 = 1;
  4054                           	bcf	status, 5	;RP0=0, select bank0
  4055  040B  1283               	bcf	status, 6	;RP1=0, select bank0
  4056  040C  1303               	bsf	(6),4	;volatile
  4057  040D  1606               	goto	l172
  4058  040E  2C12               	line	25
  4059                           ;LCD.c: 25:  else
  4060                           	
  4061                           l171:	
  4062  040F                     	line	26
  4063                           ;LCD.c: 26:   PORTBbits.RB4 = 0;
  4064                           	bcf	status, 5	;RP0=0, select bank0
  4065  040F  1283               	bcf	status, 6	;RP1=0, select bank0
  4066  0410  1303               	bcf	(6),4	;volatile
  4067  0411  1206               	
  4068                           l172:	
  4069  0412                     	line	28
  4070                           ;LCD.c: 28:  if(a & 2)
  4071                           	btfss	(Lcd_Port@a),(1)&7
  4072  0412  1CF0               	goto	u381
  4073  0413  2C15               	goto	u380
  4074  0414  2C16               u381:
  4075  0415                     	goto	l173
  4076  0415  2C18               u380:
  4077  0416                     	line	29
  4078                           	
  4079                           l1202:	
  4080  0416                     ;LCD.c: 29:   PORTBbits.RB5 = 1;
  4081                           	bsf	(6),5	;volatile
  4082  0416  1686               	goto	l174
  4083  0417  2C19               	line	30
  4084                           ;LCD.c: 30:  else
  4085                           	
  4086                           l173:	
  4087  0418                     	line	31
  4088                           ;LCD.c: 31:   PORTBbits.RB5 = 0;
  4089                           	bcf	(6),5	;volatile
  4090  0418  1286               	
  4091                           l174:	
  4092  0419                     	line	33
  4093                           ;LCD.c: 33:  if(a & 4)
  4094                           	btfss	(Lcd_Port@a),(2)&7
  4095  0419  1D70               	goto	u391
  4096  041A  2C1C               	goto	u390
  4097  041B  2C1D               u391:
  4098  041C                     	goto	l175
  4099  041C  2C1F               u390:
  4100  041D                     	line	34
  4101                           	
  4102                           l1204:	
  4103  041D                     ;LCD.c: 34:   PORTBbits.RB6 = 1;
  4104                           	bsf	(6),6	;volatile
  4105  041D  1706               	goto	l176
  4106  041E  2C20               	line	35
  4107                           ;LCD.c: 35:  else
  4108                           	
  4109                           l175:	
  4110  041F                     	line	36
  4111                           ;LCD.c: 36:   PORTBbits.RB6 = 0;
  4112                           	bcf	(6),6	;volatile
  4113  041F  1306               	
  4114                           l176:	
  4115  0420                     	line	38
  4116                           ;LCD.c: 38:  if(a & 8)
  4117                           	btfss	(Lcd_Port@a),(3)&7
  4118  0420  1DF0               	goto	u401
  4119  0421  2C23               	goto	u400
  4120  0422  2C24               u401:
  4121  0423                     	goto	l177
  4122  0423  2C26               u400:
  4123  0424                     	line	39
  4124                           	
  4125                           l1206:	
  4126  0424                     ;LCD.c: 39:   PORTBbits.RB7 = 1;
  4127                           	bsf	(6),7	;volatile
  4128  0424  1786               	goto	l179
  4129  0425  2C28               	line	40
  4130                           ;LCD.c: 40:  else
  4131                           	
  4132                           l177:	
  4133  0426                     	line	41
  4134                           ;LCD.c: 41:   PORTBbits.RB7 = 0;
  4135                           	bcf	(6),7	;volatile
  4136  0426  1386               	goto	l179
  4137  0427  2C28               	
  4138                           l178:	
  4139  0428                     	line	42
  4140                           	
  4141                           l179:	
  4142  0428                     	return
  4143  0428  0008               	opt stack 0
  4144                           GLOBAL	__end_of_Lcd_Port
  4145                           	__end_of_Lcd_Port:
  4146  0429                     	signat	_Lcd_Port,4217
  4147                           	global	_Lcd_Set_Cursor_8bits
  4148                           
  4149 ;; *************** function _Lcd_Set_Cursor_8bits *****************
  4150 ;; Defined at:
  4151 ;;		line 179 in file "LCD.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;  y               1    wreg     unsigned char 
  4154 ;;  x               1    2[COMMON] unsigned char 
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  y               1    3[COMMON] unsigned char 
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		wreg, status,2, status,0, pclath, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4166 ;;      Params:         1       0       0       0       0
  4167 ;;      Locals:         1       0       0       0       0
  4168 ;;      Temps:          0       0       0       0       0
  4169 ;;      Totals:         2       0       0       0       0
  4170 ;;Total ram usage:        2 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    1
  4173 ;; This function calls:
  4174 ;;		_Lcd_Cmd_8bits
  4175 ;; This function is called by:
  4176 ;;		_main
  4177 ;;		_ConvNum
  4178 ;; This function uses a non-reentrant model
  4179 ;;
  4180                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4181                           	line	179
  4182                           global __ptext15
  4183                           __ptext15:	;psect for function _Lcd_Set_Cursor_8bits
  4184  03A7                     psect	text15
  4185                           	file	"LCD.c"
  4186                           	line	179
  4187                           	global	__size_of_Lcd_Set_Cursor_8bits
  4188                           	__size_of_Lcd_Set_Cursor_8bits	equ	__end_of_Lcd_Set_Cursor_8bits-_Lcd_Set_Cursor_8bits

  4189  001E                     	
  4190                           _Lcd_Set_Cursor_8bits:	
  4191  03A7                     ;incstack = 0
  4192                           	opt	stack 6
  4193                           ; Regs used in _Lcd_Set_Cursor_8bits: [wreg+status,2+status,0+pclath+cstack]
  4194                           ;Lcd_Set_Cursor_8bits@y stored from wreg
  4195                           	movwf	(Lcd_Set_Cursor_8bits@y)
  4196  03A7  00F3               	line	182
  4197                           	
  4198                           l1228:	
  4199  03A8                     ;LCD.c: 179: void Lcd_Set_Cursor_8bits(unsigned char y, unsigned char x);LCD.c: 180: {;L
                                 CD.c: 182:     if(y == 1)
  4200                           		decf	((Lcd_Set_Cursor_8bits@y)),w
  4201  03A8  0373               	btfss	status,2
  4202  03A9  1D03               	goto	u431
  4203  03AA  2BAC               	goto	u430
  4204  03AB  2BAD               u431:
  4205  03AC                     	goto	l1232
  4206  03AC  2BB5               u430:
  4207  03AD                     	line	184
  4208                           	
  4209                           l1230:	
  4210  03AD                     ;LCD.c: 183:  {;LCD.c: 184:         Lcd_Cmd_8bits(0x80 + x - 1);
  4211                           	movf	(Lcd_Set_Cursor_8bits@x),w
  4212  03AD  0872               	addlw	07Fh
  4213  03AE  3E7F               	fcall	_Lcd_Cmd_8bits
  4214  03AF  120A  118A  2381  120A  118A  	line	185
  4215                           ;LCD.c: 185:  }
  4216                           	goto	l230
  4217  03B4  2BC4               	line	187
  4218                           ;LCD.c: 187:  else if(y == 2)
  4219                           	
  4220                           l227:	
  4221  03B5                     	
  4222                           l1232:	
  4223  03B5                     		movlw	2
  4224  03B5  3002               	xorwf	((Lcd_Set_Cursor_8bits@y)),w
  4225  03B6  0673               	btfss	status,2
  4226  03B7  1D03               	goto	u441
  4227  03B8  2BBA               	goto	u440
  4228  03B9  2BBB               u441:
  4229  03BA                     	goto	l230
  4230  03BA  2BC4               u440:
  4231  03BB                     	line	189
  4232                           	
  4233                           l1234:	
  4234  03BB                     ;LCD.c: 188:  {;LCD.c: 189:   Lcd_Cmd_8bits(0xC0 + x - 1);
  4235                           	movf	(Lcd_Set_Cursor_8bits@x),w
  4236  03BB  0872               	addlw	0BFh
  4237  03BC  3EBF               	fcall	_Lcd_Cmd_8bits
  4238  03BD  120A  118A  2381  120A  118A  	goto	l230
  4239  03C2  2BC4               	line	190
  4240                           ;LCD.c: 190:  }
  4241                           	
  4242                           l229:	
  4243  03C3                     	goto	l230
  4244  03C3  2BC4               	
  4245                           l228:	
  4246  03C4                     	line	191
  4247                           	
  4248                           l230:	
  4249  03C4                     	return
  4250  03C4  0008               	opt stack 0
  4251                           GLOBAL	__end_of_Lcd_Set_Cursor_8bits
  4252                           	__end_of_Lcd_Set_Cursor_8bits:
  4253  03C5                     	signat	_Lcd_Set_Cursor_8bits,8313
  4254                           	global	_Lcd_Cmd_8bits
  4255                           
  4256 ;; *************** function _Lcd_Cmd_8bits *****************
  4257 ;; Defined at:
  4258 ;;		line 149 in file "LCD.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;  comando         1    wreg     unsigned char 
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  comando         1    1[COMMON] unsigned char 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		wreg
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4272 ;;      Params:         0       0       0       0       0
  4273 ;;      Locals:         1       0       0       0       0
  4274 ;;      Temps:          1       0       0       0       0
  4275 ;;      Totals:         2       0       0       0       0
  4276 ;;Total ram usage:        2 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; This function calls:
  4279 ;;		Nothing
  4280 ;; This function is called by:
  4281 ;;		_Lcd_Set_Cursor_8bits
  4282 ;;		_Lcd_Init_8bits
  4283 ;;		_Lcd_Clear_8bits
  4284 ;;		_Lcd_Shift_Right_8bits
  4285 ;;		_Lcd_Shift_Left_8bits
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4289                           	line	149
  4290                           global __ptext16
  4291                           __ptext16:	;psect for function _Lcd_Cmd_8bits
  4292  0381                     psect	text16
  4293                           	file	"LCD.c"
  4294                           	line	149
  4295                           	global	__size_of_Lcd_Cmd_8bits
  4296                           	__size_of_Lcd_Cmd_8bits	equ	__end_of_Lcd_Cmd_8bits-_Lcd_Cmd_8bits
  4297  0010                     	
  4298                           _Lcd_Cmd_8bits:	
  4299  0381                     ;incstack = 0
  4300                           	opt	stack 6
  4301                           ; Regs used in _Lcd_Cmd_8bits: [wreg]
  4302                           ;Lcd_Cmd_8bits@comando stored from wreg
  4303                           	movwf	(Lcd_Cmd_8bits@comando)
  4304  0381  00F1               	line	151
  4305                           	
  4306                           l1208:	
  4307  0382                     ;LCD.c: 149: void Lcd_Cmd_8bits(unsigned char comando);LCD.c: 150: {;LCD.c: 151:  PORTEb
                                 its.RE0 = 0;
  4308                           	bcf	status, 5	;RP0=0, select bank0
  4309  0382  1283               	bcf	status, 6	;RP1=0, select bank0
  4310  0383  1303               	bcf	(9),0	;volatile
  4311  0384  1009               	line	152
  4312                           	
  4313                           l1210:	
  4314  0385                     ;LCD.c: 152:  PORTB = comando;
  4315                           	movf	(Lcd_Cmd_8bits@comando),w
  4316  0385  0871               	movwf	(6)	;volatile
  4317  0386  0086               	line	154
  4318                           	
  4319                           l1212:	
  4320  0387                     ;LCD.c: 154:     PORTEbits.RE1 = 1;
  4321                           	bsf	(9),1	;volatile
  4322  0387  1489               	line	155
  4323                           ;LCD.c: 155:     _delay((unsigned long)((4)*(500000/4000.0)));
  4324                           	opt asmopt_push
  4325                           opt asmopt_off
  4326                           	movlw	166
  4327  0388  30A6               movwf	((??_Lcd_Cmd_8bits+0)+0),f
  4328  0389  00F0               	u1327:
  4329  038A                     decfsz	(??_Lcd_Cmd_8bits+0)+0,f
  4330  038A  0BF0               	goto	u1327
  4331  038B  2B8A               	nop
  4332  038C  0000               opt asmopt_pop
  4333                           
  4334                           	line	156
  4335                           	
  4336                           l1214:	
  4337  038D                     ;LCD.c: 156:     PORTEbits.RE1 = 0;
  4338                           	bcf	status, 5	;RP0=0, select bank0
  4339  038D  1283               	bcf	status, 6	;RP1=0, select bank0
  4340  038E  1303               	bcf	(9),1	;volatile
  4341  038F  1089               	line	158
  4342                           	
  4343                           l215:	
  4344  0390                     	return
  4345  0390  0008               	opt stack 0
  4346                           GLOBAL	__end_of_Lcd_Cmd_8bits
  4347                           	__end_of_Lcd_Cmd_8bits:
  4348  0391                     	signat	_Lcd_Cmd_8bits,4217
  4349                           global	___latbits
  4350                           ___latbits	equ	2
  4351  0002                     	global	btemp
  4352                           	btemp set 07Eh
  4353  007E                     
  4354                           	DABS	1,126,2	;btemp
  4355                           	global	wtemp0
  4356                           	wtemp0 set btemp+0
  4357  007E                     	end


Data Sizes:
    Strings     37
    Constant    0
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      2      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[2]), STR_6(CODE[2]), 
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_ConvNum
    _num_to_string->___awdiv
    _init->_spiInit
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Init_8bits->_Lcd_Cmd_8bits
    _ConvNum->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor_8bits->_Lcd_Cmd_8bits

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7176
                                              0 BANK0      2     2      0
                            _ConvNum
                     _Lcd_Init_8bits
               _Lcd_Set_Cursor_8bits
                     _Lcd_Write_Char
                   _Lcd_Write_String
                               _init
                            _initOsc
                      _num_to_string
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _num_to_string                                        2     0      2    1977
                                              9 COMMON     2     0      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     904
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2    1565
                                              7 COMMON     5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init_8bits                                       2     2      0      22
                                              2 COMMON     2     2      0
                      _Lcd_Cmd_8bits
 ---------------------------------------------------------------------------------
 (1) _ConvNum                                              6     3      3    1790
                                              7 COMMON     6     3      3
               _Lcd_Set_Cursor_8bits
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       6     4      2     472
                                              1 COMMON     6     4      2
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_8bits                                 2     1      1     946
                                              2 COMMON     2     1      1
                      _Lcd_Cmd_8bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd_8bits                                        2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConvNum
     _Lcd_Set_Cursor_8bits
       _Lcd_Cmd_8bits
     _Lcd_Write_Char
       _Lcd_Port
   _Lcd_Init_8bits
     _Lcd_Cmd_8bits
   _Lcd_Set_Cursor_8bits
     _Lcd_Cmd_8bits
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _init
     _spiInit
   _initOsc
   _num_to_string
     ___awdiv
     ___awmod
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      26      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat May 09 22:25:36 2020

                            l5 0577                              l6 0540                              l7 0599  
                            l8 0546                              l9 054C                              pc 0002  
                  __CFG_CP$OFF 0000                    _SSPSTATbits 0094                             l10 0552  
                           l11 0558                             l12 055E                             l13 0564  
                           l14 056A                             l31 039D                             l15 0570  
                           l32 03A1                             l16 059A                             l33 03A6  
                           l50 0380                             l42 0365                             l36 036F  
                           l37 036F                             l38 0376                             l39 0376  
                 ___awdiv@sign 0076                             fsr 0004                            l200 053D  
                          l203 0445                            l204 042D                            l205 0453  
                          l230 03C4                            l206 0453                            l215 0390  
                          l151 0405                            l143 06EA                            l160 03E3  
                          l144 07CB                            l233 049E                            l145 07E3  
                          l146 07EE                            l227 03B5                            l171 040F  
                          l147 07EF                            l228 03C4                            l172 0412  
                          l148 07EF                            l229 03C3                            l173 0418  
                          l157 04E9                            l174 0419                            l175 041F  
                          l176 0420                            l177 0426                            l178 0428  
                          l179 0428                            l197 0526                            l198 053D  
                          l470 065D                            l462 060B                            l199 053C  
                          l471 0669                            l463 0619                            l472 066E  
                          l464 065E                            l480 05CC                            l465 0630  
                          l481 05CD                            l466 0624                            l482 05DE  
                          l467 0635                            l483 05EC                            l475 05A8  
                          l468 0636                            l484 05F8                            l476 05B2  
                          l469 064F                            l485 05FD                            l477 05ED  
                          l478 05C7                            l479 05BB                            u400 0424  
                          u401 0423                            u410 0399                            u411 0398  
                          u500 0621                            u420 0375                            u501 0620  
                          u421 0374                            u430 03AD                            u431 03AC  
                          u440 03BB                            u520 0634                            u600 05B8  
                          u441 03BA                            u521 0633                            u601 05B7  
                          u370 040B                            u450 04F2                   __CFG_CPD$OFF 0000  
                          u371 040A                            u451 04F1                            u515 0625  
                          u380 0416                            u540 0647                            u620 05CB  
                          u381 0415                            u541 0646                            u621 05CA  
                          u390 041D                            u470 052D                            u630 05D7  
                          u391 041C                            u471 052C                            u535 0637  
                          u631 05D6                            u615 05BC                            u560 065C  
                          u480 0603                            u465 0502                            u561 065B  
                          u545 0643                            u481 0602                            u570 0663  
                          u490 060F                            u650 05EB                            u571 0662  
                          u555 0650                            u491 060E                            u651 05EA  
                          u635 05D3                            u660 05F2                            u580 05A0  
                          u661 05F1                            u645 05DF                            u581 059F  
                          u670 0452                            u590 05AC                            u671 0451  
                          u591 05AB                            u680 07B3                            u681 07B2  
                          fsr0 0004                            indf 0000                   ___awmod@sign 0076  
                 __CFG_LVP$OFF 0000        __size_of_Lcd_Init_8bits 004B                           l1200 040B  
                         l1210 0385                           l1202 0416                           l1212 0387  
                         l1204 041D                           l1220 039B                           l1300 064F  
                         l1214 038D                           l1230 03AD                           l1206 0424  
                         l1222 039D                           l1310 066E                           l1302 0656  
                         l1208 0382                           l1232 03B5                           l1240 04FC  
                         l1400 0480                           l1224 03A0                           l1216 0392  
                         l1304 065E                           l1320 05A8                           l1312 059B  
                         l1234 03BB                           l1250 0516                           l1242 04FF  
                         l1402 0486                           l1410 042A                           l1218 0399  
                         l1306 0663                           l1330 05C2                           l1322 05AC  
                         l1314 059C                           l1226 036E                           l1228 03A8  
                         l1260 052D                           l1252 051C                           l1244 050D  
                         l1236 04EB                           l1420 03C5                           l1404 048C  
                         l1412 042D                           l1308 0669                           l1340 05E5  
                         l1332 05C7                           l1324 05B2                           l1316 05A0  
                         l1500 07BD                           l1262 0530                           l1254 051F  
                         l1246 0510                           l1238 04F2                           l1422 03CF  
                         l1406 0492                           l1414 043E                           l1350 053F  
                         l1270 05FF                           l1334 05CD                           l1326 05B8  
                         l1342 05ED                           l1318 05A5                           l1510 07E3  
                         l1502 07C7                           l1264 0532                           l1256 0522  
                         l1248 0513                           l1424 03D1                           l1408 0498  
                         l1416 0445                           l1352 0576                           l1280 0614  
                         l1272 0603                           l1344 05F2                           l1336 05D7  
                         l1328 05BB                           l1360 0361                           l1504 07CB  
                         l1440 0674                           l1266 0538                           l1258 0526  
                         l1426 03D9                           l1370 03EA                           l1354 0577  
                         l1290 062B                           l1282 0619                           l1274 0608  
                         l1346 05F8                           l1338 05DE                           l1418 049F  
                         l1362 0377                           l1506 07D5                           l1450 06A7  
                         l1442 067A                           l1380 03FB                           l1372 03EB  
                         l1292 0630                           l1284 061B                           l1276 060B  
                         l1268 05FE                           l1348 05FD                           l1364 037C  
                         l1508 07DF                           l1460 06EA                           l1452 06BD  
                         l1444 067F                           l1198 0407                           l1390 0466  
                         l1382 0405                           l1374 03EC                           l1294 0636  
                         l1286 0621                           l1278 060F                           l1366 0380  
                         l1470 0731                           l1462 06FD                           l1454 06C9  
                         l1446 0687                           l1438 066F                           l1392 046A  
                         l1384 0454                           l1376 03ED                           l1368 03E4  
                         l1296 0647                           l1288 0624                           l1480 074E  
                         l1472 073B                           l1464 0707                           l1456 06D3  
                         l1448 069D                           l1394 0470                           l1386 0457  
                         l1378 03EE                           l1298 064D                           l1490 078C  
                         l1482 075D                           l1474 073E                           l1466 070D  
                         l1458 06DF                           l1396 0475                           l1388 0460  
                         l1492 0796                           l1484 076A                           l1476 0740  
                         l1468 0717                           l1398 047B                           l1494 07A2  
                         l1486 0776                           l1478 0742                           l1496 07AC  
                         l1488 0780                           l1498 07B3                           l1774 057F  
                         STR_1 0009                           STR_2 002C                           STR_3 0022  
                         STR_4 002A                           STR_5 0024                           STR_6 0028  
                         STR_7 0026                           STR_8 001A                           STR_9 001E  
                         u1307 047D                           u1317 0535                           u1237 0703  
                         u1327 038A                           u1247 071D                           u1257 0737  
                         u1267 07E9                           u1277 045B                           u1287 0468  
                         u1297 0472                   __CFG_WRT$OFF 0000              ?_Lcd_Write_String 0077  
                         _dato 0035                           _main 066F                           _init 03E4  
                         _temp 002A                           btemp 007E                  __CFG_BOREN$ON 0000  
              ??_num_to_string 007B                           start 0000             ??_Lcd_Write_String 0079  
                __CFG_IESO$OFF 0000                __end_of_ConvNum 03E4                          ?_main 0070  
                        ?_init 0070                __end_of___awdiv 066F                  __CFG_WDTE$OFF 0000  
              __end_of___awmod 05FE                          _ANSEL 0188                ___awdiv@divisor 0070  
              ___awdiv@counter 0075                          _PORTA 0005                          _PORTB 0006  
                        _PORTC 0007                          _PORTD 0008                          _PORTE 0009  
                        _TRISA 0085                          _TRISB 0086                          _TRISC 0087  
                        _TRISD 0088                          _TRISE 0089           Lcd_Write_String@modo 0077  
               __CFG_FCMEN$OFF 0000          __end_of_Lcd_Cmd_8bits 0391                          _data1 0028  
                        _data2 0026                          _data3 0024                __end_of_initOsc 059B  
                        _temp1 0022                          pclath 000A                __end_of_spiInit 03A7  
              __end_of_spiRead 0381                          status 0003                          wtemp0 007E  
             __end_of_Lcd_Port 0429                 __CFG_MCLRE$OFF 0000                __initialization 07F2  
                 __end_of_main 07F2                   __end_of_init 0406  __size_of_Lcd_Set_Cursor_8bits 001E  
                       ??_main 0036                         ??_init 0074               ___awdiv@dividend 0072  
                       _ANSELH 0189                    initOsc@frec 0072        __size_of_Lcd_Write_Char 0054  
                       _TRISC3 043B                         _TRISC5 043D                         _SSPCON 0014  
                       _SSPBUF 0013                      ??_ConvNum 007A                 __CFG_PWRTE$OFF 0000  
                    ??___awdiv 0074                         _datat1 002E                         _datat2 002D  
                       _datat3 002C                      ??___awmod 0074               ___awdiv@quotient 0077  
              ___awmod@divisor 0070                         _valor1 0033                         _valor2 007D  
                       _valor3 0032                         _valor4 0031                         _valor5 0030  
              ___awmod@counter 0075                      ??_initOsc 0070               __end_of_spiWrite 0366  
                    ??_spiInit 0073                      ??_spiRead 0070                 _Lcd_Init_8bits 0454  
      __end_of__initialization 07FC                 __pcstackCOMMON 0070         __end_of_Lcd_Init_8bits 049F  
                    ?_Lcd_Port 0070                     __pbssBANK0 0020                     __pmaintext 066F  
      __size_of_spiReceiveWait 0009      __size_of_Lcd_Write_String 002B                ?_Lcd_Init_8bits 0070  
                   ??_Lcd_Port 0070                        _SSPSTAT 0094                     __stringtab 0003  
               _Lcd_Write_Char 04EA                        _ConvNum 03C5          __end_of_num_to_string 04EA  
                    ?_spiWrite 0070                        ___awdiv 05FE                        ___awmod 059B  
                      __ptext1 0360                        __ptext2 0377                        __ptext3 036E  
                      __ptext4 049F                        __ptext5 059B                        __ptext6 05FE  
                      __ptext7 053E                        __ptext8 03E4                        __ptext9 0391  
                      _initOsc 053E               ___awmod@dividend 0072                        _spiInit 0391  
                      _spiRead 0377   __end_of_Lcd_Set_Cursor_8bits 03C5                        clrloop0 0367  
       __end_of_Lcd_Write_Char 053E           end_of_initialization 07FC                     ??_spiWrite 0070  
       __size_of_Lcd_Cmd_8bits 0010                      Lcd_Port@a 0070                     _porcentaje 0020  
                    _PORTBbits 0006                      _PORTCbits 0007                      _PORTEbits 0009  
                    _TRISCbits 0087                    spiWrite@dat 0070                ?_Lcd_Write_Char 0071  
            Lcd_Write_String@a 007B              Lcd_Write_String@i 0079                ConvNum@numerito 007B  
               _spiReceiveWait 036E               _Lcd_Write_String 0429            start_initialization 07F2  
                _Lcd_Cmd_8bits 0381          Lcd_Set_Cursor_8bits@x 0072          Lcd_Set_Cursor_8bits@y 0073  
            __size_of_Lcd_Port 0023       __CFG_FOSC$INTRC_NOCLKOUT 0000         __end_of_spiReceiveWait 0377  
         _Lcd_Set_Cursor_8bits 03A7                Lcd_Write_Char@a 0076                Lcd_Write_Char@y 0075  
             ??_Lcd_Init_8bits 0072                    __pbssCOMMON 007D                      ___latbits 0002  
                __pcstackBANK0 0036            num_to_string@numero 0079                 ?_Lcd_Cmd_8bits 0070  
                     ?_ConvNum 0077                ?_spiReceiveWait 0070                       ?___awdiv 0070  
        ?_Lcd_Set_Cursor_8bits 0072                       ?___awmod 0070              __size_of_spiWrite 0006  
                    __pstrings 0003                       ?_initOsc 0070                       ?_spiInit 0070  
                     ?_spiRead 0070           spiInit@sTransmitEdge 0072                      clear_ram0 0366  
           spiInit@sDataSample 0070                    __stringbase 0008                ??_Lcd_Cmd_8bits 0070  
             ??_Lcd_Write_Char 0073                       _Lcd_Port 0406         __size_of_num_to_string 004B  
     __end_of_Lcd_Write_String 0454               __size_of_ConvNum 001F         ??_Lcd_Set_Cursor_8bits 0073  
             __size_of___awdiv 0071               __size_of___awmod 0063             __end_of__stringtab 0009  
             __size_of_initOsc 005D                       __ptext10 0429                       __ptext11 0454  
                     __ptext12 03C5                       __ptext13 04EA                       __ptext14 0406  
                     __ptext15 03A7                       __ptext16 0381               __size_of_spiInit 0016  
             __size_of_spiRead 000A              __CFG_BOR4V$BOR40V 0000                       _contador 0034  
                     _controla 002F                  __size_of_main 0183                  __size_of_init 0022  
                _num_to_string 049F           Lcd_Cmd_8bits@comando 0071                       _spiWrite 0360  
                ConvNum@digito 0077                   spiInit@sType 0073              spiInit@sClockIdle 0071  
           Lcd_Write_Char@modo 0071             Lcd_Write_Char@temp 0074               ??_spiReceiveWait 0070  
                    stringcode 0003                     _OSCCONbits 008F                 ?_num_to_string 0079  
                     stringdir 0003                       stringtab 0003                    ConvNum@punt 0079  
