

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Mar 06 10:45:56 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_InitKeypad
  1180                           	FNCALL	_main,_Lcd_Clear_8bits
  1181                           	FNCALL	_main,_Lcd_Init_8bits
  1182                           	FNCALL	_main,_Lcd_Set_Cursor_8bits
  1183                           	FNCALL	_main,_Lcd_Write_Char
  1184                           	FNCALL	_main,_Lcd_Write_String
  1185                           	FNCALL	_main,_PWMconf
  1186                           	FNCALL	_main,_funcAdc
  1187                           	FNCALL	_main,_init
  1188                           	FNCALL	_main,_initOsc
  1189                           	FNCALL	_main,_keypad_scanner
  1190                           	FNCALL	_main,_switch_press_scan
  1191                           	FNCALL	_switch_press_scan,_keypad_scanner
  1192                           	FNCALL	_Lcd_Write_String,_Lcd_Write_Char
  1193                           	FNCALL	_Lcd_Write_Char,_Lcd_Port
  1194                           	FNCALL	_Lcd_Set_Cursor_8bits,_Lcd_Cmd_8bits
  1195                           	FNCALL	_Lcd_Init_8bits,_Lcd_Cmd_8bits
  1196                           	FNCALL	_Lcd_Clear_8bits,_Lcd_Cmd_8bits
  1197                           	FNROOT	_main
  1198                           	FNCALL	intlevel1,_interrupciones
  1199                           	global	intlevel1
  1200                           	FNROOT	intlevel1
  1201                           	global	_contrasena
  1202                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1203                           global __pidataBANK0
  1204                           __pidataBANK0:
  1205  0714                     	file	"mainS1proyect.c"
  1206                           	line	53
  1207                           
  1208                           ;initializer for _contrasena
  1209                           	retlw	031h
  1210  0714  3431               	retlw	037h
  1211  0715  3437               	retlw	033h
  1212  0716  3433               	retlw	030h
  1213  0717  3430               	retlw	038h
  1214  0718  3438               	global	_res
  1215                           	global	_compara
  1216                           	global	_cont
  1217                           	global	_contraAct
  1218                           	global	_INTCONbits
  1219                           _INTCONbits	set	0xB
  1220  000B                     	global	_PORTBbits
  1221                           _PORTBbits	set	0x6
  1222  0006                     	global	_SSPBUF
  1223                           _SSPBUF	set	0x13
  1224  0013                     	global	_SSPCON
  1225                           _SSPCON	set	0x14
  1226  0014                     	global	_T2CONbits
  1227                           _T2CONbits	set	0x12
  1228  0012                     	global	_CCP1CONbits
  1229                           _CCP1CONbits	set	0x17
  1230  0017                     	global	_PORTE
  1231                           _PORTE	set	0x9
  1232  0009                     	global	_PORTC
  1233                           _PORTC	set	0x7
  1234  0007                     	global	_PORTD
  1235                           _PORTD	set	0x8
  1236  0008                     	global	_PORTB
  1237                           _PORTB	set	0x6
  1238  0006                     	global	_PORTA
  1239                           _PORTA	set	0x5
  1240  0005                     	global	_CCPR1L
  1241                           _CCPR1L	set	0x15
  1242  0015                     	global	_ADCON0bits
  1243                           _ADCON0bits	set	0x1F
  1244  001F                     	global	_PORTEbits
  1245                           _PORTEbits	set	0x9
  1246  0009                     	global	_ADRESH
  1247                           _ADRESH	set	0x1E
  1248  001E                     	global	_PIR1bits
  1249                           _PIR1bits	set	0xC
  1250  000C                     	global	_RD7
  1251                           _RD7	set	0x47
  1252  0047                     	global	_RD6
  1253                           _RD6	set	0x46
  1254  0046                     	global	_RD5
  1255                           _RD5	set	0x45
  1256  0045                     	global	_RD4
  1257                           _RD4	set	0x44
  1258  0044                     	global	_RD3
  1259                           _RD3	set	0x43
  1260  0043                     	global	_RD2
  1261                           _RD2	set	0x42
  1262  0042                     	global	_RD1
  1263                           _RD1	set	0x41
  1264  0041                     	global	_RD0
  1265                           _RD0	set	0x40
  1266  0040                     	global	_SSPIF
  1267                           _SSPIF	set	0x63
  1268  0063                     	global	_PEIE
  1269                           _PEIE	set	0x5E
  1270  005E                     	global	_GIE
  1271                           _GIE	set	0x5F
  1272  005F                     	global	_PIE1bits
  1273                           _PIE1bits	set	0x8C
  1274  008C                     	global	_ADCON1bits
  1275                           _ADCON1bits	set	0x9F
  1276  009F                     	global	_OPTION_REG
  1277                           _OPTION_REG	set	0x81
  1278  0081                     	global	_SSPCON2bits
  1279                           _SSPCON2bits	set	0x91
  1280  0091                     	global	_SSPSTAT
  1281                           _SSPSTAT	set	0x94
  1282  0094                     	global	_SSPADD
  1283                           _SSPADD	set	0x93
  1284  0093                     	global	_SSPCON2
  1285                           _SSPCON2	set	0x91
  1286  0091                     	global	_OSCCONbits
  1287                           _OSCCONbits	set	0x8F
  1288  008F                     	global	_PR2
  1289                           _PR2	set	0x92
  1290  0092                     	global	_TRISCbits
  1291                           _TRISCbits	set	0x87
  1292  0087                     	global	_TRISE
  1293                           _TRISE	set	0x89
  1294  0089                     	global	_TRISC
  1295                           _TRISC	set	0x87
  1296  0087                     	global	_TRISD
  1297                           _TRISD	set	0x88
  1298  0088                     	global	_TRISA
  1299                           _TRISA	set	0x85
  1300  0085                     	global	_TRISB
  1301                           _TRISB	set	0x86
  1302  0086                     	global	_SSPIE
  1303                           _SSPIE	set	0x463
  1304  0463                     	global	_TRISC4
  1305                           _TRISC4	set	0x43C
  1306  043C                     	global	_TRISC3
  1307                           _TRISC3	set	0x43B
  1308  043B                     	global	_ANSELbits
  1309                           _ANSELbits	set	0x188
  1310  0188                     	global	_ANSELH
  1311                           _ANSELH	set	0x189
  1312  0189                     	global	_ANSEL
  1313                           _ANSEL	set	0x188
  1314  0188                     psect	strings,class=STRING,delta=2,noexec
  1315                           global __pstrings
  1316                           __pstrings:
  1317  0409                     stringtab:
  1318  0409                     	global    __stringtab
  1319                           __stringtab:
  1320  0409                     ;	String table - string pointers are 1 byte each
  1321                           stringcode:stringdir:
  1322  0409                     movlw high(stringdir)
      + 0409                     stringdir:	
  1323  0409  3004               movwf pclath
  1324  040A  008A               movf fsr,w
  1325  040B  0804               incf fsr
  1326  040C  0A84               	addwf pc
  1327  040D  0782               	global __stringbase
  1328                           __stringbase:
  1329  040E                     	retlw	0
  1330  040E  3400               psect	strings
  1331                           	global    __end_of__stringtab
  1332                           __end_of__stringtab:
  1333  040F                     	
  1334                           STR_1:	
  1335  040F                     	retlw	66	;'B'
  1336  040F  3442               	retlw	105	;'i'
  1337  0410  3469               	retlw	101	;'e'
  1338  0411  3465               	retlw	110	;'n'
  1339  0412  346E               	retlw	118	;'v'
  1340  0413  3476               	retlw	101	;'e'
  1341  0414  3465               	retlw	110	;'n'
  1342  0415  346E               	retlw	105	;'i'
  1343  0416  3469               	retlw	100	;'d'
  1344  0417  3464               	retlw	111	;'o'
  1345  0418  346F               	retlw	32	;' '
  1346  0419  3420               	retlw	65	;'A'
  1347  041A  3441               	retlw	116	;'t'
  1348  041B  3474               	retlw	116	;'t'
  1349  041C  3474               	retlw	101	;'e'
  1350  041D  3465               	retlw	46	;'.'
  1351  041E  342E               	retlw	0
  1352  041F  3400               psect	strings
  1353                           	
  1354                           STR_2:	
  1355  0420                     	retlw	70	;'F'
  1356  0420  3446               	retlw	97	;'a'
  1357  0421  3461               	retlw	109	;'m'
  1358  0422  346D               	retlw	105	;'i'
  1359  0423  3469               	retlw	108	;'l'
  1360  0424  346C               	retlw	105	;'i'
  1361  0425  3469               	retlw	97	;'a'
  1362  0426  3461               	retlw	32	;' '
  1363  0427  3420               	retlw	83	;'S'
  1364  0428  3453               	retlw	97	;'a'
  1365  0429  3461               	retlw	110	;'n'
  1366  042A  346E               	retlw	97	;'a'
  1367  042B  3461               	retlw	98	;'b'
  1368  042C  3462               	retlw	114	;'r'
  1369  042D  3472               	retlw	105	;'i'
  1370  042E  3469               	retlw	97	;'a'
  1371  042F  3461               	retlw	0
  1372  0430  3400               psect	strings
  1373                           	
  1374                           STR_9:	
  1375  0431                     	retlw	73	;'I'
  1376  0431  3449               	retlw	110	;'n'
  1377  0432  346E               	retlw	116	;'t'
  1378  0433  3474               	retlw	114	;'r'
  1379  0434  3472               	retlw	111	;'o'
  1380  0435  346F               	retlw	100	;'d'
  1381  0436  3464               	retlw	117	;'u'
  1382  0437  3475               	retlw	122	;'z'
  1383  0438  347A               	retlw	99	;'c'
  1384  0439  3463               	retlw	97	;'a'
  1385  043A  3461               	retlw	32	;' '
  1386  043B  3420               	retlw	108	;'l'
  1387  043C  346C               	retlw	108	;'l'
  1388  043D  346C               	retlw	97	;'a'
  1389  043E  3461               	retlw	118	;'v'
  1390  043F  3476               	retlw	101	;'e'
  1391  0440  3465               	retlw	0
  1392  0441  3400               psect	strings
  1393                           	
  1394                           STR_6:	
  1395  0442                     	retlw	67	;'C'
  1396  0442  3443               	retlw	111	;'o'
  1397  0443  346F               	retlw	110	;'n'
  1398  0444  346E               	retlw	116	;'t'
  1399  0445  3474               	retlw	114	;'r'
  1400  0446  3472               	retlw	97	;'a'
  1401  0447  3461               	retlw	115	;'s'
  1402  0448  3473               	retlw	101	;'e'
  1403  0449  3465               	retlw	110	;'n'
  1404  044A  346E               	retlw	97	;'a'
  1405  044B  3461               	retlw	32	;' '
  1406  044C  3420               	retlw	109	;'m'
  1407  044D  346D               	retlw	97	;'a'
  1408  044E  3461               	retlw	108	;'l'
  1409  044F  346C               	retlw	97	;'a'
  1410  0450  3461               	retlw	0
  1411  0451  3400               psect	strings
  1412                           	
  1413                           STR_3:	
  1414  0452                     	retlw	80	;'P'
  1415  0452  3450               	retlw	114	;'r'
  1416  0453  3472               	retlw	101	;'e'
  1417  0454  3465               	retlw	115	;'s'
  1418  0455  3473               	retlw	105	;'i'
  1419  0456  3469               	retlw	111	;'o'
  1420  0457  346F               	retlw	110	;'n'
  1421  0458  346E               	retlw	101	;'e'
  1422  0459  3465               	retlw	32	;' '
  1423  045A  3420               	retlw	35	;'#'
  1424  045B  3423               	retlw	32	;' '
  1425  045C  3420               	retlw	112	;'p'
  1426  045D  3470               	retlw	97	;'a'
  1427  045E  3461               	retlw	114	;'r'
  1428  045F  3472               	retlw	97	;'a'
  1429  0460  3461               	retlw	0
  1430  0461  3400               psect	strings
  1431                           	
  1432                           STR_10:	
  1433  0462                     	retlw	65	;'A'
  1434  0462  3441               	retlw	98	;'b'
  1435  0463  3462               	retlw	114	;'r'
  1436  0464  3472               	retlw	105	;'i'
  1437  0465  3469               	retlw	101	;'e'
  1438  0466  3465               	retlw	110	;'n'
  1439  0467  346E               	retlw	100	;'d'
  1440  0468  3464               	retlw	111	;'o'
  1441  0469  346F               	retlw	32	;' '
  1442  046A  3420               	retlw	112	;'p'
  1443  046B  3470               	retlw	117	;'u'
  1444  046C  3475               	retlw	101	;'e'
  1445  046D  3465               	retlw	114	;'r'
  1446  046E  3472               	retlw	116	;'t'
  1447  046F  3474               	retlw	97	;'a'
  1448  0470  3461               	retlw	0
  1449  0471  3400               psect	strings
  1450                           	
  1451                           STR_8:	
  1452  0472                     	retlw	65	;'A'
  1453  0472  3441               	retlw	99	;'c'
  1454  0473  3463               	retlw	99	;'c'
  1455  0474  3463               	retlw	101	;'e'
  1456  0475  3465               	retlw	115	;'s'
  1457  0476  3473               	retlw	111	;'o'
  1458  0477  346F               	retlw	32	;' '
  1459  0478  3420               	retlw	98	;'b'
  1460  0479  3462               	retlw	114	;'r'
  1461  047A  3472               	retlw	105	;'i'
  1462  047B  3469               	retlw	110	;'n'
  1463  047C  346E               	retlw	100	;'d'
  1464  047D  3464               	retlw	97	;'a'
  1465  047E  3461               	retlw	100	;'d'
  1466  047F  3464               	retlw	111	;'o'
  1467  0480  346F               	retlw	0
  1468  0481  3400               psect	strings
  1469                           	
  1470                           STR_11:	
  1471  0482                     	retlw	66	;'B'
  1472  0482  3442               	retlw	105	;'i'
  1473  0483  3469               	retlw	101	;'e'
  1474  0484  3465               	retlw	110	;'n'
  1475  0485  346E               	retlw	118	;'v'
  1476  0486  3476               	retlw	101	;'e'
  1477  0487  3465               	retlw	110	;'n'
  1478  0488  346E               	retlw	105	;'i'
  1479  0489  3469               	retlw	100	;'d'
  1480  048A  3464               	retlw	111	;'o'
  1481  048B  346F               	retlw	32	;' '
  1482  048C  3420               	retlw	58	;':'
  1483  048D  343A               	retlw	41	;')'
  1484  048E  3429               	retlw	0
  1485  048F  3400               psect	strings
  1486                           	
  1487                           STR_5:	
  1488  0490                     	retlw	67	;'C'
  1489  0490  3443               	retlw	111	;'o'
  1490  0491  346F               	retlw	110	;'n'
  1491  0492  346E               	retlw	116	;'t'
  1492  0493  3474               	retlw	114	;'r'
  1493  0494  3472               	retlw	97	;'a'
  1494  0495  3461               	retlw	115	;'s'
  1495  0496  3473               	retlw	101	;'e'
  1496  0497  3465               	retlw	110	;'n'
  1497  0498  346E               	retlw	97	;'a'
  1498  0499  3461               	retlw	58	;':'
  1499  049A  343A               	retlw	0
  1500  049B  3400               psect	strings
  1501                           	
  1502                           STR_7:	
  1503  049C                     	retlw	105	;'i'
  1504  049C  3469               	retlw	110	;'n'
  1505  049D  346E               	retlw	116	;'t'
  1506  049E  3474               	retlw	101	;'e'
  1507  049F  3465               	retlw	110	;'n'
  1508  04A0  346E               	retlw	116	;'t'
  1509  04A1  3474               	retlw	101	;'e'
  1510  04A2  3465               	retlw	108	;'l'
  1511  04A3  346C               	retlw	111	;'o'
  1512  04A4  346F               	retlw	0
  1513  04A5  3400               psect	strings
  1514                           	
  1515                           STR_4:	
  1516  04A6                     	retlw	105	;'i'
  1517  04A6  3469               	retlw	110	;'n'
  1518  04A7  346E               	retlw	105	;'i'
  1519  04A8  3469               	retlw	99	;'c'
  1520  04A9  3463               	retlw	105	;'i'
  1521  04AA  3469               	retlw	97	;'a'
  1522  04AB  3461               	retlw	114	;'r'
  1523  04AC  3472               	retlw	0
  1524  04AD  3400               psect	strings
  1525                           ; #config settings
  1526                           global __CFG_FOSC$INTRC_NOCLKOUT
  1527                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1528  0000                     global __CFG_WDTE$OFF
  1529                           __CFG_WDTE$OFF equ 0x0
  1530  0000                     global __CFG_PWRTE$OFF
  1531                           __CFG_PWRTE$OFF equ 0x0
  1532  0000                     global __CFG_MCLRE$ON
  1533                           __CFG_MCLRE$ON equ 0x0
  1534  0000                     global __CFG_CP$OFF
  1535                           __CFG_CP$OFF equ 0x0
  1536  0000                     global __CFG_CPD$OFF
  1537                           __CFG_CPD$OFF equ 0x0
  1538  0000                     global __CFG_BOREN$ON
  1539                           __CFG_BOREN$ON equ 0x0
  1540  0000                     global __CFG_IESO$OFF
  1541                           __CFG_IESO$OFF equ 0x0
  1542  0000                     global __CFG_FCMEN$OFF
  1543                           __CFG_FCMEN$OFF equ 0x0
  1544  0000                     global __CFG_LVP$OFF
  1545                           __CFG_LVP$OFF equ 0x0
  1546  0000                     global __CFG_BOR4V$BOR40V
  1547                           __CFG_BOR4V$BOR40V equ 0x0
  1548  0000                     global __CFG_WRT$OFF
  1549                           __CFG_WRT$OFF equ 0x0
  1550  0000                     	file	"C:\Users\DIBUJO~1\AppData\Local\Temp\sm9c."
  1551                           	line	#
  1552                           psect cinit,class=CODE,delta=2
  1553                           global start_initialization
  1554                           start_initialization:
  1555  000F                     
  1556                           global __initialization
  1557                           __initialization:
  1558  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1559                           global __pbssCOMMON
  1560                           __pbssCOMMON:
  1561  0077                     _numerito:
  1562  0077                            ds      1
  1563  0077                     
  1564                           _z:
  1565  0078                            ds      1
  1566  0078                     
  1567                           _res:
  1568  0079                            ds      1
  1569  0079                     
  1570                           _conteo:
  1571  007A                            ds      1
  1572  007A                     
  1573                           psect	bssBANK0,class=BANK0,space=1,noexec
  1574                           global __pbssBANK0
  1575                           __pbssBANK0:
  1576  0032                     _compara:
  1577  0032                            ds      5
  1578  0032                     
  1579                           _a:
  1580  0037                            ds      2
  1581  0037                     
  1582                           _valor2:
  1583  0039                            ds      1
  1584  0039                     
  1585                           _valor1:
  1586  003A                            ds      1
  1587  003A                     
  1588                           _i:
  1589  003B                            ds      1
  1590  003B                     
  1591                           _cont:
  1592  003C                            ds      1
  1593  003C                     
  1594                           _contraAct:
  1595  003D                            ds      1
  1596  003D                     
  1597                           psect	dataBANK0,class=BANK0,space=1,noexec
  1598                           global __pdataBANK0
  1599                           __pdataBANK0:
  1600  003E                     	file	"mainS1proyect.c"
  1601                           	line	53
  1602                           _contrasena:
  1603  003E                            ds      5
  1604  003E                     
  1605                           	file	"C:\Users\DIBUJO~1\AppData\Local\Temp\sm9c."
  1606                           	line	#
  1607                           ; Initialize objects allocated to BANK0
  1608                           	global __pidataBANK0
  1609                           psect cinit,class=CODE,delta=2,merge=1
  1610                           	fcall	__pidataBANK0+0		;fetch initializer
  1611  000F  120A  118A  2714  120A  118A  	movwf	__pdataBANK0+0&07fh		
  1612  0014  00BE               	fcall	__pidataBANK0+1		;fetch initializer
  1613  0015  120A  118A  2715  120A  118A  	movwf	__pdataBANK0+1&07fh		
  1614  001A  00BF               	fcall	__pidataBANK0+2		;fetch initializer
  1615  001B  120A  118A  2716  120A  118A  	movwf	__pdataBANK0+2&07fh		
  1616  0020  00C0               	fcall	__pidataBANK0+3		;fetch initializer
  1617  0021  120A  118A  2717  120A  118A  	movwf	__pdataBANK0+3&07fh		
  1618  0026  00C1               	fcall	__pidataBANK0+4		;fetch initializer
  1619  0027  120A  118A  2718  120A  118A  	movwf	__pdataBANK0+4&07fh		
  1620  002C  00C2               	line	#
  1621                           ; Clear objects allocated to BANK0
  1622                           psect cinit,class=CODE,delta=2,merge=1
  1623                           	clrf	((__pbssBANK0)+0)&07Fh
  1624  002D  01B2               	clrf	((__pbssBANK0)+1)&07Fh
  1625  002E  01B3               	clrf	((__pbssBANK0)+2)&07Fh
  1626  002F  01B4               	clrf	((__pbssBANK0)+3)&07Fh
  1627  0030  01B5               	clrf	((__pbssBANK0)+4)&07Fh
  1628  0031  01B6               	clrf	((__pbssBANK0)+5)&07Fh
  1629  0032  01B7               	clrf	((__pbssBANK0)+6)&07Fh
  1630  0033  01B8               	clrf	((__pbssBANK0)+7)&07Fh
  1631  0034  01B9               	clrf	((__pbssBANK0)+8)&07Fh
  1632  0035  01BA               	clrf	((__pbssBANK0)+9)&07Fh
  1633  0036  01BB               	clrf	((__pbssBANK0)+10)&07Fh
  1634  0037  01BC               	clrf	((__pbssBANK0)+11)&07Fh
  1635  0038  01BD               ; Clear objects allocated to COMMON
  1636                           psect cinit,class=CODE,delta=2,merge=1
  1637                           	clrf	((__pbssCOMMON)+0)&07Fh
  1638  0039  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
  1639  003A  01F8               	clrf	((__pbssCOMMON)+2)&07Fh
  1640  003B  01F9               	clrf	((__pbssCOMMON)+3)&07Fh
  1641  003C  01FA               psect cinit,class=CODE,delta=2,merge=1
  1642                           global end_of_initialization,__end_of__initialization
  1643                           
  1644                           ;End of C runtime variable initialization code
  1645                           
  1646                           end_of_initialization:
  1647  003D                     __end_of__initialization:
  1648  003D                     clrf status
  1649  003D  0183               ljmp _main	;jump to C main() function
  1650  003E  120A  118A  2841   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1651                           global __pcstackCOMMON
  1652                           __pcstackCOMMON:
  1653  0070                     ?_init:	; 1 bytes @ 0x0
  1654  0070                     ?_initOsc:	; 1 bytes @ 0x0
  1655  0070                     ?_PWMconf:	; 1 bytes @ 0x0
  1656  0070                     ?_Lcd_Init_8bits:	; 1 bytes @ 0x0
  1657  0070                     ?_InitKeypad:	; 1 bytes @ 0x0
  1658  0070                     ?_Lcd_Clear_8bits:	; 1 bytes @ 0x0
  1659  0070                     ?_switch_press_scan:	; 1 bytes @ 0x0
  1660  0070                     ?_keypad_scanner:	; 1 bytes @ 0x0
  1661  0070                     ?_interrupciones:	; 1 bytes @ 0x0
  1662  0070                     ??_interrupciones:	; 1 bytes @ 0x0
  1663  0070                     ?_main:	; 1 bytes @ 0x0
  1664  0070                     ?_Lcd_Port:	; 1 bytes @ 0x0
  1665  0070                     ?_Lcd_Cmd_8bits:	; 1 bytes @ 0x0
  1666  0070                     	ds	3
  1667  0070                     ??_init:	; 1 bytes @ 0x3
  1668  0073                     ??_initOsc:	; 1 bytes @ 0x3
  1669  0073                     ?_funcAdc:	; 1 bytes @ 0x3
  1670  0073                     ??_PWMconf:	; 1 bytes @ 0x3
  1671  0073                     ??_InitKeypad:	; 1 bytes @ 0x3
  1672  0073                     ??_keypad_scanner:	; 1 bytes @ 0x3
  1673  0073                     ??_Lcd_Port:	; 1 bytes @ 0x3
  1674  0073                     ??_Lcd_Cmd_8bits:	; 1 bytes @ 0x3
  1675  0073                     	global	Lcd_Port@a
  1676                           Lcd_Port@a:	; 1 bytes @ 0x3
  1677  0073                     	global	funcAdc@anaP
  1678                           funcAdc@anaP:	; 1 bytes @ 0x3
  1679  0073                     	ds	1
  1680  0073                     ?_Lcd_Write_Char:	; 1 bytes @ 0x4
  1681  0074                     	global	Lcd_Cmd_8bits@comando
  1682                           Lcd_Cmd_8bits@comando:	; 1 bytes @ 0x4
  1683  0074                     	global	funcAdc@just
  1684                           funcAdc@just:	; 1 bytes @ 0x4
  1685  0074                     	global	Lcd_Write_Char@modo
  1686                           Lcd_Write_Char@modo:	; 2 bytes @ 0x4
  1687  0074                     	ds	1
  1688  0074                     ??_funcAdc:	; 1 bytes @ 0x5
  1689  0075                     ??_Lcd_Init_8bits:	; 1 bytes @ 0x5
  1690  0075                     ??_Lcd_Clear_8bits:	; 1 bytes @ 0x5
  1691  0075                     ?_Lcd_Set_Cursor_8bits:	; 1 bytes @ 0x5
  1692  0075                     ??_switch_press_scan:	; 1 bytes @ 0x5
  1693  0075                     	global	initOsc@frec
  1694                           initOsc@frec:	; 1 bytes @ 0x5
  1695  0075                     	global	Lcd_Set_Cursor_8bits@x
  1696                           Lcd_Set_Cursor_8bits@x:	; 1 bytes @ 0x5
  1697  0075                     	ds	1
  1698  0075                     ??_Lcd_Set_Cursor_8bits:	; 1 bytes @ 0x6
  1699  0076                     ??_Lcd_Write_Char:	; 1 bytes @ 0x6
  1700  0076                     	global	Lcd_Set_Cursor_8bits@y
  1701                           Lcd_Set_Cursor_8bits@y:	; 1 bytes @ 0x6
  1702  0076                     	global	switch_press_scan@key
  1703                           switch_press_scan@key:	; 1 bytes @ 0x6
  1704  0076                     	ds	1
  1705  0076                     ??_Lcd_Write_String:	; 1 bytes @ 0x7
  1706  0077                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1707                           global __pcstackBANK0
  1708                           __pcstackBANK0:
  1709  0020                     	global	Lcd_Write_Char@temp
  1710                           Lcd_Write_Char@temp:	; 1 bytes @ 0x0
  1711  0020                     	global	funcAdc@divD
  1712                           funcAdc@divD:	; 1 bytes @ 0x0
  1713  0020                     	ds	1
  1714  0020                     	global	Lcd_Write_Char@y
  1715                           Lcd_Write_Char@y:	; 1 bytes @ 0x1
  1716  0021                     	ds	1
  1717  0021                     	global	Lcd_Write_Char@a
  1718                           Lcd_Write_Char@a:	; 1 bytes @ 0x2
  1719  0022                     	ds	1
  1720  0022                     ?_Lcd_Write_String:	; 1 bytes @ 0x3
  1721  0023                     	global	Lcd_Write_String@modo
  1722                           Lcd_Write_String@modo:	; 2 bytes @ 0x3
  1723  0023                     	ds	2
  1724  0023                     	global	Lcd_Write_String@i
  1725                           Lcd_Write_String@i:	; 2 bytes @ 0x5
  1726  0025                     	ds	2
  1727  0025                     	global	Lcd_Write_String@a
  1728                           Lcd_Write_String@a:	; 1 bytes @ 0x7
  1729  0027                     	ds	1
  1730  0027                     ??_main:	; 1 bytes @ 0x8
  1731  0028                     	ds	3
  1732  0028                     	global	main@valor1
  1733                           main@valor1:	; 2 bytes @ 0xB
  1734  002B                     	ds	2
  1735  002B                     	global	main@valor2
  1736                           main@valor2:	; 2 bytes @ 0xD
  1737  002D                     	ds	2
  1738  002D                     	global	main@i
  1739                           main@i:	; 2 bytes @ 0xF
  1740  002F                     	ds	2
  1741  002F                     	global	main@Key
  1742                           main@Key:	; 1 bytes @ 0x11
  1743  0031                     	ds	1
  1744  0031                     ;!
  1745                           ;!Data Sizes:
  1746                           ;!    Strings     159
  1747                           ;!    Constant    0
  1748                           ;!    Data        5
  1749                           ;!    BSS         16
  1750                           ;!    Persistent  0
  1751                           ;!    Stack       0
  1752                           ;!
  1753                           ;!Auto Spaces:
  1754                           ;!    Space          Size  Autos    Used
  1755                           ;!    COMMON           14      7      11
  1756                           ;!    BANK0            80     18      35
  1757                           ;!    BANK1            80      0       0
  1758                           ;!    BANK3            96      0       0
  1759                           ;!    BANK2            96      0       0
  1760                           
  1761                           ;!
  1762                           ;!Pointer List with Targets:
  1763                           ;!
  1764                           ;!    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
  1765                           ;!		 -> STR_11(CODE[14]), STR_10(CODE[16]), STR_9(CODE[17]), STR_8(CODE[16]), 
  1766                           ;!		 -> STR_7(CODE[10]), STR_6(CODE[16]), STR_5(CODE[12]), STR_4(CODE[8]), 
  1767                           ;!		 -> STR_3(CODE[16]), STR_2(CODE[17]), STR_1(CODE[17]), 
  1768                           ;!
  1769                           
  1770                           
  1771                           ;!
  1772                           ;!Critical Paths under _main in COMMON
  1773                           ;!
  1774                           ;!    _main->_Lcd_Init_8bits
  1775                           ;!    _main->_Lcd_Set_Cursor_8bits
  1776                           ;!    _main->_Lcd_Write_Char
  1777                           ;!    _main->_funcAdc
  1778                           ;!    _main->_switch_press_scan
  1779                           ;!    _switch_press_scan->_keypad_scanner
  1780                           ;!    _Lcd_Write_String->_Lcd_Write_Char
  1781                           ;!    _Lcd_Write_Char->_Lcd_Port
  1782                           ;!    _Lcd_Set_Cursor_8bits->_Lcd_Cmd_8bits
  1783                           ;!    _Lcd_Init_8bits->_Lcd_Cmd_8bits
  1784                           ;!    _Lcd_Clear_8bits->_Lcd_Cmd_8bits
  1785                           ;!
  1786                           ;!Critical Paths under _interrupciones in COMMON
  1787                           ;!
  1788                           ;!    None.
  1789                           ;!
  1790                           ;!Critical Paths under _main in BANK0
  1791                           ;!
  1792                           ;!    _main->_Lcd_Write_String
  1793                           ;!    _Lcd_Write_String->_Lcd_Write_Char
  1794                           ;!
  1795                           ;!Critical Paths under _interrupciones in BANK0
  1796                           ;!
  1797                           ;!    None.
  1798                           ;!
  1799                           ;!Critical Paths under _main in BANK1
  1800                           ;!
  1801                           ;!    None.
  1802                           ;!
  1803                           ;!Critical Paths under _interrupciones in BANK1
  1804                           ;!
  1805                           ;!    None.
  1806                           ;!
  1807                           ;!Critical Paths under _main in BANK3
  1808                           ;!
  1809                           ;!    None.
  1810                           ;!
  1811                           ;!Critical Paths under _interrupciones in BANK3
  1812                           ;!
  1813                           ;!    None.
  1814                           ;!
  1815                           ;!Critical Paths under _main in BANK2
  1816                           ;!
  1817                           ;!    None.
  1818                           ;!
  1819                           ;!Critical Paths under _interrupciones in BANK2
  1820                           ;!
  1821                           ;!    None.
  1822                           
  1823 ;;
  1824 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1825 ;;
  1826                           
  1827                           ;!
  1828                           ;!Call Graph Tables:
  1829                           ;!
  1830                           ;! ---------------------------------------------------------------------------------
  1831                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1832                           ;! ---------------------------------------------------------------------------------
  1833                           ;! (0) _main                                                10    10      0    4373
  1834                           ;!                                              8 BANK0     10    10      0
  1835                           ;!                         _InitKeypad
  1836                           ;!                    _Lcd_Clear_8bits
  1837                           ;!                     _Lcd_Init_8bits
  1838                           ;!               _Lcd_Set_Cursor_8bits
  1839                           ;!                     _Lcd_Write_Char
  1840                           ;!                   _Lcd_Write_String
  1841                           ;!                            _PWMconf
  1842                           ;!                            _funcAdc
  1843                           ;!                               _init
  1844                           ;!                            _initOsc
  1845                           ;!                     _keypad_scanner
  1846                           ;!                  _switch_press_scan
  1847                           ;! ---------------------------------------------------------------------------------
  1848                           ;! (1) _switch_press_scan                                    2     2      0      46
  1849                           ;!                                              5 COMMON     2     2      0
  1850                           ;!                     _keypad_scanner
  1851                           ;! ---------------------------------------------------------------------------------
  1852                           ;! (2) _keypad_scanner                                       2     2      0       0
  1853                           ;!                                              3 COMMON     2     2      0
  1854                           ;! ---------------------------------------------------------------------------------
  1855                           ;! (1) _initOsc                                              3     3      0      22
  1856                           ;!                                              3 COMMON     3     3      0
  1857                           ;! ---------------------------------------------------------------------------------
  1858                           ;! (1) _init                                                 0     0      0       0
  1859                           ;! ---------------------------------------------------------------------------------
  1860                           ;! (1) _funcAdc                                              5     3      2     273
  1861                           ;!                                              3 COMMON     4     2      2
  1862                           ;!                                              0 BANK0      1     1      0
  1863                           ;! ---------------------------------------------------------------------------------
  1864                           ;! (1) _PWMconf                                              0     0      0       0
  1865                           ;! ---------------------------------------------------------------------------------
  1866                           ;! (1) _Lcd_Write_String                                     5     3      2    2074
  1867                           ;!                                              3 BANK0      5     3      2
  1868                           ;!                     _Lcd_Write_Char
  1869                           ;! ---------------------------------------------------------------------------------
  1870                           ;! (2) _Lcd_Write_Char                                       6     4      2     527
  1871                           ;!                                              4 COMMON     3     1      2
  1872                           ;!                                              0 BANK0      3     3      0
  1873                           ;!                           _Lcd_Port
  1874                           ;! ---------------------------------------------------------------------------------
  1875                           ;! (3) _Lcd_Port                                             1     1      0     124
  1876                           ;!                                              3 COMMON     1     1      0
  1877                           ;! ---------------------------------------------------------------------------------
  1878                           ;! (1) _Lcd_Set_Cursor_8bits                                 2     1      1    1022
  1879                           ;!                                              5 COMMON     2     1      1
  1880                           ;!                      _Lcd_Cmd_8bits
  1881                           ;! ---------------------------------------------------------------------------------
  1882                           ;! (1) _Lcd_Init_8bits                                       2     2      0      22
  1883                           ;!                                              5 COMMON     2     2      0
  1884                           ;!                      _Lcd_Cmd_8bits
  1885                           ;! ---------------------------------------------------------------------------------
  1886                           ;! (1) _Lcd_Clear_8bits                                      0     0      0      22
  1887                           ;!                      _Lcd_Cmd_8bits
  1888                           ;! ---------------------------------------------------------------------------------
  1889                           ;! (2) _Lcd_Cmd_8bits                                        2     2      0      22
  1890                           ;!                                              3 COMMON     2     2      0
  1891                           ;! ---------------------------------------------------------------------------------
  1892                           ;! (1) _InitKeypad                                           0     0      0       0
  1893                           ;! ---------------------------------------------------------------------------------
  1894                           ;! Estimated maximum stack depth 3
  1895                           ;! ---------------------------------------------------------------------------------
  1896                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1897                           ;! ---------------------------------------------------------------------------------
  1898                           ;! (4) _interrupciones                                       3     3      0       0
  1899                           ;!                                              0 COMMON     3     3      0
  1900                           ;! ---------------------------------------------------------------------------------
  1901                           ;! Estimated maximum stack depth 4
  1902                           ;! ---------------------------------------------------------------------------------
  1903                           ;!
  1904                           ;! Call Graph Graphs:
  1905                           ;!
  1906                           ;! _main (ROOT)
  1907                           ;!   _InitKeypad
  1908                           ;!   _Lcd_Clear_8bits
  1909                           ;!     _Lcd_Cmd_8bits
  1910                           ;!   _Lcd_Init_8bits
  1911                           ;!     _Lcd_Cmd_8bits
  1912                           ;!   _Lcd_Set_Cursor_8bits
  1913                           ;!     _Lcd_Cmd_8bits
  1914                           ;!   _Lcd_Write_Char
  1915                           ;!     _Lcd_Port
  1916                           ;!   _Lcd_Write_String
  1917                           ;!     _Lcd_Write_Char
  1918                           ;!       _Lcd_Port
  1919                           ;!   _PWMconf
  1920                           ;!   _funcAdc
  1921                           ;!   _init
  1922                           ;!   _initOsc
  1923                           ;!   _keypad_scanner
  1924                           ;!   _switch_press_scan
  1925                           ;!     _keypad_scanner
  1926                           ;!
  1927                           ;! _interrupciones (ROOT)
  1928                           ;!
  1929                           
  1930                           ;! Address spaces:
  1931                           
  1932                           ;!Name               Size   Autos  Total    Cost      Usage
  1933                           ;!BANK3               60      0       0       9        0.0%
  1934                           ;!BITBANK3            60      0       0       8        0.0%
  1935                           ;!SFR3                 0      0       0       4        0.0%
  1936                           ;!BITSFR3              0      0       0       4        0.0%
  1937                           ;!BANK2               60      0       0      11        0.0%
  1938                           ;!BITBANK2            60      0       0      10        0.0%
  1939                           ;!SFR2                 0      0       0       5        0.0%
  1940                           ;!BITSFR2              0      0       0       5        0.0%
  1941                           ;!BANK1               50      0       0       7        0.0%
  1942                           ;!BITBANK1            50      0       0       6        0.0%
  1943                           ;!SFR1                 0      0       0       2        0.0%
  1944                           ;!BITSFR1              0      0       0       2        0.0%
  1945                           ;!BANK0               50     12      23       5       43.8%
  1946                           ;!BITBANK0            50      0       0       4        0.0%
  1947                           ;!SFR0                 0      0       0       1        0.0%
  1948                           ;!BITSFR0              0      0       0       1        0.0%
  1949                           ;!COMMON               E      7       B       1       78.6%
  1950                           ;!BITCOMMON            E      0       0       0        0.0%
  1951                           ;!CODE                 0      0       0       0        0.0%
  1952                           ;!DATA                 0      0      2E      12        0.0%
  1953                           ;!ABS                  0      0      2E       3        0.0%
  1954                           ;!NULL                 0      0       0       0        0.0%
  1955                           ;!STACK                0      0       0       2        0.0%
  1956                           ;!EEDATA             100      0       0       0        0.0%
  1957                           
  1958                           	global	_main
  1959                           
  1960 ;; *************** function _main *****************
  1961 ;; Defined at:
  1962 ;;		line 119 in file "mainS1proyect.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  valor2          2   13[BANK0 ] int 
  1967 ;;  valor1          2   11[BANK0 ] int 
  1968 ;;  i               2   15[BANK0 ] int 
  1969 ;;  Key             1   17[BANK0 ] unsigned char 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : B00/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1979 ;;      Params:         0       0       0       0       0
  1980 ;;      Locals:         0       7       0       0       0
  1981 ;;      Temps:          0       3       0       0       0
  1982 ;;      Totals:         0      10       0       0       0
  1983 ;;Total ram usage:       10 bytes
  1984 ;; Hardware stack levels required when called:    4
  1985 ;; This function calls:
  1986 ;;		_InitKeypad
  1987 ;;		_Lcd_Clear_8bits
  1988 ;;		_Lcd_Init_8bits
  1989 ;;		_Lcd_Set_Cursor_8bits
  1990 ;;		_Lcd_Write_Char
  1991 ;;		_Lcd_Write_String
  1992 ;;		_PWMconf
  1993 ;;		_funcAdc
  1994 ;;		_init
  1995 ;;		_initOsc
  1996 ;;		_keypad_scanner
  1997 ;;		_switch_press_scan
  1998 ;; This function is called by:
  1999 ;;		Startup code after reset
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2003                           	file	"mainS1proyect.c"
  2004                           	line	119
  2005                           global __pmaintext
  2006                           __pmaintext:	;psect for function _main
  2007  0041                     psect	maintext
  2008                           	file	"mainS1proyect.c"
  2009                           	line	119
  2010                           	global	__size_of_main
  2011                           	__size_of_main	equ	__end_of_main-_main
  2012  0233                     	
  2013                           _main:	
  2014  0041                     ;incstack = 0
  2015                           	opt	stack 4
  2016                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2017                           	line	120
  2018                           	
  2019                           l2203:	
  2020  0041                     ;mainS1proyect.c: 120:     init();
  2021                           	fcall	_init
  2022  0041  120A  118A  26D8  120A  118A  	line	121
  2023                           	
  2024                           l2205:	
  2025  0046                     ;mainS1proyect.c: 121:     initOsc(3);
  2026                           	movlw	low(03h)
  2027  0046  3003               	fcall	_initOsc
  2028  0047  120A  118A  251F  120A  118A  	line	122
  2029                           	
  2030                           l2207:	
  2031  004C                     ;mainS1proyect.c: 122:     funcAdc(2,0,0);
  2032                           	clrf	(funcAdc@anaP)
  2033  004C  01F3               	clrf	(funcAdc@just)
  2034  004D  01F4               	movlw	low(02h)
  2035  004E  3002               	fcall	_funcAdc
  2036  004F  120A  118A  24AE  120A  118A  	line	123
  2037                           ;mainS1proyect.c: 123:     PWMconf();
  2038                           	fcall	_PWMconf
  2039  0054  120A  118A  26A6  120A  118A  	line	124
  2040                           ;mainS1proyect.c: 124:     Lcd_Init_8bits();
  2041                           	fcall	_Lcd_Init_8bits
  2042  0059  120A  118A  25CE  120A  118A  	line	125
  2043                           ;mainS1proyect.c: 125:     InitKeypad();
  2044                           	fcall	_InitKeypad
  2045  005E  120A  118A  270B  120A  118A  	line	129
  2046                           ;mainS1proyect.c: 129:     Lcd_Clear_8bits();
  2047                           	fcall	_Lcd_Clear_8bits
  2048  0063  120A  118A  26FE  120A  118A  	line	130
  2049                           ;mainS1proyect.c: 130:     Lcd_Set_Cursor_8bits(1,1);
  2050                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2051  0068  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2052  0069  0AF5               	movlw	low(01h)
  2053  006A  3001               	fcall	_Lcd_Set_Cursor_8bits
  2054  006B  120A  118A  266B  120A  118A  	line	131
  2055                           	
  2056                           l2209:	
  2057  0070                     ;mainS1proyect.c: 131:     Lcd_Write_String("Bienvenido Atte.",8);
  2058                           	movlw	08h
  2059  0070  3008               	bcf	status, 5	;RP0=0, select bank0
  2060  0071  1283               	bcf	status, 6	;RP1=0, select bank0
  2061  0072  1303               	movwf	(Lcd_Write_String@modo)
  2062  0073  00A3               	movlw	0
  2063  0074  3000               	movwf	((Lcd_Write_String@modo))+1
  2064  0075  00A4               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2065  0076  3001               	fcall	_Lcd_Write_String
  2066  0077  120A  118A  2619  120A  118A  	line	132
  2067                           	
  2068                           l2211:	
  2069  007C                     ;mainS1proyect.c: 132:     Lcd_Set_Cursor_8bits(2,1);
  2070                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2071  007C  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2072  007D  0AF5               	movlw	low(02h)
  2073  007E  3002               	fcall	_Lcd_Set_Cursor_8bits
  2074  007F  120A  118A  266B  120A  118A  	line	133
  2075                           ;mainS1proyect.c: 133:     Lcd_Write_String("Familia Sanabria",8);
  2076                           	movlw	08h
  2077  0084  3008               	bcf	status, 5	;RP0=0, select bank0
  2078  0085  1283               	bcf	status, 6	;RP1=0, select bank0
  2079  0086  1303               	movwf	(Lcd_Write_String@modo)
  2080  0087  00A3               	movlw	0
  2081  0088  3000               	movwf	((Lcd_Write_String@modo))+1
  2082  0089  00A4               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  2083  008A  3012               	fcall	_Lcd_Write_String
  2084  008B  120A  118A  2619  120A  118A  	line	134
  2085                           	
  2086                           l2213:	
  2087  0090                     ;mainS1proyect.c: 134:     _delay((unsigned long)((3000)*(500000/4000.0)));
  2088                           	opt asmopt_push
  2089                           opt asmopt_off
  2090                           movlw  2
  2091  0090  3002               	bcf	status, 5	;RP0=0, select bank0
  2092  0091  1283               	bcf	status, 6	;RP1=0, select bank0
  2093  0092  1303               movwf	((??_main+0)+0+2),f
  2094  0093  00AA               movlw	231
  2095  0094  30E7               movwf	((??_main+0)+0+1),f
  2096  0095  00A9               	movlw	255
  2097  0096  30FF               movwf	((??_main+0)+0),f
  2098  0097  00A8               	u1407:
  2099  0098                     decfsz	((??_main+0)+0),f
  2100  0098  0BA8               	goto	u1407
  2101  0099  2898               	decfsz	((??_main+0)+0+1),f
  2102  009A  0BA9               	goto	u1407
  2103  009B  2898               	decfsz	((??_main+0)+0+2),f
  2104  009C  0BAA               	goto	u1407
  2105  009D  2898               	nop2
  2106  009E  289F               opt asmopt_pop
  2107                           
  2108                           	line	135
  2109                           	
  2110                           l2215:	
  2111  009F                     ;mainS1proyect.c: 135:     Lcd_Clear_8bits();
  2112                           	fcall	_Lcd_Clear_8bits
  2113  009F  120A  118A  26FE  120A  118A  	line	137
  2114                           	
  2115                           l2217:	
  2116  00A4                     ;mainS1proyect.c: 137:     char Key = 'n';
  2117                           	movlw	low(06Eh)
  2118  00A4  306E               	bcf	status, 5	;RP0=0, select bank0
  2119  00A5  1283               	bcf	status, 6	;RP1=0, select bank0
  2120  00A6  1303               	movwf	(??_main+0)+0
  2121  00A7  00A8               	movf	(??_main+0)+0,w
  2122  00A8  0828               	movwf	(main@Key)
  2123  00A9  00B1               	goto	l2219
  2124  00AA  28AC               	line	140
  2125                           ;mainS1proyect.c: 140:     while(1){
  2126                           	
  2127                           l107:	
  2128  00AB                     	goto	l2219
  2129  00AB  28AC               	line	141
  2130                           ;mainS1proyect.c: 141:         Inicio:
  2131                           	
  2132                           l108:	
  2133  00AC                     	line	142
  2134                           	
  2135                           l2219:	
  2136  00AC                     ;mainS1proyect.c: 142:         Lcd_Set_Cursor_8bits(1,1);
  2137                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2138  00AC  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2139  00AD  0AF5               	movlw	low(01h)
  2140  00AE  3001               	fcall	_Lcd_Set_Cursor_8bits
  2141  00AF  120A  118A  266B  120A  118A  	line	143
  2142                           ;mainS1proyect.c: 143:         Lcd_Write_String("Presione # para",8);
  2143                           	movlw	08h
  2144  00B4  3008               	bcf	status, 5	;RP0=0, select bank0
  2145  00B5  1283               	bcf	status, 6	;RP1=0, select bank0
  2146  00B6  1303               	movwf	(Lcd_Write_String@modo)
  2147  00B7  00A3               	movlw	0
  2148  00B8  3000               	movwf	((Lcd_Write_String@modo))+1
  2149  00B9  00A4               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  2150  00BA  3044               	fcall	_Lcd_Write_String
  2151  00BB  120A  118A  2619  120A  118A  	line	144
  2152                           	
  2153                           l2221:	
  2154  00C0                     ;mainS1proyect.c: 144:         Lcd_Set_Cursor_8bits(2,1);
  2155                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2156  00C0  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2157  00C1  0AF5               	movlw	low(02h)
  2158  00C2  3002               	fcall	_Lcd_Set_Cursor_8bits
  2159  00C3  120A  118A  266B  120A  118A  	line	145
  2160                           	
  2161                           l2223:	
  2162  00C8                     ;mainS1proyect.c: 145:         Lcd_Write_String("iniciar",8);
  2163                           	movlw	08h
  2164  00C8  3008               	bcf	status, 5	;RP0=0, select bank0
  2165  00C9  1283               	bcf	status, 6	;RP1=0, select bank0
  2166  00CA  1303               	movwf	(Lcd_Write_String@modo)
  2167  00CB  00A3               	movlw	0
  2168  00CC  3000               	movwf	((Lcd_Write_String@modo))+1
  2169  00CD  00A4               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  2170  00CE  3098               	fcall	_Lcd_Write_String
  2171  00CF  120A  118A  2619  120A  118A  	line	147
  2172                           ;mainS1proyect.c: 147:         Presiona:
  2173                           	
  2174                           l109:	
  2175  00D4                     	line	148
  2176                           ;mainS1proyect.c: 148:         Key = switch_press_scan();
  2177                           	fcall	_switch_press_scan
  2178  00D4  120A  118A  26C0  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2179  00D9  1283               	bcf	status, 6	;RP1=0, select bank0
  2180  00DA  1303               	movwf	(??_main+0)+0
  2181  00DB  00A8               	movf	(??_main+0)+0,w
  2182  00DC  0828               	movwf	(main@Key)
  2183  00DD  00B1               	line	150
  2184                           	
  2185                           l2225:	
  2186  00DE                     ;mainS1proyect.c: 150:         if (Key == 35){
  2187                           		movlw	35
  2188  00DE  3023               	xorwf	((main@Key)),w
  2189  00DF  0631               	btfss	status,2
  2190  00E0  1D03               	goto	u1271
  2191  00E1  28E3               	goto	u1270
  2192  00E2  28E4               u1271:
  2193  00E3                     	goto	l109
  2194  00E3  28D4               u1270:
  2195  00E4                     	line	151
  2196                           ;mainS1proyect.c: 151:             Intentelo:
  2197                           	
  2198                           l111:	
  2199  00E4                     	line	153
  2200                           ;mainS1proyect.c: 153:             contraAct = 1;
  2201                           	bcf	status, 5	;RP0=0, select bank0
  2202  00E4  1283               	bcf	status, 6	;RP1=0, select bank0
  2203  00E5  1303               	clrf	(_contraAct)
  2204  00E6  01BD               	incf	(_contraAct),f
  2205  00E7  0ABD               	line	154
  2206                           	
  2207                           l2227:	
  2208  00E8                     ;mainS1proyect.c: 154:             cont = 0;
  2209                           	clrf	(_cont)
  2210  00E8  01BC               	line	155
  2211                           	
  2212                           l2229:	
  2213  00E9                     ;mainS1proyect.c: 155:             Lcd_Clear_8bits();
  2214                           	fcall	_Lcd_Clear_8bits
  2215  00E9  120A  118A  26FE  120A  118A  	line	156
  2216                           	
  2217                           l2231:	
  2218  00EE                     ;mainS1proyect.c: 156:             Lcd_Set_Cursor_8bits(1,1);
  2219                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2220  00EE  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2221  00EF  0AF5               	movlw	low(01h)
  2222  00F0  3001               	fcall	_Lcd_Set_Cursor_8bits
  2223  00F1  120A  118A  266B  120A  118A  	line	157
  2224                           	
  2225                           l2233:	
  2226  00F6                     ;mainS1proyect.c: 157:             Lcd_Write_String("Contrasena:",8);
  2227                           	movlw	08h
  2228  00F6  3008               	bcf	status, 5	;RP0=0, select bank0
  2229  00F7  1283               	bcf	status, 6	;RP1=0, select bank0
  2230  00F8  1303               	movwf	(Lcd_Write_String@modo)
  2231  00F9  00A3               	movlw	0
  2232  00FA  3000               	movwf	((Lcd_Write_String@modo))+1
  2233  00FB  00A4               	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  2234  00FC  3082               	fcall	_Lcd_Write_String
  2235  00FD  120A  118A  2619  120A  118A  	goto	l2235
  2236  0102  2903               	line	159
  2237                           ;mainS1proyect.c: 159:             IngresarC:
  2238                           	
  2239                           l112:	
  2240  0103                     	line	161
  2241                           	
  2242                           l2235:	
  2243  0103                     ;mainS1proyect.c: 161:             Key = switch_press_scan();
  2244                           	fcall	_switch_press_scan
  2245  0103  120A  118A  26C0  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2246  0108  1283               	bcf	status, 6	;RP1=0, select bank0
  2247  0109  1303               	movwf	(??_main+0)+0
  2248  010A  00A8               	movf	(??_main+0)+0,w
  2249  010B  0828               	movwf	(main@Key)
  2250  010C  00B1               	line	162
  2251                           	
  2252                           l2237:	
  2253  010D                     ;mainS1proyect.c: 162:             Lcd_Set_Cursor_8bits(2,cont + 1);
  2254                           	movf	(_cont),w
  2255  010D  083C               	addlw	01h
  2256  010E  3E01               	movwf	(??_main+0)+0
  2257  010F  00A8               	movf	(??_main+0)+0,w
  2258  0110  0828               	movwf	(Lcd_Set_Cursor_8bits@x)
  2259  0111  00F5               	movlw	low(02h)
  2260  0112  3002               	fcall	_Lcd_Set_Cursor_8bits
  2261  0113  120A  118A  266B  120A  118A  	line	163
  2262                           	
  2263                           l2239:	
  2264  0118                     ;mainS1proyect.c: 163:             Lcd_Write_Char(Key,8);
  2265                           	movlw	08h
  2266  0118  3008               	movwf	(Lcd_Write_Char@modo)
  2267  0119  00F4               	movlw	0
  2268  011A  3000               	movwf	((Lcd_Write_Char@modo))+1
  2269  011B  00F5               	bcf	status, 5	;RP0=0, select bank0
  2270  011C  1283               	bcf	status, 6	;RP1=0, select bank0
  2271  011D  1303               	movf	(main@Key),w
  2272  011E  0831               	fcall	_Lcd_Write_Char
  2273  011F  120A  118A  257C  120A  118A  	line	164
  2274                           	
  2275                           l2241:	
  2276  0124                     ;mainS1proyect.c: 164:             cont ++;
  2277                           	movlw	low(01h)
  2278  0124  3001               	bcf	status, 5	;RP0=0, select bank0
  2279  0125  1283               	bcf	status, 6	;RP1=0, select bank0
  2280  0126  1303               	movwf	(??_main+0)+0
  2281  0127  00A8               	movf	(??_main+0)+0,w
  2282  0128  0828               	addwf	(_cont),f
  2283  0129  07BC               	line	166
  2284                           	
  2285                           l2243:	
  2286  012A                     ;mainS1proyect.c: 166:             if (Key == 42){
  2287                           		movlw	42
  2288  012A  302A               	xorwf	((main@Key)),w
  2289  012B  0631               	btfss	status,2
  2290  012C  1D03               	goto	u1281
  2291  012D  292F               	goto	u1280
  2292  012E  2930               u1281:
  2293  012F                     	goto	l2247
  2294  012F  2932               u1280:
  2295  0130                     	goto	l111
  2296  0130  28E4               	line	167
  2297                           	
  2298                           l2245:	
  2299  0131                     ;mainS1proyect.c: 167:                 goto Intentelo;
  2300                           	goto	l111
  2301  0131  28E4               	line	168
  2302                           ;mainS1proyect.c: 168:             }
  2303                           	
  2304                           l113:	
  2305  0132                     	line	170
  2306                           	
  2307                           l2247:	
  2308  0132                     ;mainS1proyect.c: 170:             compara[cont - 1] = Key;
  2309                           	movf	(main@Key),w
  2310  0132  0831               	movwf	(??_main+0)+0
  2311  0133  00A8               	movf	(_cont),w
  2312  0134  083C               	addlw	0FFh
  2313  0135  3EFF               	addlw	low(_compara|((0x0)<<8))&0ffh
  2314  0136  3E32               	movwf	fsr0
  2315  0137  0084               	movf	(??_main+0)+0,w
  2316  0138  0828               	bcf	status, 7	;select IRP bank0
  2317  0139  1383               	movwf	indf
  2318  013A  0080               	line	171
  2319                           	
  2320                           l2249:	
  2321  013B                     ;mainS1proyect.c: 171:             if (cont == 5){
  2322                           		movlw	5
  2323  013B  3005               	xorwf	((_cont)),w
  2324  013C  063C               	btfss	status,2
  2325  013D  1D03               	goto	u1291
  2326  013E  2940               	goto	u1290
  2327  013F  2941               u1291:
  2328  0140                     	goto	l2275
  2329  0140  29D4               u1290:
  2330  0141                     	line	172
  2331                           	
  2332                           l2251:	
  2333  0141                     ;mainS1proyect.c: 172:                 _delay((unsigned long)((1000)*(500000/4000.0)));

  2334                           	opt asmopt_push
  2335                           opt asmopt_off
  2336                           movlw	163
  2337  0141  30A3               	bcf	status, 5	;RP0=0, select bank0
  2338  0142  1283               	bcf	status, 6	;RP1=0, select bank0
  2339  0143  1303               movwf	((??_main+0)+0+1),f
  2340  0144  00A9               	movlw	84
  2341  0145  3054               movwf	((??_main+0)+0),f
  2342  0146  00A8               	u1417:
  2343  0147                     decfsz	((??_main+0)+0),f
  2344  0147  0BA8               	goto	u1417
  2345  0148  2947               	decfsz	((??_main+0)+0+1),f
  2346  0149  0BA9               	goto	u1417
  2347  014A  2947               	nop
  2348  014B  0000               opt asmopt_pop
  2349                           
  2350                           	line	173
  2351                           	
  2352                           l2253:	
  2353  014C                     ;mainS1proyect.c: 173:                 for (int i = 0; i < 5; i++) {
  2354                           	bcf	status, 5	;RP0=0, select bank0
  2355  014C  1283               	bcf	status, 6	;RP1=0, select bank0
  2356  014D  1303               	clrf	(main@i)
  2357  014E  01AF               	clrf	(main@i+1)
  2358  014F  01B0               	
  2359                           l2255:	
  2360  0150                     	movf	(main@i+1),w
  2361  0150  0830               	xorlw	80h
  2362  0151  3A80               	movwf	btemp+1
  2363  0152  00FF               	movlw	(0)^80h
  2364  0153  3080               	subwf	btemp+1,w
  2365  0154  027F               	skipz
  2366  0155  1D03               	goto	u1305
  2367  0156  2959               	movlw	05h
  2368  0157  3005               	subwf	(main@i),w
  2369  0158  022F               u1305:
  2370  0159                     
  2371                           	skipc
  2372  0159  1C03               	goto	u1301
  2373  015A  295C               	goto	u1300
  2374  015B  295D               u1301:
  2375  015C                     	goto	l2259
  2376  015C  295F               u1300:
  2377  015D                     	goto	l2279
  2378  015D  29E0               	
  2379                           l2257:	
  2380  015E                     	goto	l2279
  2381  015E  29E0               	
  2382                           l115:	
  2383  015F                     	line	175
  2384                           	
  2385                           l2259:	
  2386  015F                     ;mainS1proyect.c: 175:                     int valor1 = contrasena[i], valor2 = compara[
                                 i];
  2387                           	bcf	status, 5	;RP0=0, select bank0
  2388  015F  1283               	bcf	status, 6	;RP1=0, select bank0
  2389  0160  1303               	movf	(main@i),w
  2390  0161  082F               	addlw	low(_contrasena|((0x0)<<8))&0ffh
  2391  0162  3E3E               	movwf	fsr0
  2392  0163  0084               	bcf	status, 7	;select IRP bank0
  2393  0164  1383               	movf	indf,w
  2394  0165  0800               	movwf	(??_main+0)+0
  2395  0166  00A8               	clrf	(??_main+0)+0+1
  2396  0167  01A9               	movf	0+(??_main+0)+0,w
  2397  0168  0828               	movwf	(main@valor1)
  2398  0169  00AB               	movf	1+(??_main+0)+0,w
  2399  016A  0829               	movwf	(main@valor1+1)
  2400  016B  00AC               	movf	(main@i),w
  2401  016C  082F               	addlw	low(_compara|((0x0)<<8))&0ffh
  2402  016D  3E32               	movwf	fsr0
  2403  016E  0084               	movf	indf,w
  2404  016F  0800               	movwf	(??_main+0)+0
  2405  0170  00A8               	clrf	(??_main+0)+0+1
  2406  0171  01A9               	movf	0+(??_main+0)+0,w
  2407  0172  0828               	movwf	(main@valor2)
  2408  0173  00AD               	movf	1+(??_main+0)+0,w
  2409  0174  0829               	movwf	(main@valor2+1)
  2410  0175  00AE               	line	178
  2411                           	
  2412                           l2261:	
  2413  0176                     ;mainS1proyect.c: 178:                     if (valor1 != valor2) {
  2414                           	movf	(main@valor2+1),w
  2415  0176  082E               	xorwf	(main@valor1+1),w
  2416  0177  062C               	skipz
  2417  0178  1D03               	goto	u1315
  2418  0179  297C               	movf	(main@valor2),w
  2419  017A  082D               	xorwf	(main@valor1),w
  2420  017B  062B               u1315:
  2421  017C                     
  2422                           	skipnz
  2423  017C  1903               	goto	u1311
  2424  017D  297F               	goto	u1310
  2425  017E  2980               u1311:
  2426  017F                     	goto	l2271
  2427  017F  29BD               u1310:
  2428  0180                     	line	179
  2429                           	
  2430                           l2263:	
  2431  0180                     ;mainS1proyect.c: 179:                         Lcd_Clear_8bits();
  2432                           	fcall	_Lcd_Clear_8bits
  2433  0180  120A  118A  26FE  120A  118A  	line	180
  2434                           ;mainS1proyect.c: 180:                         Lcd_Set_Cursor_8bits(1,1);
  2435                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2436  0185  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2437  0186  0AF5               	movlw	low(01h)
  2438  0187  3001               	fcall	_Lcd_Set_Cursor_8bits
  2439  0188  120A  118A  266B  120A  118A  	line	181
  2440                           	
  2441                           l2265:	
  2442  018D                     ;mainS1proyect.c: 181:                         Lcd_Write_String("Contrasena mala",8);
  2443                           	movlw	08h
  2444  018D  3008               	bcf	status, 5	;RP0=0, select bank0
  2445  018E  1283               	bcf	status, 6	;RP1=0, select bank0
  2446  018F  1303               	movwf	(Lcd_Write_String@modo)
  2447  0190  00A3               	movlw	0
  2448  0191  3000               	movwf	((Lcd_Write_String@modo))+1
  2449  0192  00A4               	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  2450  0193  3034               	fcall	_Lcd_Write_String
  2451  0194  120A  118A  2619  120A  118A  	line	183
  2452                           	
  2453                           l2267:	
  2454  0199                     ;mainS1proyect.c: 183:                         Lcd_Set_Cursor_8bits(2,1);
  2455                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2456  0199  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2457  019A  0AF5               	movlw	low(02h)
  2458  019B  3002               	fcall	_Lcd_Set_Cursor_8bits
  2459  019C  120A  118A  266B  120A  118A  	line	184
  2460                           ;mainS1proyect.c: 184:                         Lcd_Write_String("intentelo",8);
  2461                           	movlw	08h
  2462  01A1  3008               	bcf	status, 5	;RP0=0, select bank0
  2463  01A2  1283               	bcf	status, 6	;RP1=0, select bank0
  2464  01A3  1303               	movwf	(Lcd_Write_String@modo)
  2465  01A4  00A3               	movlw	0
  2466  01A5  3000               	movwf	((Lcd_Write_String@modo))+1
  2467  01A6  00A4               	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  2468  01A7  308E               	fcall	_Lcd_Write_String
  2469  01A8  120A  118A  2619  120A  118A  	line	185
  2470                           	
  2471                           l2269:	
  2472  01AD                     ;mainS1proyect.c: 185:                         _delay((unsigned long)((3000)*(500000/400
                                 0.0)));
  2473                           	opt asmopt_push
  2474                           opt asmopt_off
  2475                           movlw  2
  2476  01AD  3002               	bcf	status, 5	;RP0=0, select bank0
  2477  01AE  1283               	bcf	status, 6	;RP1=0, select bank0
  2478  01AF  1303               movwf	((??_main+0)+0+2),f
  2479  01B0  00AA               movlw	231
  2480  01B1  30E7               movwf	((??_main+0)+0+1),f
  2481  01B2  00A9               	movlw	255
  2482  01B3  30FF               movwf	((??_main+0)+0),f
  2483  01B4  00A8               	u1427:
  2484  01B5                     decfsz	((??_main+0)+0),f
  2485  01B5  0BA8               	goto	u1427
  2486  01B6  29B5               	decfsz	((??_main+0)+0+1),f
  2487  01B7  0BA9               	goto	u1427
  2488  01B8  29B5               	decfsz	((??_main+0)+0+2),f
  2489  01B9  0BAA               	goto	u1427
  2490  01BA  29B5               	nop2
  2491  01BB  29BC               opt asmopt_pop
  2492                           
  2493                           	line	186
  2494                           ;mainS1proyect.c: 186:                         goto Intentelo;
  2495                           	goto	l111
  2496  01BC  28E4               	line	188
  2497                           ;mainS1proyect.c: 188:                     }
  2498                           	
  2499                           l117:	
  2500  01BD                     	line	189
  2501                           	
  2502                           l2271:	
  2503  01BD                     ;mainS1proyect.c: 189:                 }
  2504                           	movlw	01h
  2505  01BD  3001               	bcf	status, 5	;RP0=0, select bank0
  2506  01BE  1283               	bcf	status, 6	;RP1=0, select bank0
  2507  01BF  1303               	addwf	(main@i),f
  2508  01C0  07AF               	skipnc
  2509  01C1  1803               	incf	(main@i+1),f
  2510  01C2  0AB0               	movlw	0
  2511  01C3  3000               	addwf	(main@i+1),f
  2512  01C4  07B0               	
  2513                           l2273:	
  2514  01C5                     	movf	(main@i+1),w
  2515  01C5  0830               	xorlw	80h
  2516  01C6  3A80               	movwf	btemp+1
  2517  01C7  00FF               	movlw	(0)^80h
  2518  01C8  3080               	subwf	btemp+1,w
  2519  01C9  027F               	skipz
  2520  01CA  1D03               	goto	u1325
  2521  01CB  29CE               	movlw	05h
  2522  01CC  3005               	subwf	(main@i),w
  2523  01CD  022F               u1325:
  2524  01CE                     
  2525                           	skipc
  2526  01CE  1C03               	goto	u1321
  2527  01CF  29D1               	goto	u1320
  2528  01D0  29D2               u1321:
  2529  01D1                     	goto	l2259
  2530  01D1  295F               u1320:
  2531  01D2                     	goto	l2279
  2532  01D2  29E0               	
  2533                           l116:	
  2534  01D3                     	line	190
  2535                           ;mainS1proyect.c: 190:                 goto Bueno;
  2536                           	goto	l2279
  2537  01D3  29E0               	line	192
  2538                           ;mainS1proyect.c: 192:             }
  2539                           	
  2540                           l114:	
  2541  01D4                     	line	196
  2542                           	
  2543                           l2275:	
  2544  01D4                     ;mainS1proyect.c: 196:             if (contraAct == 1){
  2545                           	bcf	status, 5	;RP0=0, select bank0
  2546  01D4  1283               	bcf	status, 6	;RP1=0, select bank0
  2547  01D5  1303               		decf	((_contraAct)),w
  2548  01D6  033D               	btfss	status,2
  2549  01D7  1D03               	goto	u1331
  2550  01D8  29DA               	goto	u1330
  2551  01D9  29DB               u1331:
  2552  01DA                     	goto	l2279
  2553  01DA  29E0               u1330:
  2554  01DB                     	goto	l2235
  2555  01DB  2903               	line	197
  2556                           	
  2557                           l2277:	
  2558  01DC                     ;mainS1proyect.c: 197:                 goto IngresarC;
  2559                           	goto	l2235
  2560  01DC  2903               	line	198
  2561                           ;mainS1proyect.c: 198:             }
  2562                           	
  2563                           l119:	
  2564  01DD                     	line	200
  2565                           ;mainS1proyect.c: 200:         } else {
  2566                           	goto	l2279
  2567  01DD  29E0               	
  2568                           l110:	
  2569  01DE                     	line	201
  2570                           ;mainS1proyect.c: 201:             goto Presiona;
  2571                           	goto	l109
  2572  01DE  28D4               	line	202
  2573                           ;mainS1proyect.c: 202:         }
  2574                           	
  2575                           l120:	
  2576  01DF                     	goto	l2279
  2577  01DF  29E0               	line	205
  2578                           ;mainS1proyect.c: 205:         Bueno:
  2579                           	
  2580                           l118:	
  2581  01E0                     	line	207
  2582                           	
  2583                           l2279:	
  2584  01E0                     ;mainS1proyect.c: 207:         Lcd_Clear_8bits();
  2585                           	fcall	_Lcd_Clear_8bits
  2586  01E0  120A  118A  26FE  120A  118A  	line	208
  2587                           ;mainS1proyect.c: 208:         Lcd_Set_Cursor_8bits(1,1);
  2588                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2589  01E5  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2590  01E6  0AF5               	movlw	low(01h)
  2591  01E7  3001               	fcall	_Lcd_Set_Cursor_8bits
  2592  01E8  120A  118A  266B  120A  118A  	line	209
  2593                           	
  2594                           l2281:	
  2595  01ED                     ;mainS1proyect.c: 209:         Lcd_Write_String("Acceso brindado",8);
  2596                           	movlw	08h
  2597  01ED  3008               	bcf	status, 5	;RP0=0, select bank0
  2598  01EE  1283               	bcf	status, 6	;RP1=0, select bank0
  2599  01EF  1303               	movwf	(Lcd_Write_String@modo)
  2600  01F0  00A3               	movlw	0
  2601  01F1  3000               	movwf	((Lcd_Write_String@modo))+1
  2602  01F2  00A4               	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  2603  01F3  3064               	fcall	_Lcd_Write_String
  2604  01F4  120A  118A  2619  120A  118A  	line	210
  2605                           	
  2606                           l2283:	
  2607  01F9                     ;mainS1proyect.c: 210:         Lcd_Set_Cursor_8bits(2,1);
  2608                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2609  01F9  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2610  01FA  0AF5               	movlw	low(02h)
  2611  01FB  3002               	fcall	_Lcd_Set_Cursor_8bits
  2612  01FC  120A  118A  266B  120A  118A  	line	211
  2613                           ;mainS1proyect.c: 211:         Lcd_Write_String("Introduzca llave",8);
  2614                           	movlw	08h
  2615  0201  3008               	bcf	status, 5	;RP0=0, select bank0
  2616  0202  1283               	bcf	status, 6	;RP1=0, select bank0
  2617  0203  1303               	movwf	(Lcd_Write_String@modo)
  2618  0204  00A3               	movlw	0
  2619  0205  3000               	movwf	((Lcd_Write_String@modo))+1
  2620  0206  00A4               	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  2621  0207  3023               	fcall	_Lcd_Write_String
  2622  0208  120A  118A  2619  120A  118A  	line	213
  2623                           ;mainS1proyect.c: 213:         while (PORTEbits.RE2 == 0){
  2624                           	goto	l121
  2625  020D  2A20               	
  2626                           l122:	
  2627  020E                     	line	214
  2628                           	
  2629                           l2285:	
  2630  020E                     ;mainS1proyect.c: 214:             Key = keypad_scanner();
  2631                           	fcall	_keypad_scanner
  2632  020E  120A  118A  2274  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2633  0213  1283               	bcf	status, 6	;RP1=0, select bank0
  2634  0214  1303               	movwf	(??_main+0)+0
  2635  0215  00A8               	movf	(??_main+0)+0,w
  2636  0216  0828               	movwf	(main@Key)
  2637  0217  00B1               	line	215
  2638                           	
  2639                           l2287:	
  2640  0218                     ;mainS1proyect.c: 215:             if (Key == 42){
  2641                           		movlw	42
  2642  0218  302A               	xorwf	((main@Key)),w
  2643  0219  0631               	btfss	status,2
  2644  021A  1D03               	goto	u1341
  2645  021B  2A1D               	goto	u1340
  2646  021C  2A1E               u1341:
  2647  021D                     	goto	l121
  2648  021D  2A20               u1340:
  2649  021E                     	goto	l111
  2650  021E  28E4               	line	216
  2651                           	
  2652                           l2289:	
  2653  021F                     ;mainS1proyect.c: 216:                 goto Intentelo;
  2654                           	goto	l111
  2655  021F  28E4               	line	217
  2656                           ;mainS1proyect.c: 217:             }
  2657                           	
  2658                           l123:	
  2659  0220                     	line	218
  2660                           ;mainS1proyect.c: 218:         }
  2661                           	
  2662                           l121:	
  2663  0220                     	line	213
  2664                           ;mainS1proyect.c: 213:         while (PORTEbits.RE2 == 0){
  2665                           	bcf	status, 5	;RP0=0, select bank0
  2666  0220  1283               	bcf	status, 6	;RP1=0, select bank0
  2667  0221  1303               	btfss	(9),2	;volatile
  2668  0222  1D09               	goto	u1351
  2669  0223  2A25               	goto	u1350
  2670  0224  2A26               u1351:
  2671  0225                     	goto	l2285
  2672  0225  2A0E               u1350:
  2673  0226                     	goto	l2291
  2674  0226  2A27               	
  2675                           l124:	
  2676  0227                     	line	219
  2677                           	
  2678                           l2291:	
  2679  0227                     ;mainS1proyect.c: 219:         Lcd_Clear_8bits();
  2680                           	fcall	_Lcd_Clear_8bits
  2681  0227  120A  118A  26FE  120A  118A  	line	220
  2682                           ;mainS1proyect.c: 220:         Lcd_Set_Cursor_8bits(1,1);
  2683                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2684  022C  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2685  022D  0AF5               	movlw	low(01h)
  2686  022E  3001               	fcall	_Lcd_Set_Cursor_8bits
  2687  022F  120A  118A  266B  120A  118A  	line	221
  2688                           	
  2689                           l2293:	
  2690  0234                     ;mainS1proyect.c: 221:         Lcd_Write_String("Abriendo puerta",8);
  2691                           	movlw	08h
  2692  0234  3008               	bcf	status, 5	;RP0=0, select bank0
  2693  0235  1283               	bcf	status, 6	;RP1=0, select bank0
  2694  0236  1303               	movwf	(Lcd_Write_String@modo)
  2695  0237  00A3               	movlw	0
  2696  0238  3000               	movwf	((Lcd_Write_String@modo))+1
  2697  0239  00A4               	movlw	(low((((STR_10)-__stringbase)|8000h)))&0ffh
  2698  023A  3054               	fcall	_Lcd_Write_String
  2699  023B  120A  118A  2619  120A  118A  	line	222
  2700                           	
  2701                           l2295:	
  2702  0240                     ;mainS1proyect.c: 222:         Lcd_Set_Cursor_8bits(2,1);
  2703                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2704  0240  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2705  0241  0AF5               	movlw	low(02h)
  2706  0242  3002               	fcall	_Lcd_Set_Cursor_8bits
  2707  0243  120A  118A  266B  120A  118A  	line	223
  2708                           ;mainS1proyect.c: 223:         Lcd_Write_String("Bienvenido :)",8);
  2709                           	movlw	08h
  2710  0248  3008               	bcf	status, 5	;RP0=0, select bank0
  2711  0249  1283               	bcf	status, 6	;RP1=0, select bank0
  2712  024A  1303               	movwf	(Lcd_Write_String@modo)
  2713  024B  00A3               	movlw	0
  2714  024C  3000               	movwf	((Lcd_Write_String@modo))+1
  2715  024D  00A4               	movlw	(low((((STR_11)-__stringbase)|8000h)))&0ffh
  2716  024E  3074               	fcall	_Lcd_Write_String
  2717  024F  120A  118A  2619  120A  118A  	line	225
  2718                           	
  2719                           l2297:	
  2720  0254                     ;mainS1proyect.c: 225:         CCPR1L = 15;
  2721                           	movlw	low(0Fh)
  2722  0254  300F               	bcf	status, 5	;RP0=0, select bank0
  2723  0255  1283               	bcf	status, 6	;RP1=0, select bank0
  2724  0256  1303               	movwf	(21)	;volatile
  2725  0257  0095               	line	226
  2726                           	
  2727                           l2299:	
  2728  0258                     ;mainS1proyect.c: 226:         _delay((unsigned long)((5000)*(500000/4000.0)));
  2729                           	opt asmopt_push
  2730                           opt asmopt_off
  2731                           movlw  4
  2732  0258  3004               	bcf	status, 5	;RP0=0, select bank0
  2733  0259  1283               	bcf	status, 6	;RP1=0, select bank0
  2734  025A  1303               movwf	((??_main+0)+0+2),f
  2735  025B  00AA               movlw	44
  2736  025C  302C               movwf	((??_main+0)+0+1),f
  2737  025D  00A9               	movlw	171
  2738  025E  30AB               movwf	((??_main+0)+0),f
  2739  025F  00A8               	u1437:
  2740  0260                     decfsz	((??_main+0)+0),f
  2741  0260  0BA8               	goto	u1437
  2742  0261  2A60               	decfsz	((??_main+0)+0+1),f
  2743  0262  0BA9               	goto	u1437
  2744  0263  2A60               	decfsz	((??_main+0)+0+2),f
  2745  0264  0BAA               	goto	u1437
  2746  0265  2A60               opt asmopt_pop
  2747                           
  2748                           	line	227
  2749                           	
  2750                           l2301:	
  2751  0266                     ;mainS1proyect.c: 227:         Lcd_Clear_8bits();
  2752                           	fcall	_Lcd_Clear_8bits
  2753  0266  120A  118A  26FE  120A  118A  	line	228
  2754                           	
  2755                           l2303:	
  2756  026B                     ;mainS1proyect.c: 228:         CCPR1L = 6;
  2757                           	movlw	low(06h)
  2758  026B  3006               	bcf	status, 5	;RP0=0, select bank0
  2759  026C  1283               	bcf	status, 6	;RP1=0, select bank0
  2760  026D  1303               	movwf	(21)	;volatile
  2761  026E  0095               	line	229
  2762                           ;mainS1proyect.c: 229:         goto Inicio;
  2763                           	goto	l2219
  2764  026F  28AC               	line	230
  2765                           ;mainS1proyect.c: 230:     }
  2766                           	
  2767                           l125:	
  2768  0270                     	goto	l2219
  2769  0270  28AC               	
  2770                           l126:	
  2771  0271                     	line	233
  2772                           ;mainS1proyect.c: 232:     return;
  2773                           	
  2774                           l127:	
  2775  0271                     	global	start
  2776                           	ljmp	start
  2777  0271  120A  118A  280C   	opt stack 0
  2778                           GLOBAL	__end_of_main
  2779                           	__end_of_main:
  2780  0274                     	signat	_main,89
  2781                           	global	_switch_press_scan
  2782                           
  2783 ;; *************** function _switch_press_scan *****************
  2784 ;; Defined at:
  2785 ;;		line 90 in file "KEYPAD.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  key             1    6[COMMON] unsigned char 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      unsigned char 
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0, pclath, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2799 ;;      Params:         0       0       0       0       0
  2800 ;;      Locals:         1       0       0       0       0
  2801 ;;      Temps:          1       0       0       0       0
  2802 ;;      Totals:         2       0       0       0       0
  2803 ;;Total ram usage:        2 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    2
  2806 ;; This function calls:
  2807 ;;		_keypad_scanner
  2808 ;; This function is called by:
  2809 ;;		_main
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2813                           	file	"KEYPAD.c"
  2814                           	line	90
  2815                           global __ptext1
  2816                           __ptext1:	;psect for function _switch_press_scan
  2817  06C0                     psect	text1
  2818                           	file	"KEYPAD.c"
  2819                           	line	90
  2820                           	global	__size_of_switch_press_scan
  2821                           	__size_of_switch_press_scan	equ	__end_of_switch_press_scan-_switch_press_scan
  2822  0018                     	
  2823                           _switch_press_scan:	
  2824  06C0                     ;incstack = 0
  2825                           	opt	stack 5
  2826                           ; Regs used in _switch_press_scan: [wreg+status,2+status,0+pclath+cstack]
  2827                           	line	91
  2828                           	
  2829                           l1873:	
  2830  06C0                     ;KEYPAD.c: 91:             char key = 'n';
  2831                           	movlw	low(06Eh)
  2832  06C0  306E               	movwf	(??_switch_press_scan+0)+0
  2833  06C1  00F5               	movf	(??_switch_press_scan+0)+0,w
  2834  06C2  0875               	movwf	(switch_press_scan@key)
  2835  06C3  00F6               	line	92
  2836                           ;KEYPAD.c: 92:             while(key=='n')
  2837                           	goto	l1877
  2838  06C4  2ECE               	
  2839                           l366:	
  2840  06C5                     	line	93
  2841                           	
  2842                           l1875:	
  2843  06C5                     ;KEYPAD.c: 93:             key = keypad_scanner();
  2844                           	fcall	_keypad_scanner
  2845  06C5  120A  118A  2274  120A  118A  	movwf	(??_switch_press_scan+0)+0
  2846  06CA  00F5               	movf	(??_switch_press_scan+0)+0,w
  2847  06CB  0875               	movwf	(switch_press_scan@key)
  2848  06CC  00F6               	goto	l1877
  2849  06CD  2ECE               	
  2850                           l365:	
  2851  06CE                     	line	92
  2852                           	
  2853                           l1877:	
  2854  06CE                     ;KEYPAD.c: 92:             while(key=='n')
  2855                           		movlw	110
  2856  06CE  306E               	xorwf	((switch_press_scan@key)),w
  2857  06CF  0676               	btfsc	status,2
  2858  06D0  1903               	goto	u1051
  2859  06D1  2ED3               	goto	u1050
  2860  06D2  2ED4               u1051:
  2861  06D3                     	goto	l1875
  2862  06D3  2EC5               u1050:
  2863  06D4                     	goto	l1879
  2864  06D4  2ED5               	
  2865                           l367:	
  2866  06D5                     	line	94
  2867                           	
  2868                           l1879:	
  2869  06D5                     ;KEYPAD.c: 94:             return key;
  2870                           	movf	(switch_press_scan@key),w
  2871  06D5  0876               	goto	l368
  2872  06D6  2ED7               	
  2873                           l1881:	
  2874  06D7                     	line	95
  2875                           	
  2876                           l368:	
  2877  06D7                     	return
  2878  06D7  0008               	opt stack 0
  2879                           GLOBAL	__end_of_switch_press_scan
  2880                           	__end_of_switch_press_scan:
  2881  06D8                     	signat	_switch_press_scan,89
  2882                           	global	_keypad_scanner
  2883                           
  2884 ;; *************** function _keypad_scanner *****************
  2885 ;; Defined at:
  2886 ;;		line 14 in file "KEYPAD.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      unsigned char 
  2893 ;; Registers used:
  2894 ;;		wreg
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2900 ;;      Params:         0       0       0       0       0
  2901 ;;      Locals:         0       0       0       0       0
  2902 ;;      Temps:          2       0       0       0       0
  2903 ;;      Totals:         2       0       0       0       0
  2904 ;;Total ram usage:        2 bytes
  2905 ;; Hardware stack levels used:    1
  2906 ;; Hardware stack levels required when called:    1
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_main
  2911 ;;		_switch_press_scan
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2915                           	line	14
  2916                           global __ptext2
  2917                           __ptext2:	;psect for function _keypad_scanner
  2918  0274                     psect	text2
  2919                           	file	"KEYPAD.c"
  2920                           	line	14
  2921                           	global	__size_of_keypad_scanner
  2922                           	__size_of_keypad_scanner	equ	__end_of_keypad_scanner-_keypad_scanner
  2923  0195                     	
  2924                           _keypad_scanner:	
  2925  0274                     ;incstack = 0
  2926                           	opt	stack 5
  2927                           ; Regs used in _keypad_scanner: [wreg]
  2928                           	line	16
  2929                           	
  2930                           l1617:	
  2931  0274                     ;KEYPAD.c: 16:             RD0 = 0; RD1 = 1; RD2 = 1; RD3 = 1;
  2932                           	bcf	status, 5	;RP0=0, select bank0
  2933  0274  1283               	bcf	status, 6	;RP1=0, select bank0
  2934  0275  1303               	bcf	(64/8),(64)&7	;volatile
  2935  0276  1008               	bsf	(65/8),(65)&7	;volatile
  2936  0277  1488               	bsf	(66/8),(66)&7	;volatile
  2937  0278  1508               	bsf	(67/8),(67)&7	;volatile
  2938  0279  1588               	line	17
  2939                           ;KEYPAD.c: 17:             if (RD4 == 0) {
  2940                           	btfsc	(68/8),(68)&7	;volatile
  2941  027A  1A08               	goto	u701
  2942  027B  2A7D               	goto	u700
  2943  027C  2A7E               u701:
  2944  027D                     	goto	l298
  2945  027D  2A92               u700:
  2946  027E                     	line	18
  2947                           	
  2948                           l1619:	
  2949  027E                     ;KEYPAD.c: 18:                 _delay((unsigned long)((100)*(500000/4000.0)));
  2950                           	opt asmopt_push
  2951                           opt asmopt_off
  2952                           movlw	17
  2953  027E  3011               movwf	((??_keypad_scanner+0)+0+1),f
  2954  027F  00F4               	movlw	58
  2955  0280  303A               movwf	((??_keypad_scanner+0)+0),f
  2956  0281  00F3               	u1447:
  2957  0282                     decfsz	((??_keypad_scanner+0)+0),f
  2958  0282  0BF3               	goto	u1447
  2959  0283  2A82               	decfsz	((??_keypad_scanner+0)+0+1),f
  2960  0284  0BF4               	goto	u1447
  2961  0285  2A82               	nop
  2962  0286  0000               opt asmopt_pop
  2963                           
  2964                           	line	19
  2965                           ;KEYPAD.c: 19:                 while (RD4==0);
  2966                           	goto	l299
  2967  0287  2A88               	
  2968                           l300:	
  2969  0288                     	
  2970                           l299:	
  2971  0288                     	bcf	status, 5	;RP0=0, select bank0
  2972  0288  1283               	bcf	status, 6	;RP1=0, select bank0
  2973  0289  1303               	btfss	(68/8),(68)&7	;volatile
  2974  028A  1E08               	goto	u711
  2975  028B  2A8D               	goto	u710
  2976  028C  2A8E               u711:
  2977  028D                     	goto	l299
  2978  028D  2A88               u710:
  2979  028E                     	goto	l1621
  2980  028E  2A8F               	
  2981                           l301:	
  2982  028F                     	line	20
  2983                           	
  2984                           l1621:	
  2985  028F                     ;KEYPAD.c: 20:                 return '1'; }
  2986                           	movlw	low(031h)
  2987  028F  3031               	goto	l302
  2988  0290  2C08               	
  2989                           l1623:	
  2990  0291                     	goto	l302
  2991  0291  2C08               	
  2992                           l298:	
  2993  0292                     	line	21
  2994                           ;KEYPAD.c: 21:             if (RD5 == 0) {
  2995                           	btfsc	(69/8),(69)&7	;volatile
  2996  0292  1A88               	goto	u721
  2997  0293  2A95               	goto	u720
  2998  0294  2A96               u721:
  2999  0295                     	goto	l303
  3000  0295  2AAA               u720:
  3001  0296                     	line	22
  3002                           	
  3003                           l1625:	
  3004  0296                     ;KEYPAD.c: 22:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3005                           	opt asmopt_push
  3006                           opt asmopt_off
  3007                           movlw	17
  3008  0296  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3009  0297  00F4               	movlw	58
  3010  0298  303A               movwf	((??_keypad_scanner+0)+0),f
  3011  0299  00F3               	u1457:
  3012  029A                     decfsz	((??_keypad_scanner+0)+0),f
  3013  029A  0BF3               	goto	u1457
  3014  029B  2A9A               	decfsz	((??_keypad_scanner+0)+0+1),f
  3015  029C  0BF4               	goto	u1457
  3016  029D  2A9A               	nop
  3017  029E  0000               opt asmopt_pop
  3018                           
  3019                           	line	23
  3020                           ;KEYPAD.c: 23:                 while (RD5==0);
  3021                           	goto	l304
  3022  029F  2AA0               	
  3023                           l305:	
  3024  02A0                     	
  3025                           l304:	
  3026  02A0                     	bcf	status, 5	;RP0=0, select bank0
  3027  02A0  1283               	bcf	status, 6	;RP1=0, select bank0
  3028  02A1  1303               	btfss	(69/8),(69)&7	;volatile
  3029  02A2  1E88               	goto	u731
  3030  02A3  2AA5               	goto	u730
  3031  02A4  2AA6               u731:
  3032  02A5                     	goto	l304
  3033  02A5  2AA0               u730:
  3034  02A6                     	goto	l1627
  3035  02A6  2AA7               	
  3036                           l306:	
  3037  02A7                     	line	24
  3038                           	
  3039                           l1627:	
  3040  02A7                     ;KEYPAD.c: 24:                 return '2'; }
  3041                           	movlw	low(032h)
  3042  02A7  3032               	goto	l302
  3043  02A8  2C08               	
  3044                           l1629:	
  3045  02A9                     	goto	l302
  3046  02A9  2C08               	
  3047                           l303:	
  3048  02AA                     	line	25
  3049                           ;KEYPAD.c: 25:             if (RD6 == 0) {
  3050                           	btfsc	(70/8),(70)&7	;volatile
  3051  02AA  1B08               	goto	u741
  3052  02AB  2AAD               	goto	u740
  3053  02AC  2AAE               u741:
  3054  02AD                     	goto	l307
  3055  02AD  2AC2               u740:
  3056  02AE                     	line	26
  3057                           	
  3058                           l1631:	
  3059  02AE                     ;KEYPAD.c: 26:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3060                           	opt asmopt_push
  3061                           opt asmopt_off
  3062                           movlw	17
  3063  02AE  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3064  02AF  00F4               	movlw	58
  3065  02B0  303A               movwf	((??_keypad_scanner+0)+0),f
  3066  02B1  00F3               	u1467:
  3067  02B2                     decfsz	((??_keypad_scanner+0)+0),f
  3068  02B2  0BF3               	goto	u1467
  3069  02B3  2AB2               	decfsz	((??_keypad_scanner+0)+0+1),f
  3070  02B4  0BF4               	goto	u1467
  3071  02B5  2AB2               	nop
  3072  02B6  0000               opt asmopt_pop
  3073                           
  3074                           	line	27
  3075                           ;KEYPAD.c: 27:                 while (RD6==0);
  3076                           	goto	l308
  3077  02B7  2AB8               	
  3078                           l309:	
  3079  02B8                     	
  3080                           l308:	
  3081  02B8                     	bcf	status, 5	;RP0=0, select bank0
  3082  02B8  1283               	bcf	status, 6	;RP1=0, select bank0
  3083  02B9  1303               	btfss	(70/8),(70)&7	;volatile
  3084  02BA  1F08               	goto	u751
  3085  02BB  2ABD               	goto	u750
  3086  02BC  2ABE               u751:
  3087  02BD                     	goto	l308
  3088  02BD  2AB8               u750:
  3089  02BE                     	goto	l1633
  3090  02BE  2ABF               	
  3091                           l310:	
  3092  02BF                     	line	28
  3093                           	
  3094                           l1633:	
  3095  02BF                     ;KEYPAD.c: 28:                 return '3'; }
  3096                           	movlw	low(033h)
  3097  02BF  3033               	goto	l302
  3098  02C0  2C08               	
  3099                           l1635:	
  3100  02C1                     	goto	l302
  3101  02C1  2C08               	
  3102                           l307:	
  3103  02C2                     	line	29
  3104                           ;KEYPAD.c: 29:             if (RD7 == 0) {
  3105                           	btfsc	(71/8),(71)&7	;volatile
  3106  02C2  1B88               	goto	u761
  3107  02C3  2AC5               	goto	u760
  3108  02C4  2AC6               u761:
  3109  02C5                     	goto	l311
  3110  02C5  2ADA               u760:
  3111  02C6                     	line	30
  3112                           	
  3113                           l1637:	
  3114  02C6                     ;KEYPAD.c: 30:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3115                           	opt asmopt_push
  3116                           opt asmopt_off
  3117                           movlw	17
  3118  02C6  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3119  02C7  00F4               	movlw	58
  3120  02C8  303A               movwf	((??_keypad_scanner+0)+0),f
  3121  02C9  00F3               	u1477:
  3122  02CA                     decfsz	((??_keypad_scanner+0)+0),f
  3123  02CA  0BF3               	goto	u1477
  3124  02CB  2ACA               	decfsz	((??_keypad_scanner+0)+0+1),f
  3125  02CC  0BF4               	goto	u1477
  3126  02CD  2ACA               	nop
  3127  02CE  0000               opt asmopt_pop
  3128                           
  3129                           	line	31
  3130                           ;KEYPAD.c: 31:                 while (RD7==0);
  3131                           	goto	l312
  3132  02CF  2AD0               	
  3133                           l313:	
  3134  02D0                     	
  3135                           l312:	
  3136  02D0                     	bcf	status, 5	;RP0=0, select bank0
  3137  02D0  1283               	bcf	status, 6	;RP1=0, select bank0
  3138  02D1  1303               	btfss	(71/8),(71)&7	;volatile
  3139  02D2  1F88               	goto	u771
  3140  02D3  2AD5               	goto	u770
  3141  02D4  2AD6               u771:
  3142  02D5                     	goto	l312
  3143  02D5  2AD0               u770:
  3144  02D6                     	goto	l1639
  3145  02D6  2AD7               	
  3146                           l314:	
  3147  02D7                     	line	32
  3148                           	
  3149                           l1639:	
  3150  02D7                     ;KEYPAD.c: 32:                 return 'A'; }
  3151                           	movlw	low(041h)
  3152  02D7  3041               	goto	l302
  3153  02D8  2C08               	
  3154                           l1641:	
  3155  02D9                     	goto	l302
  3156  02D9  2C08               	
  3157                           l311:	
  3158  02DA                     	line	34
  3159                           ;KEYPAD.c: 34:             RD0 = 1; RD1 = 0; RD2 = 1; RD3 = 1;
  3160                           	bsf	(64/8),(64)&7	;volatile
  3161  02DA  1408               	bcf	(65/8),(65)&7	;volatile
  3162  02DB  1088               	bsf	(66/8),(66)&7	;volatile
  3163  02DC  1508               	bsf	(67/8),(67)&7	;volatile
  3164  02DD  1588               	line	35
  3165                           ;KEYPAD.c: 35:             if (RD4 == 0) {
  3166                           	btfsc	(68/8),(68)&7	;volatile
  3167  02DE  1A08               	goto	u781
  3168  02DF  2AE1               	goto	u780
  3169  02E0  2AE2               u781:
  3170  02E1                     	goto	l315
  3171  02E1  2AF6               u780:
  3172  02E2                     	line	36
  3173                           	
  3174                           l1643:	
  3175  02E2                     ;KEYPAD.c: 36:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3176                           	opt asmopt_push
  3177                           opt asmopt_off
  3178                           movlw	17
  3179  02E2  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3180  02E3  00F4               	movlw	58
  3181  02E4  303A               movwf	((??_keypad_scanner+0)+0),f
  3182  02E5  00F3               	u1487:
  3183  02E6                     decfsz	((??_keypad_scanner+0)+0),f
  3184  02E6  0BF3               	goto	u1487
  3185  02E7  2AE6               	decfsz	((??_keypad_scanner+0)+0+1),f
  3186  02E8  0BF4               	goto	u1487
  3187  02E9  2AE6               	nop
  3188  02EA  0000               opt asmopt_pop
  3189                           
  3190                           	line	37
  3191                           ;KEYPAD.c: 37:                 while (RD4==0);
  3192                           	goto	l316
  3193  02EB  2AEC               	
  3194                           l317:	
  3195  02EC                     	
  3196                           l316:	
  3197  02EC                     	bcf	status, 5	;RP0=0, select bank0
  3198  02EC  1283               	bcf	status, 6	;RP1=0, select bank0
  3199  02ED  1303               	btfss	(68/8),(68)&7	;volatile
  3200  02EE  1E08               	goto	u791
  3201  02EF  2AF1               	goto	u790
  3202  02F0  2AF2               u791:
  3203  02F1                     	goto	l316
  3204  02F1  2AEC               u790:
  3205  02F2                     	goto	l1645
  3206  02F2  2AF3               	
  3207                           l318:	
  3208  02F3                     	line	38
  3209                           	
  3210                           l1645:	
  3211  02F3                     ;KEYPAD.c: 38:                 return '4'; }
  3212                           	movlw	low(034h)
  3213  02F3  3034               	goto	l302
  3214  02F4  2C08               	
  3215                           l1647:	
  3216  02F5                     	goto	l302
  3217  02F5  2C08               	
  3218                           l315:	
  3219  02F6                     	line	39
  3220                           ;KEYPAD.c: 39:             if (RD5 == 0) {
  3221                           	btfsc	(69/8),(69)&7	;volatile
  3222  02F6  1A88               	goto	u801
  3223  02F7  2AF9               	goto	u800
  3224  02F8  2AFA               u801:
  3225  02F9                     	goto	l319
  3226  02F9  2B0E               u800:
  3227  02FA                     	line	40
  3228                           	
  3229                           l1649:	
  3230  02FA                     ;KEYPAD.c: 40:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3231                           	opt asmopt_push
  3232                           opt asmopt_off
  3233                           movlw	17
  3234  02FA  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3235  02FB  00F4               	movlw	58
  3236  02FC  303A               movwf	((??_keypad_scanner+0)+0),f
  3237  02FD  00F3               	u1497:
  3238  02FE                     decfsz	((??_keypad_scanner+0)+0),f
  3239  02FE  0BF3               	goto	u1497
  3240  02FF  2AFE               	decfsz	((??_keypad_scanner+0)+0+1),f
  3241  0300  0BF4               	goto	u1497
  3242  0301  2AFE               	nop
  3243  0302  0000               opt asmopt_pop
  3244                           
  3245                           	line	41
  3246                           ;KEYPAD.c: 41:                 while (RD5==0);
  3247                           	goto	l320
  3248  0303  2B04               	
  3249                           l321:	
  3250  0304                     	
  3251                           l320:	
  3252  0304                     	bcf	status, 5	;RP0=0, select bank0
  3253  0304  1283               	bcf	status, 6	;RP1=0, select bank0
  3254  0305  1303               	btfss	(69/8),(69)&7	;volatile
  3255  0306  1E88               	goto	u811
  3256  0307  2B09               	goto	u810
  3257  0308  2B0A               u811:
  3258  0309                     	goto	l320
  3259  0309  2B04               u810:
  3260  030A                     	goto	l1651
  3261  030A  2B0B               	
  3262                           l322:	
  3263  030B                     	line	42
  3264                           	
  3265                           l1651:	
  3266  030B                     ;KEYPAD.c: 42:                 return '5'; }
  3267                           	movlw	low(035h)
  3268  030B  3035               	goto	l302
  3269  030C  2C08               	
  3270                           l1653:	
  3271  030D                     	goto	l302
  3272  030D  2C08               	
  3273                           l319:	
  3274  030E                     	line	43
  3275                           ;KEYPAD.c: 43:             if (RD6 == 0) {
  3276                           	btfsc	(70/8),(70)&7	;volatile
  3277  030E  1B08               	goto	u821
  3278  030F  2B11               	goto	u820
  3279  0310  2B12               u821:
  3280  0311                     	goto	l323
  3281  0311  2B26               u820:
  3282  0312                     	line	44
  3283                           	
  3284                           l1655:	
  3285  0312                     ;KEYPAD.c: 44:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3286                           	opt asmopt_push
  3287                           opt asmopt_off
  3288                           movlw	17
  3289  0312  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3290  0313  00F4               	movlw	58
  3291  0314  303A               movwf	((??_keypad_scanner+0)+0),f
  3292  0315  00F3               	u1507:
  3293  0316                     decfsz	((??_keypad_scanner+0)+0),f
  3294  0316  0BF3               	goto	u1507
  3295  0317  2B16               	decfsz	((??_keypad_scanner+0)+0+1),f
  3296  0318  0BF4               	goto	u1507
  3297  0319  2B16               	nop
  3298  031A  0000               opt asmopt_pop
  3299                           
  3300                           	line	45
  3301                           ;KEYPAD.c: 45:                 while (RD6==0);
  3302                           	goto	l324
  3303  031B  2B1C               	
  3304                           l325:	
  3305  031C                     	
  3306                           l324:	
  3307  031C                     	bcf	status, 5	;RP0=0, select bank0
  3308  031C  1283               	bcf	status, 6	;RP1=0, select bank0
  3309  031D  1303               	btfss	(70/8),(70)&7	;volatile
  3310  031E  1F08               	goto	u831
  3311  031F  2B21               	goto	u830
  3312  0320  2B22               u831:
  3313  0321                     	goto	l324
  3314  0321  2B1C               u830:
  3315  0322                     	goto	l1657
  3316  0322  2B23               	
  3317                           l326:	
  3318  0323                     	line	46
  3319                           	
  3320                           l1657:	
  3321  0323                     ;KEYPAD.c: 46:                 return '6'; }
  3322                           	movlw	low(036h)
  3323  0323  3036               	goto	l302
  3324  0324  2C08               	
  3325                           l1659:	
  3326  0325                     	goto	l302
  3327  0325  2C08               	
  3328                           l323:	
  3329  0326                     	line	47
  3330                           ;KEYPAD.c: 47:             if (RD7 == 0) {
  3331                           	btfsc	(71/8),(71)&7	;volatile
  3332  0326  1B88               	goto	u841
  3333  0327  2B29               	goto	u840
  3334  0328  2B2A               u841:
  3335  0329                     	goto	l327
  3336  0329  2B3E               u840:
  3337  032A                     	line	48
  3338                           	
  3339                           l1661:	
  3340  032A                     ;KEYPAD.c: 48:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3341                           	opt asmopt_push
  3342                           opt asmopt_off
  3343                           movlw	17
  3344  032A  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3345  032B  00F4               	movlw	58
  3346  032C  303A               movwf	((??_keypad_scanner+0)+0),f
  3347  032D  00F3               	u1517:
  3348  032E                     decfsz	((??_keypad_scanner+0)+0),f
  3349  032E  0BF3               	goto	u1517
  3350  032F  2B2E               	decfsz	((??_keypad_scanner+0)+0+1),f
  3351  0330  0BF4               	goto	u1517
  3352  0331  2B2E               	nop
  3353  0332  0000               opt asmopt_pop
  3354                           
  3355                           	line	49
  3356                           ;KEYPAD.c: 49:                 while (RD7==0);
  3357                           	goto	l328
  3358  0333  2B34               	
  3359                           l329:	
  3360  0334                     	
  3361                           l328:	
  3362  0334                     	bcf	status, 5	;RP0=0, select bank0
  3363  0334  1283               	bcf	status, 6	;RP1=0, select bank0
  3364  0335  1303               	btfss	(71/8),(71)&7	;volatile
  3365  0336  1F88               	goto	u851
  3366  0337  2B39               	goto	u850
  3367  0338  2B3A               u851:
  3368  0339                     	goto	l328
  3369  0339  2B34               u850:
  3370  033A                     	goto	l1663
  3371  033A  2B3B               	
  3372                           l330:	
  3373  033B                     	line	50
  3374                           	
  3375                           l1663:	
  3376  033B                     ;KEYPAD.c: 50:                 return 'B'; }
  3377                           	movlw	low(042h)
  3378  033B  3042               	goto	l302
  3379  033C  2C08               	
  3380                           l1665:	
  3381  033D                     	goto	l302
  3382  033D  2C08               	
  3383                           l327:	
  3384  033E                     	line	52
  3385                           ;KEYPAD.c: 52:             RD0 = 1; RD1 = 1; RD2 = 0; RD3 = 1;
  3386                           	bsf	(64/8),(64)&7	;volatile
  3387  033E  1408               	bsf	(65/8),(65)&7	;volatile
  3388  033F  1488               	bcf	(66/8),(66)&7	;volatile
  3389  0340  1108               	bsf	(67/8),(67)&7	;volatile
  3390  0341  1588               	line	53
  3391                           ;KEYPAD.c: 53:             if (RD4 == 0) {
  3392                           	btfsc	(68/8),(68)&7	;volatile
  3393  0342  1A08               	goto	u861
  3394  0343  2B45               	goto	u860
  3395  0344  2B46               u861:
  3396  0345                     	goto	l331
  3397  0345  2B5A               u860:
  3398  0346                     	line	54
  3399                           	
  3400                           l1667:	
  3401  0346                     ;KEYPAD.c: 54:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3402                           	opt asmopt_push
  3403                           opt asmopt_off
  3404                           movlw	17
  3405  0346  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3406  0347  00F4               	movlw	58
  3407  0348  303A               movwf	((??_keypad_scanner+0)+0),f
  3408  0349  00F3               	u1527:
  3409  034A                     decfsz	((??_keypad_scanner+0)+0),f
  3410  034A  0BF3               	goto	u1527
  3411  034B  2B4A               	decfsz	((??_keypad_scanner+0)+0+1),f
  3412  034C  0BF4               	goto	u1527
  3413  034D  2B4A               	nop
  3414  034E  0000               opt asmopt_pop
  3415                           
  3416                           	line	55
  3417                           ;KEYPAD.c: 55:                 while (RD4==0);
  3418                           	goto	l332
  3419  034F  2B50               	
  3420                           l333:	
  3421  0350                     	
  3422                           l332:	
  3423  0350                     	bcf	status, 5	;RP0=0, select bank0
  3424  0350  1283               	bcf	status, 6	;RP1=0, select bank0
  3425  0351  1303               	btfss	(68/8),(68)&7	;volatile
  3426  0352  1E08               	goto	u871
  3427  0353  2B55               	goto	u870
  3428  0354  2B56               u871:
  3429  0355                     	goto	l332
  3430  0355  2B50               u870:
  3431  0356                     	goto	l1669
  3432  0356  2B57               	
  3433                           l334:	
  3434  0357                     	line	56
  3435                           	
  3436                           l1669:	
  3437  0357                     ;KEYPAD.c: 56:                 return '7'; }
  3438                           	movlw	low(037h)
  3439  0357  3037               	goto	l302
  3440  0358  2C08               	
  3441                           l1671:	
  3442  0359                     	goto	l302
  3443  0359  2C08               	
  3444                           l331:	
  3445  035A                     	line	57
  3446                           ;KEYPAD.c: 57:             if (RD5 == 0) {
  3447                           	btfsc	(69/8),(69)&7	;volatile
  3448  035A  1A88               	goto	u881
  3449  035B  2B5D               	goto	u880
  3450  035C  2B5E               u881:
  3451  035D                     	goto	l335
  3452  035D  2B72               u880:
  3453  035E                     	line	58
  3454                           	
  3455                           l1673:	
  3456  035E                     ;KEYPAD.c: 58:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3457                           	opt asmopt_push
  3458                           opt asmopt_off
  3459                           movlw	17
  3460  035E  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3461  035F  00F4               	movlw	58
  3462  0360  303A               movwf	((??_keypad_scanner+0)+0),f
  3463  0361  00F3               	u1537:
  3464  0362                     decfsz	((??_keypad_scanner+0)+0),f
  3465  0362  0BF3               	goto	u1537
  3466  0363  2B62               	decfsz	((??_keypad_scanner+0)+0+1),f
  3467  0364  0BF4               	goto	u1537
  3468  0365  2B62               	nop
  3469  0366  0000               opt asmopt_pop
  3470                           
  3471                           	line	59
  3472                           ;KEYPAD.c: 59:                 while (RD5==0);
  3473                           	goto	l336
  3474  0367  2B68               	
  3475                           l337:	
  3476  0368                     	
  3477                           l336:	
  3478  0368                     	bcf	status, 5	;RP0=0, select bank0
  3479  0368  1283               	bcf	status, 6	;RP1=0, select bank0
  3480  0369  1303               	btfss	(69/8),(69)&7	;volatile
  3481  036A  1E88               	goto	u891
  3482  036B  2B6D               	goto	u890
  3483  036C  2B6E               u891:
  3484  036D                     	goto	l336
  3485  036D  2B68               u890:
  3486  036E                     	goto	l1675
  3487  036E  2B6F               	
  3488                           l338:	
  3489  036F                     	line	60
  3490                           	
  3491                           l1675:	
  3492  036F                     ;KEYPAD.c: 60:                 return '8'; }
  3493                           	movlw	low(038h)
  3494  036F  3038               	goto	l302
  3495  0370  2C08               	
  3496                           l1677:	
  3497  0371                     	goto	l302
  3498  0371  2C08               	
  3499                           l335:	
  3500  0372                     	line	61
  3501                           ;KEYPAD.c: 61:             if (RD6 == 0) {
  3502                           	btfsc	(70/8),(70)&7	;volatile
  3503  0372  1B08               	goto	u901
  3504  0373  2B75               	goto	u900
  3505  0374  2B76               u901:
  3506  0375                     	goto	l339
  3507  0375  2B8A               u900:
  3508  0376                     	line	62
  3509                           	
  3510                           l1679:	
  3511  0376                     ;KEYPAD.c: 62:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3512                           	opt asmopt_push
  3513                           opt asmopt_off
  3514                           movlw	17
  3515  0376  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3516  0377  00F4               	movlw	58
  3517  0378  303A               movwf	((??_keypad_scanner+0)+0),f
  3518  0379  00F3               	u1547:
  3519  037A                     decfsz	((??_keypad_scanner+0)+0),f
  3520  037A  0BF3               	goto	u1547
  3521  037B  2B7A               	decfsz	((??_keypad_scanner+0)+0+1),f
  3522  037C  0BF4               	goto	u1547
  3523  037D  2B7A               	nop
  3524  037E  0000               opt asmopt_pop
  3525                           
  3526                           	line	63
  3527                           ;KEYPAD.c: 63:                 while (RD6==0);
  3528                           	goto	l340
  3529  037F  2B80               	
  3530                           l341:	
  3531  0380                     	
  3532                           l340:	
  3533  0380                     	bcf	status, 5	;RP0=0, select bank0
  3534  0380  1283               	bcf	status, 6	;RP1=0, select bank0
  3535  0381  1303               	btfss	(70/8),(70)&7	;volatile
  3536  0382  1F08               	goto	u911
  3537  0383  2B85               	goto	u910
  3538  0384  2B86               u911:
  3539  0385                     	goto	l340
  3540  0385  2B80               u910:
  3541  0386                     	goto	l1681
  3542  0386  2B87               	
  3543                           l342:	
  3544  0387                     	line	64
  3545                           	
  3546                           l1681:	
  3547  0387                     ;KEYPAD.c: 64:                 return '9'; }
  3548                           	movlw	low(039h)
  3549  0387  3039               	goto	l302
  3550  0388  2C08               	
  3551                           l1683:	
  3552  0389                     	goto	l302
  3553  0389  2C08               	
  3554                           l339:	
  3555  038A                     	line	65
  3556                           ;KEYPAD.c: 65:             if (RD7 == 0) {
  3557                           	btfsc	(71/8),(71)&7	;volatile
  3558  038A  1B88               	goto	u921
  3559  038B  2B8D               	goto	u920
  3560  038C  2B8E               u921:
  3561  038D                     	goto	l343
  3562  038D  2BA2               u920:
  3563  038E                     	line	66
  3564                           	
  3565                           l1685:	
  3566  038E                     ;KEYPAD.c: 66:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3567                           	opt asmopt_push
  3568                           opt asmopt_off
  3569                           movlw	17
  3570  038E  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3571  038F  00F4               	movlw	58
  3572  0390  303A               movwf	((??_keypad_scanner+0)+0),f
  3573  0391  00F3               	u1557:
  3574  0392                     decfsz	((??_keypad_scanner+0)+0),f
  3575  0392  0BF3               	goto	u1557
  3576  0393  2B92               	decfsz	((??_keypad_scanner+0)+0+1),f
  3577  0394  0BF4               	goto	u1557
  3578  0395  2B92               	nop
  3579  0396  0000               opt asmopt_pop
  3580                           
  3581                           	line	67
  3582                           ;KEYPAD.c: 67:                 while (RD7==0);
  3583                           	goto	l344
  3584  0397  2B98               	
  3585                           l345:	
  3586  0398                     	
  3587                           l344:	
  3588  0398                     	bcf	status, 5	;RP0=0, select bank0
  3589  0398  1283               	bcf	status, 6	;RP1=0, select bank0
  3590  0399  1303               	btfss	(71/8),(71)&7	;volatile
  3591  039A  1F88               	goto	u931
  3592  039B  2B9D               	goto	u930
  3593  039C  2B9E               u931:
  3594  039D                     	goto	l344
  3595  039D  2B98               u930:
  3596  039E                     	goto	l1687
  3597  039E  2B9F               	
  3598                           l346:	
  3599  039F                     	line	68
  3600                           	
  3601                           l1687:	
  3602  039F                     ;KEYPAD.c: 68:                 return 'C'; }
  3603                           	movlw	low(043h)
  3604  039F  3043               	goto	l302
  3605  03A0  2C08               	
  3606                           l1689:	
  3607  03A1                     	goto	l302
  3608  03A1  2C08               	
  3609                           l343:	
  3610  03A2                     	line	70
  3611                           ;KEYPAD.c: 70:             RD0 = 1; RD1 = 1; RD2 = 1; RD3 = 0;
  3612                           	bsf	(64/8),(64)&7	;volatile
  3613  03A2  1408               	bsf	(65/8),(65)&7	;volatile
  3614  03A3  1488               	bsf	(66/8),(66)&7	;volatile
  3615  03A4  1508               	bcf	(67/8),(67)&7	;volatile
  3616  03A5  1188               	line	71
  3617                           ;KEYPAD.c: 71:             if (RD4 == 0) {
  3618                           	btfsc	(68/8),(68)&7	;volatile
  3619  03A6  1A08               	goto	u941
  3620  03A7  2BA9               	goto	u940
  3621  03A8  2BAA               u941:
  3622  03A9                     	goto	l347
  3623  03A9  2BBE               u940:
  3624  03AA                     	line	72
  3625                           	
  3626                           l1691:	
  3627  03AA                     ;KEYPAD.c: 72:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3628                           	opt asmopt_push
  3629                           opt asmopt_off
  3630                           movlw	17
  3631  03AA  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3632  03AB  00F4               	movlw	58
  3633  03AC  303A               movwf	((??_keypad_scanner+0)+0),f
  3634  03AD  00F3               	u1567:
  3635  03AE                     decfsz	((??_keypad_scanner+0)+0),f
  3636  03AE  0BF3               	goto	u1567
  3637  03AF  2BAE               	decfsz	((??_keypad_scanner+0)+0+1),f
  3638  03B0  0BF4               	goto	u1567
  3639  03B1  2BAE               	nop
  3640  03B2  0000               opt asmopt_pop
  3641                           
  3642                           	line	73
  3643                           ;KEYPAD.c: 73:                 while (RD4==0);
  3644                           	goto	l348
  3645  03B3  2BB4               	
  3646                           l349:	
  3647  03B4                     	
  3648                           l348:	
  3649  03B4                     	bcf	status, 5	;RP0=0, select bank0
  3650  03B4  1283               	bcf	status, 6	;RP1=0, select bank0
  3651  03B5  1303               	btfss	(68/8),(68)&7	;volatile
  3652  03B6  1E08               	goto	u951
  3653  03B7  2BB9               	goto	u950
  3654  03B8  2BBA               u951:
  3655  03B9                     	goto	l348
  3656  03B9  2BB4               u950:
  3657  03BA                     	goto	l1693
  3658  03BA  2BBB               	
  3659                           l350:	
  3660  03BB                     	line	74
  3661                           	
  3662                           l1693:	
  3663  03BB                     ;KEYPAD.c: 74:                 return '*'; }
  3664                           	movlw	low(02Ah)
  3665  03BB  302A               	goto	l302
  3666  03BC  2C08               	
  3667                           l1695:	
  3668  03BD                     	goto	l302
  3669  03BD  2C08               	
  3670                           l347:	
  3671  03BE                     	line	75
  3672                           ;KEYPAD.c: 75:             if (RD5 == 0) {
  3673                           	btfsc	(69/8),(69)&7	;volatile
  3674  03BE  1A88               	goto	u961
  3675  03BF  2BC1               	goto	u960
  3676  03C0  2BC2               u961:
  3677  03C1                     	goto	l351
  3678  03C1  2BD6               u960:
  3679  03C2                     	line	76
  3680                           	
  3681                           l1697:	
  3682  03C2                     ;KEYPAD.c: 76:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3683                           	opt asmopt_push
  3684                           opt asmopt_off
  3685                           movlw	17
  3686  03C2  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3687  03C3  00F4               	movlw	58
  3688  03C4  303A               movwf	((??_keypad_scanner+0)+0),f
  3689  03C5  00F3               	u1577:
  3690  03C6                     decfsz	((??_keypad_scanner+0)+0),f
  3691  03C6  0BF3               	goto	u1577
  3692  03C7  2BC6               	decfsz	((??_keypad_scanner+0)+0+1),f
  3693  03C8  0BF4               	goto	u1577
  3694  03C9  2BC6               	nop
  3695  03CA  0000               opt asmopt_pop
  3696                           
  3697                           	line	77
  3698                           ;KEYPAD.c: 77:                 while (RD5==0);
  3699                           	goto	l352
  3700  03CB  2BCC               	
  3701                           l353:	
  3702  03CC                     	
  3703                           l352:	
  3704  03CC                     	bcf	status, 5	;RP0=0, select bank0
  3705  03CC  1283               	bcf	status, 6	;RP1=0, select bank0
  3706  03CD  1303               	btfss	(69/8),(69)&7	;volatile
  3707  03CE  1E88               	goto	u971
  3708  03CF  2BD1               	goto	u970
  3709  03D0  2BD2               u971:
  3710  03D1                     	goto	l352
  3711  03D1  2BCC               u970:
  3712  03D2                     	goto	l1699
  3713  03D2  2BD3               	
  3714                           l354:	
  3715  03D3                     	line	78
  3716                           	
  3717                           l1699:	
  3718  03D3                     ;KEYPAD.c: 78:                 return '0'; }
  3719                           	movlw	low(030h)
  3720  03D3  3030               	goto	l302
  3721  03D4  2C08               	
  3722                           l1701:	
  3723  03D5                     	goto	l302
  3724  03D5  2C08               	
  3725                           l351:	
  3726  03D6                     	line	79
  3727                           ;KEYPAD.c: 79:             if (RD6 == 0) {
  3728                           	btfsc	(70/8),(70)&7	;volatile
  3729  03D6  1B08               	goto	u981
  3730  03D7  2BD9               	goto	u980
  3731  03D8  2BDA               u981:
  3732  03D9                     	goto	l355
  3733  03D9  2BEE               u980:
  3734  03DA                     	line	80
  3735                           	
  3736                           l1703:	
  3737  03DA                     ;KEYPAD.c: 80:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3738                           	opt asmopt_push
  3739                           opt asmopt_off
  3740                           movlw	17
  3741  03DA  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3742  03DB  00F4               	movlw	58
  3743  03DC  303A               movwf	((??_keypad_scanner+0)+0),f
  3744  03DD  00F3               	u1587:
  3745  03DE                     decfsz	((??_keypad_scanner+0)+0),f
  3746  03DE  0BF3               	goto	u1587
  3747  03DF  2BDE               	decfsz	((??_keypad_scanner+0)+0+1),f
  3748  03E0  0BF4               	goto	u1587
  3749  03E1  2BDE               	nop
  3750  03E2  0000               opt asmopt_pop
  3751                           
  3752                           	line	81
  3753                           ;KEYPAD.c: 81:                 while (RD6==0);
  3754                           	goto	l356
  3755  03E3  2BE4               	
  3756                           l357:	
  3757  03E4                     	
  3758                           l356:	
  3759  03E4                     	bcf	status, 5	;RP0=0, select bank0
  3760  03E4  1283               	bcf	status, 6	;RP1=0, select bank0
  3761  03E5  1303               	btfss	(70/8),(70)&7	;volatile
  3762  03E6  1F08               	goto	u991
  3763  03E7  2BE9               	goto	u990
  3764  03E8  2BEA               u991:
  3765  03E9                     	goto	l356
  3766  03E9  2BE4               u990:
  3767  03EA                     	goto	l1705
  3768  03EA  2BEB               	
  3769                           l358:	
  3770  03EB                     	line	82
  3771                           	
  3772                           l1705:	
  3773  03EB                     ;KEYPAD.c: 82:                 return '#'; }
  3774                           	movlw	low(023h)
  3775  03EB  3023               	goto	l302
  3776  03EC  2C08               	
  3777                           l1707:	
  3778  03ED                     	goto	l302
  3779  03ED  2C08               	
  3780                           l355:	
  3781  03EE                     	line	83
  3782                           ;KEYPAD.c: 83:             if (RD7 == 0) {
  3783                           	btfsc	(71/8),(71)&7	;volatile
  3784  03EE  1B88               	goto	u1001
  3785  03EF  2BF1               	goto	u1000
  3786  03F0  2BF2               u1001:
  3787  03F1                     	goto	l1715
  3788  03F1  2C06               u1000:
  3789  03F2                     	line	84
  3790                           	
  3791                           l1709:	
  3792  03F2                     ;KEYPAD.c: 84:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3793                           	opt asmopt_push
  3794                           opt asmopt_off
  3795                           movlw	17
  3796  03F2  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3797  03F3  00F4               	movlw	58
  3798  03F4  303A               movwf	((??_keypad_scanner+0)+0),f
  3799  03F5  00F3               	u1597:
  3800  03F6                     decfsz	((??_keypad_scanner+0)+0),f
  3801  03F6  0BF3               	goto	u1597
  3802  03F7  2BF6               	decfsz	((??_keypad_scanner+0)+0+1),f
  3803  03F8  0BF4               	goto	u1597
  3804  03F9  2BF6               	nop
  3805  03FA  0000               opt asmopt_pop
  3806                           
  3807                           	line	85
  3808                           ;KEYPAD.c: 85:                 while (RD7==0);
  3809                           	goto	l360
  3810  03FB  2BFC               	
  3811                           l361:	
  3812  03FC                     	
  3813                           l360:	
  3814  03FC                     	bcf	status, 5	;RP0=0, select bank0
  3815  03FC  1283               	bcf	status, 6	;RP1=0, select bank0
  3816  03FD  1303               	btfss	(71/8),(71)&7	;volatile
  3817  03FE  1F88               	goto	u1011
  3818  03FF  2C01               	goto	u1010
  3819  0400  2C02               u1011:
  3820  0401                     	goto	l360
  3821  0401  2BFC               u1010:
  3822  0402                     	goto	l1711
  3823  0402  2C03               	
  3824                           l362:	
  3825  0403                     	line	86
  3826                           	
  3827                           l1711:	
  3828  0403                     ;KEYPAD.c: 86:                 return 'D'; }
  3829                           	movlw	low(044h)
  3830  0403  3044               	goto	l302
  3831  0404  2C08               	
  3832                           l1713:	
  3833  0405                     	goto	l302
  3834  0405  2C08               	
  3835                           l359:	
  3836  0406                     	line	88
  3837                           	
  3838                           l1715:	
  3839  0406                     ;KEYPAD.c: 88:     return 'n';
  3840                           	movlw	low(06Eh)
  3841  0406  306E               	goto	l302
  3842  0407  2C08               	
  3843                           l1717:	
  3844  0408                     	line	89
  3845                           	
  3846                           l302:	
  3847  0408                     	return
  3848  0408  0008               	opt stack 0
  3849                           GLOBAL	__end_of_keypad_scanner
  3850                           	__end_of_keypad_scanner:
  3851  0409                     	signat	_keypad_scanner,89
  3852                           	global	_initOsc
  3853                           
  3854 ;; *************** function _initOsc *****************
  3855 ;; Defined at:
  3856 ;;		line 9 in file "FuncionOscilador.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  frec            1    wreg     unsigned char 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;  frec            1    5[COMMON] unsigned char 
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  1    wreg      void 
  3863 ;; Registers used:
  3864 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3870 ;;      Params:         0       0       0       0       0
  3871 ;;      Locals:         1       0       0       0       0
  3872 ;;      Temps:          2       0       0       0       0
  3873 ;;      Totals:         3       0       0       0       0
  3874 ;;Total ram usage:        3 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:    1
  3877 ;; This function calls:
  3878 ;;		Nothing
  3879 ;; This function is called by:
  3880 ;;		_main
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3884                           	file	"FuncionOscilador.c"
  3885                           	line	9
  3886                           global __ptext3
  3887                           __ptext3:	;psect for function _initOsc
  3888  051F                     psect	text3
  3889                           	file	"FuncionOscilador.c"
  3890                           	line	9
  3891                           	global	__size_of_initOsc
  3892                           	__size_of_initOsc	equ	__end_of_initOsc-_initOsc
  3893  005D                     	
  3894                           _initOsc:	
  3895  051F                     ;incstack = 0
  3896                           	opt	stack 6
  3897                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  3898                           ;initOsc@frec stored from wreg
  3899                           	movwf	(initOsc@frec)
  3900  051F  00F5               	line	10
  3901                           	
  3902                           l1755:	
  3903  0520                     ;FuncionOscilador.c: 10:     switch(frec){
  3904                           	goto	l1759
  3905  0520  2D58               	line	11
  3906                           ;FuncionOscilador.c: 11:         case 0:
  3907                           	
  3908                           l139:	
  3909  0521                     	line	12
  3910                           ;FuncionOscilador.c: 12:             OSCCONbits.IRCF0 = 0;
  3911                           	bsf	status, 5	;RP0=1, select bank1
  3912  0521  1683               	bcf	status, 6	;RP1=0, select bank1
  3913  0522  1303               	bcf	(143)^080h,4	;volatile
  3914  0523  120F               	line	13
  3915                           ;FuncionOscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  3916                           	bcf	(143)^080h,5	;volatile
  3917  0524  128F               	line	14
  3918                           ;FuncionOscilador.c: 14:             OSCCONbits.IRCF2 = 0;
  3919                           	bcf	(143)^080h,6	;volatile
  3920  0525  130F               	line	15
  3921                           ;FuncionOscilador.c: 15:             break;
  3922                           	goto	l140
  3923  0526  2D7A               	line	16
  3924                           ;FuncionOscilador.c: 16:         case 1:
  3925                           	
  3926                           l141:	
  3927  0527                     	line	17
  3928                           ;FuncionOscilador.c: 17:             OSCCONbits.IRCF0 = 1;
  3929                           	bsf	status, 5	;RP0=1, select bank1
  3930  0527  1683               	bcf	status, 6	;RP1=0, select bank1
  3931  0528  1303               	bsf	(143)^080h,4	;volatile
  3932  0529  160F               	line	18
  3933                           ;FuncionOscilador.c: 18:             OSCCONbits.IRCF1 = 0;
  3934                           	bcf	(143)^080h,5	;volatile
  3935  052A  128F               	line	19
  3936                           ;FuncionOscilador.c: 19:             OSCCONbits.IRCF2 = 0;
  3937                           	bcf	(143)^080h,6	;volatile
  3938  052B  130F               	line	20
  3939                           ;FuncionOscilador.c: 20:             break;
  3940                           	goto	l140
  3941  052C  2D7A               	line	21
  3942                           ;FuncionOscilador.c: 21:         case 2:
  3943                           	
  3944                           l142:	
  3945  052D                     	line	22
  3946                           ;FuncionOscilador.c: 22:             OSCCONbits.IRCF0 = 0;
  3947                           	bsf	status, 5	;RP0=1, select bank1
  3948  052D  1683               	bcf	status, 6	;RP1=0, select bank1
  3949  052E  1303               	bcf	(143)^080h,4	;volatile
  3950  052F  120F               	line	23
  3951                           ;FuncionOscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  3952                           	bsf	(143)^080h,5	;volatile
  3953  0530  168F               	line	24
  3954                           ;FuncionOscilador.c: 24:             OSCCONbits.IRCF2 = 0;
  3955                           	bcf	(143)^080h,6	;volatile
  3956  0531  130F               	line	25
  3957                           ;FuncionOscilador.c: 25:             break;
  3958                           	goto	l140
  3959  0532  2D7A               	line	26
  3960                           ;FuncionOscilador.c: 26:         case 3:
  3961                           	
  3962                           l143:	
  3963  0533                     	line	27
  3964                           ;FuncionOscilador.c: 27:             OSCCONbits.IRCF0 = 1;
  3965                           	bsf	status, 5	;RP0=1, select bank1
  3966  0533  1683               	bcf	status, 6	;RP1=0, select bank1
  3967  0534  1303               	bsf	(143)^080h,4	;volatile
  3968  0535  160F               	line	28
  3969                           ;FuncionOscilador.c: 28:             OSCCONbits.IRCF1 = 1;
  3970                           	bsf	(143)^080h,5	;volatile
  3971  0536  168F               	line	29
  3972                           ;FuncionOscilador.c: 29:             OSCCONbits.IRCF2 = 0;
  3973                           	bcf	(143)^080h,6	;volatile
  3974  0537  130F               	line	30
  3975                           ;FuncionOscilador.c: 30:             break;
  3976                           	goto	l140
  3977  0538  2D7A               	line	31
  3978                           ;FuncionOscilador.c: 31:         case 4:
  3979                           	
  3980                           l144:	
  3981  0539                     	line	32
  3982                           ;FuncionOscilador.c: 32:             OSCCONbits.IRCF0 = 0;
  3983                           	bsf	status, 5	;RP0=1, select bank1
  3984  0539  1683               	bcf	status, 6	;RP1=0, select bank1
  3985  053A  1303               	bcf	(143)^080h,4	;volatile
  3986  053B  120F               	line	33
  3987                           ;FuncionOscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  3988                           	bcf	(143)^080h,5	;volatile
  3989  053C  128F               	line	34
  3990                           ;FuncionOscilador.c: 34:             OSCCONbits.IRCF2 = 1;
  3991                           	bsf	(143)^080h,6	;volatile
  3992  053D  170F               	line	35
  3993                           ;FuncionOscilador.c: 35:             break;
  3994                           	goto	l140
  3995  053E  2D7A               	line	36
  3996                           ;FuncionOscilador.c: 36:         case 5:
  3997                           	
  3998                           l145:	
  3999  053F                     	line	37
  4000                           ;FuncionOscilador.c: 37:             OSCCONbits.IRCF0 = 1;
  4001                           	bsf	status, 5	;RP0=1, select bank1
  4002  053F  1683               	bcf	status, 6	;RP1=0, select bank1
  4003  0540  1303               	bsf	(143)^080h,4	;volatile
  4004  0541  160F               	line	38
  4005                           ;FuncionOscilador.c: 38:             OSCCONbits.IRCF1 = 0;
  4006                           	bcf	(143)^080h,5	;volatile
  4007  0542  128F               	line	39
  4008                           ;FuncionOscilador.c: 39:             OSCCONbits.IRCF2 = 1;
  4009                           	bsf	(143)^080h,6	;volatile
  4010  0543  170F               	line	40
  4011                           ;FuncionOscilador.c: 40:             break;
  4012                           	goto	l140
  4013  0544  2D7A               	line	42
  4014                           ;FuncionOscilador.c: 42:         case 6:
  4015                           	
  4016                           l146:	
  4017  0545                     	line	43
  4018                           ;FuncionOscilador.c: 43:             OSCCONbits.IRCF0 = 0;
  4019                           	bsf	status, 5	;RP0=1, select bank1
  4020  0545  1683               	bcf	status, 6	;RP1=0, select bank1
  4021  0546  1303               	bcf	(143)^080h,4	;volatile
  4022  0547  120F               	line	44
  4023                           ;FuncionOscilador.c: 44:             OSCCONbits.IRCF1 = 1;
  4024                           	bsf	(143)^080h,5	;volatile
  4025  0548  168F               	line	45
  4026                           ;FuncionOscilador.c: 45:             OSCCONbits.IRCF2 = 1;
  4027                           	bsf	(143)^080h,6	;volatile
  4028  0549  170F               	line	46
  4029                           ;FuncionOscilador.c: 46:             break;
  4030                           	goto	l140
  4031  054A  2D7A               	line	47
  4032                           ;FuncionOscilador.c: 47:         case 7:
  4033                           	
  4034                           l147:	
  4035  054B                     	line	48
  4036                           ;FuncionOscilador.c: 48:             OSCCONbits.IRCF0 = 1;
  4037                           	bsf	status, 5	;RP0=1, select bank1
  4038  054B  1683               	bcf	status, 6	;RP1=0, select bank1
  4039  054C  1303               	bsf	(143)^080h,4	;volatile
  4040  054D  160F               	line	49
  4041                           ;FuncionOscilador.c: 49:             OSCCONbits.IRCF1 = 1;
  4042                           	bsf	(143)^080h,5	;volatile
  4043  054E  168F               	line	50
  4044                           ;FuncionOscilador.c: 50:             OSCCONbits.IRCF2 = 1;
  4045                           	bsf	(143)^080h,6	;volatile
  4046  054F  170F               	line	51
  4047                           ;FuncionOscilador.c: 51:             break;
  4048                           	goto	l140
  4049  0550  2D7A               	line	52
  4050                           ;FuncionOscilador.c: 52:         default:
  4051                           	
  4052                           l148:	
  4053  0551                     	line	53
  4054                           ;FuncionOscilador.c: 53:             OSCCONbits.IRCF0 = 0;
  4055                           	bsf	status, 5	;RP0=1, select bank1
  4056  0551  1683               	bcf	status, 6	;RP1=0, select bank1
  4057  0552  1303               	bcf	(143)^080h,4	;volatile
  4058  0553  120F               	line	54
  4059                           ;FuncionOscilador.c: 54:             OSCCONbits.IRCF1 = 1;
  4060                           	bsf	(143)^080h,5	;volatile
  4061  0554  168F               	line	55
  4062                           ;FuncionOscilador.c: 55:             OSCCONbits.IRCF2 = 1;
  4063                           	bsf	(143)^080h,6	;volatile
  4064  0555  170F               	line	56
  4065                           ;FuncionOscilador.c: 56:             break;
  4066                           	goto	l140
  4067  0556  2D7A               	line	57
  4068                           	
  4069                           l1757:	
  4070  0557                     ;FuncionOscilador.c: 57:     }
  4071                           	goto	l140
  4072  0557  2D7A               	
  4073                           l138:	
  4074  0558                     	
  4075                           l1759:	
  4076  0558                     	movf	(initOsc@frec),w
  4077  0558  0875               	movwf	(??_initOsc+0)+0
  4078  0559  00F3               	clrf	(??_initOsc+0)+0+1
  4079  055A  01F4               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4080                           ; Switch size 1, requested type "space"
  4081                           ; Number of cases is 1, Range of values is 0 to 0
  4082                           ; switch strategies available:
  4083                           ; Name         Instructions Cycles
  4084                           ; simple_byte            4     3 (average)
  4085                           ; direct_byte           11     8 (fixed)
  4086                           ; jumptable            260     6 (fixed)
  4087                           ;	Chosen strategy is simple_byte
  4088                           
  4089                           	movf 1+(??_initOsc+0)+0,w
  4090  055B  0874               	opt asmopt_push
  4091                           	opt asmopt_off
  4092                           	xorlw	0^0	; case 0
  4093  055C  3A00               	skipnz
  4094  055D  1903               	goto	l2451
  4095  055E  2D60               	goto	l148
  4096  055F  2D51               	opt asmopt_pop
  4097                           	
  4098                           l2451:	
  4099  0560                     ; Switch size 1, requested type "space"
  4100                           ; Number of cases is 8, Range of values is 0 to 7
  4101                           ; switch strategies available:
  4102                           ; Name         Instructions Cycles
  4103                           ; simple_byte           25    13 (average)
  4104                           ; direct_byte           32     8 (fixed)
  4105                           ; jumptable            260     6 (fixed)
  4106                           ;	Chosen strategy is simple_byte
  4107                           
  4108                           	movf 0+(??_initOsc+0)+0,w
  4109  0560  0873               	opt asmopt_push
  4110                           	opt asmopt_off
  4111                           	xorlw	0^0	; case 0
  4112  0561  3A00               	skipnz
  4113  0562  1903               	goto	l139
  4114  0563  2D21               	xorlw	1^0	; case 1
  4115  0564  3A01               	skipnz
  4116  0565  1903               	goto	l141
  4117  0566  2D27               	xorlw	2^1	; case 2
  4118  0567  3A03               	skipnz
  4119  0568  1903               	goto	l142
  4120  0569  2D2D               	xorlw	3^2	; case 3
  4121  056A  3A01               	skipnz
  4122  056B  1903               	goto	l143
  4123  056C  2D33               	xorlw	4^3	; case 4
  4124  056D  3A07               	skipnz
  4125  056E  1903               	goto	l144
  4126  056F  2D39               	xorlw	5^4	; case 5
  4127  0570  3A01               	skipnz
  4128  0571  1903               	goto	l145
  4129  0572  2D3F               	xorlw	6^5	; case 6
  4130  0573  3A03               	skipnz
  4131  0574  1903               	goto	l146
  4132  0575  2D45               	xorlw	7^6	; case 7
  4133  0576  3A01               	skipnz
  4134  0577  1903               	goto	l147
  4135  0578  2D4B               	goto	l148
  4136  0579  2D51               	opt asmopt_pop
  4137                           
  4138                           	
  4139                           l140:	
  4140  057A                     	line	59
  4141                           ;FuncionOscilador.c: 59:     OSCCONbits.SCS = 1;
  4142                           	bsf	(143)^080h,0	;volatile
  4143  057A  140F               	line	60
  4144                           	
  4145                           l149:	
  4146  057B                     	return
  4147  057B  0008               	opt stack 0
  4148                           GLOBAL	__end_of_initOsc
  4149                           	__end_of_initOsc:
  4150  057C                     	signat	_initOsc,4217
  4151                           	global	_init
  4152                           
  4153 ;; *************** function _init *****************
  4154 ;; Defined at:
  4155 ;;		line 237 in file "mainS1proyect.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;		None
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      void 
  4162 ;; Registers used:
  4163 ;;		wreg, status,2
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4169 ;;      Params:         0       0       0       0       0
  4170 ;;      Locals:         0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0
  4172 ;;      Totals:         0       0       0       0       0
  4173 ;;Total ram usage:        0 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    1
  4176 ;; This function calls:
  4177 ;;		Nothing
  4178 ;; This function is called by:
  4179 ;;		_main
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4183                           	file	"mainS1proyect.c"
  4184                           	line	237
  4185                           global __ptext4
  4186                           __ptext4:	;psect for function _init
  4187  06D8                     psect	text4
  4188                           	file	"mainS1proyect.c"
  4189                           	line	237
  4190                           	global	__size_of_init
  4191                           	__size_of_init	equ	__end_of_init-_init
  4192  0016                     	
  4193                           _init:	
  4194  06D8                     ;incstack = 0
  4195                           	opt	stack 6
  4196                           ; Regs used in _init: [wreg+status,2]
  4197                           	line	239
  4198                           	
  4199                           l1727:	
  4200  06D8                     ;mainS1proyect.c: 239:     TRISB = 0;
  4201                           	bsf	status, 5	;RP0=1, select bank1
  4202  06D8  1683               	bcf	status, 6	;RP1=0, select bank1
  4203  06D9  1303               	clrf	(134)^080h	;volatile
  4204  06DA  0186               	line	240
  4205                           	
  4206                           l1729:	
  4207  06DB                     ;mainS1proyect.c: 240:     TRISA = 0x0F;
  4208                           	movlw	low(0Fh)
  4209  06DB  300F               	movwf	(133)^080h	;volatile
  4210  06DC  0085               	line	242
  4211                           	
  4212                           l1731:	
  4213  06DD                     ;mainS1proyect.c: 242:     TRISD = 0;
  4214                           	clrf	(136)^080h	;volatile
  4215  06DD  0188               	line	243
  4216                           	
  4217                           l1733:	
  4218  06DE                     ;mainS1proyect.c: 243:     TRISC = 0;
  4219                           	clrf	(135)^080h	;volatile
  4220  06DE  0187               	line	244
  4221                           	
  4222                           l1735:	
  4223  06DF                     ;mainS1proyect.c: 244:     TRISE = 0;
  4224                           	clrf	(137)^080h	;volatile
  4225  06DF  0189               	line	245
  4226                           	
  4227                           l1737:	
  4228  06E0                     ;mainS1proyect.c: 245:     ANSEL = 0;
  4229                           	bsf	status, 5	;RP0=1, select bank3
  4230  06E0  1683               	bsf	status, 6	;RP1=1, select bank3
  4231  06E1  1703               	clrf	(392)^0180h	;volatile
  4232  06E2  0188               	line	246
  4233                           	
  4234                           l1739:	
  4235  06E3                     ;mainS1proyect.c: 246:     ANSELH = 0;
  4236                           	clrf	(393)^0180h	;volatile
  4237  06E3  0189               	line	247
  4238                           	
  4239                           l1741:	
  4240  06E4                     ;mainS1proyect.c: 247:     ANSELbits.ANS0 = 1;
  4241                           	bsf	(392)^0180h,0	;volatile
  4242  06E4  1408               	line	249
  4243                           	
  4244                           l1743:	
  4245  06E5                     ;mainS1proyect.c: 249:     PORTA = 0;
  4246                           	bcf	status, 5	;RP0=0, select bank0
  4247  06E5  1283               	bcf	status, 6	;RP1=0, select bank0
  4248  06E6  1303               	clrf	(5)	;volatile
  4249  06E7  0185               	line	250
  4250                           	
  4251                           l1745:	
  4252  06E8                     ;mainS1proyect.c: 250:     PORTB = 0;
  4253                           	clrf	(6)	;volatile
  4254  06E8  0186               	line	251
  4255                           	
  4256                           l1747:	
  4257  06E9                     ;mainS1proyect.c: 251:     PORTD = 0;
  4258                           	clrf	(8)	;volatile
  4259  06E9  0188               	line	252
  4260                           	
  4261                           l1749:	
  4262  06EA                     ;mainS1proyect.c: 252:     PORTC = 0;
  4263                           	clrf	(7)	;volatile
  4264  06EA  0187               	line	253
  4265                           	
  4266                           l1751:	
  4267  06EB                     ;mainS1proyect.c: 253:     PORTE = 0;
  4268                           	clrf	(9)	;volatile
  4269  06EB  0189               	goto	l130
  4270  06EC  2EED               	line	255
  4271                           	
  4272                           l1753:	
  4273  06ED                     	line	256
  4274                           ;mainS1proyect.c: 255:     return;
  4275                           	
  4276                           l130:	
  4277  06ED                     	return
  4278  06ED  0008               	opt stack 0
  4279                           GLOBAL	__end_of_init
  4280                           	__end_of_init:
  4281  06EE                     	signat	_init,89
  4282                           	global	_funcAdc
  4283                           
  4284 ;; *************** function _funcAdc *****************
  4285 ;; Defined at:
  4286 ;;		line 9 in file "ADCconf.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  divD            1    wreg     unsigned char 
  4289 ;;  anaP            1    3[COMMON] unsigned char 
  4290 ;;  just            1    4[COMMON] unsigned char 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  divD            1    0[BANK0 ] unsigned char 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4302 ;;      Params:         2       0       0       0       0
  4303 ;;      Locals:         0       1       0       0       0
  4304 ;;      Temps:          2       0       0       0       0
  4305 ;;      Totals:         4       1       0       0       0
  4306 ;;Total ram usage:        5 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    1
  4309 ;; This function calls:
  4310 ;;		Nothing
  4311 ;; This function is called by:
  4312 ;;		_main
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4316                           	file	"ADCconf.c"
  4317                           	line	9
  4318                           global __ptext5
  4319                           __ptext5:	;psect for function _funcAdc
  4320  04AE                     psect	text5
  4321                           	file	"ADCconf.c"
  4322                           	line	9
  4323                           	global	__size_of_funcAdc
  4324                           	__size_of_funcAdc	equ	__end_of_funcAdc-_funcAdc
  4325  0071                     	
  4326                           _funcAdc:	
  4327  04AE                     ;incstack = 0
  4328                           	opt	stack 6
  4329                           ; Regs used in _funcAdc: [wreg-fsr0h+status,2+status,0]
  4330                           ;funcAdc@divD stored from wreg
  4331                           	bcf	status, 5	;RP0=0, select bank0
  4332  04AE  1283               	bcf	status, 6	;RP1=0, select bank0
  4333  04AF  1303               	movwf	(funcAdc@divD)
  4334  04B0  00A0               	line	10
  4335                           	
  4336                           l2153:	
  4337  04B1                     ;ADCconf.c: 10:     switch(divD){
  4338                           	goto	l2157
  4339  04B1  2CBF               	line	11
  4340                           ;ADCconf.c: 11:         case 0:
  4341                           	
  4342                           l385:	
  4343  04B2                     	line	12
  4344                           ;ADCconf.c: 12:             ADCON0bits.ADCS0 = 0;
  4345                           	bcf	(31),6	;volatile
  4346  04B2  131F               	line	13
  4347                           ;ADCconf.c: 13:             ADCON0bits.ADCS1 = 0;
  4348                           	bcf	(31),7	;volatile
  4349  04B3  139F               	line	14
  4350                           ;ADCconf.c: 14:             break;
  4351                           	goto	l2161
  4352  04B4  2CE8               	line	15
  4353                           ;ADCconf.c: 15:         case 1:
  4354                           	
  4355                           l387:	
  4356  04B5                     	line	16
  4357                           ;ADCconf.c: 16:             ADCON0bits.ADCS0 = 1;
  4358                           	bsf	(31),6	;volatile
  4359  04B5  171F               	line	17
  4360                           ;ADCconf.c: 17:             ADCON0bits.ADCS1 = 0;
  4361                           	bcf	(31),7	;volatile
  4362  04B6  139F               	line	18
  4363                           ;ADCconf.c: 18:             break;
  4364                           	goto	l2161
  4365  04B7  2CE8               	line	20
  4366                           ;ADCconf.c: 20:         case 2:
  4367                           	
  4368                           l388:	
  4369  04B8                     	line	21
  4370                           ;ADCconf.c: 21:             ADCON0bits.ADCS0 = 0;
  4371                           	bcf	(31),6	;volatile
  4372  04B8  131F               	line	22
  4373                           ;ADCconf.c: 22:             ADCON0bits.ADCS1 = 1;
  4374                           	bsf	(31),7	;volatile
  4375  04B9  179F               	line	23
  4376                           ;ADCconf.c: 23:             break;
  4377                           	goto	l2161
  4378  04BA  2CE8               	line	25
  4379                           ;ADCconf.c: 25:         default:
  4380                           	
  4381                           l389:	
  4382  04BB                     	line	26
  4383                           ;ADCconf.c: 26:             ADCON0bits.ADCS0 = 1;
  4384                           	bsf	(31),6	;volatile
  4385  04BB  171F               	line	27
  4386                           ;ADCconf.c: 27:             ADCON0bits.ADCS1 = 1;
  4387                           	bsf	(31),7	;volatile
  4388  04BC  179F               	line	28
  4389                           ;ADCconf.c: 28:             break;
  4390                           	goto	l2161
  4391  04BD  2CE8               	line	29
  4392                           	
  4393                           l2155:	
  4394  04BE                     ;ADCconf.c: 29:     }
  4395                           	goto	l2161
  4396  04BE  2CE8               	
  4397                           l384:	
  4398  04BF                     	
  4399                           l2157:	
  4400  04BF                     	movf	(funcAdc@divD),w
  4401  04BF  0820               	movwf	(??_funcAdc+0)+0
  4402  04C0  00F5               	clrf	(??_funcAdc+0)+0+1
  4403  04C1  01F6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4404                           ; Switch size 1, requested type "space"
  4405                           ; Number of cases is 1, Range of values is 0 to 0
  4406                           ; switch strategies available:
  4407                           ; Name         Instructions Cycles
  4408                           ; simple_byte            4     3 (average)
  4409                           ; direct_byte           11     8 (fixed)
  4410                           ; jumptable            260     6 (fixed)
  4411                           ;	Chosen strategy is simple_byte
  4412                           
  4413                           	movf 1+(??_funcAdc+0)+0,w
  4414  04C2  0876               	opt asmopt_push
  4415                           	opt asmopt_off
  4416                           	xorlw	0^0	; case 0
  4417  04C3  3A00               	skipnz
  4418  04C4  1903               	goto	l2453
  4419  04C5  2CC7               	goto	l389
  4420  04C6  2CBB               	opt asmopt_pop
  4421                           	
  4422                           l2453:	
  4423  04C7                     ; Switch size 1, requested type "space"
  4424                           ; Number of cases is 3, Range of values is 0 to 2
  4425                           ; switch strategies available:
  4426                           ; Name         Instructions Cycles
  4427                           ; simple_byte           10     6 (average)
  4428                           ; direct_byte           17     8 (fixed)
  4429                           ; jumptable            260     6 (fixed)
  4430                           ;	Chosen strategy is simple_byte
  4431                           
  4432                           	movf 0+(??_funcAdc+0)+0,w
  4433  04C7  0875               	opt asmopt_push
  4434                           	opt asmopt_off
  4435                           	xorlw	0^0	; case 0
  4436  04C8  3A00               	skipnz
  4437  04C9  1903               	goto	l385
  4438  04CA  2CB2               	xorlw	1^0	; case 1
  4439  04CB  3A01               	skipnz
  4440  04CC  1903               	goto	l387
  4441  04CD  2CB5               	xorlw	2^1	; case 2
  4442  04CE  3A03               	skipnz
  4443  04CF  1903               	goto	l388
  4444  04D0  2CB8               	goto	l389
  4445  04D1  2CBB               	opt asmopt_pop
  4446                           
  4447                           	
  4448                           l386:	
  4449  04D2                     	line	31
  4450                           ;ADCconf.c: 31:     switch(anaP){
  4451                           	goto	l2161
  4452  04D2  2CE8               	line	32
  4453                           ;ADCconf.c: 32:         case 0:
  4454                           	
  4455                           l391:	
  4456  04D3                     	line	33
  4457                           ;ADCconf.c: 33:             ADCON0bits.CHS0 = 0;
  4458                           	bcf	(31),2	;volatile
  4459  04D3  111F               	line	34
  4460                           ;ADCconf.c: 34:             ADCON0bits.CHS1 = 0;
  4461                           	bcf	(31),3	;volatile
  4462  04D4  119F               	line	35
  4463                           ;ADCconf.c: 35:             ADCON0bits.CHS2 = 0;
  4464                           	bcf	(31),4	;volatile
  4465  04D5  121F               	line	36
  4466                           ;ADCconf.c: 36:             ADCON0bits.CHS3 = 0;
  4467                           	bcf	(31),5	;volatile
  4468  04D6  129F               	line	37
  4469                           ;ADCconf.c: 37:             break;
  4470                           	goto	l2165
  4471  04D7  2D05               	line	39
  4472                           ;ADCconf.c: 39:         case 1:
  4473                           	
  4474                           l393:	
  4475  04D8                     	line	40
  4476                           ;ADCconf.c: 40:             ADCON0bits.CHS0 = 1;
  4477                           	bsf	(31),2	;volatile
  4478  04D8  151F               	line	41
  4479                           ;ADCconf.c: 41:             ADCON0bits.CHS1 = 0;
  4480                           	bcf	(31),3	;volatile
  4481  04D9  119F               	line	42
  4482                           ;ADCconf.c: 42:             ADCON0bits.CHS2 = 0;
  4483                           	bcf	(31),4	;volatile
  4484  04DA  121F               	line	43
  4485                           ;ADCconf.c: 43:             ADCON0bits.CHS3 = 0;
  4486                           	bcf	(31),5	;volatile
  4487  04DB  129F               	line	44
  4488                           ;ADCconf.c: 44:             break;
  4489                           	goto	l2165
  4490  04DC  2D05               	line	46
  4491                           ;ADCconf.c: 46:         case 2:
  4492                           	
  4493                           l394:	
  4494  04DD                     	line	47
  4495                           ;ADCconf.c: 47:             ADCON0bits.CHS0 = 0;
  4496                           	bcf	(31),2	;volatile
  4497  04DD  111F               	line	48
  4498                           ;ADCconf.c: 48:             ADCON0bits.CHS1 = 1;
  4499                           	bsf	(31),3	;volatile
  4500  04DE  159F               	line	49
  4501                           ;ADCconf.c: 49:             ADCON0bits.CHS2 = 0;
  4502                           	bcf	(31),4	;volatile
  4503  04DF  121F               	line	50
  4504                           ;ADCconf.c: 50:             ADCON0bits.CHS3 = 0;
  4505                           	bcf	(31),5	;volatile
  4506  04E0  129F               	line	51
  4507                           ;ADCconf.c: 51:             break;
  4508                           	goto	l2165
  4509  04E1  2D05               	line	53
  4510                           ;ADCconf.c: 53:         default:
  4511                           	
  4512                           l395:	
  4513  04E2                     	line	54
  4514                           ;ADCconf.c: 54:             ADCON0bits.CHS0 = 0;
  4515                           	bcf	(31),2	;volatile
  4516  04E2  111F               	line	55
  4517                           ;ADCconf.c: 55:             ADCON0bits.CHS1 = 0;
  4518                           	bcf	(31),3	;volatile
  4519  04E3  119F               	line	56
  4520                           ;ADCconf.c: 56:             ADCON0bits.CHS2 = 0;
  4521                           	bcf	(31),4	;volatile
  4522  04E4  121F               	line	57
  4523                           ;ADCconf.c: 57:             ADCON0bits.CHS3 = 1;
  4524                           	bsf	(31),5	;volatile
  4525  04E5  169F               	line	58
  4526                           ;ADCconf.c: 58:             break;
  4527                           	goto	l2165
  4528  04E6  2D05               	line	59
  4529                           	
  4530                           l2159:	
  4531  04E7                     ;ADCconf.c: 59:     }
  4532                           	goto	l2165
  4533  04E7  2D05               	
  4534                           l390:	
  4535  04E8                     	
  4536                           l2161:	
  4537  04E8                     	movf	(funcAdc@anaP),w
  4538  04E8  0873               	movwf	(??_funcAdc+0)+0
  4539  04E9  00F5               	clrf	(??_funcAdc+0)+0+1
  4540  04EA  01F6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4541                           ; Switch size 1, requested type "space"
  4542                           ; Number of cases is 1, Range of values is 0 to 0
  4543                           ; switch strategies available:
  4544                           ; Name         Instructions Cycles
  4545                           ; simple_byte            4     3 (average)
  4546                           ; direct_byte           11     8 (fixed)
  4547                           ; jumptable            260     6 (fixed)
  4548                           ;	Chosen strategy is simple_byte
  4549                           
  4550                           	movf 1+(??_funcAdc+0)+0,w
  4551  04EB  0876               	opt asmopt_push
  4552                           	opt asmopt_off
  4553                           	xorlw	0^0	; case 0
  4554  04EC  3A00               	skipnz
  4555  04ED  1903               	goto	l2455
  4556  04EE  2CF0               	goto	l395
  4557  04EF  2CE2               	opt asmopt_pop
  4558                           	
  4559                           l2455:	
  4560  04F0                     ; Switch size 1, requested type "space"
  4561                           ; Number of cases is 3, Range of values is 0 to 2
  4562                           ; switch strategies available:
  4563                           ; Name         Instructions Cycles
  4564                           ; simple_byte           10     6 (average)
  4565                           ; direct_byte           17     8 (fixed)
  4566                           ; jumptable            260     6 (fixed)
  4567                           ;	Chosen strategy is simple_byte
  4568                           
  4569                           	movf 0+(??_funcAdc+0)+0,w
  4570  04F0  0875               	opt asmopt_push
  4571                           	opt asmopt_off
  4572                           	xorlw	0^0	; case 0
  4573  04F1  3A00               	skipnz
  4574  04F2  1903               	goto	l391
  4575  04F3  2CD3               	xorlw	1^0	; case 1
  4576  04F4  3A01               	skipnz
  4577  04F5  1903               	goto	l393
  4578  04F6  2CD8               	xorlw	2^1	; case 2
  4579  04F7  3A03               	skipnz
  4580  04F8  1903               	goto	l394
  4581  04F9  2CDD               	goto	l395
  4582  04FA  2CE2               	opt asmopt_pop
  4583                           
  4584                           	
  4585                           l392:	
  4586  04FB                     	line	61
  4587                           ;ADCconf.c: 61:     switch(just){
  4588                           	goto	l2165
  4589  04FB  2D05               	line	62
  4590                           ;ADCconf.c: 62:         case 0:
  4591                           	
  4592                           l397:	
  4593  04FC                     	line	63
  4594                           ;ADCconf.c: 63:             ADCON1bits.ADFM = 0;
  4595                           	bsf	status, 5	;RP0=1, select bank1
  4596  04FC  1683               	bcf	status, 6	;RP1=0, select bank1
  4597  04FD  1303               	bcf	(159)^080h,7	;volatile
  4598  04FE  139F               	line	64
  4599                           ;ADCconf.c: 64:             break;
  4600                           	goto	l398
  4601  04FF  2D12               	line	65
  4602                           ;ADCconf.c: 65:         default:
  4603                           	
  4604                           l399:	
  4605  0500                     	line	66
  4606                           ;ADCconf.c: 66:             ADCON1bits.ADFM = 1;
  4607                           	bsf	status, 5	;RP0=1, select bank1
  4608  0500  1683               	bcf	status, 6	;RP1=0, select bank1
  4609  0501  1303               	bsf	(159)^080h,7	;volatile
  4610  0502  179F               	line	67
  4611                           ;ADCconf.c: 67:             break;
  4612                           	goto	l398
  4613  0503  2D12               	line	68
  4614                           	
  4615                           l2163:	
  4616  0504                     ;ADCconf.c: 68:     }
  4617                           	goto	l398
  4618  0504  2D12               	
  4619                           l396:	
  4620  0505                     	
  4621                           l2165:	
  4622  0505                     	movf	(funcAdc@just),w
  4623  0505  0874               	movwf	(??_funcAdc+0)+0
  4624  0506  00F5               	clrf	(??_funcAdc+0)+0+1
  4625  0507  01F6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4626                           ; Switch size 1, requested type "space"
  4627                           ; Number of cases is 1, Range of values is 0 to 0
  4628                           ; switch strategies available:
  4629                           ; Name         Instructions Cycles
  4630                           ; simple_byte            4     3 (average)
  4631                           ; direct_byte           11     8 (fixed)
  4632                           ; jumptable            260     6 (fixed)
  4633                           ;	Chosen strategy is simple_byte
  4634                           
  4635                           	movf 1+(??_funcAdc+0)+0,w
  4636  0508  0876               	opt asmopt_push
  4637                           	opt asmopt_off
  4638                           	xorlw	0^0	; case 0
  4639  0509  3A00               	skipnz
  4640  050A  1903               	goto	l2457
  4641  050B  2D0D               	goto	l399
  4642  050C  2D00               	opt asmopt_pop
  4643                           	
  4644                           l2457:	
  4645  050D                     ; Switch size 1, requested type "space"
  4646                           ; Number of cases is 1, Range of values is 0 to 0
  4647                           ; switch strategies available:
  4648                           ; Name         Instructions Cycles
  4649                           ; simple_byte            4     3 (average)
  4650                           ; direct_byte           11     8 (fixed)
  4651                           ; jumptable            260     6 (fixed)
  4652                           ;	Chosen strategy is simple_byte
  4653                           
  4654                           	movf 0+(??_funcAdc+0)+0,w
  4655  050D  0875               	opt asmopt_push
  4656                           	opt asmopt_off
  4657                           	xorlw	0^0	; case 0
  4658  050E  3A00               	skipnz
  4659  050F  1903               	goto	l397
  4660  0510  2CFC               	goto	l399
  4661  0511  2D00               	opt asmopt_pop
  4662                           
  4663                           	
  4664                           l398:	
  4665  0512                     	line	71
  4666                           ;ADCconf.c: 71:     ADCON0bits.ADON = 1;
  4667                           	bcf	status, 5	;RP0=0, select bank0
  4668  0512  1283               	bcf	status, 6	;RP1=0, select bank0
  4669  0513  1303               	bsf	(31),0	;volatile
  4670  0514  141F               	line	73
  4671                           ;ADCconf.c: 73:     PIR1bits.ADIF = 0;
  4672                           	bcf	(12),6	;volatile
  4673  0515  130C               	line	74
  4674                           ;ADCconf.c: 74:     PIE1bits.ADIE = 1;
  4675                           	bsf	status, 5	;RP0=1, select bank1
  4676  0516  1683               	bcf	status, 6	;RP1=0, select bank1
  4677  0517  1303               	bsf	(140)^080h,6	;volatile
  4678  0518  170C               	line	75
  4679                           ;ADCconf.c: 75:     INTCONbits.PEIE = 1;
  4680                           	bsf	(11),6	;volatile
  4681  0519  170B               	line	76
  4682                           ;ADCconf.c: 76:     INTCONbits.GIE = 1;
  4683                           	bsf	(11),7	;volatile
  4684  051A  178B               	line	78
  4685                           ;ADCconf.c: 78:     ADCON0bits.GO_nDONE = 1;
  4686                           	bcf	status, 5	;RP0=0, select bank0
  4687  051B  1283               	bcf	status, 6	;RP1=0, select bank0
  4688  051C  1303               	bsf	(31),1	;volatile
  4689  051D  149F               	line	81
  4690                           ;ADCconf.c: 80:     return;
  4691                           	
  4692                           l400:	
  4693  051E                     	return
  4694  051E  0008               	opt stack 0
  4695                           GLOBAL	__end_of_funcAdc
  4696                           	__end_of_funcAdc:
  4697  051F                     	signat	_funcAdc,12409
  4698                           	global	_PWMconf
  4699                           
  4700 ;; *************** function _PWMconf *****************
  4701 ;; Defined at:
  4702 ;;		line 258 in file "mainS1proyect.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;		None
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;		None
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  1    wreg      void 
  4709 ;; Registers used:
  4710 ;;		wreg
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4716 ;;      Params:         0       0       0       0       0
  4717 ;;      Locals:         0       0       0       0       0
  4718 ;;      Temps:          0       0       0       0       0
  4719 ;;      Totals:         0       0       0       0       0
  4720 ;;Total ram usage:        0 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    1
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_main
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4730                           	file	"mainS1proyect.c"
  4731                           	line	258
  4732                           global __ptext6
  4733                           __ptext6:	;psect for function _PWMconf
  4734  06A6                     psect	text6
  4735                           	file	"mainS1proyect.c"
  4736                           	line	258
  4737                           	global	__size_of_PWMconf
  4738                           	__size_of_PWMconf	equ	__end_of_PWMconf-_PWMconf
  4739  001A                     	
  4740                           _PWMconf:	
  4741  06A6                     ;incstack = 0
  4742                           	opt	stack 6
  4743                           ; Regs used in _PWMconf: [wreg]
  4744                           	line	260
  4745                           	
  4746                           l1791:	
  4747  06A6                     ;mainS1proyect.c: 260:     TRISCbits.TRISC2 = 1;
  4748                           	bsf	status, 5	;RP0=1, select bank1
  4749  06A6  1683               	bcf	status, 6	;RP1=0, select bank1
  4750  06A7  1303               	bsf	(135)^080h,2	;volatile
  4751  06A8  1507               	line	261
  4752                           	
  4753                           l1793:	
  4754  06A9                     ;mainS1proyect.c: 261:     PR2 = 155;
  4755                           	movlw	low(09Bh)
  4756  06A9  309B               	movwf	(146)^080h	;volatile
  4757  06AA  0092               	line	262
  4758                           	
  4759                           l1795:	
  4760  06AB                     ;mainS1proyect.c: 262:     CCP1CONbits.P1M1 = 0;
  4761                           	bcf	status, 5	;RP0=0, select bank0
  4762  06AB  1283               	bcf	status, 6	;RP1=0, select bank0
  4763  06AC  1303               	bcf	(23),7	;volatile
  4764  06AD  1397               	line	263
  4765                           	
  4766                           l1797:	
  4767  06AE                     ;mainS1proyect.c: 263:     CCP1CONbits.P1M0 = 0;
  4768                           	bcf	(23),6	;volatile
  4769  06AE  1317               	line	265
  4770                           	
  4771                           l1799:	
  4772  06AF                     ;mainS1proyect.c: 265:     CCP1CONbits.CCP1M0 = 0;
  4773                           	bcf	(23),0	;volatile
  4774  06AF  1017               	line	266
  4775                           	
  4776                           l1801:	
  4777  06B0                     ;mainS1proyect.c: 266:     CCP1CONbits.CCP1M1 = 0;
  4778                           	bcf	(23),1	;volatile
  4779  06B0  1097               	line	267
  4780                           	
  4781                           l1803:	
  4782  06B1                     ;mainS1proyect.c: 267:     CCP1CONbits.CCP1M2 = 1;
  4783                           	bsf	(23),2	;volatile
  4784  06B1  1517               	line	268
  4785                           	
  4786                           l1805:	
  4787  06B2                     ;mainS1proyect.c: 268:     CCP1CONbits.CCP1M3 = 1;
  4788                           	bsf	(23),3	;volatile
  4789  06B2  1597               	line	270
  4790                           ;mainS1proyect.c: 270:     CCPR1L = 6;
  4791                           	movlw	low(06h)
  4792  06B3  3006               	movwf	(21)	;volatile
  4793  06B4  0095               	line	271
  4794                           	
  4795                           l1807:	
  4796  06B5                     ;mainS1proyect.c: 271:     CCP1CONbits.DC1B0 = 1;
  4797                           	bsf	(23),4	;volatile
  4798  06B5  1617               	line	272
  4799                           	
  4800                           l1809:	
  4801  06B6                     ;mainS1proyect.c: 272:     CCP1CONbits.DC1B1 = 1;
  4802                           	bsf	(23),5	;volatile
  4803  06B6  1697               	line	274
  4804                           	
  4805                           l1811:	
  4806  06B7                     ;mainS1proyect.c: 274:     PIR1bits.TMR2IF = 0;
  4807                           	bcf	(12),1	;volatile
  4808  06B7  108C               	line	277
  4809                           	
  4810                           l1813:	
  4811  06B8                     ;mainS1proyect.c: 277:     T2CONbits.T2CKPS0 = 1;
  4812                           	bsf	(18),0	;volatile
  4813  06B8  1412               	line	278
  4814                           	
  4815                           l1815:	
  4816  06B9                     ;mainS1proyect.c: 278:     T2CONbits.T2CKPS1 = 1;
  4817                           	bsf	(18),1	;volatile
  4818  06B9  1492               	line	280
  4819                           	
  4820                           l1817:	
  4821  06BA                     ;mainS1proyect.c: 280:     T2CONbits.TMR2ON = 1;
  4822                           	bsf	(18),2	;volatile
  4823  06BA  1512               	line	282
  4824                           	
  4825                           l1819:	
  4826  06BB                     ;mainS1proyect.c: 282:     PIR1bits.TMR2IF = 0;
  4827                           	bcf	(12),1	;volatile
  4828  06BB  108C               	line	284
  4829                           	
  4830                           l1821:	
  4831  06BC                     ;mainS1proyect.c: 284:     TRISCbits.TRISC2 = 0;
  4832                           	bsf	status, 5	;RP0=1, select bank1
  4833  06BC  1683               	bcf	status, 6	;RP1=0, select bank1
  4834  06BD  1303               	bcf	(135)^080h,2	;volatile
  4835  06BE  1107               	line	285
  4836                           	
  4837                           l133:	
  4838  06BF                     	return
  4839  06BF  0008               	opt stack 0
  4840                           GLOBAL	__end_of_PWMconf
  4841                           	__end_of_PWMconf:
  4842  06C0                     	signat	_PWMconf,89
  4843                           	global	_Lcd_Write_String
  4844                           
  4845 ;; *************** function _Lcd_Write_String *****************
  4846 ;; Defined at:
  4847 ;;		line 127 in file "LCD.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;  a               1    wreg     PTR unsigned char 
  4850 ;;		 -> STR_11(14), STR_10(16), STR_9(17), STR_8(16), 
  4851 ;;		 -> STR_7(10), STR_6(16), STR_5(12), STR_4(8), 
  4852 ;;		 -> STR_3(16), STR_2(17), STR_1(17), 
  4853 ;;  modo            2    3[BANK0 ] int 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;  a               1    7[BANK0 ] PTR unsigned char 
  4856 ;;		 -> STR_11(14), STR_10(16), STR_9(17), STR_8(16), 
  4857 ;;		 -> STR_7(10), STR_6(16), STR_5(12), STR_4(8), 
  4858 ;;		 -> STR_3(16), STR_2(17), STR_1(17), 
  4859 ;;  i               2    5[BANK0 ] int 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      void 
  4862 ;; Registers used:
  4863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4869 ;;      Params:         0       2       0       0       0
  4870 ;;      Locals:         0       3       0       0       0
  4871 ;;      Temps:          0       0       0       0       0
  4872 ;;      Totals:         0       5       0       0       0
  4873 ;;Total ram usage:        5 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    3
  4876 ;; This function calls:
  4877 ;;		_Lcd_Write_Char
  4878 ;; This function is called by:
  4879 ;;		_main
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4883                           	file	"LCD.c"
  4884                           	line	127
  4885                           global __ptext7
  4886                           __ptext7:	;psect for function _Lcd_Write_String
  4887  0619                     psect	text7
  4888                           	file	"LCD.c"
  4889                           	line	127
  4890                           	global	__size_of_Lcd_Write_String
  4891                           	__size_of_Lcd_Write_String	equ	__end_of_Lcd_Write_String-_Lcd_Write_String
  4892  002F                     	
  4893                           _Lcd_Write_String:	
  4894  0619                     ;incstack = 0
  4895                           	opt	stack 4
  4896                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4897                           ;Lcd_Write_String@a stored from wreg
  4898                           	bcf	status, 5	;RP0=0, select bank0
  4899  0619  1283               	bcf	status, 6	;RP1=0, select bank0
  4900  061A  1303               	movwf	(Lcd_Write_String@a)
  4901  061B  00A7               	line	130
  4902                           	
  4903                           l2185:	
  4904  061C                     ;LCD.c: 127: void Lcd_Write_String(char *a,int modo);LCD.c: 128: {;LCD.c: 129:  int i;;L
                                 CD.c: 130:  for(i=0;a[i]!='\0';i++)
  4905                           	clrf	(Lcd_Write_String@i)
  4906  061C  01A5               	clrf	(Lcd_Write_String@i+1)
  4907  061D  01A6               	goto	l2191
  4908  061E  2E39               	
  4909                           l248:	
  4910  061F                     	line	131
  4911                           	
  4912                           l2187:	
  4913  061F                     ;LCD.c: 131:     Lcd_Write_Char(a[i],modo);
  4914                           	movf	(Lcd_Write_String@modo+1),w
  4915  061F  0824               	movwf	(Lcd_Write_Char@modo+1)
  4916  0620  00F5               	movf	(Lcd_Write_String@modo),w
  4917  0621  0823               	movwf	(Lcd_Write_Char@modo)
  4918  0622  00F4               	movf	(Lcd_Write_String@i),w
  4919  0623  0825               	addwf	(Lcd_Write_String@a),w
  4920  0624  0727               	movwf	fsr0
  4921  0625  0084               	fcall	stringdir
  4922  0626  120A  118A  2409  120A  118A  	fcall	_Lcd_Write_Char
  4923  062B  120A  118A  257C  120A  118A  	
  4924                           l2189:	
  4925  0630                     	movlw	01h
  4926  0630  3001               	bcf	status, 5	;RP0=0, select bank0
  4927  0631  1283               	bcf	status, 6	;RP1=0, select bank0
  4928  0632  1303               	addwf	(Lcd_Write_String@i),f
  4929  0633  07A5               	skipnc
  4930  0634  1803               	incf	(Lcd_Write_String@i+1),f
  4931  0635  0AA6               	movlw	0
  4932  0636  3000               	addwf	(Lcd_Write_String@i+1),f
  4933  0637  07A6               	goto	l2191
  4934  0638  2E39               	
  4935                           l247:	
  4936  0639                     	
  4937                           l2191:	
  4938  0639                     	movf	(Lcd_Write_String@i),w
  4939  0639  0825               	addwf	(Lcd_Write_String@a),w
  4940  063A  0727               	movwf	fsr0
  4941  063B  0084               	fcall	stringdir
  4942  063C  120A  118A  2409  120A  118A  	xorlw	0
  4943  0641  3A00               	skipz
  4944  0642  1D03               	goto	u1261
  4945  0643  2E45               	goto	u1260
  4946  0644  2E46               u1261:
  4947  0645                     	goto	l2187
  4948  0645  2E1F               u1260:
  4949  0646                     	goto	l250
  4950  0646  2E47               	
  4951                           l249:	
  4952  0647                     	line	132
  4953                           	
  4954                           l250:	
  4955  0647                     	return
  4956  0647  0008               	opt stack 0
  4957                           GLOBAL	__end_of_Lcd_Write_String
  4958                           	__end_of_Lcd_Write_String:
  4959  0648                     	signat	_Lcd_Write_String,8313
  4960                           	global	_Lcd_Write_Char
  4961                           
  4962 ;; *************** function _Lcd_Write_Char *****************
  4963 ;; Defined at:
  4964 ;;		line 98 in file "LCD.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  a               1    wreg     unsigned char 
  4967 ;;  modo            2    4[COMMON] int 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  a               1    2[BANK0 ] unsigned char 
  4970 ;;  y               1    1[BANK0 ] unsigned char 
  4971 ;;  temp            1    0[BANK0 ] unsigned char 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  1    wreg      void 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0, pclath, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4981 ;;      Params:         2       0       0       0       0
  4982 ;;      Locals:         0       3       0       0       0
  4983 ;;      Temps:          1       0       0       0       0
  4984 ;;      Totals:         3       3       0       0       0
  4985 ;;Total ram usage:        6 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    2
  4988 ;; This function calls:
  4989 ;;		_Lcd_Port
  4990 ;; This function is called by:
  4991 ;;		_main
  4992 ;;		_Lcd_Write_String
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4996                           	line	98
  4997                           global __ptext8
  4998                           __ptext8:	;psect for function _Lcd_Write_Char
  4999  057C                     psect	text8
  5000                           	file	"LCD.c"
  5001                           	line	98
  5002                           	global	__size_of_Lcd_Write_Char
  5003                           	__size_of_Lcd_Write_Char	equ	__end_of_Lcd_Write_Char-_Lcd_Write_Char
  5004  0052                     	
  5005                           _Lcd_Write_Char:	
  5006  057C                     ;incstack = 0
  5007                           	opt	stack 4
  5008                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5009                           ;Lcd_Write_Char@a stored from wreg
  5010                           	bcf	status, 5	;RP0=0, select bank0
  5011  057C  1283               	bcf	status, 6	;RP1=0, select bank0
  5012  057D  1303               	movwf	(Lcd_Write_Char@a)
  5013  057E  00A2               	line	100
  5014                           	
  5015                           l2121:	
  5016  057F                     ;LCD.c: 98: void Lcd_Write_Char(char a,int modo);LCD.c: 99: {;LCD.c: 100:     if(modo==4
                                 )
  5017                           		movlw	4
  5018  057F  3004               	xorwf	((Lcd_Write_Char@modo)),w
  5019  0580  0674               iorwf	((Lcd_Write_Char@modo+1)),w
  5020  0581  0475               	btfss	status,2
  5021  0582  1D03               	goto	u1231
  5022  0583  2D85               	goto	u1230
  5023  0584  2D86               u1231:
  5024  0585                     	goto	l2143
  5025  0585  2DB8               u1230:
  5026  0586                     	line	103
  5027                           	
  5028                           l2123:	
  5029  0586                     ;LCD.c: 101:     {;LCD.c: 102:    char temp,y;;LCD.c: 103:    temp = a&0x0F;
  5030                           	movf	(Lcd_Write_Char@a),w
  5031  0586  0822               	andlw	0Fh
  5032  0587  390F               	movwf	(??_Lcd_Write_Char+0)+0
  5033  0588  00F6               	movf	(??_Lcd_Write_Char+0)+0,w
  5034  0589  0876               	movwf	(Lcd_Write_Char@temp)
  5035  058A  00A0               	line	104
  5036                           ;LCD.c: 104:    y = a&0xF0;
  5037                           	movf	(Lcd_Write_Char@a),w
  5038  058B  0822               	andlw	0F0h
  5039  058C  39F0               	movwf	(??_Lcd_Write_Char+0)+0
  5040  058D  00F6               	movf	(??_Lcd_Write_Char+0)+0,w
  5041  058E  0876               	movwf	(Lcd_Write_Char@y)
  5042  058F  00A1               	line	105
  5043                           	
  5044                           l2125:	
  5045  0590                     ;LCD.c: 105:    PORTEbits.RE0 = 1;
  5046                           	bsf	(9),0	;volatile
  5047  0590  1409               	line	106
  5048                           	
  5049                           l2127:	
  5050  0591                     ;LCD.c: 106:    Lcd_Port(y>>4);
  5051                           	movf	(Lcd_Write_Char@y),w
  5052  0591  0821               	movwf	(??_Lcd_Write_Char+0)+0
  5053  0592  00F6               	movlw	04h
  5054  0593  3004               u1245:
  5055  0594                     	clrc
  5056  0594  1003               	rrf	(??_Lcd_Write_Char+0)+0,f
  5057  0595  0CF6               	addlw	-1
  5058  0596  3EFF               	skipz
  5059  0597  1D03               	goto	u1245
  5060  0598  2D94               	movf	0+(??_Lcd_Write_Char+0)+0,w
  5061  0599  0876               	fcall	_Lcd_Port
  5062  059A  120A  118A  2648  120A  118A  	line	107
  5063                           	
  5064                           l2129:	
  5065  059F                     ;LCD.c: 107:    PORTEbits.RE1 = 1;
  5066                           	bcf	status, 5	;RP0=0, select bank0
  5067  059F  1283               	bcf	status, 6	;RP1=0, select bank0
  5068  05A0  1303               	bsf	(9),1	;volatile
  5069  05A1  1489               	line	108
  5070                           	
  5071                           l2131:	
  5072  05A2                     ;LCD.c: 108:    _delay((unsigned long)((40)*(500000/4000000.0)));
  5073                           		opt asmopt_push
  5074                           	opt asmopt_off
  5075                           	nop2	;2 cycle nop
  5076  05A2  2DA3               	nop2	;2 cycle nop
  5077  05A3  2DA4               	nop
  5078  05A4  0000               	opt asmopt_pop
  5079                           
  5080                           	line	109
  5081                           	
  5082                           l2133:	
  5083  05A5                     ;LCD.c: 109:    PORTEbits.RE1 = 0;
  5084                           	bcf	status, 5	;RP0=0, select bank0
  5085  05A5  1283               	bcf	status, 6	;RP1=0, select bank0
  5086  05A6  1303               	bcf	(9),1	;volatile
  5087  05A7  1089               	line	110
  5088                           	
  5089                           l2135:	
  5090  05A8                     ;LCD.c: 110:    Lcd_Port(temp);
  5091                           	movf	(Lcd_Write_Char@temp),w
  5092  05A8  0820               	fcall	_Lcd_Port
  5093  05A9  120A  118A  2648  120A  118A  	line	111
  5094                           	
  5095                           l2137:	
  5096  05AE                     ;LCD.c: 111:    PORTEbits.RE1 = 1;
  5097                           	bcf	status, 5	;RP0=0, select bank0
  5098  05AE  1283               	bcf	status, 6	;RP1=0, select bank0
  5099  05AF  1303               	bsf	(9),1	;volatile
  5100  05B0  1489               	line	112
  5101                           	
  5102                           l2139:	
  5103  05B1                     ;LCD.c: 112:    _delay((unsigned long)((40)*(500000/4000000.0)));
  5104                           		opt asmopt_push
  5105                           	opt asmopt_off
  5106                           	nop2	;2 cycle nop
  5107  05B1  2DB2               	nop2	;2 cycle nop
  5108  05B2  2DB3               	nop
  5109  05B3  0000               	opt asmopt_pop
  5110                           
  5111                           	line	113
  5112                           	
  5113                           l2141:	
  5114  05B4                     ;LCD.c: 113:    PORTEbits.RE1 = 0;
  5115                           	bcf	status, 5	;RP0=0, select bank0
  5116  05B4  1283               	bcf	status, 6	;RP1=0, select bank0
  5117  05B5  1303               	bcf	(9),1	;volatile
  5118  05B6  1089               	line	114
  5119                           ;LCD.c: 114:     }
  5120                           	goto	l244
  5121  05B7  2DCD               	line	117
  5122                           ;LCD.c: 117:     else if(modo==8)
  5123                           	
  5124                           l241:	
  5125  05B8                     	
  5126                           l2143:	
  5127  05B8                     		movlw	8
  5128  05B8  3008               	xorwf	((Lcd_Write_Char@modo)),w
  5129  05B9  0674               iorwf	((Lcd_Write_Char@modo+1)),w
  5130  05BA  0475               	btfss	status,2
  5131  05BB  1D03               	goto	u1251
  5132  05BC  2DBE               	goto	u1250
  5133  05BD  2DBF               u1251:
  5134  05BE                     	goto	l244
  5135  05BE  2DCD               u1250:
  5136  05BF                     	line	119
  5137                           	
  5138                           l2145:	
  5139  05BF                     ;LCD.c: 118:     {;LCD.c: 119:     PORTEbits.RE0 = 1;
  5140                           	bsf	(9),0	;volatile
  5141  05BF  1409               	line	120
  5142                           	
  5143                           l2147:	
  5144  05C0                     ;LCD.c: 120:     PORTB = a;
  5145                           	movf	(Lcd_Write_Char@a),w
  5146  05C0  0822               	movwf	(6)	;volatile
  5147  05C1  0086               	line	121
  5148                           	
  5149                           l2149:	
  5150  05C2                     ;LCD.c: 121:     PORTEbits.RE1 = 1;
  5151                           	bsf	(9),1	;volatile
  5152  05C2  1489               	line	122
  5153                           ;LCD.c: 122:     _delay((unsigned long)((1)*(500000/4000.0)));
  5154                           	opt asmopt_push
  5155                           opt asmopt_off
  5156                           	movlw	41
  5157  05C3  3029               movwf	((??_Lcd_Write_Char+0)+0),f
  5158  05C4  00F6               	u1607:
  5159  05C5                     decfsz	(??_Lcd_Write_Char+0)+0,f
  5160  05C5  0BF6               	goto	u1607
  5161  05C6  2DC5               	nop
  5162  05C7  0000               opt asmopt_pop
  5163                           
  5164                           	line	123
  5165                           	
  5166                           l2151:	
  5167  05C8                     ;LCD.c: 123:     PORTEbits.RE1 = 0;
  5168                           	bcf	status, 5	;RP0=0, select bank0
  5169  05C8  1283               	bcf	status, 6	;RP1=0, select bank0
  5170  05C9  1303               	bcf	(9),1	;volatile
  5171  05CA  1089               	goto	l244
  5172  05CB  2DCD               	line	124
  5173                           ;LCD.c: 124:     }
  5174                           	
  5175                           l243:	
  5176  05CC                     	goto	l244
  5177  05CC  2DCD               	
  5178                           l242:	
  5179  05CD                     	line	125
  5180                           	
  5181                           l244:	
  5182  05CD                     	return
  5183  05CD  0008               	opt stack 0
  5184                           GLOBAL	__end_of_Lcd_Write_Char
  5185                           	__end_of_Lcd_Write_Char:
  5186  05CE                     	signat	_Lcd_Write_Char,8313
  5187                           	global	_Lcd_Port
  5188                           
  5189 ;; *************** function _Lcd_Port *****************
  5190 ;; Defined at:
  5191 ;;		line 20 in file "LCD.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  a               1    wreg     unsigned char 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  a               1    3[COMMON] unsigned char 
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  1    wreg      void 
  5198 ;; Registers used:
  5199 ;;		wreg
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5205 ;;      Params:         0       0       0       0       0
  5206 ;;      Locals:         1       0       0       0       0
  5207 ;;      Temps:          0       0       0       0       0
  5208 ;;      Totals:         1       0       0       0       0
  5209 ;;Total ram usage:        1 bytes
  5210 ;; Hardware stack levels used:    1
  5211 ;; Hardware stack levels required when called:    1
  5212 ;; This function calls:
  5213 ;;		Nothing
  5214 ;; This function is called by:
  5215 ;;		_Lcd_Write_Char
  5216 ;;		_Lcd_Cmd
  5217 ;;		_Lcd_Init
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  5221                           	line	20
  5222                           global __ptext9
  5223                           __ptext9:	;psect for function _Lcd_Port
  5224  0648                     psect	text9
  5225                           	file	"LCD.c"
  5226                           	line	20
  5227                           	global	__size_of_Lcd_Port
  5228                           	__size_of_Lcd_Port	equ	__end_of_Lcd_Port-_Lcd_Port
  5229  0023                     	
  5230                           _Lcd_Port:	
  5231  0648                     ;incstack = 0
  5232                           	opt	stack 4
  5233                           ; Regs used in _Lcd_Port: [wreg]
  5234                           ;Lcd_Port@a stored from wreg
  5235                           	movwf	(Lcd_Port@a)
  5236  0648  00F3               	line	23
  5237                           	
  5238                           l2111:	
  5239  0649                     ;LCD.c: 20: void Lcd_Port(char a);LCD.c: 21: {;LCD.c: 23:  if(a & 1)
  5240                           	btfss	(Lcd_Port@a),(0)&7
  5241  0649  1C73               	goto	u1191
  5242  064A  2E4C               	goto	u1190
  5243  064B  2E4D               u1191:
  5244  064C                     	goto	l215
  5245  064C  2E51               u1190:
  5246  064D                     	line	24
  5247                           	
  5248                           l2113:	
  5249  064D                     ;LCD.c: 24:   PORTBbits.RB4 = 1;
  5250                           	bcf	status, 5	;RP0=0, select bank0
  5251  064D  1283               	bcf	status, 6	;RP1=0, select bank0
  5252  064E  1303               	bsf	(6),4	;volatile
  5253  064F  1606               	goto	l216
  5254  0650  2E54               	line	25
  5255                           ;LCD.c: 25:  else
  5256                           	
  5257                           l215:	
  5258  0651                     	line	26
  5259                           ;LCD.c: 26:   PORTBbits.RB4 = 0;
  5260                           	bcf	status, 5	;RP0=0, select bank0
  5261  0651  1283               	bcf	status, 6	;RP1=0, select bank0
  5262  0652  1303               	bcf	(6),4	;volatile
  5263  0653  1206               	
  5264                           l216:	
  5265  0654                     	line	28
  5266                           ;LCD.c: 28:  if(a & 2)
  5267                           	btfss	(Lcd_Port@a),(1)&7
  5268  0654  1CF3               	goto	u1201
  5269  0655  2E57               	goto	u1200
  5270  0656  2E58               u1201:
  5271  0657                     	goto	l217
  5272  0657  2E5A               u1200:
  5273  0658                     	line	29
  5274                           	
  5275                           l2115:	
  5276  0658                     ;LCD.c: 29:   PORTBbits.RB5 = 1;
  5277                           	bsf	(6),5	;volatile
  5278  0658  1686               	goto	l218
  5279  0659  2E5B               	line	30
  5280                           ;LCD.c: 30:  else
  5281                           	
  5282                           l217:	
  5283  065A                     	line	31
  5284                           ;LCD.c: 31:   PORTBbits.RB5 = 0;
  5285                           	bcf	(6),5	;volatile
  5286  065A  1286               	
  5287                           l218:	
  5288  065B                     	line	33
  5289                           ;LCD.c: 33:  if(a & 4)
  5290                           	btfss	(Lcd_Port@a),(2)&7
  5291  065B  1D73               	goto	u1211
  5292  065C  2E5E               	goto	u1210
  5293  065D  2E5F               u1211:
  5294  065E                     	goto	l219
  5295  065E  2E61               u1210:
  5296  065F                     	line	34
  5297                           	
  5298                           l2117:	
  5299  065F                     ;LCD.c: 34:   PORTBbits.RB6 = 1;
  5300                           	bsf	(6),6	;volatile
  5301  065F  1706               	goto	l220
  5302  0660  2E62               	line	35
  5303                           ;LCD.c: 35:  else
  5304                           	
  5305                           l219:	
  5306  0661                     	line	36
  5307                           ;LCD.c: 36:   PORTBbits.RB6 = 0;
  5308                           	bcf	(6),6	;volatile
  5309  0661  1306               	
  5310                           l220:	
  5311  0662                     	line	38
  5312                           ;LCD.c: 38:  if(a & 8)
  5313                           	btfss	(Lcd_Port@a),(3)&7
  5314  0662  1DF3               	goto	u1221
  5315  0663  2E65               	goto	u1220
  5316  0664  2E66               u1221:
  5317  0665                     	goto	l221
  5318  0665  2E68               u1220:
  5319  0666                     	line	39
  5320                           	
  5321                           l2119:	
  5322  0666                     ;LCD.c: 39:   PORTBbits.RB7 = 1;
  5323                           	bsf	(6),7	;volatile
  5324  0666  1786               	goto	l223
  5325  0667  2E6A               	line	40
  5326                           ;LCD.c: 40:  else
  5327                           	
  5328                           l221:	
  5329  0668                     	line	41
  5330                           ;LCD.c: 41:   PORTBbits.RB7 = 0;
  5331                           	bcf	(6),7	;volatile
  5332  0668  1386               	goto	l223
  5333  0669  2E6A               	
  5334                           l222:	
  5335  066A                     	line	42
  5336                           	
  5337                           l223:	
  5338  066A                     	return
  5339  066A  0008               	opt stack 0
  5340                           GLOBAL	__end_of_Lcd_Port
  5341                           	__end_of_Lcd_Port:
  5342  066B                     	signat	_Lcd_Port,4217
  5343                           	global	_Lcd_Set_Cursor_8bits
  5344                           
  5345 ;; *************** function _Lcd_Set_Cursor_8bits *****************
  5346 ;; Defined at:
  5347 ;;		line 166 in file "LCD.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  y               1    wreg     unsigned char 
  5350 ;;  x               1    5[COMMON] unsigned char 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;  y               1    6[COMMON] unsigned char 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, status,2, status,0, pclath, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5362 ;;      Params:         1       0       0       0       0
  5363 ;;      Locals:         1       0       0       0       0
  5364 ;;      Temps:          0       0       0       0       0
  5365 ;;      Totals:         2       0       0       0       0
  5366 ;;Total ram usage:        2 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:    2
  5369 ;; This function calls:
  5370 ;;		_Lcd_Cmd_8bits
  5371 ;; This function is called by:
  5372 ;;		_main
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5376                           	line	166
  5377                           global __ptext10
  5378                           __ptext10:	;psect for function _Lcd_Set_Cursor_8bits
  5379  066B                     psect	text10
  5380                           	file	"LCD.c"
  5381                           	line	166
  5382                           	global	__size_of_Lcd_Set_Cursor_8bits
  5383                           	__size_of_Lcd_Set_Cursor_8bits	equ	__end_of_Lcd_Set_Cursor_8bits-_Lcd_Set_Cursor_8bits

  5384  001E                     	
  5385                           _Lcd_Set_Cursor_8bits:	
  5386  066B                     ;incstack = 0
  5387                           	opt	stack 5
  5388                           ; Regs used in _Lcd_Set_Cursor_8bits: [wreg+status,2+status,0+pclath+cstack]
  5389                           ;Lcd_Set_Cursor_8bits@y stored from wreg
  5390                           	movwf	(Lcd_Set_Cursor_8bits@y)
  5391  066B  00F6               	line	169
  5392                           	
  5393                           l1857:	
  5394  066C                     ;LCD.c: 166: void Lcd_Set_Cursor_8bits(unsigned char y, unsigned char x);LCD.c: 167: {;L
                                 CD.c: 169:     if(y == 1)
  5395                           		decf	((Lcd_Set_Cursor_8bits@y)),w
  5396  066C  0376               	btfss	status,2
  5397  066D  1D03               	goto	u1021
  5398  066E  2E70               	goto	u1020
  5399  066F  2E71               u1021:
  5400  0670                     	goto	l1861
  5401  0670  2E79               u1020:
  5402  0671                     	line	171
  5403                           	
  5404                           l1859:	
  5405  0671                     ;LCD.c: 170:  {;LCD.c: 171:         Lcd_Cmd_8bits(0x80 + x - 1);
  5406                           	movf	(Lcd_Set_Cursor_8bits@x),w
  5407  0671  0875               	addlw	07Fh
  5408  0672  3E7F               	fcall	_Lcd_Cmd_8bits
  5409  0673  120A  118A  26EE  120A  118A  	line	172
  5410                           ;LCD.c: 172:  }
  5411                           	goto	l268
  5412  0678  2E88               	line	174
  5413                           ;LCD.c: 174:  else if(y == 2)
  5414                           	
  5415                           l265:	
  5416  0679                     	
  5417                           l1861:	
  5418  0679                     		movlw	2
  5419  0679  3002               	xorwf	((Lcd_Set_Cursor_8bits@y)),w
  5420  067A  0676               	btfss	status,2
  5421  067B  1D03               	goto	u1031
  5422  067C  2E7E               	goto	u1030
  5423  067D  2E7F               u1031:
  5424  067E                     	goto	l268
  5425  067E  2E88               u1030:
  5426  067F                     	line	176
  5427                           	
  5428                           l1863:	
  5429  067F                     ;LCD.c: 175:  {;LCD.c: 176:   Lcd_Cmd_8bits(0xC0 + x - 1);
  5430                           	movf	(Lcd_Set_Cursor_8bits@x),w
  5431  067F  0875               	addlw	0BFh
  5432  0680  3EBF               	fcall	_Lcd_Cmd_8bits
  5433  0681  120A  118A  26EE  120A  118A  	goto	l268
  5434  0686  2E88               	line	177
  5435                           ;LCD.c: 177:  }
  5436                           	
  5437                           l267:	
  5438  0687                     	goto	l268
  5439  0687  2E88               	
  5440                           l266:	
  5441  0688                     	line	178
  5442                           	
  5443                           l268:	
  5444  0688                     	return
  5445  0688  0008               	opt stack 0
  5446                           GLOBAL	__end_of_Lcd_Set_Cursor_8bits
  5447                           	__end_of_Lcd_Set_Cursor_8bits:
  5448  0689                     	signat	_Lcd_Set_Cursor_8bits,8313
  5449                           	global	_Lcd_Init_8bits
  5450                           
  5451 ;; *************** function _Lcd_Init_8bits *****************
  5452 ;; Defined at:
  5453 ;;		line 180 in file "LCD.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;		None
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      void 
  5460 ;; Registers used:
  5461 ;;		wreg, status,2, status,0, pclath, cstack
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5467 ;;      Params:         0       0       0       0       0
  5468 ;;      Locals:         0       0       0       0       0
  5469 ;;      Temps:          2       0       0       0       0
  5470 ;;      Totals:         2       0       0       0       0
  5471 ;;Total ram usage:        2 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    2
  5474 ;; This function calls:
  5475 ;;		_Lcd_Cmd_8bits
  5476 ;; This function is called by:
  5477 ;;		_main
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5481                           	line	180
  5482                           global __ptext11
  5483                           __ptext11:	;psect for function _Lcd_Init_8bits
  5484  05CE                     psect	text11
  5485                           	file	"LCD.c"
  5486                           	line	180
  5487                           	global	__size_of_Lcd_Init_8bits
  5488                           	__size_of_Lcd_Init_8bits	equ	__end_of_Lcd_Init_8bits-_Lcd_Init_8bits
  5489  004B                     	
  5490                           _Lcd_Init_8bits:	
  5491  05CE                     ;incstack = 0
  5492                           	opt	stack 5
  5493                           ; Regs used in _Lcd_Init_8bits: [wreg+status,2+status,0+pclath+cstack]
  5494                           	line	182
  5495                           	
  5496                           l1823:	
  5497  05CE                     ;LCD.c: 182:     PORTB = 0;
  5498                           	bcf	status, 5	;RP0=0, select bank0
  5499  05CE  1283               	bcf	status, 6	;RP1=0, select bank0
  5500  05CF  1303               	clrf	(6)	;volatile
  5501  05D0  0186               	line	183
  5502                           	
  5503                           l1825:	
  5504  05D1                     ;LCD.c: 183:     _delay((unsigned long)((20)*(500000/4000.0)));
  5505                           	opt asmopt_push
  5506                           opt asmopt_off
  5507                           movlw	4
  5508  05D1  3004               movwf	((??_Lcd_Init_8bits+0)+0+1),f
  5509  05D2  00F6               	movlw	61
  5510  05D3  303D               movwf	((??_Lcd_Init_8bits+0)+0),f
  5511  05D4  00F5               	u1617:
  5512  05D5                     decfsz	((??_Lcd_Init_8bits+0)+0),f
  5513  05D5  0BF5               	goto	u1617
  5514  05D6  2DD5               	decfsz	((??_Lcd_Init_8bits+0)+0+1),f
  5515  05D7  0BF6               	goto	u1617
  5516  05D8  2DD5               	nop2
  5517  05D9  2DDA               opt asmopt_pop
  5518                           
  5519                           	line	184
  5520                           	
  5521                           l1827:	
  5522  05DA                     ;LCD.c: 184:     Lcd_Cmd_8bits(0x030);
  5523                           	movlw	low(030h)
  5524  05DA  3030               	fcall	_Lcd_Cmd_8bits
  5525  05DB  120A  118A  26EE  120A  118A  	line	185
  5526                           	
  5527                           l1829:	
  5528  05E0                     ;LCD.c: 185:     _delay((unsigned long)((5)*(500000/4000.0)));
  5529                           	opt asmopt_push
  5530                           opt asmopt_off
  5531                           	movlw	208
  5532  05E0  30D0               movwf	((??_Lcd_Init_8bits+0)+0),f
  5533  05E1  00F5               	u1627:
  5534  05E2                     decfsz	(??_Lcd_Init_8bits+0)+0,f
  5535  05E2  0BF5               	goto	u1627
  5536  05E3  2DE2               opt asmopt_pop
  5537                           
  5538                           	line	186
  5539                           	
  5540                           l1831:	
  5541  05E4                     ;LCD.c: 186:     Lcd_Cmd_8bits(0x030);
  5542                           	movlw	low(030h)
  5543  05E4  3030               	fcall	_Lcd_Cmd_8bits
  5544  05E5  120A  118A  26EE  120A  118A  	line	187
  5545                           	
  5546                           l1833:	
  5547  05EA                     ;LCD.c: 187:     _delay((unsigned long)((160)*(500000/4000000.0)));
  5548                           	opt asmopt_push
  5549                           opt asmopt_off
  5550                           	movlw	6
  5551  05EA  3006               movwf	((??_Lcd_Init_8bits+0)+0),f
  5552  05EB  00F5               	u1637:
  5553  05EC                     decfsz	(??_Lcd_Init_8bits+0)+0,f
  5554  05EC  0BF5               	goto	u1637
  5555  05ED  2DEC               	nop
  5556  05EE  0000               opt asmopt_pop
  5557                           
  5558                           	line	188
  5559                           	
  5560                           l1835:	
  5561  05EF                     ;LCD.c: 188:     Lcd_Cmd_8bits(0x030);
  5562                           	movlw	low(030h)
  5563  05EF  3030               	fcall	_Lcd_Cmd_8bits
  5564  05F0  120A  118A  26EE  120A  118A  	line	189
  5565                           	
  5566                           l1837:	
  5567  05F5                     ;LCD.c: 189:     _delay((unsigned long)((160)*(500000/4000000.0)));
  5568                           	opt asmopt_push
  5569                           opt asmopt_off
  5570                           	movlw	6
  5571  05F5  3006               movwf	((??_Lcd_Init_8bits+0)+0),f
  5572  05F6  00F5               	u1647:
  5573  05F7                     decfsz	(??_Lcd_Init_8bits+0)+0,f
  5574  05F7  0BF5               	goto	u1647
  5575  05F8  2DF7               	nop
  5576  05F9  0000               opt asmopt_pop
  5577                           
  5578                           	line	191
  5579                           	
  5580                           l1839:	
  5581  05FA                     ;LCD.c: 191:     Lcd_Cmd_8bits(0x38);
  5582                           	movlw	low(038h)
  5583  05FA  3038               	fcall	_Lcd_Cmd_8bits
  5584  05FB  120A  118A  26EE  120A  118A  	line	195
  5585                           	
  5586                           l1841:	
  5587  0600                     ;LCD.c: 195:     Lcd_Cmd_8bits(0x14);
  5588                           	movlw	low(014h)
  5589  0600  3014               	fcall	_Lcd_Cmd_8bits
  5590  0601  120A  118A  26EE  120A  118A  	line	196
  5591                           	
  5592                           l1843:	
  5593  0606                     ;LCD.c: 196:     Lcd_Cmd_8bits(0x6);
  5594                           	movlw	low(06h)
  5595  0606  3006               	fcall	_Lcd_Cmd_8bits
  5596  0607  120A  118A  26EE  120A  118A  	line	197
  5597                           	
  5598                           l1845:	
  5599  060C                     ;LCD.c: 197:     Lcd_Cmd_8bits(0xc);
  5600                           	movlw	low(0Ch)
  5601  060C  300C               	fcall	_Lcd_Cmd_8bits
  5602  060D  120A  118A  26EE  120A  118A  	line	198
  5603                           	
  5604                           l1847:	
  5605  0612                     ;LCD.c: 198:     Lcd_Cmd_8bits(0x2);
  5606                           	movlw	low(02h)
  5607  0612  3002               	fcall	_Lcd_Cmd_8bits
  5608  0613  120A  118A  26EE  120A  118A  	line	199
  5609                           	
  5610                           l271:	
  5611  0618                     	return
  5612  0618  0008               	opt stack 0
  5613                           GLOBAL	__end_of_Lcd_Init_8bits
  5614                           	__end_of_Lcd_Init_8bits:
  5615  0619                     	signat	_Lcd_Init_8bits,89
  5616                           	global	_Lcd_Clear_8bits
  5617                           
  5618 ;; *************** function _Lcd_Clear_8bits *****************
  5619 ;; Defined at:
  5620 ;;		line 160 in file "LCD.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;		None
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      void 
  5627 ;; Registers used:
  5628 ;;		wreg, status,2, status,0, pclath, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5634 ;;      Params:         0       0       0       0       0
  5635 ;;      Locals:         0       0       0       0       0
  5636 ;;      Temps:          0       0       0       0       0
  5637 ;;      Totals:         0       0       0       0       0
  5638 ;;Total ram usage:        0 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:    2
  5641 ;; This function calls:
  5642 ;;		_Lcd_Cmd_8bits
  5643 ;; This function is called by:
  5644 ;;		_main
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5648                           	line	160
  5649                           global __ptext12
  5650                           __ptext12:	;psect for function _Lcd_Clear_8bits
  5651  06FE                     psect	text12
  5652                           	file	"LCD.c"
  5653                           	line	160
  5654                           	global	__size_of_Lcd_Clear_8bits
  5655                           	__size_of_Lcd_Clear_8bits	equ	__end_of_Lcd_Clear_8bits-_Lcd_Clear_8bits
  5656  000D                     	
  5657                           _Lcd_Clear_8bits:	
  5658  06FE                     ;incstack = 0
  5659                           	opt	stack 5
  5660                           ; Regs used in _Lcd_Clear_8bits: [wreg+status,2+status,0+pclath+cstack]
  5661                           	line	162
  5662                           	
  5663                           l1855:	
  5664  06FE                     ;LCD.c: 162:     Lcd_Cmd_8bits(0);
  5665                           	movlw	low(0)
  5666  06FE  3000               	fcall	_Lcd_Cmd_8bits
  5667  06FF  120A  118A  26EE  120A  118A  	line	163
  5668                           ;LCD.c: 163:  Lcd_Cmd_8bits(1);
  5669                           	movlw	low(01h)
  5670  0704  3001               	fcall	_Lcd_Cmd_8bits
  5671  0705  120A  118A  26EE  120A  118A  	line	164
  5672                           	
  5673                           l262:	
  5674  070A                     	return
  5675  070A  0008               	opt stack 0
  5676                           GLOBAL	__end_of_Lcd_Clear_8bits
  5677                           	__end_of_Lcd_Clear_8bits:
  5678  070B                     	signat	_Lcd_Clear_8bits,89
  5679                           	global	_Lcd_Cmd_8bits
  5680                           
  5681 ;; *************** function _Lcd_Cmd_8bits *****************
  5682 ;; Defined at:
  5683 ;;		line 149 in file "LCD.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  comando         1    wreg     unsigned char 
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;  comando         1    4[COMMON] unsigned char 
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  1    wreg      void 
  5690 ;; Registers used:
  5691 ;;		wreg
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5697 ;;      Params:         0       0       0       0       0
  5698 ;;      Locals:         1       0       0       0       0
  5699 ;;      Temps:          1       0       0       0       0
  5700 ;;      Totals:         2       0       0       0       0
  5701 ;;Total ram usage:        2 bytes
  5702 ;; Hardware stack levels used:    1
  5703 ;; Hardware stack levels required when called:    1
  5704 ;; This function calls:
  5705 ;;		Nothing
  5706 ;; This function is called by:
  5707 ;;		_Lcd_Clear_8bits
  5708 ;;		_Lcd_Set_Cursor_8bits
  5709 ;;		_Lcd_Init_8bits
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5713                           	line	149
  5714                           global __ptext13
  5715                           __ptext13:	;psect for function _Lcd_Cmd_8bits
  5716  06EE                     psect	text13
  5717                           	file	"LCD.c"
  5718                           	line	149
  5719                           	global	__size_of_Lcd_Cmd_8bits
  5720                           	__size_of_Lcd_Cmd_8bits	equ	__end_of_Lcd_Cmd_8bits-_Lcd_Cmd_8bits
  5721  0010                     	
  5722                           _Lcd_Cmd_8bits:	
  5723  06EE                     ;incstack = 0
  5724                           	opt	stack 5
  5725                           ; Regs used in _Lcd_Cmd_8bits: [wreg]
  5726                           ;Lcd_Cmd_8bits@comando stored from wreg
  5727                           	movwf	(Lcd_Cmd_8bits@comando)
  5728  06EE  00F4               	line	151
  5729                           	
  5730                           l1719:	
  5731  06EF                     ;LCD.c: 149: void Lcd_Cmd_8bits(unsigned char comando);LCD.c: 150: {;LCD.c: 151:  PORTEb
                                 its.RE0 = 0;
  5732                           	bcf	status, 5	;RP0=0, select bank0
  5733  06EF  1283               	bcf	status, 6	;RP1=0, select bank0
  5734  06F0  1303               	bcf	(9),0	;volatile
  5735  06F1  1009               	line	152
  5736                           	
  5737                           l1721:	
  5738  06F2                     ;LCD.c: 152:  PORTB = comando;
  5739                           	movf	(Lcd_Cmd_8bits@comando),w
  5740  06F2  0874               	movwf	(6)	;volatile
  5741  06F3  0086               	line	154
  5742                           	
  5743                           l1723:	
  5744  06F4                     ;LCD.c: 154:     PORTEbits.RE1 = 1;
  5745                           	bsf	(9),1	;volatile
  5746  06F4  1489               	line	155
  5747                           ;LCD.c: 155:     _delay((unsigned long)((4)*(500000/4000.0)));
  5748                           	opt asmopt_push
  5749                           opt asmopt_off
  5750                           	movlw	166
  5751  06F5  30A6               movwf	((??_Lcd_Cmd_8bits+0)+0),f
  5752  06F6  00F3               	u1657:
  5753  06F7                     decfsz	(??_Lcd_Cmd_8bits+0)+0,f
  5754  06F7  0BF3               	goto	u1657
  5755  06F8  2EF7               	nop
  5756  06F9  0000               opt asmopt_pop
  5757                           
  5758                           	line	156
  5759                           	
  5760                           l1725:	
  5761  06FA                     ;LCD.c: 156:     PORTEbits.RE1 = 0;
  5762                           	bcf	status, 5	;RP0=0, select bank0
  5763  06FA  1283               	bcf	status, 6	;RP1=0, select bank0
  5764  06FB  1303               	bcf	(9),1	;volatile
  5765  06FC  1089               	line	158
  5766                           	
  5767                           l259:	
  5768  06FD                     	return
  5769  06FD  0008               	opt stack 0
  5770                           GLOBAL	__end_of_Lcd_Cmd_8bits
  5771                           	__end_of_Lcd_Cmd_8bits:
  5772  06FE                     	signat	_Lcd_Cmd_8bits,4217
  5773                           	global	_InitKeypad
  5774                           
  5775 ;; *************** function _InitKeypad *****************
  5776 ;; Defined at:
  5777 ;;		line 97 in file "KEYPAD.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;		None
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;		None
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      void 
  5784 ;; Registers used:
  5785 ;;		wreg, status,2
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5791 ;;      Params:         0       0       0       0       0
  5792 ;;      Locals:         0       0       0       0       0
  5793 ;;      Temps:          0       0       0       0       0
  5794 ;;      Totals:         0       0       0       0       0
  5795 ;;Total ram usage:        0 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    1
  5798 ;; This function calls:
  5799 ;;		Nothing
  5800 ;; This function is called by:
  5801 ;;		_main
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5805                           	file	"KEYPAD.c"
  5806                           	line	97
  5807                           global __ptext14
  5808                           __ptext14:	;psect for function _InitKeypad
  5809  070B                     psect	text14
  5810                           	file	"KEYPAD.c"
  5811                           	line	97
  5812                           	global	__size_of_InitKeypad
  5813                           	__size_of_InitKeypad	equ	__end_of_InitKeypad-_InitKeypad
  5814  0009                     	
  5815                           _InitKeypad:	
  5816  070B                     ;incstack = 0
  5817                           	opt	stack 6
  5818                           ; Regs used in _InitKeypad: [wreg+status,2]
  5819                           	line	98
  5820                           	
  5821                           l1849:	
  5822  070B                     ;KEYPAD.c: 98:             PORTD = 0x00;
  5823                           	bcf	status, 5	;RP0=0, select bank0
  5824  070B  1283               	bcf	status, 6	;RP1=0, select bank0
  5825  070C  1303               	clrf	(8)	;volatile
  5826  070D  0188               	line	99
  5827                           	
  5828                           l1851:	
  5829  070E                     ;KEYPAD.c: 99:             TRISD = 0xF0;
  5830                           	movlw	low(0F0h)
  5831  070E  30F0               	bsf	status, 5	;RP0=1, select bank1
  5832  070F  1683               	bcf	status, 6	;RP1=0, select bank1
  5833  0710  1303               	movwf	(136)^080h	;volatile
  5834  0711  0088               	line	100
  5835                           	
  5836                           l1853:	
  5837  0712                     ;KEYPAD.c: 100:             OPTION_REG &= 0xFF;
  5838                           	movf	(129)^080h,w	;volatile
  5839  0712  0801               	line	101
  5840                           	
  5841                           l371:	
  5842  0713                     	return
  5843  0713  0008               	opt stack 0
  5844                           GLOBAL	__end_of_InitKeypad
  5845                           	__end_of_InitKeypad:
  5846  0714                     	signat	_InitKeypad,89
  5847                           	global	_interrupciones
  5848                           
  5849 ;; *************** function _interrupciones *****************
  5850 ;; Defined at:
  5851 ;;		line 57 in file "mainS1proyect.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;		None
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;		None
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      void 
  5858 ;; Registers used:
  5859 ;;		wreg
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5865 ;;      Params:         0       0       0       0       0
  5866 ;;      Locals:         0       0       0       0       0
  5867 ;;      Temps:          3       0       0       0       0
  5868 ;;      Totals:         3       0       0       0       0
  5869 ;;Total ram usage:        3 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; This function calls:
  5872 ;;		Nothing
  5873 ;; This function is called by:
  5874 ;;		Interrupt level 1
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5878                           	file	"mainS1proyect.c"
  5879                           	line	57
  5880                           global __ptext15
  5881                           __ptext15:	;psect for function _interrupciones
  5882  0689                     psect	text15
  5883                           	file	"mainS1proyect.c"
  5884                           	line	57
  5885                           	global	__size_of_interrupciones
  5886                           	__size_of_interrupciones	equ	__end_of_interrupciones-_interrupciones
  5887  001D                     	
  5888                           _interrupciones:	
  5889  0689                     ;incstack = 0
  5890                           	opt	stack 4
  5891                           ; Regs used in _interrupciones: [wreg]
  5892                           psect	intentry,class=CODE,delta=2
  5893                           global __pintentry
  5894                           __pintentry:
  5895  0004                     global interrupt_function
  5896                           interrupt_function:
  5897  0004                     	global saved_w
  5898                           	saved_w	set	btemp+0
  5899  007E                     	movwf	saved_w
  5900  0004  00FE               	swapf	status,w
  5901  0005  0E03               	movwf	(??_interrupciones+1)
  5902  0006  00F1               	movf	pclath,w
  5903  0007  080A               	movwf	(??_interrupciones+2)
  5904  0008  00F2               	ljmp	_interrupciones
  5905  0009  120A  118A  2E89   psect	text15
  5906                           	line	106
  5907                           	
  5908                           i1l1295:	
  5909  0689                     ;mainS1proyect.c: 106:     if (PIR1bits.ADIF){
  5910                           	bcf	status, 5	;RP0=0, select bank0
  5911  0689  1283               	bcf	status, 6	;RP1=0, select bank0
  5912  068A  1303               	btfss	(12),6	;volatile
  5913  068B  1F0C               	goto	u46_21
  5914  068C  2E8E               	goto	u46_20
  5915  068D  2E8F               u46_21:
  5916  068E                     	goto	i1l102
  5917  068E  2E9F               u46_20:
  5918  068F                     	line	107
  5919                           	
  5920                           i1l1297:	
  5921  068F                     ;mainS1proyect.c: 107:         PIR1bits.ADIF = 0;
  5922                           	bcf	(12),6	;volatile
  5923  068F  130C               	line	108
  5924                           	
  5925                           i1l1299:	
  5926  0690                     ;mainS1proyect.c: 108:         res = ADRESH;
  5927                           	movf	(30),w	;volatile
  5928  0690  081E               	movwf	(??_interrupciones+0)+0
  5929  0691  00F0               	movf	(??_interrupciones+0)+0,w
  5930  0692  0870               	movwf	(_res)
  5931  0693  00F9               	line	109
  5932                           ;mainS1proyect.c: 109:         if (res < 155){
  5933                           	movlw	low(09Bh)
  5934  0694  309B               	subwf	(_res),w
  5935  0695  0279               	skipnc
  5936  0696  1803               	goto	u47_21
  5937  0697  2E99               	goto	u47_20
  5938  0698  2E9A               u47_21:
  5939  0699                     	goto	i1l100
  5940  0699  2E9C               u47_20:
  5941  069A                     	line	110
  5942                           	
  5943                           i1l1301:	
  5944  069A                     ;mainS1proyect.c: 110:             PORTEbits.RE2 = 1;
  5945                           	bsf	(9),2	;volatile
  5946  069A  1509               	line	111
  5947                           ;mainS1proyect.c: 111:         }else{
  5948                           	goto	i1l101
  5949  069B  2E9D               	
  5950                           i1l100:	
  5951  069C                     	line	112
  5952                           ;mainS1proyect.c: 112:             PORTEbits.RE2 = 0;
  5953                           	bcf	(9),2	;volatile
  5954  069C  1109               	line	113
  5955                           ;mainS1proyect.c: 113:         }
  5956                           	
  5957                           i1l101:	
  5958  069D                     	line	114
  5959                           ;mainS1proyect.c: 114:         ADCON0bits.GO_nDONE = 1;
  5960                           	bsf	(31),1	;volatile
  5961  069D  149F               	goto	i1l102
  5962  069E  2E9F               	line	115
  5963                           ;mainS1proyect.c: 115:     }
  5964                           	
  5965                           i1l99:	
  5966  069F                     	line	117
  5967                           	
  5968                           i1l102:	
  5969  069F                     	movf	(??_interrupciones+2),w
  5970  069F  0872               	movwf	pclath
  5971  06A0  008A               	swapf	(??_interrupciones+1)^0FFFFFF80h,w
  5972  06A1  0E71               	movwf	status
  5973  06A2  0083               	swapf	saved_w,f
  5974  06A3  0EFE               	swapf	saved_w,w
  5975  06A4  0E7E               	retfie
  5976  06A5  0009               	opt stack 0
  5977                           GLOBAL	__end_of_interrupciones
  5978                           	__end_of_interrupciones:
  5979  06A6                     	signat	_interrupciones,89
  5980                           global	___latbits
  5981                           ___latbits	equ	2
  5982  0002                     	global	btemp
  5983                           	btemp set 07Eh
  5984  007E                     
  5985                           	DABS	1,126,2	;btemp
  5986                           	global	wtemp0
  5987                           	wtemp0 set btemp+0
  5988  007E                     	end


Data Sizes:
    Strings     159
    Constant    0
    Data        5
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     18      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_11(CODE[14]), STR_10(CODE[16]), STR_9(CODE[17]), STR_8(CODE[16]), 
		 -> STR_7(CODE[10]), STR_6(CODE[16]), STR_5(CODE[12]), STR_4(CODE[8]), 
		 -> STR_3(CODE[16]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init_8bits
    _main->_Lcd_Set_Cursor_8bits
    _main->_Lcd_Write_Char
    _main->_funcAdc
    _main->_switch_press_scan
    _switch_press_scan->_keypad_scanner
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor_8bits->_Lcd_Cmd_8bits
    _Lcd_Init_8bits->_Lcd_Cmd_8bits
    _Lcd_Clear_8bits->_Lcd_Cmd_8bits

Critical Paths under _interrupciones in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char

Critical Paths under _interrupciones in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupciones in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupciones in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupciones in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    4373
                                              8 BANK0     10    10      0
                         _InitKeypad
                    _Lcd_Clear_8bits
                     _Lcd_Init_8bits
               _Lcd_Set_Cursor_8bits
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            _PWMconf
                            _funcAdc
                               _init
                            _initOsc
                     _keypad_scanner
                  _switch_press_scan
 ---------------------------------------------------------------------------------
 (1) _switch_press_scan                                    2     2      0      46
                                              5 COMMON     2     2      0
                     _keypad_scanner
 ---------------------------------------------------------------------------------
 (2) _keypad_scanner                                       2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _funcAdc                                              5     3      2     273
                                              3 COMMON     4     2      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWMconf                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2    2074
                                              3 BANK0      5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       6     4      2     527
                                              4 COMMON     3     1      2
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_8bits                                 2     1      1    1022
                                              5 COMMON     2     1      1
                      _Lcd_Cmd_8bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init_8bits                                       2     2      0      22
                                              5 COMMON     2     2      0
                      _Lcd_Cmd_8bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_8bits                                      0     0      0      22
                      _Lcd_Cmd_8bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd_8bits                                        2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitKeypad                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupciones                                       3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitKeypad
   _Lcd_Clear_8bits
     _Lcd_Cmd_8bits
   _Lcd_Init_8bits
     _Lcd_Cmd_8bits
   _Lcd_Set_Cursor_8bits
     _Lcd_Cmd_8bits
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _PWMconf
   _funcAdc
   _init
   _initOsc
   _keypad_scanner
   _switch_press_scan
     _keypad_scanner

 _interrupciones (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      23       5       43.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2E      12        0.0%
ABS                  0      0      2E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Mar 06 10:45:56 2020

                            _a 0037                              _i 003B                              _z 0078  
                            pc 0002                    __CFG_CP$OFF 0000                             fsr 0004  
       __end_of_interrupciones 06A6                            l110 01DE                            l111 00E4  
                          l120 01DF                            l112 0103                            l121 0220  
                          l113 0132                            l130 06ED                            l122 020E  
                          l114 01D4                            l123 0220                            l115 015F  
                          l107 00AB                            l220 0662                            l140 057A  
                          l300 0288                            l124 0227                            l116 01D3  
                          l108 00AC                            l221 0668                            l133 06BF  
                          l141 0527                            l301 028F                            l125 0270  
                          l117 01BD                            l109 00D4                            l222 066A  
                          l142 052D                            l310 02BF                            l302 0408  
                          l126 0271                            l118 01E0                            l223 066A  
                          l215 0651                            l143 0533                            l311 02DA  
                          l303 02AA                            l127 0271                            l119 01DD  
                          l216 0654                            l400 051E                            l144 0539  
                          l320 0304                            l312 02D0                            l304 02A0  
                          l217 065A                            l241 05B8                            l145 053F  
                          l321 0304                            l313 02D0                            l305 02A0  
                          l218 065B                            l242 05CD                            l250 0647  
                          l138 0558                            l146 0545                            l330 033B  
                          l322 030B                            l314 02D7                            l306 02A7  
                          l219 0661                            l243 05CC                            l147 054B  
                          l139 0521                            l331 035A                            l323 0326  
                          l315 02F6                            l307 02C2                            l244 05CD  
                          l148 0551                            l340 0380                            l332 0350  
                          l324 031C                            l316 02EC                            l308 02B8  
                          l149 057B                            l341 0380                            l333 0350  
                          l325 031C                            l317 02EC                            l309 02B8  
                          l262 070A                            l350 03BB                            l342 0387  
                          l334 0357                            l326 0323                            l318 02F3  
                          l271 0618                            l247 0639                            l351 03D6  
                          l343 03A2                            l335 0372                            l327 033E  
                          l319 030E                            l248 061F                            l360 03FC  
                          l352 03CC                            l344 0398                            l336 0368  
                          l328 0334                            l265 0679                            l249 0647  
                          l361 03FC                            l353 03CC                            l345 0398  
                          l337 0368                            l329 0334                            l266 0688  
                          l362 0403                            l354 03D3                            l346 039F  
                          l338 036F                            l371 0713                            l259 06FD  
                          l267 0687                            l355 03EE                            l347 03BE  
                          l339 038A                            l268 0688                            l356 03E4  
                          l348 03B4                            l357 03E4                            l349 03B4  
                          l365 06CE                            l390 04E8                            l358 03EB  
                          l366 06C5                            l391 04D3                            l359 0406  
                          l367 06D5                            l392 04FB                            l384 04BF  
                          l368 06D7                            l393 04D8                            l385 04B2  
                          l394 04DD                            l386 04D2                            l298 0292  
                          l395 04E2                            l387 04B5                            l299 0288  
                          l396 0505                            l388 04B8                            l397 04FC  
                          l389 04BB                            l398 0512                            l399 0500  
                          _GIE 005F                            _RD0 0040                            _RD1 0041  
                          _RD2 0042                            _RD3 0043                            _RD4 0044  
                          _RD5 0045                            _RD6 0046                            _RD7 0047  
                          _PR2 0092                   __CFG_CPD$OFF 0000                            u700 027E  
                          u701 027D                            u710 028E                            u711 028D  
                          u800 02FA                            u720 0296                            u801 02F9  
                          u721 0295                            u810 030A                            u730 02A6  
                          u811 0309                            u731 02A5                            u900 0376  
                          u820 0312                            u740 02AE                            u901 0375  
                          u821 0311                            u741 02AD                            u910 0386  
                          u830 0322                            u750 02BE                            u911 0385  
                          u831 0321                            u751 02BD                            u920 038E  
                          u840 032A                            u760 02C6                            u921 038D  
                          u841 0329                            u761 02C5                            u930 039E  
                          u850 033A                            u770 02D6                            u931 039D  
                          u851 0339                            u771 02D5                            u940 03AA  
                          u860 0346                            u780 02E2                            u941 03A9  
                          u861 0345                            u781 02E1                            u950 03BA  
                          u870 0356                            u790 02F2                            u951 03B9  
                          u871 0355                            u791 02F1                            u960 03C2  
                          u880 035E                            u961 03C1                            u881 035D  
                          u970 03D2                            u890 036E                            u971 03D1  
                          u891 036D                            u980 03DA                            u981 03D9  
                          u990 03EA                            u991 03E9                            _res 0079  
                          fsr0 0004                            indf 0000                   __CFG_LVP$OFF 0000  
      __size_of_Lcd_Init_8bits 004B                           l2111 0649                           l2113 064D  
                         l2121 057F                           l2115 0658                           l2131 05A2  
                         l2123 0586                           l2211 007C                           l2203 0041  
                         l2117 065F                           l2141 05B4                           l2133 05A5  
                         l2125 0590                           l2301 0266                           l2221 00C0  
                         l2213 0090                           l2205 0046                           l2119 0666  
                         l2151 05C8                           l2135 05A8                           l2127 0591  
                         l2143 05B8                           l2303 026B                           l2231 00EE  
                         l2223 00C8                           l2215 009F                           l2207 004C  
                         l2145 05BF                           l2137 05AE                           l2129 059F  
                         l2161 04E8                           l2153 04B1                           l2241 0124  
                         l2233 00F6                           l2225 00DE                           l2217 00A4  
                         l2209 0070                           l2147 05C0                           l2139 05B1  
                         l2163 0504                           l2155 04BE                           l2251 0141  
                         l2243 012A                           l2235 0103                           l2227 00E8  
                         l2219 00AC                           l2149 05C2                           l2165 0505  
                         l2157 04BF                           l1701 03D5                           l1621 028F  
                         l2261 0176                           l2253 014C                           l2245 0131  
                         l2237 010D                           l2229 00E9                           l2191 0639  
                         l2159 04E7                           l1711 0403                           l1703 03DA  
                         l1631 02AE                           l1623 0291                           l2263 0180  
                         l2271 01BD                           l2255 0150                           l2247 0132  
                         l2239 0118                           l1721 06F2                           l2185 061C  
                         l1801 06B0                           l1713 0405                           l1705 03EB  
                         l1641 02D9                           l1633 02BF                           l1625 0296  
                         l1617 0274                           l2281 01ED                           l2273 01C5  
                         l2265 018D                           l2257 015E                           l2249 013B  
                         l1723 06F4                           l2187 061F                           l1811 06B7  
                         l1803 06B1                           l1731 06DD                           l2451 0560  
                         l1715 0406                           l1707 03ED                           l1651 030B  
                         l1643 02E2                           l1635 02C1                           l1627 02A7  
                         l1619 027E                           l2291 0227                           l2283 01F9  
                         l2267 0199                           l2259 015F                           l2275 01D4  
                         l1725 06FA                           l2189 0630                           l1821 06BC  
                         l1813 06B8                           l1805 06B2                           l2453 04C7  
                         l1741 06E4                           l1733 06DE                           l1717 0408  
                         l1709 03F2                           l1661 032A                           l1653 030D  
                         l1645 02F3                           l1637 02C6                           l1629 02A9  
                         l2293 0234                           l2285 020E                           l2277 01DC  
                         l2269 01AD                           l1719 06EF                           l1831 05E4  
                         l1823 05CE                           l1815 06B9                           l1807 06B5  
                         l2455 04F0                           l1751 06EB                           l1743 06E5  
                         l1735 06DF                           l1727 06D8                           l1671 0359  
                         l1663 033B                           l1655 0312                           l1647 02F5  
                         l1639 02D7                           l2295 0240                           l2287 0218  
                         l2279 01E0                           l1841 0600                           l1833 05EA  
                         l1825 05D1                           l1817 06BA                           l1809 06B6  
                         l2457 050D                           l1753 06ED                           l1745 06E8  
                         l1737 06E0                           l1729 06DB                           l1681 0387  
                         l1673 035E                           l1665 033D                           l1657 0323  
                         l1649 02FA                           l2297 0254                           l2289 021F  
                         l1851 070E                           l1843 0606                           l1835 05EF  
                         l1827 05DA                           l1819 06BB                           l1747 06E9  
                         l1739 06E3                           l1755 0520                           l1691 03AA  
                         l1683 0389                           l1675 036F                           l1667 0346  
                         l1659 0325                           l2299 0258                           l1853 0712  
                         l1845 060C                           l1837 05F5                           l1829 05E0  
                         l1861 0679                           l1749 06EA                           l1757 0557  
                         l1693 03BB                           l1685 038E                           l1677 0371  
                         l1669 0357                           l1855 06FE                           l1847 0612  
                         l1839 05FA                           l1863 067F                           l1791 06A6  
                         l1759 0558                           l1695 03BD                           l1687 039F  
                         l1679 0376                           l1849 070B                           l1857 066C  
                         l1793 06A9                           l1697 03C2                           l1689 03A1  
                         l1881 06D7                           l1873 06C0                           l1859 0671  
                         l1795 06AB                           l1699 03D3                           l1875 06C5  
                         l1797 06AE                           l1877 06CE                           l1799 06AF  
                         l1879 06D5                           STR_1 040F                           STR_2 0420  
                         STR_3 0452                           STR_4 04A6                           STR_5 0490  
                         STR_6 0442                           STR_7 049C                           STR_8 0472  
                         STR_9 0431                           u1000 03F2                           u1001 03F1  
                         u1010 0402                           u1011 0401                           u1020 0671  
                         u1021 0670                           u1030 067F                           u1031 067E  
                         u1200 0658                           u1201 0657                           u1210 065F  
                         u1050 06D4                           u1211 065E                           u1051 06D3  
                         u1220 0666                           u1300 015D                           u1221 0665  
                         u1301 015C                           u1230 0586                           u1310 0180  
                         u1231 0585                           u1311 017F                           u1320 01D2  
                         u1321 01D1                           u1305 0159                           u1250 05BF  
                         u1330 01DB                           u1251 05BE                           u1331 01DA  
                         u1315 017C                           u1260 0646                           u1340 021E  
                         u1245 0594                           u1261 0645                           u1341 021D  
                         u1325 01CE                           u1190 064D                           u1350 0226  
                         u1270 00E4                           u1191 064C                           u1351 0225  
                         u1271 00E3                           u1407 0098                           u1280 0130  
                         u1417 0147                           u1281 012F                           u1290 0141  
                         u1507 0316                           u1427 01B5                           u1291 0140  
                         u1517 032E                           u1437 0260                           u1607 05C5  
                         u1527 034A                           u1447 0282                           u1617 05D5  
                         u1537 0362                           u1457 029A                           u1627 05E2  
                         u1547 037A                           u1467 02B2                           u1637 05EC  
                         u1557 0392                           u1477 02CA                           u1647 05F7  
                         u1567 03AE                           u1487 02E6                           u1657 06F7  
                         u1577 03C6                           u1497 02FE                           u1587 03DE  
                         u1597 03F6                           _PEIE 005E                           i1l99 069F  
                 __CFG_WRT$OFF 0000              ?_Lcd_Write_String 0023                           _cont 003C  
                         _main 0041                           _init 06D8                           btemp 007E  
                __CFG_BOREN$ON 0000                           start 000C                __end_of_PWMconf 06C0  
           ??_Lcd_Write_String 0077                  __CFG_IESO$OFF 0000                  __CFG_MCLRE$ON 0000  
              ?_interrupciones 0070                          ?_main 0070                          ?_init 0070  
                        STR_10 0462                          STR_11 0482                  __CFG_WDTE$OFF 0000  
            ??_Lcd_Clear_8bits 0075                          _ANSEL 0188                          i1l100 069C  
                        i1l101 069D                          i1l102 069F                          _PORTA 0005  
                        _PORTB 0006                          _PORTC 0007                          _PORTD 0008  
                        _PORTE 0009                          u46_20 068F                          u46_21 068E  
                        u47_20 069A                          u47_21 0699                          _TRISA 0085  
                        _TRISB 0086                          _TRISC 0087                          _TRISD 0088  
                        _SSPIE 0463                          _TRISE 0089                          _SSPIF 0063  
         Lcd_Write_String@modo 0023                 __CFG_FCMEN$OFF 0000          __end_of_Lcd_Cmd_8bits 06FE  
             ??_keypad_scanner 0073                __end_of_funcAdc 051F                __end_of_initOsc 057C  
                        main@i 002F                          pclath 000A                          status 0003  
                        wtemp0 007E                    funcAdc@anaP 0073                    funcAdc@divD 0020  
                  funcAdc@just 0074               __end_of_Lcd_Port 066B                     _InitKeypad 070B  
              __initialization 000F                   __end_of_main 0274                   __end_of_init 06EE  
__size_of_Lcd_Set_Cursor_8bits 001E                         ??_main 0028                         ??_init 0073  
                       _ADRESH 001E                         _CCPR1L 0015                         _ANSELH 0189  
                    ??_PWMconf 0073                         i1l1301 069A                         i1l1295 0689  
                       i1l1297 068F                         i1l1299 0690                    initOsc@frec 0075  
      __size_of_Lcd_Write_Char 0052                         _SSPADD 0093                         _TRISC3 043B  
                       _TRISC4 043C                         _SSPCON 0014                         _SSPBUF 0013  
               __CFG_PWRTE$OFF 0000                         _conteo 007A                         _valor1 003A  
                       _valor2 0039                      ??_funcAdc 0075                      ??_initOsc 0073  
                       saved_w 007E                 _Lcd_Init_8bits 05CE        __end_of__initialization 003D  
                  ?_InitKeypad 0070                 __pcstackCOMMON 0070                   __pidataBANK0 0714  
       __end_of_Lcd_Init_8bits 0619                      ?_Lcd_Port 0070                     __pbssBANK0 0032  
              _Lcd_Clear_8bits 06FE                     __pmaintext 0041               ??_interrupciones 0070  
                   __pintentry 0004      __size_of_Lcd_Write_String 002F                ?_Lcd_Init_8bits 0070  
          __size_of_InitKeypad 0009                     ??_Lcd_Port 0073                        _SSPCON2 0091  
                      _SSPSTAT 0094                     __stringtab 0409                        _PWMconf 06A6  
               _Lcd_Write_Char 057C                     _contrasena 003E                      _ANSELbits 0188  
                      __ptext1 06C0                        __ptext2 0274                        __ptext3 051F  
                      __ptext4 06D8                        __ptext5 04AE                        __ptext6 06A6  
                      __ptext7 0619                        __ptext8 057C                        __ptext9 0648  
                      _compara 0032                        _funcAdc 04AE                        _initOsc 051F  
                    _T2CONbits 0012                        main@Key 0031   __end_of_Lcd_Set_Cursor_8bits 0689  
       __end_of_Lcd_Write_Char 05CE           end_of_initialization 003D        __end_of_Lcd_Clear_8bits 070B  
       __size_of_Lcd_Cmd_8bits 0010                      Lcd_Port@a 0073                      _PORTBbits 0006  
                    _PORTEbits 0009                      _TRISCbits 0087           switch_press_scan@key 0076  
              ?_Lcd_Write_Char 0074              Lcd_Write_String@a 0027              Lcd_Write_String@i 0025  
                  _CCP1CONbits 0017                     main@valor1 002B                     main@valor2 002D  
      __size_of_keypad_scanner 0195                   ??_InitKeypad 0073               _Lcd_Write_String 0619  
          start_initialization 000F                  _Lcd_Cmd_8bits 06EE             __end_of_InitKeypad 0714  
        Lcd_Set_Cursor_8bits@x 0075          Lcd_Set_Cursor_8bits@y 0076              __size_of_Lcd_Port 0023  
             ?_Lcd_Clear_8bits 0070       __CFG_FOSC$INTRC_NOCLKOUT 0000           _Lcd_Set_Cursor_8bits 066B  
                  __pdataBANK0 003E                Lcd_Write_Char@a 0022                Lcd_Write_Char@y 0021  
             ??_Lcd_Init_8bits 0075                    __pbssCOMMON 0077                      ___latbits 0002  
                __pcstackBANK0 0020                 ?_Lcd_Cmd_8bits 0070                       ?_PWMconf 0070  
        ?_Lcd_Set_Cursor_8bits 0075                      __pstrings 0409                      _contraAct 003D  
                     ?_funcAdc 0073                       ?_initOsc 0070              interrupt_function 0004  
               _keypad_scanner 0274                       _PIE1bits 008C                       _PIR1bits 000C  
            _switch_press_scan 06C0                     _ADCON0bits 001F                    __stringbase 040E  
                   _ADCON1bits 009F             ?_switch_press_scan 0070        __size_of_interrupciones 001D  
              ??_Lcd_Cmd_8bits 0073               ??_Lcd_Write_Char 0076            ??_switch_press_scan 0075  
                     _Lcd_Port 0648       __end_of_Lcd_Write_String 0648         __end_of_keypad_scanner 0409  
             __size_of_PWMconf 001A         ??_Lcd_Set_Cursor_8bits 0076      __end_of_switch_press_scan 06D8  
           __end_of__stringtab 040F               __size_of_funcAdc 0071               __size_of_initOsc 005D  
                     __ptext10 066B                       __ptext11 05CE                       __ptext12 06FE  
                     __ptext13 06EE                       __ptext14 070B                       __ptext15 0689  
            __CFG_BOR4V$BOR40V 0000                ?_keypad_scanner 0070                  __size_of_main 0233  
                __size_of_init 0016           Lcd_Cmd_8bits@comando 0074                       _numerito 0077  
                   _INTCONbits 000B             Lcd_Write_Char@modo 0074             Lcd_Write_Char@temp 0020  
                     intlevel1 0000                      stringcode 0409                     _OSCCONbits 008F  
     __size_of_Lcd_Clear_8bits 000D     __size_of_switch_press_scan 0018                     _OPTION_REG 0081  
               _interrupciones 0689                       stringdir 0409                       stringtab 0409  
                  _SSPCON2bits 0091  
