

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Mar 13 07:22:09 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_I2C_Slave_Init
  1180                           	FNCALL	_main,_InitKeypad
  1181                           	FNCALL	_main,_Lcd_Clear_8bits
  1182                           	FNCALL	_main,_Lcd_Init_8bits
  1183                           	FNCALL	_main,_Lcd_Set_Cursor_8bits
  1184                           	FNCALL	_main,_Lcd_Write_Char
  1185                           	FNCALL	_main,_Lcd_Write_String
  1186                           	FNCALL	_main,_PWMconf
  1187                           	FNCALL	_main,_funcAdc
  1188                           	FNCALL	_main,_init
  1189                           	FNCALL	_main,_initOsc
  1190                           	FNCALL	_main,_initTMR0
  1191                           	FNCALL	_main,_keypad_scanner
  1192                           	FNCALL	_main,_switch_press_scan
  1193                           	FNCALL	_switch_press_scan,_keypad_scanner
  1194                           	FNCALL	_Lcd_Write_String,_Lcd_Write_Char
  1195                           	FNCALL	_Lcd_Write_Char,_Lcd_Port
  1196                           	FNCALL	_Lcd_Set_Cursor_8bits,_Lcd_Cmd_8bits
  1197                           	FNCALL	_Lcd_Init_8bits,_Lcd_Cmd_8bits
  1198                           	FNCALL	_Lcd_Clear_8bits,_Lcd_Cmd_8bits
  1199                           	FNROOT	_main
  1200                           	FNCALL	intlevel1,_interrupciones
  1201                           	global	intlevel1
  1202                           	FNROOT	intlevel1
  1203                           	global	_contrasena
  1204                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1205                           global __pidataBANK0
  1206                           __pidataBANK0:
  1207  07C3                     	file	"mainS1proyect.c"
  1208                           	line	54
  1209                           
  1210                           ;initializer for _contrasena
  1211                           	retlw	031h
  1212  07C3  3431               	retlw	037h
  1213  07C4  3437               	retlw	033h
  1214  07C5  3433               	retlw	030h
  1215  07C6  3430               	retlw	038h
  1216  07C7  3438               	global	_z
  1217                           	global	_res
  1218                           	global	_compara
  1219                           	global	_Abierto
  1220                           	global	_cont
  1221                           	global	_contraAct
  1222                           	global	_PORTBbits
  1223                           _PORTBbits	set	0x6
  1224  0006                     	global	_SSPCON
  1225                           _SSPCON	set	0x14
  1226  0014                     	global	_T2CONbits
  1227                           _T2CONbits	set	0x12
  1228  0012                     	global	_CCP1CONbits
  1229                           _CCP1CONbits	set	0x17
  1230  0017                     	global	_PORTE
  1231                           _PORTE	set	0x9
  1232  0009                     	global	_PORTC
  1233                           _PORTC	set	0x7
  1234  0007                     	global	_PORTB
  1235                           _PORTB	set	0x6
  1236  0006                     	global	_PORTA
  1237                           _PORTA	set	0x5
  1238  0005                     	global	_CCPR1L
  1239                           _CCPR1L	set	0x15
  1240  0015                     	global	_PORTAbits
  1241                           _PORTAbits	set	0x5
  1242  0005                     	global	_TMR0
  1243                           _TMR0	set	0x1
  1244  0001                     	global	_INTCONbits
  1245                           _INTCONbits	set	0xB
  1246  000B                     	global	_ADCON0bits
  1247                           _ADCON0bits	set	0x1F
  1248  001F                     	global	_PORTEbits
  1249                           _PORTEbits	set	0x9
  1250  0009                     	global	_ADRESH
  1251                           _ADRESH	set	0x1E
  1252  001E                     	global	_PORTD
  1253                           _PORTD	set	0x8
  1254  0008                     	global	_SSPBUF
  1255                           _SSPBUF	set	0x13
  1256  0013                     	global	_SSPCONbits
  1257                           _SSPCONbits	set	0x14
  1258  0014                     	global	_PIR1bits
  1259                           _PIR1bits	set	0xC
  1260  000C                     	global	_RD7
  1261                           _RD7	set	0x47
  1262  0047                     	global	_RD6
  1263                           _RD6	set	0x46
  1264  0046                     	global	_RD5
  1265                           _RD5	set	0x45
  1266  0045                     	global	_RD4
  1267                           _RD4	set	0x44
  1268  0044                     	global	_RD3
  1269                           _RD3	set	0x43
  1270  0043                     	global	_RD2
  1271                           _RD2	set	0x42
  1272  0042                     	global	_RD1
  1273                           _RD1	set	0x41
  1274  0041                     	global	_RD0
  1275                           _RD0	set	0x40
  1276  0040                     	global	_SSPIF
  1277                           _SSPIF	set	0x63
  1278  0063                     	global	_PEIE
  1279                           _PEIE	set	0x5E
  1280  005E                     	global	_GIE
  1281                           _GIE	set	0x5F
  1282  005F                     	global	_PIE1bits
  1283                           _PIE1bits	set	0x8C
  1284  008C                     	global	_ADCON1bits
  1285                           _ADCON1bits	set	0x9F
  1286  009F                     	global	_SSPCON2bits
  1287                           _SSPCON2bits	set	0x91
  1288  0091                     	global	_SSPSTAT
  1289                           _SSPSTAT	set	0x94
  1290  0094                     	global	_SSPADD
  1291                           _SSPADD	set	0x93
  1292  0093                     	global	_SSPCON2
  1293                           _SSPCON2	set	0x91
  1294  0091                     	global	_OSCCONbits
  1295                           _OSCCONbits	set	0x8F
  1296  008F                     	global	_OPTION_REG
  1297                           _OPTION_REG	set	0x81
  1298  0081                     	global	_PR2
  1299                           _PR2	set	0x92
  1300  0092                     	global	_TRISCbits
  1301                           _TRISCbits	set	0x87
  1302  0087                     	global	_TRISE
  1303                           _TRISE	set	0x89
  1304  0089                     	global	_TRISC
  1305                           _TRISC	set	0x87
  1306  0087                     	global	_TRISD
  1307                           _TRISD	set	0x88
  1308  0088                     	global	_TRISA
  1309                           _TRISA	set	0x85
  1310  0085                     	global	_TRISB
  1311                           _TRISB	set	0x86
  1312  0086                     	global	_SSPSTATbits
  1313                           _SSPSTATbits	set	0x94
  1314  0094                     	global	_SSPIE
  1315                           _SSPIE	set	0x463
  1316  0463                     	global	_TRISC4
  1317                           _TRISC4	set	0x43C
  1318  043C                     	global	_TRISC3
  1319                           _TRISC3	set	0x43B
  1320  043B                     	global	_BF
  1321                           _BF	set	0x4A0
  1322  04A0                     	global	_ANSELbits
  1323                           _ANSELbits	set	0x188
  1324  0188                     	global	_ANSELH
  1325                           _ANSELH	set	0x189
  1326  0189                     	global	_ANSEL
  1327                           _ANSEL	set	0x188
  1328  0188                     psect	strings,class=STRING,delta=2,noexec
  1329                           global __pstrings
  1330                           __pstrings:
  1331  0418                     stringtab:
  1332  0418                     	global    __stringtab
  1333                           __stringtab:
  1334  0418                     ;	String table - string pointers are 1 byte each
  1335                           stringcode:stringdir:
  1336  0418                     movlw high(stringdir)
      + 0418                     stringdir:	
  1337  0418  3004               movwf pclath
  1338  0419  008A               movf fsr,w
  1339  041A  0804               incf fsr
  1340  041B  0A84               	addwf pc
  1341  041C  0782               	global __stringbase
  1342                           __stringbase:
  1343  041D                     	retlw	0
  1344  041D  3400               psect	strings
  1345                           	global    __end_of__stringtab
  1346                           __end_of__stringtab:
  1347  041E                     	
  1348                           STR_8:	
  1349  041E                     	retlw	65	;'A'
  1350  041E  3441               	retlw	99	;'c'
  1351  041F  3463               	retlw	99	;'c'
  1352  0420  3463               	retlw	101	;'e'
  1353  0421  3465               	retlw	115	;'s'
  1354  0422  3473               	retlw	111	;'o'
  1355  0423  346F               	retlw	32	;' '
  1356  0424  3420               	retlw	98	;'b'
  1357  0425  3462               	retlw	114	;'r'
  1358  0426  3472               	retlw	105	;'i'
  1359  0427  3469               	retlw	110	;'n'
  1360  0428  346E               	retlw	100	;'d'
  1361  0429  3464               	retlw	97	;'a'
  1362  042A  3461               	retlw	100	;'d'
  1363  042B  3464               	retlw	111	;'o'
  1364  042C  346F               	retlw	44	;','
  1365  042D  342C               	retlw	0
  1366  042E  3400               psect	strings
  1367                           	
  1368                           STR_1:	
  1369  042F                     	retlw	66	;'B'
  1370  042F  3442               	retlw	105	;'i'
  1371  0430  3469               	retlw	101	;'e'
  1372  0431  3465               	retlw	110	;'n'
  1373  0432  346E               	retlw	118	;'v'
  1374  0433  3476               	retlw	101	;'e'
  1375  0434  3465               	retlw	110	;'n'
  1376  0435  346E               	retlw	105	;'i'
  1377  0436  3469               	retlw	100	;'d'
  1378  0437  3464               	retlw	111	;'o'
  1379  0438  346F               	retlw	32	;' '
  1380  0439  3420               	retlw	65	;'A'
  1381  043A  3441               	retlw	116	;'t'
  1382  043B  3474               	retlw	116	;'t'
  1383  043C  3474               	retlw	101	;'e'
  1384  043D  3465               	retlw	46	;'.'
  1385  043E  342E               	retlw	0
  1386  043F  3400               psect	strings
  1387                           	
  1388                           STR_2:	
  1389  0440                     	retlw	70	;'F'
  1390  0440  3446               	retlw	97	;'a'
  1391  0441  3461               	retlw	109	;'m'
  1392  0442  346D               	retlw	105	;'i'
  1393  0443  3469               	retlw	108	;'l'
  1394  0444  346C               	retlw	105	;'i'
  1395  0445  3469               	retlw	97	;'a'
  1396  0446  3461               	retlw	32	;' '
  1397  0447  3420               	retlw	83	;'S'
  1398  0448  3453               	retlw	97	;'a'
  1399  0449  3461               	retlw	110	;'n'
  1400  044A  346E               	retlw	97	;'a'
  1401  044B  3461               	retlw	98	;'b'
  1402  044C  3462               	retlw	114	;'r'
  1403  044D  3472               	retlw	105	;'i'
  1404  044E  3469               	retlw	97	;'a'
  1405  044F  3461               	retlw	0
  1406  0450  3400               psect	strings
  1407                           	
  1408                           STR_9:	
  1409  0451                     	retlw	73	;'I'
  1410  0451  3449               	retlw	110	;'n'
  1411  0452  346E               	retlw	116	;'t'
  1412  0453  3474               	retlw	114	;'r'
  1413  0454  3472               	retlw	111	;'o'
  1414  0455  346F               	retlw	100	;'d'
  1415  0456  3464               	retlw	117	;'u'
  1416  0457  3475               	retlw	122	;'z'
  1417  0458  347A               	retlw	99	;'c'
  1418  0459  3463               	retlw	97	;'a'
  1419  045A  3461               	retlw	32	;' '
  1420  045B  3420               	retlw	108	;'l'
  1421  045C  346C               	retlw	108	;'l'
  1422  045D  346C               	retlw	97	;'a'
  1423  045E  3461               	retlw	118	;'v'
  1424  045F  3476               	retlw	101	;'e'
  1425  0460  3465               	retlw	0
  1426  0461  3400               psect	strings
  1427                           	
  1428                           STR_6:	
  1429  0462                     	retlw	67	;'C'
  1430  0462  3443               	retlw	111	;'o'
  1431  0463  346F               	retlw	110	;'n'
  1432  0464  346E               	retlw	116	;'t'
  1433  0465  3474               	retlw	114	;'r'
  1434  0466  3472               	retlw	97	;'a'
  1435  0467  3461               	retlw	115	;'s'
  1436  0468  3473               	retlw	101	;'e'
  1437  0469  3465               	retlw	110	;'n'
  1438  046A  346E               	retlw	97	;'a'
  1439  046B  3461               	retlw	32	;' '
  1440  046C  3420               	retlw	109	;'m'
  1441  046D  346D               	retlw	97	;'a'
  1442  046E  3461               	retlw	108	;'l'
  1443  046F  346C               	retlw	97	;'a'
  1444  0470  3461               	retlw	0
  1445  0471  3400               psect	strings
  1446                           	
  1447                           STR_3:	
  1448  0472                     	retlw	80	;'P'
  1449  0472  3450               	retlw	114	;'r'
  1450  0473  3472               	retlw	101	;'e'
  1451  0474  3465               	retlw	115	;'s'
  1452  0475  3473               	retlw	105	;'i'
  1453  0476  3469               	retlw	111	;'o'
  1454  0477  346F               	retlw	110	;'n'
  1455  0478  346E               	retlw	101	;'e'
  1456  0479  3465               	retlw	32	;' '
  1457  047A  3420               	retlw	35	;'#'
  1458  047B  3423               	retlw	32	;' '
  1459  047C  3420               	retlw	112	;'p'
  1460  047D  3470               	retlw	97	;'a'
  1461  047E  3461               	retlw	114	;'r'
  1462  047F  3472               	retlw	97	;'a'
  1463  0480  3461               	retlw	0
  1464  0481  3400               psect	strings
  1465                           	
  1466                           STR_10:	
  1467  0482                     	retlw	65	;'A'
  1468  0482  3441               	retlw	98	;'b'
  1469  0483  3462               	retlw	114	;'r'
  1470  0484  3472               	retlw	105	;'i'
  1471  0485  3469               	retlw	101	;'e'
  1472  0486  3465               	retlw	110	;'n'
  1473  0487  346E               	retlw	100	;'d'
  1474  0488  3464               	retlw	111	;'o'
  1475  0489  346F               	retlw	32	;' '
  1476  048A  3420               	retlw	112	;'p'
  1477  048B  3470               	retlw	117	;'u'
  1478  048C  3475               	retlw	101	;'e'
  1479  048D  3465               	retlw	114	;'r'
  1480  048E  3472               	retlw	116	;'t'
  1481  048F  3474               	retlw	97	;'a'
  1482  0490  3461               	retlw	0
  1483  0491  3400               psect	strings
  1484                           	
  1485                           STR_5:	
  1486  0492                     	retlw	73	;'I'
  1487  0492  3449               	retlw	110	;'n'
  1488  0493  346E               	retlw	103	;'g'
  1489  0494  3467               	retlw	114	;'r'
  1490  0495  3472               	retlw	101	;'e'
  1491  0496  3465               	retlw	115	;'s'
  1492  0497  3473               	retlw	101	;'e'
  1493  0498  3465               	retlw	32	;' '
  1494  0499  3420               	retlw	99	;'c'
  1495  049A  3463               	retlw	108	;'l'
  1496  049B  346C               	retlw	97	;'a'
  1497  049C  3461               	retlw	118	;'v'
  1498  049D  3476               	retlw	101	;'e'
  1499  049E  3465               	retlw	58	;':'
  1500  049F  343A               	retlw	0
  1501  04A0  3400               psect	strings
  1502                           	
  1503                           STR_11:	
  1504  04A1                     	retlw	66	;'B'
  1505  04A1  3442               	retlw	105	;'i'
  1506  04A2  3469               	retlw	101	;'e'
  1507  04A3  3465               	retlw	110	;'n'
  1508  04A4  346E               	retlw	118	;'v'
  1509  04A5  3476               	retlw	101	;'e'
  1510  04A6  3465               	retlw	110	;'n'
  1511  04A7  346E               	retlw	105	;'i'
  1512  04A8  3469               	retlw	100	;'d'
  1513  04A9  3464               	retlw	111	;'o'
  1514  04AA  346F               	retlw	0
  1515  04AB  3400               psect	strings
  1516                           	
  1517                           STR_7:	
  1518  04AC                     	retlw	105	;'i'
  1519  04AC  3469               	retlw	110	;'n'
  1520  04AD  346E               	retlw	116	;'t'
  1521  04AE  3474               	retlw	101	;'e'
  1522  04AF  3465               	retlw	110	;'n'
  1523  04B0  346E               	retlw	116	;'t'
  1524  04B1  3474               	retlw	101	;'e'
  1525  04B2  3465               	retlw	108	;'l'
  1526  04B3  346C               	retlw	111	;'o'
  1527  04B4  346F               	retlw	0
  1528  04B5  3400               psect	strings
  1529                           	
  1530                           STR_4:	
  1531  04B6                     	retlw	105	;'i'
  1532  04B6  3469               	retlw	110	;'n'
  1533  04B7  346E               	retlw	105	;'i'
  1534  04B8  3469               	retlw	99	;'c'
  1535  04B9  3463               	retlw	105	;'i'
  1536  04BA  3469               	retlw	97	;'a'
  1537  04BB  3461               	retlw	114	;'r'
  1538  04BC  3472               	retlw	0
  1539  04BD  3400               psect	strings
  1540                           ; #config settings
  1541                           global __CFG_FOSC$INTRC_NOCLKOUT
  1542                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1543  0000                     global __CFG_WDTE$OFF
  1544                           __CFG_WDTE$OFF equ 0x0
  1545  0000                     global __CFG_PWRTE$OFF
  1546                           __CFG_PWRTE$OFF equ 0x0
  1547  0000                     global __CFG_MCLRE$ON
  1548                           __CFG_MCLRE$ON equ 0x0
  1549  0000                     global __CFG_CP$OFF
  1550                           __CFG_CP$OFF equ 0x0
  1551  0000                     global __CFG_CPD$OFF
  1552                           __CFG_CPD$OFF equ 0x0
  1553  0000                     global __CFG_BOREN$OFF
  1554                           __CFG_BOREN$OFF equ 0x0
  1555  0000                     global __CFG_IESO$OFF
  1556                           __CFG_IESO$OFF equ 0x0
  1557  0000                     global __CFG_FCMEN$OFF
  1558                           __CFG_FCMEN$OFF equ 0x0
  1559  0000                     global __CFG_LVP$OFF
  1560                           __CFG_LVP$OFF equ 0x0
  1561  0000                     global __CFG_BOR4V$BOR40V
  1562                           __CFG_BOR4V$BOR40V equ 0x0
  1563  0000                     global __CFG_WRT$OFF
  1564                           __CFG_WRT$OFF equ 0x0
  1565  0000                     	file	"C:\Users\DIBUJO~1\AppData\Local\Temp\s8ck."
  1566                           	line	#
  1567                           psect cinit,class=CODE,delta=2
  1568                           global start_initialization
  1569                           start_initialization:
  1570  000F                     
  1571                           global __initialization
  1572                           __initialization:
  1573  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1574                           global __pbssCOMMON
  1575                           __pbssCOMMON:
  1576  0077                     _numerito:
  1577  0077                            ds      1
  1578  0077                     
  1579                           _z:
  1580  0078                            ds      1
  1581  0078                     
  1582                           _res:
  1583  0079                            ds      1
  1584  0079                     
  1585                           _conteo:
  1586  007A                            ds      1
  1587  007A                     
  1588                           psect	bssBANK0,class=BANK0,space=1,noexec
  1589                           global __pbssBANK0
  1590                           __pbssBANK0:
  1591  0032                     _compara:
  1592  0032                            ds      5
  1593  0032                     
  1594                           _a:
  1595  0037                            ds      2
  1596  0037                     
  1597                           _Abierto:
  1598  0039                            ds      1
  1599  0039                     
  1600                           _valor2:
  1601  003A                            ds      1
  1602  003A                     
  1603                           _valor1:
  1604  003B                            ds      1
  1605  003B                     
  1606                           _i:
  1607  003C                            ds      1
  1608  003C                     
  1609                           _cont:
  1610  003D                            ds      1
  1611  003D                     
  1612                           _contraAct:
  1613  003E                            ds      1
  1614  003E                     
  1615                           psect	dataBANK0,class=BANK0,space=1,noexec
  1616                           global __pdataBANK0
  1617                           __pdataBANK0:
  1618  003F                     	file	"mainS1proyect.c"
  1619                           	line	54
  1620                           _contrasena:
  1621  003F                            ds      5
  1622  003F                     
  1623                           	file	"C:\Users\DIBUJO~1\AppData\Local\Temp\s8ck."
  1624                           	line	#
  1625                           ; Initialize objects allocated to BANK0
  1626                           	global __pidataBANK0
  1627                           psect cinit,class=CODE,delta=2,merge=1
  1628                           	fcall	__pidataBANK0+0		;fetch initializer
  1629  000F  120A  118A  27C3  120A  118A  	movwf	__pdataBANK0+0&07fh		
  1630  0014  00BF               	fcall	__pidataBANK0+1		;fetch initializer
  1631  0015  120A  118A  27C4  120A  118A  	movwf	__pdataBANK0+1&07fh		
  1632  001A  00C0               	fcall	__pidataBANK0+2		;fetch initializer
  1633  001B  120A  118A  27C5  120A  118A  	movwf	__pdataBANK0+2&07fh		
  1634  0020  00C1               	fcall	__pidataBANK0+3		;fetch initializer
  1635  0021  120A  118A  27C6  120A  118A  	movwf	__pdataBANK0+3&07fh		
  1636  0026  00C2               	fcall	__pidataBANK0+4		;fetch initializer
  1637  0027  120A  118A  27C7  120A  118A  	movwf	__pdataBANK0+4&07fh		
  1638  002C  00C3               	line	#
  1639                           ; Clear objects allocated to BANK0
  1640                           psect cinit,class=CODE,delta=2,merge=1
  1641                           	clrf	((__pbssBANK0)+0)&07Fh
  1642  002D  01B2               	clrf	((__pbssBANK0)+1)&07Fh
  1643  002E  01B3               	clrf	((__pbssBANK0)+2)&07Fh
  1644  002F  01B4               	clrf	((__pbssBANK0)+3)&07Fh
  1645  0030  01B5               	clrf	((__pbssBANK0)+4)&07Fh
  1646  0031  01B6               	clrf	((__pbssBANK0)+5)&07Fh
  1647  0032  01B7               	clrf	((__pbssBANK0)+6)&07Fh
  1648  0033  01B8               	clrf	((__pbssBANK0)+7)&07Fh
  1649  0034  01B9               	clrf	((__pbssBANK0)+8)&07Fh
  1650  0035  01BA               	clrf	((__pbssBANK0)+9)&07Fh
  1651  0036  01BB               	clrf	((__pbssBANK0)+10)&07Fh
  1652  0037  01BC               	clrf	((__pbssBANK0)+11)&07Fh
  1653  0038  01BD               	clrf	((__pbssBANK0)+12)&07Fh
  1654  0039  01BE               ; Clear objects allocated to COMMON
  1655                           psect cinit,class=CODE,delta=2,merge=1
  1656                           	clrf	((__pbssCOMMON)+0)&07Fh
  1657  003A  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
  1658  003B  01F8               	clrf	((__pbssCOMMON)+2)&07Fh
  1659  003C  01F9               	clrf	((__pbssCOMMON)+3)&07Fh
  1660  003D  01FA               psect cinit,class=CODE,delta=2,merge=1
  1661                           global end_of_initialization,__end_of__initialization
  1662                           
  1663                           ;End of C runtime variable initialization code
  1664                           
  1665                           end_of_initialization:
  1666  003E                     __end_of__initialization:
  1667  003E                     clrf status
  1668  003E  0183               ljmp _main	;jump to C main() function
  1669  003F  120A  118A  2842   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1670                           global __pcstackCOMMON
  1671                           __pcstackCOMMON:
  1672  0070                     ?_init:	; 1 bytes @ 0x0
  1673  0070                     ?_initOsc:	; 1 bytes @ 0x0
  1674  0070                     ?_PWMconf:	; 1 bytes @ 0x0
  1675  0070                     ?_Lcd_Init_8bits:	; 1 bytes @ 0x0
  1676  0070                     ?_InitKeypad:	; 1 bytes @ 0x0
  1677  0070                     ?_initTMR0:	; 1 bytes @ 0x0
  1678  0070                     ?_I2C_Slave_Init:	; 1 bytes @ 0x0
  1679  0070                     ?_Lcd_Clear_8bits:	; 1 bytes @ 0x0
  1680  0070                     ?_switch_press_scan:	; 1 bytes @ 0x0
  1681  0070                     ?_keypad_scanner:	; 1 bytes @ 0x0
  1682  0070                     ?_interrupciones:	; 1 bytes @ 0x0
  1683  0070                     ??_interrupciones:	; 1 bytes @ 0x0
  1684  0070                     ?_main:	; 1 bytes @ 0x0
  1685  0070                     ?_Lcd_Port:	; 1 bytes @ 0x0
  1686  0070                     ?_Lcd_Cmd_8bits:	; 1 bytes @ 0x0
  1687  0070                     	ds	3
  1688  0070                     ??_init:	; 1 bytes @ 0x3
  1689  0073                     ??_initOsc:	; 1 bytes @ 0x3
  1690  0073                     ?_funcAdc:	; 1 bytes @ 0x3
  1691  0073                     ??_PWMconf:	; 1 bytes @ 0x3
  1692  0073                     ??_InitKeypad:	; 1 bytes @ 0x3
  1693  0073                     ??_initTMR0:	; 1 bytes @ 0x3
  1694  0073                     ??_I2C_Slave_Init:	; 1 bytes @ 0x3
  1695  0073                     ??_keypad_scanner:	; 1 bytes @ 0x3
  1696  0073                     ??_Lcd_Port:	; 1 bytes @ 0x3
  1697  0073                     ??_Lcd_Cmd_8bits:	; 1 bytes @ 0x3
  1698  0073                     	global	I2C_Slave_Init@address
  1699                           I2C_Slave_Init@address:	; 1 bytes @ 0x3
  1700  0073                     	global	Lcd_Port@a
  1701                           Lcd_Port@a:	; 1 bytes @ 0x3
  1702  0073                     	global	funcAdc@anaP
  1703                           funcAdc@anaP:	; 1 bytes @ 0x3
  1704  0073                     	ds	1
  1705  0073                     ?_Lcd_Write_Char:	; 1 bytes @ 0x4
  1706  0074                     	global	Lcd_Cmd_8bits@comando
  1707                           Lcd_Cmd_8bits@comando:	; 1 bytes @ 0x4
  1708  0074                     	global	funcAdc@just
  1709                           funcAdc@just:	; 1 bytes @ 0x4
  1710  0074                     	global	Lcd_Write_Char@modo
  1711                           Lcd_Write_Char@modo:	; 2 bytes @ 0x4
  1712  0074                     	ds	1
  1713  0074                     ??_funcAdc:	; 1 bytes @ 0x5
  1714  0075                     ??_Lcd_Init_8bits:	; 1 bytes @ 0x5
  1715  0075                     ??_Lcd_Clear_8bits:	; 1 bytes @ 0x5
  1716  0075                     ?_Lcd_Set_Cursor_8bits:	; 1 bytes @ 0x5
  1717  0075                     ??_switch_press_scan:	; 1 bytes @ 0x5
  1718  0075                     	global	initOsc@frec
  1719                           initOsc@frec:	; 1 bytes @ 0x5
  1720  0075                     	global	Lcd_Set_Cursor_8bits@x
  1721                           Lcd_Set_Cursor_8bits@x:	; 1 bytes @ 0x5
  1722  0075                     	ds	1
  1723  0075                     ??_Lcd_Set_Cursor_8bits:	; 1 bytes @ 0x6
  1724  0076                     ??_Lcd_Write_Char:	; 1 bytes @ 0x6
  1725  0076                     	global	Lcd_Set_Cursor_8bits@y
  1726                           Lcd_Set_Cursor_8bits@y:	; 1 bytes @ 0x6
  1727  0076                     	global	switch_press_scan@key
  1728                           switch_press_scan@key:	; 1 bytes @ 0x6
  1729  0076                     	ds	1
  1730  0076                     ??_Lcd_Write_String:	; 1 bytes @ 0x7
  1731  0077                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1732                           global __pcstackBANK0
  1733                           __pcstackBANK0:
  1734  0020                     	global	Lcd_Write_Char@temp
  1735                           Lcd_Write_Char@temp:	; 1 bytes @ 0x0
  1736  0020                     	global	funcAdc@divD
  1737                           funcAdc@divD:	; 1 bytes @ 0x0
  1738  0020                     	ds	1
  1739  0020                     	global	Lcd_Write_Char@y
  1740                           Lcd_Write_Char@y:	; 1 bytes @ 0x1
  1741  0021                     	ds	1
  1742  0021                     	global	Lcd_Write_Char@a
  1743                           Lcd_Write_Char@a:	; 1 bytes @ 0x2
  1744  0022                     	ds	1
  1745  0022                     ?_Lcd_Write_String:	; 1 bytes @ 0x3
  1746  0023                     	global	Lcd_Write_String@modo
  1747                           Lcd_Write_String@modo:	; 2 bytes @ 0x3
  1748  0023                     	ds	2
  1749  0023                     	global	Lcd_Write_String@i
  1750                           Lcd_Write_String@i:	; 2 bytes @ 0x5
  1751  0025                     	ds	2
  1752  0025                     	global	Lcd_Write_String@a
  1753                           Lcd_Write_String@a:	; 1 bytes @ 0x7
  1754  0027                     	ds	1
  1755  0027                     ??_main:	; 1 bytes @ 0x8
  1756  0028                     	ds	3
  1757  0028                     	global	main@valor1
  1758                           main@valor1:	; 2 bytes @ 0xB
  1759  002B                     	ds	2
  1760  002B                     	global	main@valor2
  1761                           main@valor2:	; 2 bytes @ 0xD
  1762  002D                     	ds	2
  1763  002D                     	global	main@i
  1764                           main@i:	; 2 bytes @ 0xF
  1765  002F                     	ds	2
  1766  002F                     	global	main@Key
  1767                           main@Key:	; 1 bytes @ 0x11
  1768  0031                     	ds	1
  1769  0031                     ;!
  1770                           ;!Data Sizes:
  1771                           ;!    Strings     160
  1772                           ;!    Constant    0
  1773                           ;!    Data        5
  1774                           ;!    BSS         17
  1775                           ;!    Persistent  0
  1776                           ;!    Stack       0
  1777                           ;!
  1778                           ;!Auto Spaces:
  1779                           ;!    Space          Size  Autos    Used
  1780                           ;!    COMMON           14      7      11
  1781                           ;!    BANK0            80     18      36
  1782                           ;!    BANK1            80      0       0
  1783                           ;!    BANK3            96      0       0
  1784                           ;!    BANK2            96      0       0
  1785                           
  1786                           ;!
  1787                           ;!Pointer List with Targets:
  1788                           ;!
  1789                           ;!    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
  1790                           ;!		 -> STR_11(CODE[11]), STR_10(CODE[16]), STR_9(CODE[17]), STR_8(CODE[17]), 
  1791                           ;!		 -> STR_7(CODE[10]), STR_6(CODE[16]), STR_5(CODE[15]), STR_4(CODE[8]), 
  1792                           ;!		 -> STR_3(CODE[16]), STR_2(CODE[17]), STR_1(CODE[17]), 
  1793                           ;!
  1794                           
  1795                           
  1796                           ;!
  1797                           ;!Critical Paths under _main in COMMON
  1798                           ;!
  1799                           ;!    _main->_Lcd_Init_8bits
  1800                           ;!    _main->_Lcd_Set_Cursor_8bits
  1801                           ;!    _main->_Lcd_Write_Char
  1802                           ;!    _main->_funcAdc
  1803                           ;!    _main->_switch_press_scan
  1804                           ;!    _switch_press_scan->_keypad_scanner
  1805                           ;!    _Lcd_Write_String->_Lcd_Write_Char
  1806                           ;!    _Lcd_Write_Char->_Lcd_Port
  1807                           ;!    _Lcd_Set_Cursor_8bits->_Lcd_Cmd_8bits
  1808                           ;!    _Lcd_Init_8bits->_Lcd_Cmd_8bits
  1809                           ;!    _Lcd_Clear_8bits->_Lcd_Cmd_8bits
  1810                           ;!
  1811                           ;!Critical Paths under _interrupciones in COMMON
  1812                           ;!
  1813                           ;!    None.
  1814                           ;!
  1815                           ;!Critical Paths under _main in BANK0
  1816                           ;!
  1817                           ;!    _main->_Lcd_Write_String
  1818                           ;!    _Lcd_Write_String->_Lcd_Write_Char
  1819                           ;!
  1820                           ;!Critical Paths under _interrupciones in BANK0
  1821                           ;!
  1822                           ;!    None.
  1823                           ;!
  1824                           ;!Critical Paths under _main in BANK1
  1825                           ;!
  1826                           ;!    None.
  1827                           ;!
  1828                           ;!Critical Paths under _interrupciones in BANK1
  1829                           ;!
  1830                           ;!    None.
  1831                           ;!
  1832                           ;!Critical Paths under _main in BANK3
  1833                           ;!
  1834                           ;!    None.
  1835                           ;!
  1836                           ;!Critical Paths under _interrupciones in BANK3
  1837                           ;!
  1838                           ;!    None.
  1839                           ;!
  1840                           ;!Critical Paths under _main in BANK2
  1841                           ;!
  1842                           ;!    None.
  1843                           ;!
  1844                           ;!Critical Paths under _interrupciones in BANK2
  1845                           ;!
  1846                           ;!    None.
  1847                           
  1848 ;;
  1849 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1850 ;;
  1851                           
  1852                           ;!
  1853                           ;!Call Graph Tables:
  1854                           ;!
  1855                           ;! ---------------------------------------------------------------------------------
  1856                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1857                           ;! ---------------------------------------------------------------------------------
  1858                           ;! (0) _main                                                10    10      0    4395
  1859                           ;!                                              8 BANK0     10    10      0
  1860                           ;!                     _I2C_Slave_Init
  1861                           ;!                         _InitKeypad
  1862                           ;!                    _Lcd_Clear_8bits
  1863                           ;!                     _Lcd_Init_8bits
  1864                           ;!               _Lcd_Set_Cursor_8bits
  1865                           ;!                     _Lcd_Write_Char
  1866                           ;!                   _Lcd_Write_String
  1867                           ;!                            _PWMconf
  1868                           ;!                            _funcAdc
  1869                           ;!                               _init
  1870                           ;!                            _initOsc
  1871                           ;!                           _initTMR0
  1872                           ;!                     _keypad_scanner
  1873                           ;!                  _switch_press_scan
  1874                           ;! ---------------------------------------------------------------------------------
  1875                           ;! (1) _switch_press_scan                                    2     2      0      46
  1876                           ;!                                              5 COMMON     2     2      0
  1877                           ;!                     _keypad_scanner
  1878                           ;! ---------------------------------------------------------------------------------
  1879                           ;! (2) _keypad_scanner                                       2     2      0       0
  1880                           ;!                                              3 COMMON     2     2      0
  1881                           ;! ---------------------------------------------------------------------------------
  1882                           ;! (1) _initTMR0                                             0     0      0       0
  1883                           ;! ---------------------------------------------------------------------------------
  1884                           ;! (1) _initOsc                                              3     3      0      22
  1885                           ;!                                              3 COMMON     3     3      0
  1886                           ;! ---------------------------------------------------------------------------------
  1887                           ;! (1) _init                                                 0     0      0       0
  1888                           ;! ---------------------------------------------------------------------------------
  1889                           ;! (1) _funcAdc                                              5     3      2     273
  1890                           ;!                                              3 COMMON     4     2      2
  1891                           ;!                                              0 BANK0      1     1      0
  1892                           ;! ---------------------------------------------------------------------------------
  1893                           ;! (1) _PWMconf                                              0     0      0       0
  1894                           ;! ---------------------------------------------------------------------------------
  1895                           ;! (1) _Lcd_Write_String                                     5     3      2    2074
  1896                           ;!                                              3 BANK0      5     3      2
  1897                           ;!                     _Lcd_Write_Char
  1898                           ;! ---------------------------------------------------------------------------------
  1899                           ;! (2) _Lcd_Write_Char                                       6     4      2     527
  1900                           ;!                                              4 COMMON     3     1      2
  1901                           ;!                                              0 BANK0      3     3      0
  1902                           ;!                           _Lcd_Port
  1903                           ;! ---------------------------------------------------------------------------------
  1904                           ;! (3) _Lcd_Port                                             1     1      0     124
  1905                           ;!                                              3 COMMON     1     1      0
  1906                           ;! ---------------------------------------------------------------------------------
  1907                           ;! (1) _Lcd_Set_Cursor_8bits                                 2     1      1    1022
  1908                           ;!                                              5 COMMON     2     1      1
  1909                           ;!                      _Lcd_Cmd_8bits
  1910                           ;! ---------------------------------------------------------------------------------
  1911                           ;! (1) _Lcd_Init_8bits                                       2     2      0      22
  1912                           ;!                                              5 COMMON     2     2      0
  1913                           ;!                      _Lcd_Cmd_8bits
  1914                           ;! ---------------------------------------------------------------------------------
  1915                           ;! (1) _Lcd_Clear_8bits                                      0     0      0      22
  1916                           ;!                      _Lcd_Cmd_8bits
  1917                           ;! ---------------------------------------------------------------------------------
  1918                           ;! (2) _Lcd_Cmd_8bits                                        2     2      0      22
  1919                           ;!                                              3 COMMON     2     2      0
  1920                           ;! ---------------------------------------------------------------------------------
  1921                           ;! (1) _InitKeypad                                           0     0      0       0
  1922                           ;! ---------------------------------------------------------------------------------
  1923                           ;! (1) _I2C_Slave_Init                                       1     1      0      22
  1924                           ;!                                              3 COMMON     1     1      0
  1925                           ;! ---------------------------------------------------------------------------------
  1926                           ;! Estimated maximum stack depth 3
  1927                           ;! ---------------------------------------------------------------------------------
  1928                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1929                           ;! ---------------------------------------------------------------------------------
  1930                           ;! (4) _interrupciones                                       3     3      0       0
  1931                           ;!                                              0 COMMON     3     3      0
  1932                           ;! ---------------------------------------------------------------------------------
  1933                           ;! Estimated maximum stack depth 4
  1934                           ;! ---------------------------------------------------------------------------------
  1935                           ;!
  1936                           ;! Call Graph Graphs:
  1937                           ;!
  1938                           ;! _main (ROOT)
  1939                           ;!   _I2C_Slave_Init
  1940                           ;!   _InitKeypad
  1941                           ;!   _Lcd_Clear_8bits
  1942                           ;!     _Lcd_Cmd_8bits
  1943                           ;!   _Lcd_Init_8bits
  1944                           ;!     _Lcd_Cmd_8bits
  1945                           ;!   _Lcd_Set_Cursor_8bits
  1946                           ;!     _Lcd_Cmd_8bits
  1947                           ;!   _Lcd_Write_Char
  1948                           ;!     _Lcd_Port
  1949                           ;!   _Lcd_Write_String
  1950                           ;!     _Lcd_Write_Char
  1951                           ;!       _Lcd_Port
  1952                           ;!   _PWMconf
  1953                           ;!   _funcAdc
  1954                           ;!   _init
  1955                           ;!   _initOsc
  1956                           ;!   _initTMR0
  1957                           ;!   _keypad_scanner
  1958                           ;!   _switch_press_scan
  1959                           ;!     _keypad_scanner
  1960                           ;!
  1961                           ;! _interrupciones (ROOT)
  1962                           ;!
  1963                           
  1964                           ;! Address spaces:
  1965                           
  1966                           ;!Name               Size   Autos  Total    Cost      Usage
  1967                           ;!BANK3               60      0       0       9        0.0%
  1968                           ;!BITBANK3            60      0       0       8        0.0%
  1969                           ;!SFR3                 0      0       0       4        0.0%
  1970                           ;!BITSFR3              0      0       0       4        0.0%
  1971                           ;!BANK2               60      0       0      11        0.0%
  1972                           ;!BITBANK2            60      0       0      10        0.0%
  1973                           ;!SFR2                 0      0       0       5        0.0%
  1974                           ;!BITSFR2              0      0       0       5        0.0%
  1975                           ;!BANK1               50      0       0       7        0.0%
  1976                           ;!BITBANK1            50      0       0       6        0.0%
  1977                           ;!SFR1                 0      0       0       2        0.0%
  1978                           ;!BITSFR1              0      0       0       2        0.0%
  1979                           ;!BANK0               50     12      24       5       45.0%
  1980                           ;!BITBANK0            50      0       0       4        0.0%
  1981                           ;!SFR0                 0      0       0       1        0.0%
  1982                           ;!BITSFR0              0      0       0       1        0.0%
  1983                           ;!COMMON               E      7       B       1       78.6%
  1984                           ;!BITCOMMON            E      0       0       0        0.0%
  1985                           ;!CODE                 0      0       0       0        0.0%
  1986                           ;!DATA                 0      0      2F      12        0.0%
  1987                           ;!ABS                  0      0      2F       3        0.0%
  1988                           ;!NULL                 0      0       0       0        0.0%
  1989                           ;!STACK                0      0       0       2        0.0%
  1990                           ;!EEDATA             100      0       0       0        0.0%
  1991                           
  1992                           	global	_main
  1993                           
  1994 ;; *************** function _main *****************
  1995 ;; Defined at:
  1996 ;;		line 125 in file "mainS1proyect.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;		None
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  valor2          2   13[BANK0 ] int 
  2001 ;;  valor1          2   11[BANK0 ] int 
  2002 ;;  i               2   15[BANK0 ] int 
  2003 ;;  Key             1   17[BANK0 ] unsigned char 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : B00/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2013 ;;      Params:         0       0       0       0       0
  2014 ;;      Locals:         0       7       0       0       0
  2015 ;;      Temps:          0       3       0       0       0
  2016 ;;      Totals:         0      10       0       0       0
  2017 ;;Total ram usage:       10 bytes
  2018 ;; Hardware stack levels required when called:    4
  2019 ;; This function calls:
  2020 ;;		_I2C_Slave_Init
  2021 ;;		_InitKeypad
  2022 ;;		_Lcd_Clear_8bits
  2023 ;;		_Lcd_Init_8bits
  2024 ;;		_Lcd_Set_Cursor_8bits
  2025 ;;		_Lcd_Write_Char
  2026 ;;		_Lcd_Write_String
  2027 ;;		_PWMconf
  2028 ;;		_funcAdc
  2029 ;;		_init
  2030 ;;		_initOsc
  2031 ;;		_initTMR0
  2032 ;;		_keypad_scanner
  2033 ;;		_switch_press_scan
  2034 ;; This function is called by:
  2035 ;;		Startup code after reset
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2039                           	file	"mainS1proyect.c"
  2040                           	line	125
  2041                           global __pmaintext
  2042                           __pmaintext:	;psect for function _main
  2043  0042                     psect	maintext
  2044                           	file	"mainS1proyect.c"
  2045                           	line	125
  2046                           	global	__size_of_main
  2047                           	__size_of_main	equ	__end_of_main-_main
  2048  0241                     	
  2049                           _main:	
  2050  0042                     ;incstack = 0
  2051                           	opt	stack 4
  2052                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2053                           	line	126
  2054                           	
  2055                           l2401:	
  2056  0042                     ;mainS1proyect.c: 126:     init();
  2057                           	fcall	_init
  2058  0042  120A  118A  277A  120A  118A  	line	127
  2059                           	
  2060                           l2403:	
  2061  0047                     ;mainS1proyect.c: 127:     initOsc(3);
  2062                           	movlw	low(03h)
  2063  0047  3003               	fcall	_initOsc
  2064  0048  120A  118A  25C4  120A  118A  	line	128
  2065                           	
  2066                           l2405:	
  2067  004D                     ;mainS1proyect.c: 128:     funcAdc(2,0,0);
  2068                           	clrf	(funcAdc@anaP)
  2069  004D  01F3               	clrf	(funcAdc@just)
  2070  004E  01F4               	movlw	low(02h)
  2071  004F  3002               	fcall	_funcAdc
  2072  0050  120A  118A  2553  120A  118A  	line	129
  2073                           ;mainS1proyect.c: 129:     PWMconf();
  2074                           	fcall	_PWMconf
  2075  0055  120A  118A  272E  120A  118A  	line	130
  2076                           ;mainS1proyect.c: 130:     Lcd_Init_8bits();
  2077                           	fcall	_Lcd_Init_8bits
  2078  005A  120A  118A  2673  120A  118A  	line	131
  2079                           ;mainS1proyect.c: 131:     InitKeypad();
  2080                           	fcall	_InitKeypad
  2081  005F  120A  118A  27BA  120A  118A  	line	132
  2082                           ;mainS1proyect.c: 132:     initTMR0();
  2083                           	fcall	_initTMR0
  2084  0064  120A  118A  27A0  120A  118A  	line	133
  2085                           ;mainS1proyect.c: 133:     I2C_Slave_Init(0x70);
  2086                           	movlw	low(070h)
  2087  0069  3070               	fcall	_I2C_Slave_Init
  2088  006A  120A  118A  2748  120A  118A  	line	137
  2089                           ;mainS1proyect.c: 137:     Lcd_Clear_8bits();
  2090                           	fcall	_Lcd_Clear_8bits
  2091  006F  120A  118A  27AD  120A  118A  	line	138
  2092                           ;mainS1proyect.c: 138:     Lcd_Set_Cursor_8bits(1,1);
  2093                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2094  0074  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2095  0075  0AF5               	movlw	low(01h)
  2096  0076  3001               	fcall	_Lcd_Set_Cursor_8bits
  2097  0077  120A  118A  2710  120A  118A  	line	139
  2098                           	
  2099                           l2407:	
  2100  007C                     ;mainS1proyect.c: 139:     Lcd_Write_String("Bienvenido Atte.",8);
  2101                           	movlw	08h
  2102  007C  3008               	bcf	status, 5	;RP0=0, select bank0
  2103  007D  1283               	bcf	status, 6	;RP1=0, select bank0
  2104  007E  1303               	movwf	(Lcd_Write_String@modo)
  2105  007F  00A3               	movlw	0
  2106  0080  3000               	movwf	((Lcd_Write_String@modo))+1
  2107  0081  00A4               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2108  0082  3012               	fcall	_Lcd_Write_String
  2109  0083  120A  118A  26BE  120A  118A  	line	140
  2110                           	
  2111                           l2409:	
  2112  0088                     ;mainS1proyect.c: 140:     Lcd_Set_Cursor_8bits(2,1);
  2113                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2114  0088  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2115  0089  0AF5               	movlw	low(02h)
  2116  008A  3002               	fcall	_Lcd_Set_Cursor_8bits
  2117  008B  120A  118A  2710  120A  118A  	line	141
  2118                           ;mainS1proyect.c: 141:     Lcd_Write_String("Familia Sanabria",8);
  2119                           	movlw	08h
  2120  0090  3008               	bcf	status, 5	;RP0=0, select bank0
  2121  0091  1283               	bcf	status, 6	;RP1=0, select bank0
  2122  0092  1303               	movwf	(Lcd_Write_String@modo)
  2123  0093  00A3               	movlw	0
  2124  0094  3000               	movwf	((Lcd_Write_String@modo))+1
  2125  0095  00A4               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  2126  0096  3023               	fcall	_Lcd_Write_String
  2127  0097  120A  118A  26BE  120A  118A  	line	142
  2128                           	
  2129                           l2411:	
  2130  009C                     ;mainS1proyect.c: 142:     _delay((unsigned long)((3000)*(500000/4000.0)));
  2131                           	opt asmopt_push
  2132                           opt asmopt_off
  2133                           movlw  2
  2134  009C  3002               	bcf	status, 5	;RP0=0, select bank0
  2135  009D  1283               	bcf	status, 6	;RP1=0, select bank0
  2136  009E  1303               movwf	((??_main+0)+0+2),f
  2137  009F  00AA               movlw	231
  2138  00A0  30E7               movwf	((??_main+0)+0+1),f
  2139  00A1  00A9               	movlw	255
  2140  00A2  30FF               movwf	((??_main+0)+0),f
  2141  00A3  00A8               	u1667:
  2142  00A4                     decfsz	((??_main+0)+0),f
  2143  00A4  0BA8               	goto	u1667
  2144  00A5  28A4               	decfsz	((??_main+0)+0+1),f
  2145  00A6  0BA9               	goto	u1667
  2146  00A7  28A4               	decfsz	((??_main+0)+0+2),f
  2147  00A8  0BAA               	goto	u1667
  2148  00A9  28A4               	nop2
  2149  00AA  28AB               opt asmopt_pop
  2150                           
  2151                           	line	143
  2152                           	
  2153                           l2413:	
  2154  00AB                     ;mainS1proyect.c: 143:     Lcd_Clear_8bits();
  2155                           	fcall	_Lcd_Clear_8bits
  2156  00AB  120A  118A  27AD  120A  118A  	line	146
  2157                           	
  2158                           l2415:	
  2159  00B0                     ;mainS1proyect.c: 146:     char Key = 'n';
  2160                           	movlw	low(06Eh)
  2161  00B0  306E               	bcf	status, 5	;RP0=0, select bank0
  2162  00B1  1283               	bcf	status, 6	;RP1=0, select bank0
  2163  00B2  1303               	movwf	(??_main+0)+0
  2164  00B3  00A8               	movf	(??_main+0)+0,w
  2165  00B4  0828               	movwf	(main@Key)
  2166  00B5  00B1               	goto	l2417
  2167  00B6  28B8               	line	149
  2168                           ;mainS1proyect.c: 149:     while(1){
  2169                           	
  2170                           l146:	
  2171  00B7                     	goto	l2417
  2172  00B7  28B8               	line	150
  2173                           ;mainS1proyect.c: 150:         Inicio:
  2174                           	
  2175                           l147:	
  2176  00B8                     	line	151
  2177                           	
  2178                           l2417:	
  2179  00B8                     ;mainS1proyect.c: 151:         Lcd_Set_Cursor_8bits(1,1);
  2180                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2181  00B8  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2182  00B9  0AF5               	movlw	low(01h)
  2183  00BA  3001               	fcall	_Lcd_Set_Cursor_8bits
  2184  00BB  120A  118A  2710  120A  118A  	line	152
  2185                           ;mainS1proyect.c: 152:         Lcd_Write_String("Presione # para",8);
  2186                           	movlw	08h
  2187  00C0  3008               	bcf	status, 5	;RP0=0, select bank0
  2188  00C1  1283               	bcf	status, 6	;RP1=0, select bank0
  2189  00C2  1303               	movwf	(Lcd_Write_String@modo)
  2190  00C3  00A3               	movlw	0
  2191  00C4  3000               	movwf	((Lcd_Write_String@modo))+1
  2192  00C5  00A4               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  2193  00C6  3055               	fcall	_Lcd_Write_String
  2194  00C7  120A  118A  26BE  120A  118A  	line	153
  2195                           	
  2196                           l2419:	
  2197  00CC                     ;mainS1proyect.c: 153:         Lcd_Set_Cursor_8bits(2,1);
  2198                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2199  00CC  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2200  00CD  0AF5               	movlw	low(02h)
  2201  00CE  3002               	fcall	_Lcd_Set_Cursor_8bits
  2202  00CF  120A  118A  2710  120A  118A  	line	154
  2203                           	
  2204                           l2421:	
  2205  00D4                     ;mainS1proyect.c: 154:         Lcd_Write_String("iniciar",8);
  2206                           	movlw	08h
  2207  00D4  3008               	bcf	status, 5	;RP0=0, select bank0
  2208  00D5  1283               	bcf	status, 6	;RP1=0, select bank0
  2209  00D6  1303               	movwf	(Lcd_Write_String@modo)
  2210  00D7  00A3               	movlw	0
  2211  00D8  3000               	movwf	((Lcd_Write_String@modo))+1
  2212  00D9  00A4               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  2213  00DA  3099               	fcall	_Lcd_Write_String
  2214  00DB  120A  118A  26BE  120A  118A  	line	156
  2215                           ;mainS1proyect.c: 156:         Presiona:
  2216                           	
  2217                           l148:	
  2218  00E0                     	line	157
  2219                           ;mainS1proyect.c: 157:         Key = switch_press_scan();
  2220                           	fcall	_switch_press_scan
  2221  00E0  120A  118A  2762  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2222  00E5  1283               	bcf	status, 6	;RP1=0, select bank0
  2223  00E6  1303               	movwf	(??_main+0)+0
  2224  00E7  00A8               	movf	(??_main+0)+0,w
  2225  00E8  0828               	movwf	(main@Key)
  2226  00E9  00B1               	line	159
  2227                           	
  2228                           l2423:	
  2229  00EA                     ;mainS1proyect.c: 159:         if (Key == 35){
  2230                           		movlw	35
  2231  00EA  3023               	xorwf	((main@Key)),w
  2232  00EB  0631               	btfss	status,2
  2233  00EC  1D03               	goto	u1531
  2234  00ED  28EF               	goto	u1530
  2235  00EE  28F0               u1531:
  2236  00EF                     	goto	l148
  2237  00EF  28E0               u1530:
  2238  00F0                     	line	160
  2239                           ;mainS1proyect.c: 160:             Intentelo:
  2240                           	
  2241                           l150:	
  2242  00F0                     	line	162
  2243                           ;mainS1proyect.c: 162:             contraAct = 1;
  2244                           	bcf	status, 5	;RP0=0, select bank0
  2245  00F0  1283               	bcf	status, 6	;RP1=0, select bank0
  2246  00F1  1303               	clrf	(_contraAct)
  2247  00F2  01BE               	incf	(_contraAct),f
  2248  00F3  0ABE               	line	163
  2249                           	
  2250                           l2425:	
  2251  00F4                     ;mainS1proyect.c: 163:             cont = 0;
  2252                           	clrf	(_cont)
  2253  00F4  01BD               	line	164
  2254                           	
  2255                           l2427:	
  2256  00F5                     ;mainS1proyect.c: 164:             Lcd_Clear_8bits();
  2257                           	fcall	_Lcd_Clear_8bits
  2258  00F5  120A  118A  27AD  120A  118A  	line	165
  2259                           	
  2260                           l2429:	
  2261  00FA                     ;mainS1proyect.c: 165:             Lcd_Set_Cursor_8bits(1,1);
  2262                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2263  00FA  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2264  00FB  0AF5               	movlw	low(01h)
  2265  00FC  3001               	fcall	_Lcd_Set_Cursor_8bits
  2266  00FD  120A  118A  2710  120A  118A  	line	166
  2267                           	
  2268                           l2431:	
  2269  0102                     ;mainS1proyect.c: 166:             Lcd_Write_String("Ingrese clave:",8);
  2270                           	movlw	08h
  2271  0102  3008               	bcf	status, 5	;RP0=0, select bank0
  2272  0103  1283               	bcf	status, 6	;RP1=0, select bank0
  2273  0104  1303               	movwf	(Lcd_Write_String@modo)
  2274  0105  00A3               	movlw	0
  2275  0106  3000               	movwf	((Lcd_Write_String@modo))+1
  2276  0107  00A4               	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  2277  0108  3075               	fcall	_Lcd_Write_String
  2278  0109  120A  118A  26BE  120A  118A  	goto	l2433
  2279  010E  290F               	line	168
  2280                           ;mainS1proyect.c: 168:             IngresarC:
  2281                           	
  2282                           l151:	
  2283  010F                     	line	170
  2284                           	
  2285                           l2433:	
  2286  010F                     ;mainS1proyect.c: 170:             Key = switch_press_scan();
  2287                           	fcall	_switch_press_scan
  2288  010F  120A  118A  2762  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2289  0114  1283               	bcf	status, 6	;RP1=0, select bank0
  2290  0115  1303               	movwf	(??_main+0)+0
  2291  0116  00A8               	movf	(??_main+0)+0,w
  2292  0117  0828               	movwf	(main@Key)
  2293  0118  00B1               	line	171
  2294                           	
  2295                           l2435:	
  2296  0119                     ;mainS1proyect.c: 171:             Lcd_Set_Cursor_8bits(2,cont + 1);
  2297                           	movf	(_cont),w
  2298  0119  083D               	addlw	01h
  2299  011A  3E01               	movwf	(??_main+0)+0
  2300  011B  00A8               	movf	(??_main+0)+0,w
  2301  011C  0828               	movwf	(Lcd_Set_Cursor_8bits@x)
  2302  011D  00F5               	movlw	low(02h)
  2303  011E  3002               	fcall	_Lcd_Set_Cursor_8bits
  2304  011F  120A  118A  2710  120A  118A  	line	172
  2305                           	
  2306                           l2437:	
  2307  0124                     ;mainS1proyect.c: 172:             Lcd_Write_Char(Key,8);
  2308                           	movlw	08h
  2309  0124  3008               	movwf	(Lcd_Write_Char@modo)
  2310  0125  00F4               	movlw	0
  2311  0126  3000               	movwf	((Lcd_Write_Char@modo))+1
  2312  0127  00F5               	bcf	status, 5	;RP0=0, select bank0
  2313  0128  1283               	bcf	status, 6	;RP1=0, select bank0
  2314  0129  1303               	movf	(main@Key),w
  2315  012A  0831               	fcall	_Lcd_Write_Char
  2316  012B  120A  118A  2621  120A  118A  	line	173
  2317                           	
  2318                           l2439:	
  2319  0130                     ;mainS1proyect.c: 173:             cont ++;
  2320                           	movlw	low(01h)
  2321  0130  3001               	bcf	status, 5	;RP0=0, select bank0
  2322  0131  1283               	bcf	status, 6	;RP1=0, select bank0
  2323  0132  1303               	movwf	(??_main+0)+0
  2324  0133  00A8               	movf	(??_main+0)+0,w
  2325  0134  0828               	addwf	(_cont),f
  2326  0135  07BD               	line	175
  2327                           	
  2328                           l2441:	
  2329  0136                     ;mainS1proyect.c: 175:             if (Key == 42){
  2330                           		movlw	42
  2331  0136  302A               	xorwf	((main@Key)),w
  2332  0137  0631               	btfss	status,2
  2333  0138  1D03               	goto	u1541
  2334  0139  293B               	goto	u1540
  2335  013A  293C               u1541:
  2336  013B                     	goto	l2445
  2337  013B  293E               u1540:
  2338  013C                     	goto	l150
  2339  013C  28F0               	line	176
  2340                           	
  2341                           l2443:	
  2342  013D                     ;mainS1proyect.c: 176:                 goto Intentelo;
  2343                           	goto	l150
  2344  013D  28F0               	line	177
  2345                           ;mainS1proyect.c: 177:             }
  2346                           	
  2347                           l152:	
  2348  013E                     	line	179
  2349                           	
  2350                           l2445:	
  2351  013E                     ;mainS1proyect.c: 179:             compara[cont - 1] = Key;
  2352                           	movf	(main@Key),w
  2353  013E  0831               	movwf	(??_main+0)+0
  2354  013F  00A8               	movf	(_cont),w
  2355  0140  083D               	addlw	0FFh
  2356  0141  3EFF               	addlw	low(_compara|((0x0)<<8))&0ffh
  2357  0142  3E32               	movwf	fsr0
  2358  0143  0084               	movf	(??_main+0)+0,w
  2359  0144  0828               	bcf	status, 7	;select IRP bank0
  2360  0145  1383               	movwf	indf
  2361  0146  0080               	line	180
  2362                           	
  2363                           l2447:	
  2364  0147                     ;mainS1proyect.c: 180:             if (cont == 5){
  2365                           		movlw	5
  2366  0147  3005               	xorwf	((_cont)),w
  2367  0148  063D               	btfss	status,2
  2368  0149  1D03               	goto	u1551
  2369  014A  294C               	goto	u1550
  2370  014B  294D               u1551:
  2371  014C                     	goto	l2473
  2372  014C  29E0               u1550:
  2373  014D                     	line	181
  2374                           	
  2375                           l2449:	
  2376  014D                     ;mainS1proyect.c: 181:                 _delay((unsigned long)((1000)*(500000/4000.0)));

  2377                           	opt asmopt_push
  2378                           opt asmopt_off
  2379                           movlw	163
  2380  014D  30A3               	bcf	status, 5	;RP0=0, select bank0
  2381  014E  1283               	bcf	status, 6	;RP1=0, select bank0
  2382  014F  1303               movwf	((??_main+0)+0+1),f
  2383  0150  00A9               	movlw	84
  2384  0151  3054               movwf	((??_main+0)+0),f
  2385  0152  00A8               	u1677:
  2386  0153                     decfsz	((??_main+0)+0),f
  2387  0153  0BA8               	goto	u1677
  2388  0154  2953               	decfsz	((??_main+0)+0+1),f
  2389  0155  0BA9               	goto	u1677
  2390  0156  2953               	nop
  2391  0157  0000               opt asmopt_pop
  2392                           
  2393                           	line	182
  2394                           	
  2395                           l2451:	
  2396  0158                     ;mainS1proyect.c: 182:                 for (int i = 0; i < 5; i++) {
  2397                           	bcf	status, 5	;RP0=0, select bank0
  2398  0158  1283               	bcf	status, 6	;RP1=0, select bank0
  2399  0159  1303               	clrf	(main@i)
  2400  015A  01AF               	clrf	(main@i+1)
  2401  015B  01B0               	
  2402                           l2453:	
  2403  015C                     	movf	(main@i+1),w
  2404  015C  0830               	xorlw	80h
  2405  015D  3A80               	movwf	btemp+1
  2406  015E  00FF               	movlw	(0)^80h
  2407  015F  3080               	subwf	btemp+1,w
  2408  0160  027F               	skipz
  2409  0161  1D03               	goto	u1565
  2410  0162  2965               	movlw	05h
  2411  0163  3005               	subwf	(main@i),w
  2412  0164  022F               u1565:
  2413  0165                     
  2414                           	skipc
  2415  0165  1C03               	goto	u1561
  2416  0166  2968               	goto	u1560
  2417  0167  2969               u1561:
  2418  0168                     	goto	l2457
  2419  0168  296B               u1560:
  2420  0169                     	goto	l2477
  2421  0169  29EC               	
  2422                           l2455:	
  2423  016A                     	goto	l2477
  2424  016A  29EC               	
  2425                           l154:	
  2426  016B                     	line	184
  2427                           	
  2428                           l2457:	
  2429  016B                     ;mainS1proyect.c: 184:                     int valor1 = contrasena[i], valor2 = compara[
                                 i];
  2430                           	bcf	status, 5	;RP0=0, select bank0
  2431  016B  1283               	bcf	status, 6	;RP1=0, select bank0
  2432  016C  1303               	movf	(main@i),w
  2433  016D  082F               	addlw	low(_contrasena|((0x0)<<8))&0ffh
  2434  016E  3E3F               	movwf	fsr0
  2435  016F  0084               	bcf	status, 7	;select IRP bank0
  2436  0170  1383               	movf	indf,w
  2437  0171  0800               	movwf	(??_main+0)+0
  2438  0172  00A8               	clrf	(??_main+0)+0+1
  2439  0173  01A9               	movf	0+(??_main+0)+0,w
  2440  0174  0828               	movwf	(main@valor1)
  2441  0175  00AB               	movf	1+(??_main+0)+0,w
  2442  0176  0829               	movwf	(main@valor1+1)
  2443  0177  00AC               	movf	(main@i),w
  2444  0178  082F               	addlw	low(_compara|((0x0)<<8))&0ffh
  2445  0179  3E32               	movwf	fsr0
  2446  017A  0084               	movf	indf,w
  2447  017B  0800               	movwf	(??_main+0)+0
  2448  017C  00A8               	clrf	(??_main+0)+0+1
  2449  017D  01A9               	movf	0+(??_main+0)+0,w
  2450  017E  0828               	movwf	(main@valor2)
  2451  017F  00AD               	movf	1+(??_main+0)+0,w
  2452  0180  0829               	movwf	(main@valor2+1)
  2453  0181  00AE               	line	187
  2454                           	
  2455                           l2459:	
  2456  0182                     ;mainS1proyect.c: 187:                     if (valor1 != valor2) {
  2457                           	movf	(main@valor2+1),w
  2458  0182  082E               	xorwf	(main@valor1+1),w
  2459  0183  062C               	skipz
  2460  0184  1D03               	goto	u1575
  2461  0185  2988               	movf	(main@valor2),w
  2462  0186  082D               	xorwf	(main@valor1),w
  2463  0187  062B               u1575:
  2464  0188                     
  2465                           	skipnz
  2466  0188  1903               	goto	u1571
  2467  0189  298B               	goto	u1570
  2468  018A  298C               u1571:
  2469  018B                     	goto	l2469
  2470  018B  29C9               u1570:
  2471  018C                     	line	188
  2472                           	
  2473                           l2461:	
  2474  018C                     ;mainS1proyect.c: 188:                         Lcd_Clear_8bits();
  2475                           	fcall	_Lcd_Clear_8bits
  2476  018C  120A  118A  27AD  120A  118A  	line	189
  2477                           ;mainS1proyect.c: 189:                         Lcd_Set_Cursor_8bits(1,1);
  2478                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2479  0191  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2480  0192  0AF5               	movlw	low(01h)
  2481  0193  3001               	fcall	_Lcd_Set_Cursor_8bits
  2482  0194  120A  118A  2710  120A  118A  	line	190
  2483                           	
  2484                           l2463:	
  2485  0199                     ;mainS1proyect.c: 190:                         Lcd_Write_String("Contrasena mala",8);
  2486                           	movlw	08h
  2487  0199  3008               	bcf	status, 5	;RP0=0, select bank0
  2488  019A  1283               	bcf	status, 6	;RP1=0, select bank0
  2489  019B  1303               	movwf	(Lcd_Write_String@modo)
  2490  019C  00A3               	movlw	0
  2491  019D  3000               	movwf	((Lcd_Write_String@modo))+1
  2492  019E  00A4               	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  2493  019F  3045               	fcall	_Lcd_Write_String
  2494  01A0  120A  118A  26BE  120A  118A  	line	192
  2495                           	
  2496                           l2465:	
  2497  01A5                     ;mainS1proyect.c: 192:                         Lcd_Set_Cursor_8bits(2,1);
  2498                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2499  01A5  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2500  01A6  0AF5               	movlw	low(02h)
  2501  01A7  3002               	fcall	_Lcd_Set_Cursor_8bits
  2502  01A8  120A  118A  2710  120A  118A  	line	193
  2503                           ;mainS1proyect.c: 193:                         Lcd_Write_String("intentelo",8);
  2504                           	movlw	08h
  2505  01AD  3008               	bcf	status, 5	;RP0=0, select bank0
  2506  01AE  1283               	bcf	status, 6	;RP1=0, select bank0
  2507  01AF  1303               	movwf	(Lcd_Write_String@modo)
  2508  01B0  00A3               	movlw	0
  2509  01B1  3000               	movwf	((Lcd_Write_String@modo))+1
  2510  01B2  00A4               	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  2511  01B3  308F               	fcall	_Lcd_Write_String
  2512  01B4  120A  118A  26BE  120A  118A  	line	194
  2513                           	
  2514                           l2467:	
  2515  01B9                     ;mainS1proyect.c: 194:                         _delay((unsigned long)((3000)*(500000/400
                                 0.0)));
  2516                           	opt asmopt_push
  2517                           opt asmopt_off
  2518                           movlw  2
  2519  01B9  3002               	bcf	status, 5	;RP0=0, select bank0
  2520  01BA  1283               	bcf	status, 6	;RP1=0, select bank0
  2521  01BB  1303               movwf	((??_main+0)+0+2),f
  2522  01BC  00AA               movlw	231
  2523  01BD  30E7               movwf	((??_main+0)+0+1),f
  2524  01BE  00A9               	movlw	255
  2525  01BF  30FF               movwf	((??_main+0)+0),f
  2526  01C0  00A8               	u1687:
  2527  01C1                     decfsz	((??_main+0)+0),f
  2528  01C1  0BA8               	goto	u1687
  2529  01C2  29C1               	decfsz	((??_main+0)+0+1),f
  2530  01C3  0BA9               	goto	u1687
  2531  01C4  29C1               	decfsz	((??_main+0)+0+2),f
  2532  01C5  0BAA               	goto	u1687
  2533  01C6  29C1               	nop2
  2534  01C7  29C8               opt asmopt_pop
  2535                           
  2536                           	line	195
  2537                           ;mainS1proyect.c: 195:                         goto Intentelo;
  2538                           	goto	l150
  2539  01C8  28F0               	line	197
  2540                           ;mainS1proyect.c: 197:                     }
  2541                           	
  2542                           l156:	
  2543  01C9                     	line	198
  2544                           	
  2545                           l2469:	
  2546  01C9                     ;mainS1proyect.c: 198:                 }
  2547                           	movlw	01h
  2548  01C9  3001               	bcf	status, 5	;RP0=0, select bank0
  2549  01CA  1283               	bcf	status, 6	;RP1=0, select bank0
  2550  01CB  1303               	addwf	(main@i),f
  2551  01CC  07AF               	skipnc
  2552  01CD  1803               	incf	(main@i+1),f
  2553  01CE  0AB0               	movlw	0
  2554  01CF  3000               	addwf	(main@i+1),f
  2555  01D0  07B0               	
  2556                           l2471:	
  2557  01D1                     	movf	(main@i+1),w
  2558  01D1  0830               	xorlw	80h
  2559  01D2  3A80               	movwf	btemp+1
  2560  01D3  00FF               	movlw	(0)^80h
  2561  01D4  3080               	subwf	btemp+1,w
  2562  01D5  027F               	skipz
  2563  01D6  1D03               	goto	u1585
  2564  01D7  29DA               	movlw	05h
  2565  01D8  3005               	subwf	(main@i),w
  2566  01D9  022F               u1585:
  2567  01DA                     
  2568                           	skipc
  2569  01DA  1C03               	goto	u1581
  2570  01DB  29DD               	goto	u1580
  2571  01DC  29DE               u1581:
  2572  01DD                     	goto	l2457
  2573  01DD  296B               u1580:
  2574  01DE                     	goto	l2477
  2575  01DE  29EC               	
  2576                           l155:	
  2577  01DF                     	line	199
  2578                           ;mainS1proyect.c: 199:                 goto Bueno;
  2579                           	goto	l2477
  2580  01DF  29EC               	line	201
  2581                           ;mainS1proyect.c: 201:             }
  2582                           	
  2583                           l153:	
  2584  01E0                     	line	205
  2585                           	
  2586                           l2473:	
  2587  01E0                     ;mainS1proyect.c: 205:             if (contraAct == 1){
  2588                           	bcf	status, 5	;RP0=0, select bank0
  2589  01E0  1283               	bcf	status, 6	;RP1=0, select bank0
  2590  01E1  1303               		decf	((_contraAct)),w
  2591  01E2  033E               	btfss	status,2
  2592  01E3  1D03               	goto	u1591
  2593  01E4  29E6               	goto	u1590
  2594  01E5  29E7               u1591:
  2595  01E6                     	goto	l2477
  2596  01E6  29EC               u1590:
  2597  01E7                     	goto	l2433
  2598  01E7  290F               	line	206
  2599                           	
  2600                           l2475:	
  2601  01E8                     ;mainS1proyect.c: 206:                 goto IngresarC;
  2602                           	goto	l2433
  2603  01E8  290F               	line	207
  2604                           ;mainS1proyect.c: 207:             }
  2605                           	
  2606                           l158:	
  2607  01E9                     	line	209
  2608                           ;mainS1proyect.c: 209:         } else {
  2609                           	goto	l2477
  2610  01E9  29EC               	
  2611                           l149:	
  2612  01EA                     	line	210
  2613                           ;mainS1proyect.c: 210:             goto Presiona;
  2614                           	goto	l148
  2615  01EA  28E0               	line	211
  2616                           ;mainS1proyect.c: 211:         }
  2617                           	
  2618                           l159:	
  2619  01EB                     	goto	l2477
  2620  01EB  29EC               	line	213
  2621                           ;mainS1proyect.c: 213:         Bueno:
  2622                           	
  2623                           l157:	
  2624  01EC                     	line	215
  2625                           	
  2626                           l2477:	
  2627  01EC                     ;mainS1proyect.c: 215:         Lcd_Clear_8bits();
  2628                           	fcall	_Lcd_Clear_8bits
  2629  01EC  120A  118A  27AD  120A  118A  	line	216
  2630                           ;mainS1proyect.c: 216:         Lcd_Set_Cursor_8bits(1,1);
  2631                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2632  01F1  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2633  01F2  0AF5               	movlw	low(01h)
  2634  01F3  3001               	fcall	_Lcd_Set_Cursor_8bits
  2635  01F4  120A  118A  2710  120A  118A  	line	217
  2636                           	
  2637                           l2479:	
  2638  01F9                     ;mainS1proyect.c: 217:         Lcd_Write_String("Acceso brindado,",8);
  2639                           	movlw	08h
  2640  01F9  3008               	bcf	status, 5	;RP0=0, select bank0
  2641  01FA  1283               	bcf	status, 6	;RP1=0, select bank0
  2642  01FB  1303               	movwf	(Lcd_Write_String@modo)
  2643  01FC  00A3               	movlw	0
  2644  01FD  3000               	movwf	((Lcd_Write_String@modo))+1
  2645  01FE  00A4               	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  2646  01FF  3001               	fcall	_Lcd_Write_String
  2647  0200  120A  118A  26BE  120A  118A  	line	218
  2648                           	
  2649                           l2481:	
  2650  0205                     ;mainS1proyect.c: 218:         Lcd_Set_Cursor_8bits(2,1);
  2651                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2652  0205  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2653  0206  0AF5               	movlw	low(02h)
  2654  0207  3002               	fcall	_Lcd_Set_Cursor_8bits
  2655  0208  120A  118A  2710  120A  118A  	line	219
  2656                           ;mainS1proyect.c: 219:         Lcd_Write_String("Introduzca llave",8);
  2657                           	movlw	08h
  2658  020D  3008               	bcf	status, 5	;RP0=0, select bank0
  2659  020E  1283               	bcf	status, 6	;RP1=0, select bank0
  2660  020F  1303               	movwf	(Lcd_Write_String@modo)
  2661  0210  00A3               	movlw	0
  2662  0211  3000               	movwf	((Lcd_Write_String@modo))+1
  2663  0212  00A4               	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  2664  0213  3034               	fcall	_Lcd_Write_String
  2665  0214  120A  118A  26BE  120A  118A  	line	221
  2666                           ;mainS1proyect.c: 221:         while (PORTEbits.RE2 == 0){
  2667                           	goto	l160
  2668  0219  2A2C               	
  2669                           l161:	
  2670  021A                     	line	222
  2671                           	
  2672                           l2483:	
  2673  021A                     ;mainS1proyect.c: 222:             Key = keypad_scanner();
  2674                           	fcall	_keypad_scanner
  2675  021A  120A  118A  2283  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2676  021F  1283               	bcf	status, 6	;RP1=0, select bank0
  2677  0220  1303               	movwf	(??_main+0)+0
  2678  0221  00A8               	movf	(??_main+0)+0,w
  2679  0222  0828               	movwf	(main@Key)
  2680  0223  00B1               	line	223
  2681                           	
  2682                           l2485:	
  2683  0224                     ;mainS1proyect.c: 223:             if (Key == 42){
  2684                           		movlw	42
  2685  0224  302A               	xorwf	((main@Key)),w
  2686  0225  0631               	btfss	status,2
  2687  0226  1D03               	goto	u1601
  2688  0227  2A29               	goto	u1600
  2689  0228  2A2A               u1601:
  2690  0229                     	goto	l160
  2691  0229  2A2C               u1600:
  2692  022A                     	goto	l150
  2693  022A  28F0               	line	224
  2694                           	
  2695                           l2487:	
  2696  022B                     ;mainS1proyect.c: 224:                 goto Intentelo;
  2697                           	goto	l150
  2698  022B  28F0               	line	225
  2699                           ;mainS1proyect.c: 225:             }
  2700                           	
  2701                           l162:	
  2702  022C                     	line	226
  2703                           ;mainS1proyect.c: 226:         }
  2704                           	
  2705                           l160:	
  2706  022C                     	line	221
  2707                           ;mainS1proyect.c: 221:         while (PORTEbits.RE2 == 0){
  2708                           	bcf	status, 5	;RP0=0, select bank0
  2709  022C  1283               	bcf	status, 6	;RP1=0, select bank0
  2710  022D  1303               	btfss	(9),2	;volatile
  2711  022E  1D09               	goto	u1611
  2712  022F  2A31               	goto	u1610
  2713  0230  2A32               u1611:
  2714  0231                     	goto	l2483
  2715  0231  2A1A               u1610:
  2716  0232                     	goto	l2489
  2717  0232  2A33               	
  2718                           l163:	
  2719  0233                     	line	227
  2720                           	
  2721                           l2489:	
  2722  0233                     ;mainS1proyect.c: 227:         Lcd_Clear_8bits();
  2723                           	fcall	_Lcd_Clear_8bits
  2724  0233  120A  118A  27AD  120A  118A  	line	228
  2725                           ;mainS1proyect.c: 228:         Lcd_Set_Cursor_8bits(1,1);
  2726                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2727  0238  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2728  0239  0AF5               	movlw	low(01h)
  2729  023A  3001               	fcall	_Lcd_Set_Cursor_8bits
  2730  023B  120A  118A  2710  120A  118A  	line	229
  2731                           	
  2732                           l2491:	
  2733  0240                     ;mainS1proyect.c: 229:         Lcd_Write_String("Abriendo puerta",8);
  2734                           	movlw	08h
  2735  0240  3008               	bcf	status, 5	;RP0=0, select bank0
  2736  0241  1283               	bcf	status, 6	;RP1=0, select bank0
  2737  0242  1303               	movwf	(Lcd_Write_String@modo)
  2738  0243  00A3               	movlw	0
  2739  0244  3000               	movwf	((Lcd_Write_String@modo))+1
  2740  0245  00A4               	movlw	(low((((STR_10)-__stringbase)|8000h)))&0ffh
  2741  0246  3065               	fcall	_Lcd_Write_String
  2742  0247  120A  118A  26BE  120A  118A  	line	230
  2743                           	
  2744                           l2493:	
  2745  024C                     ;mainS1proyect.c: 230:         Lcd_Set_Cursor_8bits(2,1);
  2746                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2747  024C  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2748  024D  0AF5               	movlw	low(02h)
  2749  024E  3002               	fcall	_Lcd_Set_Cursor_8bits
  2750  024F  120A  118A  2710  120A  118A  	line	231
  2751                           ;mainS1proyect.c: 231:         Lcd_Write_String("Bienvenido",8);
  2752                           	movlw	08h
  2753  0254  3008               	bcf	status, 5	;RP0=0, select bank0
  2754  0255  1283               	bcf	status, 6	;RP1=0, select bank0
  2755  0256  1303               	movwf	(Lcd_Write_String@modo)
  2756  0257  00A3               	movlw	0
  2757  0258  3000               	movwf	((Lcd_Write_String@modo))+1
  2758  0259  00A4               	movlw	(low((((STR_11)-__stringbase)|8000h)))&0ffh
  2759  025A  3084               	fcall	_Lcd_Write_String
  2760  025B  120A  118A  26BE  120A  118A  	line	233
  2761                           	
  2762                           l2495:	
  2763  0260                     ;mainS1proyect.c: 233:         CCPR1L = 15;
  2764                           	movlw	low(0Fh)
  2765  0260  300F               	bcf	status, 5	;RP0=0, select bank0
  2766  0261  1283               	bcf	status, 6	;RP1=0, select bank0
  2767  0262  1303               	movwf	(21)	;volatile
  2768  0263  0095               	line	234
  2769                           	
  2770                           l2497:	
  2771  0264                     ;mainS1proyect.c: 234:         Abierto = 1;
  2772                           	clrf	(_Abierto)
  2773  0264  01B9               	incf	(_Abierto),f
  2774  0265  0AB9               	line	236
  2775                           	
  2776                           l2499:	
  2777  0266                     ;mainS1proyect.c: 236:         _delay((unsigned long)((5000)*(500000/4000.0)));
  2778                           	opt asmopt_push
  2779                           opt asmopt_off
  2780                           movlw  4
  2781  0266  3004               	bcf	status, 5	;RP0=0, select bank0
  2782  0267  1283               	bcf	status, 6	;RP1=0, select bank0
  2783  0268  1303               movwf	((??_main+0)+0+2),f
  2784  0269  00AA               movlw	44
  2785  026A  302C               movwf	((??_main+0)+0+1),f
  2786  026B  00A9               	movlw	171
  2787  026C  30AB               movwf	((??_main+0)+0),f
  2788  026D  00A8               	u1697:
  2789  026E                     decfsz	((??_main+0)+0),f
  2790  026E  0BA8               	goto	u1697
  2791  026F  2A6E               	decfsz	((??_main+0)+0+1),f
  2792  0270  0BA9               	goto	u1697
  2793  0271  2A6E               	decfsz	((??_main+0)+0+2),f
  2794  0272  0BAA               	goto	u1697
  2795  0273  2A6E               opt asmopt_pop
  2796                           
  2797                           	line	237
  2798                           	
  2799                           l2501:	
  2800  0274                     ;mainS1proyect.c: 237:         Lcd_Clear_8bits();
  2801                           	fcall	_Lcd_Clear_8bits
  2802  0274  120A  118A  27AD  120A  118A  	line	238
  2803                           	
  2804                           l2503:	
  2805  0279                     ;mainS1proyect.c: 238:         CCPR1L = 6;
  2806                           	movlw	low(06h)
  2807  0279  3006               	bcf	status, 5	;RP0=0, select bank0
  2808  027A  1283               	bcf	status, 6	;RP1=0, select bank0
  2809  027B  1303               	movwf	(21)	;volatile
  2810  027C  0095               	line	239
  2811                           	
  2812                           l2505:	
  2813  027D                     ;mainS1proyect.c: 239:         Abierto = 0;
  2814                           	clrf	(_Abierto)
  2815  027D  01B9               	line	240
  2816                           ;mainS1proyect.c: 240:         goto Inicio;
  2817                           	goto	l2417
  2818  027E  28B8               	line	241
  2819                           ;mainS1proyect.c: 241:     }
  2820                           	
  2821                           l164:	
  2822  027F                     	goto	l2417
  2823  027F  28B8               	
  2824                           l165:	
  2825  0280                     	line	244
  2826                           ;mainS1proyect.c: 243:     return;
  2827                           	
  2828                           l166:	
  2829  0280                     	global	start
  2830                           	ljmp	start
  2831  0280  120A  118A  280C   	opt stack 0
  2832                           GLOBAL	__end_of_main
  2833                           	__end_of_main:
  2834  0283                     	signat	_main,89
  2835                           	global	_switch_press_scan
  2836                           
  2837 ;; *************** function _switch_press_scan *****************
  2838 ;; Defined at:
  2839 ;;		line 90 in file "KEYPAD.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;		None
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  key             1    6[COMMON] unsigned char 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      unsigned char 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0, pclath, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2853 ;;      Params:         0       0       0       0       0
  2854 ;;      Locals:         1       0       0       0       0
  2855 ;;      Temps:          1       0       0       0       0
  2856 ;;      Totals:         2       0       0       0       0
  2857 ;;Total ram usage:        2 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    2
  2860 ;; This function calls:
  2861 ;;		_keypad_scanner
  2862 ;; This function is called by:
  2863 ;;		_main
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2867                           	file	"KEYPAD.c"
  2868                           	line	90
  2869                           global __ptext1
  2870                           __ptext1:	;psect for function _switch_press_scan
  2871  0762                     psect	text1
  2872                           	file	"KEYPAD.c"
  2873                           	line	90
  2874                           	global	__size_of_switch_press_scan
  2875                           	__size_of_switch_press_scan	equ	__end_of_switch_press_scan-_switch_press_scan
  2876  0018                     	
  2877                           _switch_press_scan:	
  2878  0762                     ;incstack = 0
  2879                           	opt	stack 5
  2880                           ; Regs used in _switch_press_scan: [wreg+status,2+status,0+pclath+cstack]
  2881                           	line	91
  2882                           	
  2883                           l2009:	
  2884  0762                     ;KEYPAD.c: 91:             char key = 'n';
  2885                           	movlw	low(06Eh)
  2886  0762  306E               	movwf	(??_switch_press_scan+0)+0
  2887  0763  00F5               	movf	(??_switch_press_scan+0)+0,w
  2888  0764  0875               	movwf	(switch_press_scan@key)
  2889  0765  00F6               	line	92
  2890                           ;KEYPAD.c: 92:             while(key=='n')
  2891                           	goto	l2013
  2892  0766  2F70               	
  2893                           l414:	
  2894  0767                     	line	93
  2895                           	
  2896                           l2011:	
  2897  0767                     ;KEYPAD.c: 93:             key = keypad_scanner();
  2898                           	fcall	_keypad_scanner
  2899  0767  120A  118A  2283  120A  118A  	movwf	(??_switch_press_scan+0)+0
  2900  076C  00F5               	movf	(??_switch_press_scan+0)+0,w
  2901  076D  0875               	movwf	(switch_press_scan@key)
  2902  076E  00F6               	goto	l2013
  2903  076F  2F70               	
  2904                           l413:	
  2905  0770                     	line	92
  2906                           	
  2907                           l2013:	
  2908  0770                     ;KEYPAD.c: 92:             while(key=='n')
  2909                           		movlw	110
  2910  0770  306E               	xorwf	((switch_press_scan@key)),w
  2911  0771  0676               	btfsc	status,2
  2912  0772  1903               	goto	u1171
  2913  0773  2F75               	goto	u1170
  2914  0774  2F76               u1171:
  2915  0775                     	goto	l2011
  2916  0775  2F67               u1170:
  2917  0776                     	goto	l2015
  2918  0776  2F77               	
  2919                           l415:	
  2920  0777                     	line	94
  2921                           	
  2922                           l2015:	
  2923  0777                     ;KEYPAD.c: 94:             return key;
  2924                           	movf	(switch_press_scan@key),w
  2925  0777  0876               	goto	l416
  2926  0778  2F79               	
  2927                           l2017:	
  2928  0779                     	line	95
  2929                           	
  2930                           l416:	
  2931  0779                     	return
  2932  0779  0008               	opt stack 0
  2933                           GLOBAL	__end_of_switch_press_scan
  2934                           	__end_of_switch_press_scan:
  2935  077A                     	signat	_switch_press_scan,89
  2936                           	global	_keypad_scanner
  2937                           
  2938 ;; *************** function _keypad_scanner *****************
  2939 ;; Defined at:
  2940 ;;		line 14 in file "KEYPAD.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      unsigned char 
  2947 ;; Registers used:
  2948 ;;		wreg
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2954 ;;      Params:         0       0       0       0       0
  2955 ;;      Locals:         0       0       0       0       0
  2956 ;;      Temps:          2       0       0       0       0
  2957 ;;      Totals:         2       0       0       0       0
  2958 ;;Total ram usage:        2 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    1
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_main
  2965 ;;		_switch_press_scan
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2969                           	line	14
  2970                           global __ptext2
  2971                           __ptext2:	;psect for function _keypad_scanner
  2972  0283                     psect	text2
  2973                           	file	"KEYPAD.c"
  2974                           	line	14
  2975                           	global	__size_of_keypad_scanner
  2976                           	__size_of_keypad_scanner	equ	__end_of_keypad_scanner-_keypad_scanner
  2977  0195                     	
  2978                           _keypad_scanner:	
  2979  0283                     ;incstack = 0
  2980                           	opt	stack 5
  2981                           ; Regs used in _keypad_scanner: [wreg]
  2982                           	line	16
  2983                           	
  2984                           l1729:	
  2985  0283                     ;KEYPAD.c: 16:             RD0 = 0; RD1 = 1; RD2 = 1; RD3 = 1;
  2986                           	bcf	status, 5	;RP0=0, select bank0
  2987  0283  1283               	bcf	status, 6	;RP1=0, select bank0
  2988  0284  1303               	bcf	(64/8),(64)&7	;volatile
  2989  0285  1008               	bsf	(65/8),(65)&7	;volatile
  2990  0286  1488               	bsf	(66/8),(66)&7	;volatile
  2991  0287  1508               	bsf	(67/8),(67)&7	;volatile
  2992  0288  1588               	line	17
  2993                           ;KEYPAD.c: 17:             if (RD4 == 0) {
  2994                           	btfsc	(68/8),(68)&7	;volatile
  2995  0289  1A08               	goto	u821
  2996  028A  2A8C               	goto	u820
  2997  028B  2A8D               u821:
  2998  028C                     	goto	l346
  2999  028C  2AA1               u820:
  3000  028D                     	line	18
  3001                           	
  3002                           l1731:	
  3003  028D                     ;KEYPAD.c: 18:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3004                           	opt asmopt_push
  3005                           opt asmopt_off
  3006                           movlw	17
  3007  028D  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3008  028E  00F4               	movlw	58
  3009  028F  303A               movwf	((??_keypad_scanner+0)+0),f
  3010  0290  00F3               	u1707:
  3011  0291                     decfsz	((??_keypad_scanner+0)+0),f
  3012  0291  0BF3               	goto	u1707
  3013  0292  2A91               	decfsz	((??_keypad_scanner+0)+0+1),f
  3014  0293  0BF4               	goto	u1707
  3015  0294  2A91               	nop
  3016  0295  0000               opt asmopt_pop
  3017                           
  3018                           	line	19
  3019                           ;KEYPAD.c: 19:                 while (RD4==0);
  3020                           	goto	l347
  3021  0296  2A97               	
  3022                           l348:	
  3023  0297                     	
  3024                           l347:	
  3025  0297                     	bcf	status, 5	;RP0=0, select bank0
  3026  0297  1283               	bcf	status, 6	;RP1=0, select bank0
  3027  0298  1303               	btfss	(68/8),(68)&7	;volatile
  3028  0299  1E08               	goto	u831
  3029  029A  2A9C               	goto	u830
  3030  029B  2A9D               u831:
  3031  029C                     	goto	l347
  3032  029C  2A97               u830:
  3033  029D                     	goto	l1733
  3034  029D  2A9E               	
  3035                           l349:	
  3036  029E                     	line	20
  3037                           	
  3038                           l1733:	
  3039  029E                     ;KEYPAD.c: 20:                 return '1'; }
  3040                           	movlw	low(031h)
  3041  029E  3031               	goto	l350
  3042  029F  2C17               	
  3043                           l1735:	
  3044  02A0                     	goto	l350
  3045  02A0  2C17               	
  3046                           l346:	
  3047  02A1                     	line	21
  3048                           ;KEYPAD.c: 21:             if (RD5 == 0) {
  3049                           	btfsc	(69/8),(69)&7	;volatile
  3050  02A1  1A88               	goto	u841
  3051  02A2  2AA4               	goto	u840
  3052  02A3  2AA5               u841:
  3053  02A4                     	goto	l351
  3054  02A4  2AB9               u840:
  3055  02A5                     	line	22
  3056                           	
  3057                           l1737:	
  3058  02A5                     ;KEYPAD.c: 22:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3059                           	opt asmopt_push
  3060                           opt asmopt_off
  3061                           movlw	17
  3062  02A5  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3063  02A6  00F4               	movlw	58
  3064  02A7  303A               movwf	((??_keypad_scanner+0)+0),f
  3065  02A8  00F3               	u1717:
  3066  02A9                     decfsz	((??_keypad_scanner+0)+0),f
  3067  02A9  0BF3               	goto	u1717
  3068  02AA  2AA9               	decfsz	((??_keypad_scanner+0)+0+1),f
  3069  02AB  0BF4               	goto	u1717
  3070  02AC  2AA9               	nop
  3071  02AD  0000               opt asmopt_pop
  3072                           
  3073                           	line	23
  3074                           ;KEYPAD.c: 23:                 while (RD5==0);
  3075                           	goto	l352
  3076  02AE  2AAF               	
  3077                           l353:	
  3078  02AF                     	
  3079                           l352:	
  3080  02AF                     	bcf	status, 5	;RP0=0, select bank0
  3081  02AF  1283               	bcf	status, 6	;RP1=0, select bank0
  3082  02B0  1303               	btfss	(69/8),(69)&7	;volatile
  3083  02B1  1E88               	goto	u851
  3084  02B2  2AB4               	goto	u850
  3085  02B3  2AB5               u851:
  3086  02B4                     	goto	l352
  3087  02B4  2AAF               u850:
  3088  02B5                     	goto	l1739
  3089  02B5  2AB6               	
  3090                           l354:	
  3091  02B6                     	line	24
  3092                           	
  3093                           l1739:	
  3094  02B6                     ;KEYPAD.c: 24:                 return '2'; }
  3095                           	movlw	low(032h)
  3096  02B6  3032               	goto	l350
  3097  02B7  2C17               	
  3098                           l1741:	
  3099  02B8                     	goto	l350
  3100  02B8  2C17               	
  3101                           l351:	
  3102  02B9                     	line	25
  3103                           ;KEYPAD.c: 25:             if (RD6 == 0) {
  3104                           	btfsc	(70/8),(70)&7	;volatile
  3105  02B9  1B08               	goto	u861
  3106  02BA  2ABC               	goto	u860
  3107  02BB  2ABD               u861:
  3108  02BC                     	goto	l355
  3109  02BC  2AD1               u860:
  3110  02BD                     	line	26
  3111                           	
  3112                           l1743:	
  3113  02BD                     ;KEYPAD.c: 26:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3114                           	opt asmopt_push
  3115                           opt asmopt_off
  3116                           movlw	17
  3117  02BD  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3118  02BE  00F4               	movlw	58
  3119  02BF  303A               movwf	((??_keypad_scanner+0)+0),f
  3120  02C0  00F3               	u1727:
  3121  02C1                     decfsz	((??_keypad_scanner+0)+0),f
  3122  02C1  0BF3               	goto	u1727
  3123  02C2  2AC1               	decfsz	((??_keypad_scanner+0)+0+1),f
  3124  02C3  0BF4               	goto	u1727
  3125  02C4  2AC1               	nop
  3126  02C5  0000               opt asmopt_pop
  3127                           
  3128                           	line	27
  3129                           ;KEYPAD.c: 27:                 while (RD6==0);
  3130                           	goto	l356
  3131  02C6  2AC7               	
  3132                           l357:	
  3133  02C7                     	
  3134                           l356:	
  3135  02C7                     	bcf	status, 5	;RP0=0, select bank0
  3136  02C7  1283               	bcf	status, 6	;RP1=0, select bank0
  3137  02C8  1303               	btfss	(70/8),(70)&7	;volatile
  3138  02C9  1F08               	goto	u871
  3139  02CA  2ACC               	goto	u870
  3140  02CB  2ACD               u871:
  3141  02CC                     	goto	l356
  3142  02CC  2AC7               u870:
  3143  02CD                     	goto	l1745
  3144  02CD  2ACE               	
  3145                           l358:	
  3146  02CE                     	line	28
  3147                           	
  3148                           l1745:	
  3149  02CE                     ;KEYPAD.c: 28:                 return '3'; }
  3150                           	movlw	low(033h)
  3151  02CE  3033               	goto	l350
  3152  02CF  2C17               	
  3153                           l1747:	
  3154  02D0                     	goto	l350
  3155  02D0  2C17               	
  3156                           l355:	
  3157  02D1                     	line	29
  3158                           ;KEYPAD.c: 29:             if (RD7 == 0) {
  3159                           	btfsc	(71/8),(71)&7	;volatile
  3160  02D1  1B88               	goto	u881
  3161  02D2  2AD4               	goto	u880
  3162  02D3  2AD5               u881:
  3163  02D4                     	goto	l359
  3164  02D4  2AE9               u880:
  3165  02D5                     	line	30
  3166                           	
  3167                           l1749:	
  3168  02D5                     ;KEYPAD.c: 30:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3169                           	opt asmopt_push
  3170                           opt asmopt_off
  3171                           movlw	17
  3172  02D5  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3173  02D6  00F4               	movlw	58
  3174  02D7  303A               movwf	((??_keypad_scanner+0)+0),f
  3175  02D8  00F3               	u1737:
  3176  02D9                     decfsz	((??_keypad_scanner+0)+0),f
  3177  02D9  0BF3               	goto	u1737
  3178  02DA  2AD9               	decfsz	((??_keypad_scanner+0)+0+1),f
  3179  02DB  0BF4               	goto	u1737
  3180  02DC  2AD9               	nop
  3181  02DD  0000               opt asmopt_pop
  3182                           
  3183                           	line	31
  3184                           ;KEYPAD.c: 31:                 while (RD7==0);
  3185                           	goto	l360
  3186  02DE  2ADF               	
  3187                           l361:	
  3188  02DF                     	
  3189                           l360:	
  3190  02DF                     	bcf	status, 5	;RP0=0, select bank0
  3191  02DF  1283               	bcf	status, 6	;RP1=0, select bank0
  3192  02E0  1303               	btfss	(71/8),(71)&7	;volatile
  3193  02E1  1F88               	goto	u891
  3194  02E2  2AE4               	goto	u890
  3195  02E3  2AE5               u891:
  3196  02E4                     	goto	l360
  3197  02E4  2ADF               u890:
  3198  02E5                     	goto	l1751
  3199  02E5  2AE6               	
  3200                           l362:	
  3201  02E6                     	line	32
  3202                           	
  3203                           l1751:	
  3204  02E6                     ;KEYPAD.c: 32:                 return 'A'; }
  3205                           	movlw	low(041h)
  3206  02E6  3041               	goto	l350
  3207  02E7  2C17               	
  3208                           l1753:	
  3209  02E8                     	goto	l350
  3210  02E8  2C17               	
  3211                           l359:	
  3212  02E9                     	line	34
  3213                           ;KEYPAD.c: 34:             RD0 = 1; RD1 = 0; RD2 = 1; RD3 = 1;
  3214                           	bsf	(64/8),(64)&7	;volatile
  3215  02E9  1408               	bcf	(65/8),(65)&7	;volatile
  3216  02EA  1088               	bsf	(66/8),(66)&7	;volatile
  3217  02EB  1508               	bsf	(67/8),(67)&7	;volatile
  3218  02EC  1588               	line	35
  3219                           ;KEYPAD.c: 35:             if (RD4 == 0) {
  3220                           	btfsc	(68/8),(68)&7	;volatile
  3221  02ED  1A08               	goto	u901
  3222  02EE  2AF0               	goto	u900
  3223  02EF  2AF1               u901:
  3224  02F0                     	goto	l363
  3225  02F0  2B05               u900:
  3226  02F1                     	line	36
  3227                           	
  3228                           l1755:	
  3229  02F1                     ;KEYPAD.c: 36:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3230                           	opt asmopt_push
  3231                           opt asmopt_off
  3232                           movlw	17
  3233  02F1  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3234  02F2  00F4               	movlw	58
  3235  02F3  303A               movwf	((??_keypad_scanner+0)+0),f
  3236  02F4  00F3               	u1747:
  3237  02F5                     decfsz	((??_keypad_scanner+0)+0),f
  3238  02F5  0BF3               	goto	u1747
  3239  02F6  2AF5               	decfsz	((??_keypad_scanner+0)+0+1),f
  3240  02F7  0BF4               	goto	u1747
  3241  02F8  2AF5               	nop
  3242  02F9  0000               opt asmopt_pop
  3243                           
  3244                           	line	37
  3245                           ;KEYPAD.c: 37:                 while (RD4==0);
  3246                           	goto	l364
  3247  02FA  2AFB               	
  3248                           l365:	
  3249  02FB                     	
  3250                           l364:	
  3251  02FB                     	bcf	status, 5	;RP0=0, select bank0
  3252  02FB  1283               	bcf	status, 6	;RP1=0, select bank0
  3253  02FC  1303               	btfss	(68/8),(68)&7	;volatile
  3254  02FD  1E08               	goto	u911
  3255  02FE  2B00               	goto	u910
  3256  02FF  2B01               u911:
  3257  0300                     	goto	l364
  3258  0300  2AFB               u910:
  3259  0301                     	goto	l1757
  3260  0301  2B02               	
  3261                           l366:	
  3262  0302                     	line	38
  3263                           	
  3264                           l1757:	
  3265  0302                     ;KEYPAD.c: 38:                 return '4'; }
  3266                           	movlw	low(034h)
  3267  0302  3034               	goto	l350
  3268  0303  2C17               	
  3269                           l1759:	
  3270  0304                     	goto	l350
  3271  0304  2C17               	
  3272                           l363:	
  3273  0305                     	line	39
  3274                           ;KEYPAD.c: 39:             if (RD5 == 0) {
  3275                           	btfsc	(69/8),(69)&7	;volatile
  3276  0305  1A88               	goto	u921
  3277  0306  2B08               	goto	u920
  3278  0307  2B09               u921:
  3279  0308                     	goto	l367
  3280  0308  2B1D               u920:
  3281  0309                     	line	40
  3282                           	
  3283                           l1761:	
  3284  0309                     ;KEYPAD.c: 40:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3285                           	opt asmopt_push
  3286                           opt asmopt_off
  3287                           movlw	17
  3288  0309  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3289  030A  00F4               	movlw	58
  3290  030B  303A               movwf	((??_keypad_scanner+0)+0),f
  3291  030C  00F3               	u1757:
  3292  030D                     decfsz	((??_keypad_scanner+0)+0),f
  3293  030D  0BF3               	goto	u1757
  3294  030E  2B0D               	decfsz	((??_keypad_scanner+0)+0+1),f
  3295  030F  0BF4               	goto	u1757
  3296  0310  2B0D               	nop
  3297  0311  0000               opt asmopt_pop
  3298                           
  3299                           	line	41
  3300                           ;KEYPAD.c: 41:                 while (RD5==0);
  3301                           	goto	l368
  3302  0312  2B13               	
  3303                           l369:	
  3304  0313                     	
  3305                           l368:	
  3306  0313                     	bcf	status, 5	;RP0=0, select bank0
  3307  0313  1283               	bcf	status, 6	;RP1=0, select bank0
  3308  0314  1303               	btfss	(69/8),(69)&7	;volatile
  3309  0315  1E88               	goto	u931
  3310  0316  2B18               	goto	u930
  3311  0317  2B19               u931:
  3312  0318                     	goto	l368
  3313  0318  2B13               u930:
  3314  0319                     	goto	l1763
  3315  0319  2B1A               	
  3316                           l370:	
  3317  031A                     	line	42
  3318                           	
  3319                           l1763:	
  3320  031A                     ;KEYPAD.c: 42:                 return '5'; }
  3321                           	movlw	low(035h)
  3322  031A  3035               	goto	l350
  3323  031B  2C17               	
  3324                           l1765:	
  3325  031C                     	goto	l350
  3326  031C  2C17               	
  3327                           l367:	
  3328  031D                     	line	43
  3329                           ;KEYPAD.c: 43:             if (RD6 == 0) {
  3330                           	btfsc	(70/8),(70)&7	;volatile
  3331  031D  1B08               	goto	u941
  3332  031E  2B20               	goto	u940
  3333  031F  2B21               u941:
  3334  0320                     	goto	l371
  3335  0320  2B35               u940:
  3336  0321                     	line	44
  3337                           	
  3338                           l1767:	
  3339  0321                     ;KEYPAD.c: 44:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3340                           	opt asmopt_push
  3341                           opt asmopt_off
  3342                           movlw	17
  3343  0321  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3344  0322  00F4               	movlw	58
  3345  0323  303A               movwf	((??_keypad_scanner+0)+0),f
  3346  0324  00F3               	u1767:
  3347  0325                     decfsz	((??_keypad_scanner+0)+0),f
  3348  0325  0BF3               	goto	u1767
  3349  0326  2B25               	decfsz	((??_keypad_scanner+0)+0+1),f
  3350  0327  0BF4               	goto	u1767
  3351  0328  2B25               	nop
  3352  0329  0000               opt asmopt_pop
  3353                           
  3354                           	line	45
  3355                           ;KEYPAD.c: 45:                 while (RD6==0);
  3356                           	goto	l372
  3357  032A  2B2B               	
  3358                           l373:	
  3359  032B                     	
  3360                           l372:	
  3361  032B                     	bcf	status, 5	;RP0=0, select bank0
  3362  032B  1283               	bcf	status, 6	;RP1=0, select bank0
  3363  032C  1303               	btfss	(70/8),(70)&7	;volatile
  3364  032D  1F08               	goto	u951
  3365  032E  2B30               	goto	u950
  3366  032F  2B31               u951:
  3367  0330                     	goto	l372
  3368  0330  2B2B               u950:
  3369  0331                     	goto	l1769
  3370  0331  2B32               	
  3371                           l374:	
  3372  0332                     	line	46
  3373                           	
  3374                           l1769:	
  3375  0332                     ;KEYPAD.c: 46:                 return '6'; }
  3376                           	movlw	low(036h)
  3377  0332  3036               	goto	l350
  3378  0333  2C17               	
  3379                           l1771:	
  3380  0334                     	goto	l350
  3381  0334  2C17               	
  3382                           l371:	
  3383  0335                     	line	47
  3384                           ;KEYPAD.c: 47:             if (RD7 == 0) {
  3385                           	btfsc	(71/8),(71)&7	;volatile
  3386  0335  1B88               	goto	u961
  3387  0336  2B38               	goto	u960
  3388  0337  2B39               u961:
  3389  0338                     	goto	l375
  3390  0338  2B4D               u960:
  3391  0339                     	line	48
  3392                           	
  3393                           l1773:	
  3394  0339                     ;KEYPAD.c: 48:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3395                           	opt asmopt_push
  3396                           opt asmopt_off
  3397                           movlw	17
  3398  0339  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3399  033A  00F4               	movlw	58
  3400  033B  303A               movwf	((??_keypad_scanner+0)+0),f
  3401  033C  00F3               	u1777:
  3402  033D                     decfsz	((??_keypad_scanner+0)+0),f
  3403  033D  0BF3               	goto	u1777
  3404  033E  2B3D               	decfsz	((??_keypad_scanner+0)+0+1),f
  3405  033F  0BF4               	goto	u1777
  3406  0340  2B3D               	nop
  3407  0341  0000               opt asmopt_pop
  3408                           
  3409                           	line	49
  3410                           ;KEYPAD.c: 49:                 while (RD7==0);
  3411                           	goto	l376
  3412  0342  2B43               	
  3413                           l377:	
  3414  0343                     	
  3415                           l376:	
  3416  0343                     	bcf	status, 5	;RP0=0, select bank0
  3417  0343  1283               	bcf	status, 6	;RP1=0, select bank0
  3418  0344  1303               	btfss	(71/8),(71)&7	;volatile
  3419  0345  1F88               	goto	u971
  3420  0346  2B48               	goto	u970
  3421  0347  2B49               u971:
  3422  0348                     	goto	l376
  3423  0348  2B43               u970:
  3424  0349                     	goto	l1775
  3425  0349  2B4A               	
  3426                           l378:	
  3427  034A                     	line	50
  3428                           	
  3429                           l1775:	
  3430  034A                     ;KEYPAD.c: 50:                 return 'B'; }
  3431                           	movlw	low(042h)
  3432  034A  3042               	goto	l350
  3433  034B  2C17               	
  3434                           l1777:	
  3435  034C                     	goto	l350
  3436  034C  2C17               	
  3437                           l375:	
  3438  034D                     	line	52
  3439                           ;KEYPAD.c: 52:             RD0 = 1; RD1 = 1; RD2 = 0; RD3 = 1;
  3440                           	bsf	(64/8),(64)&7	;volatile
  3441  034D  1408               	bsf	(65/8),(65)&7	;volatile
  3442  034E  1488               	bcf	(66/8),(66)&7	;volatile
  3443  034F  1108               	bsf	(67/8),(67)&7	;volatile
  3444  0350  1588               	line	53
  3445                           ;KEYPAD.c: 53:             if (RD4 == 0) {
  3446                           	btfsc	(68/8),(68)&7	;volatile
  3447  0351  1A08               	goto	u981
  3448  0352  2B54               	goto	u980
  3449  0353  2B55               u981:
  3450  0354                     	goto	l379
  3451  0354  2B69               u980:
  3452  0355                     	line	54
  3453                           	
  3454                           l1779:	
  3455  0355                     ;KEYPAD.c: 54:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3456                           	opt asmopt_push
  3457                           opt asmopt_off
  3458                           movlw	17
  3459  0355  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3460  0356  00F4               	movlw	58
  3461  0357  303A               movwf	((??_keypad_scanner+0)+0),f
  3462  0358  00F3               	u1787:
  3463  0359                     decfsz	((??_keypad_scanner+0)+0),f
  3464  0359  0BF3               	goto	u1787
  3465  035A  2B59               	decfsz	((??_keypad_scanner+0)+0+1),f
  3466  035B  0BF4               	goto	u1787
  3467  035C  2B59               	nop
  3468  035D  0000               opt asmopt_pop
  3469                           
  3470                           	line	55
  3471                           ;KEYPAD.c: 55:                 while (RD4==0);
  3472                           	goto	l380
  3473  035E  2B5F               	
  3474                           l381:	
  3475  035F                     	
  3476                           l380:	
  3477  035F                     	bcf	status, 5	;RP0=0, select bank0
  3478  035F  1283               	bcf	status, 6	;RP1=0, select bank0
  3479  0360  1303               	btfss	(68/8),(68)&7	;volatile
  3480  0361  1E08               	goto	u991
  3481  0362  2B64               	goto	u990
  3482  0363  2B65               u991:
  3483  0364                     	goto	l380
  3484  0364  2B5F               u990:
  3485  0365                     	goto	l1781
  3486  0365  2B66               	
  3487                           l382:	
  3488  0366                     	line	56
  3489                           	
  3490                           l1781:	
  3491  0366                     ;KEYPAD.c: 56:                 return '7'; }
  3492                           	movlw	low(037h)
  3493  0366  3037               	goto	l350
  3494  0367  2C17               	
  3495                           l1783:	
  3496  0368                     	goto	l350
  3497  0368  2C17               	
  3498                           l379:	
  3499  0369                     	line	57
  3500                           ;KEYPAD.c: 57:             if (RD5 == 0) {
  3501                           	btfsc	(69/8),(69)&7	;volatile
  3502  0369  1A88               	goto	u1001
  3503  036A  2B6C               	goto	u1000
  3504  036B  2B6D               u1001:
  3505  036C                     	goto	l383
  3506  036C  2B81               u1000:
  3507  036D                     	line	58
  3508                           	
  3509                           l1785:	
  3510  036D                     ;KEYPAD.c: 58:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3511                           	opt asmopt_push
  3512                           opt asmopt_off
  3513                           movlw	17
  3514  036D  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3515  036E  00F4               	movlw	58
  3516  036F  303A               movwf	((??_keypad_scanner+0)+0),f
  3517  0370  00F3               	u1797:
  3518  0371                     decfsz	((??_keypad_scanner+0)+0),f
  3519  0371  0BF3               	goto	u1797
  3520  0372  2B71               	decfsz	((??_keypad_scanner+0)+0+1),f
  3521  0373  0BF4               	goto	u1797
  3522  0374  2B71               	nop
  3523  0375  0000               opt asmopt_pop
  3524                           
  3525                           	line	59
  3526                           ;KEYPAD.c: 59:                 while (RD5==0);
  3527                           	goto	l384
  3528  0376  2B77               	
  3529                           l385:	
  3530  0377                     	
  3531                           l384:	
  3532  0377                     	bcf	status, 5	;RP0=0, select bank0
  3533  0377  1283               	bcf	status, 6	;RP1=0, select bank0
  3534  0378  1303               	btfss	(69/8),(69)&7	;volatile
  3535  0379  1E88               	goto	u1011
  3536  037A  2B7C               	goto	u1010
  3537  037B  2B7D               u1011:
  3538  037C                     	goto	l384
  3539  037C  2B77               u1010:
  3540  037D                     	goto	l1787
  3541  037D  2B7E               	
  3542                           l386:	
  3543  037E                     	line	60
  3544                           	
  3545                           l1787:	
  3546  037E                     ;KEYPAD.c: 60:                 return '8'; }
  3547                           	movlw	low(038h)
  3548  037E  3038               	goto	l350
  3549  037F  2C17               	
  3550                           l1789:	
  3551  0380                     	goto	l350
  3552  0380  2C17               	
  3553                           l383:	
  3554  0381                     	line	61
  3555                           ;KEYPAD.c: 61:             if (RD6 == 0) {
  3556                           	btfsc	(70/8),(70)&7	;volatile
  3557  0381  1B08               	goto	u1021
  3558  0382  2B84               	goto	u1020
  3559  0383  2B85               u1021:
  3560  0384                     	goto	l387
  3561  0384  2B99               u1020:
  3562  0385                     	line	62
  3563                           	
  3564                           l1791:	
  3565  0385                     ;KEYPAD.c: 62:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3566                           	opt asmopt_push
  3567                           opt asmopt_off
  3568                           movlw	17
  3569  0385  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3570  0386  00F4               	movlw	58
  3571  0387  303A               movwf	((??_keypad_scanner+0)+0),f
  3572  0388  00F3               	u1807:
  3573  0389                     decfsz	((??_keypad_scanner+0)+0),f
  3574  0389  0BF3               	goto	u1807
  3575  038A  2B89               	decfsz	((??_keypad_scanner+0)+0+1),f
  3576  038B  0BF4               	goto	u1807
  3577  038C  2B89               	nop
  3578  038D  0000               opt asmopt_pop
  3579                           
  3580                           	line	63
  3581                           ;KEYPAD.c: 63:                 while (RD6==0);
  3582                           	goto	l388
  3583  038E  2B8F               	
  3584                           l389:	
  3585  038F                     	
  3586                           l388:	
  3587  038F                     	bcf	status, 5	;RP0=0, select bank0
  3588  038F  1283               	bcf	status, 6	;RP1=0, select bank0
  3589  0390  1303               	btfss	(70/8),(70)&7	;volatile
  3590  0391  1F08               	goto	u1031
  3591  0392  2B94               	goto	u1030
  3592  0393  2B95               u1031:
  3593  0394                     	goto	l388
  3594  0394  2B8F               u1030:
  3595  0395                     	goto	l1793
  3596  0395  2B96               	
  3597                           l390:	
  3598  0396                     	line	64
  3599                           	
  3600                           l1793:	
  3601  0396                     ;KEYPAD.c: 64:                 return '9'; }
  3602                           	movlw	low(039h)
  3603  0396  3039               	goto	l350
  3604  0397  2C17               	
  3605                           l1795:	
  3606  0398                     	goto	l350
  3607  0398  2C17               	
  3608                           l387:	
  3609  0399                     	line	65
  3610                           ;KEYPAD.c: 65:             if (RD7 == 0) {
  3611                           	btfsc	(71/8),(71)&7	;volatile
  3612  0399  1B88               	goto	u1041
  3613  039A  2B9C               	goto	u1040
  3614  039B  2B9D               u1041:
  3615  039C                     	goto	l391
  3616  039C  2BB1               u1040:
  3617  039D                     	line	66
  3618                           	
  3619                           l1797:	
  3620  039D                     ;KEYPAD.c: 66:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3621                           	opt asmopt_push
  3622                           opt asmopt_off
  3623                           movlw	17
  3624  039D  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3625  039E  00F4               	movlw	58
  3626  039F  303A               movwf	((??_keypad_scanner+0)+0),f
  3627  03A0  00F3               	u1817:
  3628  03A1                     decfsz	((??_keypad_scanner+0)+0),f
  3629  03A1  0BF3               	goto	u1817
  3630  03A2  2BA1               	decfsz	((??_keypad_scanner+0)+0+1),f
  3631  03A3  0BF4               	goto	u1817
  3632  03A4  2BA1               	nop
  3633  03A5  0000               opt asmopt_pop
  3634                           
  3635                           	line	67
  3636                           ;KEYPAD.c: 67:                 while (RD7==0);
  3637                           	goto	l392
  3638  03A6  2BA7               	
  3639                           l393:	
  3640  03A7                     	
  3641                           l392:	
  3642  03A7                     	bcf	status, 5	;RP0=0, select bank0
  3643  03A7  1283               	bcf	status, 6	;RP1=0, select bank0
  3644  03A8  1303               	btfss	(71/8),(71)&7	;volatile
  3645  03A9  1F88               	goto	u1051
  3646  03AA  2BAC               	goto	u1050
  3647  03AB  2BAD               u1051:
  3648  03AC                     	goto	l392
  3649  03AC  2BA7               u1050:
  3650  03AD                     	goto	l1799
  3651  03AD  2BAE               	
  3652                           l394:	
  3653  03AE                     	line	68
  3654                           	
  3655                           l1799:	
  3656  03AE                     ;KEYPAD.c: 68:                 return 'C'; }
  3657                           	movlw	low(043h)
  3658  03AE  3043               	goto	l350
  3659  03AF  2C17               	
  3660                           l1801:	
  3661  03B0                     	goto	l350
  3662  03B0  2C17               	
  3663                           l391:	
  3664  03B1                     	line	70
  3665                           ;KEYPAD.c: 70:             RD0 = 1; RD1 = 1; RD2 = 1; RD3 = 0;
  3666                           	bsf	(64/8),(64)&7	;volatile
  3667  03B1  1408               	bsf	(65/8),(65)&7	;volatile
  3668  03B2  1488               	bsf	(66/8),(66)&7	;volatile
  3669  03B3  1508               	bcf	(67/8),(67)&7	;volatile
  3670  03B4  1188               	line	71
  3671                           ;KEYPAD.c: 71:             if (RD4 == 0) {
  3672                           	btfsc	(68/8),(68)&7	;volatile
  3673  03B5  1A08               	goto	u1061
  3674  03B6  2BB8               	goto	u1060
  3675  03B7  2BB9               u1061:
  3676  03B8                     	goto	l395
  3677  03B8  2BCD               u1060:
  3678  03B9                     	line	72
  3679                           	
  3680                           l1803:	
  3681  03B9                     ;KEYPAD.c: 72:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3682                           	opt asmopt_push
  3683                           opt asmopt_off
  3684                           movlw	17
  3685  03B9  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3686  03BA  00F4               	movlw	58
  3687  03BB  303A               movwf	((??_keypad_scanner+0)+0),f
  3688  03BC  00F3               	u1827:
  3689  03BD                     decfsz	((??_keypad_scanner+0)+0),f
  3690  03BD  0BF3               	goto	u1827
  3691  03BE  2BBD               	decfsz	((??_keypad_scanner+0)+0+1),f
  3692  03BF  0BF4               	goto	u1827
  3693  03C0  2BBD               	nop
  3694  03C1  0000               opt asmopt_pop
  3695                           
  3696                           	line	73
  3697                           ;KEYPAD.c: 73:                 while (RD4==0);
  3698                           	goto	l396
  3699  03C2  2BC3               	
  3700                           l397:	
  3701  03C3                     	
  3702                           l396:	
  3703  03C3                     	bcf	status, 5	;RP0=0, select bank0
  3704  03C3  1283               	bcf	status, 6	;RP1=0, select bank0
  3705  03C4  1303               	btfss	(68/8),(68)&7	;volatile
  3706  03C5  1E08               	goto	u1071
  3707  03C6  2BC8               	goto	u1070
  3708  03C7  2BC9               u1071:
  3709  03C8                     	goto	l396
  3710  03C8  2BC3               u1070:
  3711  03C9                     	goto	l1805
  3712  03C9  2BCA               	
  3713                           l398:	
  3714  03CA                     	line	74
  3715                           	
  3716                           l1805:	
  3717  03CA                     ;KEYPAD.c: 74:                 return '*'; }
  3718                           	movlw	low(02Ah)
  3719  03CA  302A               	goto	l350
  3720  03CB  2C17               	
  3721                           l1807:	
  3722  03CC                     	goto	l350
  3723  03CC  2C17               	
  3724                           l395:	
  3725  03CD                     	line	75
  3726                           ;KEYPAD.c: 75:             if (RD5 == 0) {
  3727                           	btfsc	(69/8),(69)&7	;volatile
  3728  03CD  1A88               	goto	u1081
  3729  03CE  2BD0               	goto	u1080
  3730  03CF  2BD1               u1081:
  3731  03D0                     	goto	l399
  3732  03D0  2BE5               u1080:
  3733  03D1                     	line	76
  3734                           	
  3735                           l1809:	
  3736  03D1                     ;KEYPAD.c: 76:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3737                           	opt asmopt_push
  3738                           opt asmopt_off
  3739                           movlw	17
  3740  03D1  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3741  03D2  00F4               	movlw	58
  3742  03D3  303A               movwf	((??_keypad_scanner+0)+0),f
  3743  03D4  00F3               	u1837:
  3744  03D5                     decfsz	((??_keypad_scanner+0)+0),f
  3745  03D5  0BF3               	goto	u1837
  3746  03D6  2BD5               	decfsz	((??_keypad_scanner+0)+0+1),f
  3747  03D7  0BF4               	goto	u1837
  3748  03D8  2BD5               	nop
  3749  03D9  0000               opt asmopt_pop
  3750                           
  3751                           	line	77
  3752                           ;KEYPAD.c: 77:                 while (RD5==0);
  3753                           	goto	l400
  3754  03DA  2BDB               	
  3755                           l401:	
  3756  03DB                     	
  3757                           l400:	
  3758  03DB                     	bcf	status, 5	;RP0=0, select bank0
  3759  03DB  1283               	bcf	status, 6	;RP1=0, select bank0
  3760  03DC  1303               	btfss	(69/8),(69)&7	;volatile
  3761  03DD  1E88               	goto	u1091
  3762  03DE  2BE0               	goto	u1090
  3763  03DF  2BE1               u1091:
  3764  03E0                     	goto	l400
  3765  03E0  2BDB               u1090:
  3766  03E1                     	goto	l1811
  3767  03E1  2BE2               	
  3768                           l402:	
  3769  03E2                     	line	78
  3770                           	
  3771                           l1811:	
  3772  03E2                     ;KEYPAD.c: 78:                 return '0'; }
  3773                           	movlw	low(030h)
  3774  03E2  3030               	goto	l350
  3775  03E3  2C17               	
  3776                           l1813:	
  3777  03E4                     	goto	l350
  3778  03E4  2C17               	
  3779                           l399:	
  3780  03E5                     	line	79
  3781                           ;KEYPAD.c: 79:             if (RD6 == 0) {
  3782                           	btfsc	(70/8),(70)&7	;volatile
  3783  03E5  1B08               	goto	u1101
  3784  03E6  2BE8               	goto	u1100
  3785  03E7  2BE9               u1101:
  3786  03E8                     	goto	l403
  3787  03E8  2BFD               u1100:
  3788  03E9                     	line	80
  3789                           	
  3790                           l1815:	
  3791  03E9                     ;KEYPAD.c: 80:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3792                           	opt asmopt_push
  3793                           opt asmopt_off
  3794                           movlw	17
  3795  03E9  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3796  03EA  00F4               	movlw	58
  3797  03EB  303A               movwf	((??_keypad_scanner+0)+0),f
  3798  03EC  00F3               	u1847:
  3799  03ED                     decfsz	((??_keypad_scanner+0)+0),f
  3800  03ED  0BF3               	goto	u1847
  3801  03EE  2BED               	decfsz	((??_keypad_scanner+0)+0+1),f
  3802  03EF  0BF4               	goto	u1847
  3803  03F0  2BED               	nop
  3804  03F1  0000               opt asmopt_pop
  3805                           
  3806                           	line	81
  3807                           ;KEYPAD.c: 81:                 while (RD6==0);
  3808                           	goto	l404
  3809  03F2  2BF3               	
  3810                           l405:	
  3811  03F3                     	
  3812                           l404:	
  3813  03F3                     	bcf	status, 5	;RP0=0, select bank0
  3814  03F3  1283               	bcf	status, 6	;RP1=0, select bank0
  3815  03F4  1303               	btfss	(70/8),(70)&7	;volatile
  3816  03F5  1F08               	goto	u1111
  3817  03F6  2BF8               	goto	u1110
  3818  03F7  2BF9               u1111:
  3819  03F8                     	goto	l404
  3820  03F8  2BF3               u1110:
  3821  03F9                     	goto	l1817
  3822  03F9  2BFA               	
  3823                           l406:	
  3824  03FA                     	line	82
  3825                           	
  3826                           l1817:	
  3827  03FA                     ;KEYPAD.c: 82:                 return '#'; }
  3828                           	movlw	low(023h)
  3829  03FA  3023               	goto	l350
  3830  03FB  2C17               	
  3831                           l1819:	
  3832  03FC                     	goto	l350
  3833  03FC  2C17               	
  3834                           l403:	
  3835  03FD                     	line	83
  3836                           ;KEYPAD.c: 83:             if (RD7 == 0) {
  3837                           	btfsc	(71/8),(71)&7	;volatile
  3838  03FD  1B88               	goto	u1121
  3839  03FE  2C00               	goto	u1120
  3840  03FF  2C01               u1121:
  3841  0400                     	goto	l1827
  3842  0400  2C15               u1120:
  3843  0401                     	line	84
  3844                           	
  3845                           l1821:	
  3846  0401                     ;KEYPAD.c: 84:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3847                           	opt asmopt_push
  3848                           opt asmopt_off
  3849                           movlw	17
  3850  0401  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3851  0402  00F4               	movlw	58
  3852  0403  303A               movwf	((??_keypad_scanner+0)+0),f
  3853  0404  00F3               	u1857:
  3854  0405                     decfsz	((??_keypad_scanner+0)+0),f
  3855  0405  0BF3               	goto	u1857
  3856  0406  2C05               	decfsz	((??_keypad_scanner+0)+0+1),f
  3857  0407  0BF4               	goto	u1857
  3858  0408  2C05               	nop
  3859  0409  0000               opt asmopt_pop
  3860                           
  3861                           	line	85
  3862                           ;KEYPAD.c: 85:                 while (RD7==0);
  3863                           	goto	l408
  3864  040A  2C0B               	
  3865                           l409:	
  3866  040B                     	
  3867                           l408:	
  3868  040B                     	bcf	status, 5	;RP0=0, select bank0
  3869  040B  1283               	bcf	status, 6	;RP1=0, select bank0
  3870  040C  1303               	btfss	(71/8),(71)&7	;volatile
  3871  040D  1F88               	goto	u1131
  3872  040E  2C10               	goto	u1130
  3873  040F  2C11               u1131:
  3874  0410                     	goto	l408
  3875  0410  2C0B               u1130:
  3876  0411                     	goto	l1823
  3877  0411  2C12               	
  3878                           l410:	
  3879  0412                     	line	86
  3880                           	
  3881                           l1823:	
  3882  0412                     ;KEYPAD.c: 86:                 return 'D'; }
  3883                           	movlw	low(044h)
  3884  0412  3044               	goto	l350
  3885  0413  2C17               	
  3886                           l1825:	
  3887  0414                     	goto	l350
  3888  0414  2C17               	
  3889                           l407:	
  3890  0415                     	line	88
  3891                           	
  3892                           l1827:	
  3893  0415                     ;KEYPAD.c: 88:     return 'n';
  3894                           	movlw	low(06Eh)
  3895  0415  306E               	goto	l350
  3896  0416  2C17               	
  3897                           l1829:	
  3898  0417                     	line	89
  3899                           	
  3900                           l350:	
  3901  0417                     	return
  3902  0417  0008               	opt stack 0
  3903                           GLOBAL	__end_of_keypad_scanner
  3904                           	__end_of_keypad_scanner:
  3905  0418                     	signat	_keypad_scanner,89
  3906                           	global	_initTMR0
  3907                           
  3908 ;; *************** function _initTMR0 *****************
  3909 ;; Defined at:
  3910 ;;		line 298 in file "mainS1proyect.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;		None
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3924 ;;      Params:         0       0       0       0       0
  3925 ;;      Locals:         0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0
  3927 ;;      Totals:         0       0       0       0       0
  3928 ;;Total ram usage:        0 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    1
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_main
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3938                           	file	"mainS1proyect.c"
  3939                           	line	298
  3940                           global __ptext3
  3941                           __ptext3:	;psect for function _initTMR0
  3942  07A0                     psect	text3
  3943                           	file	"mainS1proyect.c"
  3944                           	line	298
  3945                           	global	__size_of_initTMR0
  3946                           	__size_of_initTMR0	equ	__end_of_initTMR0-_initTMR0
  3947  000D                     	
  3948                           _initTMR0:	
  3949  07A0                     ;incstack = 0
  3950                           	opt	stack 6
  3951                           ; Regs used in _initTMR0: [wreg]
  3952                           	line	299
  3953                           	
  3954                           l1967:	
  3955  07A0                     ;mainS1proyect.c: 299:     OPTION_REG = 0x85;
  3956                           	movlw	low(085h)
  3957  07A0  3085               	bsf	status, 5	;RP0=1, select bank1
  3958  07A1  1683               	bcf	status, 6	;RP1=0, select bank1
  3959  07A2  1303               	movwf	(129)^080h	;volatile
  3960  07A3  0081               	line	300
  3961                           ;mainS1proyect.c: 300:     TMR0 = 200;
  3962                           	movlw	low(0C8h)
  3963  07A4  30C8               	bcf	status, 5	;RP0=0, select bank0
  3964  07A5  1283               	bcf	status, 6	;RP1=0, select bank0
  3965  07A6  1303               	movwf	(1)	;volatile
  3966  07A7  0081               	line	302
  3967                           	
  3968                           l1969:	
  3969  07A8                     ;mainS1proyect.c: 302:     INTCONbits.GIE = 1;
  3970                           	bsf	(11),7	;volatile
  3971  07A8  178B               	line	303
  3972                           	
  3973                           l1971:	
  3974  07A9                     ;mainS1proyect.c: 303:     INTCONbits.T0IE = 1;
  3975                           	bsf	(11),5	;volatile
  3976  07A9  168B               	line	304
  3977                           	
  3978                           l1973:	
  3979  07AA                     ;mainS1proyect.c: 304:     INTCONbits.T0IF = 0;
  3980                           	bcf	(11),2	;volatile
  3981  07AA  110B               	goto	l175
  3982  07AB  2FAC               	line	306
  3983                           	
  3984                           l1975:	
  3985  07AC                     	line	307
  3986                           ;mainS1proyect.c: 306:     return;
  3987                           	
  3988                           l175:	
  3989  07AC                     	return
  3990  07AC  0008               	opt stack 0
  3991                           GLOBAL	__end_of_initTMR0
  3992                           	__end_of_initTMR0:
  3993  07AD                     	signat	_initTMR0,89
  3994                           	global	_initOsc
  3995                           
  3996 ;; *************** function _initOsc *****************
  3997 ;; Defined at:
  3998 ;;		line 9 in file "FuncionOscilador.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  frec            1    wreg     unsigned char 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  frec            1    5[COMMON] unsigned char 
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  1    wreg      void 
  4005 ;; Registers used:
  4006 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4012 ;;      Params:         0       0       0       0       0
  4013 ;;      Locals:         1       0       0       0       0
  4014 ;;      Temps:          2       0       0       0       0
  4015 ;;      Totals:         3       0       0       0       0
  4016 ;;Total ram usage:        3 bytes
  4017 ;; Hardware stack levels used:    1
  4018 ;; Hardware stack levels required when called:    1
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_main
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4026                           	file	"FuncionOscilador.c"
  4027                           	line	9
  4028                           global __ptext4
  4029                           __ptext4:	;psect for function _initOsc
  4030  05C4                     psect	text4
  4031                           	file	"FuncionOscilador.c"
  4032                           	line	9
  4033                           	global	__size_of_initOsc
  4034                           	__size_of_initOsc	equ	__end_of_initOsc-_initOsc
  4035  005D                     	
  4036                           _initOsc:	
  4037  05C4                     ;incstack = 0
  4038                           	opt	stack 6
  4039                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  4040                           ;initOsc@frec stored from wreg
  4041                           	movwf	(initOsc@frec)
  4042  05C4  00F5               	line	10
  4043                           	
  4044                           l1867:	
  4045  05C5                     ;FuncionOscilador.c: 10:     switch(frec){
  4046                           	goto	l1871
  4047  05C5  2DFD               	line	11
  4048                           ;FuncionOscilador.c: 11:         case 0:
  4049                           	
  4050                           l181:	
  4051  05C6                     	line	12
  4052                           ;FuncionOscilador.c: 12:             OSCCONbits.IRCF0 = 0;
  4053                           	bsf	status, 5	;RP0=1, select bank1
  4054  05C6  1683               	bcf	status, 6	;RP1=0, select bank1
  4055  05C7  1303               	bcf	(143)^080h,4	;volatile
  4056  05C8  120F               	line	13
  4057                           ;FuncionOscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  4058                           	bcf	(143)^080h,5	;volatile
  4059  05C9  128F               	line	14
  4060                           ;FuncionOscilador.c: 14:             OSCCONbits.IRCF2 = 0;
  4061                           	bcf	(143)^080h,6	;volatile
  4062  05CA  130F               	line	15
  4063                           ;FuncionOscilador.c: 15:             break;
  4064                           	goto	l182
  4065  05CB  2E1F               	line	16
  4066                           ;FuncionOscilador.c: 16:         case 1:
  4067                           	
  4068                           l183:	
  4069  05CC                     	line	17
  4070                           ;FuncionOscilador.c: 17:             OSCCONbits.IRCF0 = 1;
  4071                           	bsf	status, 5	;RP0=1, select bank1
  4072  05CC  1683               	bcf	status, 6	;RP1=0, select bank1
  4073  05CD  1303               	bsf	(143)^080h,4	;volatile
  4074  05CE  160F               	line	18
  4075                           ;FuncionOscilador.c: 18:             OSCCONbits.IRCF1 = 0;
  4076                           	bcf	(143)^080h,5	;volatile
  4077  05CF  128F               	line	19
  4078                           ;FuncionOscilador.c: 19:             OSCCONbits.IRCF2 = 0;
  4079                           	bcf	(143)^080h,6	;volatile
  4080  05D0  130F               	line	20
  4081                           ;FuncionOscilador.c: 20:             break;
  4082                           	goto	l182
  4083  05D1  2E1F               	line	21
  4084                           ;FuncionOscilador.c: 21:         case 2:
  4085                           	
  4086                           l184:	
  4087  05D2                     	line	22
  4088                           ;FuncionOscilador.c: 22:             OSCCONbits.IRCF0 = 0;
  4089                           	bsf	status, 5	;RP0=1, select bank1
  4090  05D2  1683               	bcf	status, 6	;RP1=0, select bank1
  4091  05D3  1303               	bcf	(143)^080h,4	;volatile
  4092  05D4  120F               	line	23
  4093                           ;FuncionOscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  4094                           	bsf	(143)^080h,5	;volatile
  4095  05D5  168F               	line	24
  4096                           ;FuncionOscilador.c: 24:             OSCCONbits.IRCF2 = 0;
  4097                           	bcf	(143)^080h,6	;volatile
  4098  05D6  130F               	line	25
  4099                           ;FuncionOscilador.c: 25:             break;
  4100                           	goto	l182
  4101  05D7  2E1F               	line	26
  4102                           ;FuncionOscilador.c: 26:         case 3:
  4103                           	
  4104                           l185:	
  4105  05D8                     	line	27
  4106                           ;FuncionOscilador.c: 27:             OSCCONbits.IRCF0 = 1;
  4107                           	bsf	status, 5	;RP0=1, select bank1
  4108  05D8  1683               	bcf	status, 6	;RP1=0, select bank1
  4109  05D9  1303               	bsf	(143)^080h,4	;volatile
  4110  05DA  160F               	line	28
  4111                           ;FuncionOscilador.c: 28:             OSCCONbits.IRCF1 = 1;
  4112                           	bsf	(143)^080h,5	;volatile
  4113  05DB  168F               	line	29
  4114                           ;FuncionOscilador.c: 29:             OSCCONbits.IRCF2 = 0;
  4115                           	bcf	(143)^080h,6	;volatile
  4116  05DC  130F               	line	30
  4117                           ;FuncionOscilador.c: 30:             break;
  4118                           	goto	l182
  4119  05DD  2E1F               	line	31
  4120                           ;FuncionOscilador.c: 31:         case 4:
  4121                           	
  4122                           l186:	
  4123  05DE                     	line	32
  4124                           ;FuncionOscilador.c: 32:             OSCCONbits.IRCF0 = 0;
  4125                           	bsf	status, 5	;RP0=1, select bank1
  4126  05DE  1683               	bcf	status, 6	;RP1=0, select bank1
  4127  05DF  1303               	bcf	(143)^080h,4	;volatile
  4128  05E0  120F               	line	33
  4129                           ;FuncionOscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  4130                           	bcf	(143)^080h,5	;volatile
  4131  05E1  128F               	line	34
  4132                           ;FuncionOscilador.c: 34:             OSCCONbits.IRCF2 = 1;
  4133                           	bsf	(143)^080h,6	;volatile
  4134  05E2  170F               	line	35
  4135                           ;FuncionOscilador.c: 35:             break;
  4136                           	goto	l182
  4137  05E3  2E1F               	line	36
  4138                           ;FuncionOscilador.c: 36:         case 5:
  4139                           	
  4140                           l187:	
  4141  05E4                     	line	37
  4142                           ;FuncionOscilador.c: 37:             OSCCONbits.IRCF0 = 1;
  4143                           	bsf	status, 5	;RP0=1, select bank1
  4144  05E4  1683               	bcf	status, 6	;RP1=0, select bank1
  4145  05E5  1303               	bsf	(143)^080h,4	;volatile
  4146  05E6  160F               	line	38
  4147                           ;FuncionOscilador.c: 38:             OSCCONbits.IRCF1 = 0;
  4148                           	bcf	(143)^080h,5	;volatile
  4149  05E7  128F               	line	39
  4150                           ;FuncionOscilador.c: 39:             OSCCONbits.IRCF2 = 1;
  4151                           	bsf	(143)^080h,6	;volatile
  4152  05E8  170F               	line	40
  4153                           ;FuncionOscilador.c: 40:             break;
  4154                           	goto	l182
  4155  05E9  2E1F               	line	42
  4156                           ;FuncionOscilador.c: 42:         case 6:
  4157                           	
  4158                           l188:	
  4159  05EA                     	line	43
  4160                           ;FuncionOscilador.c: 43:             OSCCONbits.IRCF0 = 0;
  4161                           	bsf	status, 5	;RP0=1, select bank1
  4162  05EA  1683               	bcf	status, 6	;RP1=0, select bank1
  4163  05EB  1303               	bcf	(143)^080h,4	;volatile
  4164  05EC  120F               	line	44
  4165                           ;FuncionOscilador.c: 44:             OSCCONbits.IRCF1 = 1;
  4166                           	bsf	(143)^080h,5	;volatile
  4167  05ED  168F               	line	45
  4168                           ;FuncionOscilador.c: 45:             OSCCONbits.IRCF2 = 1;
  4169                           	bsf	(143)^080h,6	;volatile
  4170  05EE  170F               	line	46
  4171                           ;FuncionOscilador.c: 46:             break;
  4172                           	goto	l182
  4173  05EF  2E1F               	line	47
  4174                           ;FuncionOscilador.c: 47:         case 7:
  4175                           	
  4176                           l189:	
  4177  05F0                     	line	48
  4178                           ;FuncionOscilador.c: 48:             OSCCONbits.IRCF0 = 1;
  4179                           	bsf	status, 5	;RP0=1, select bank1
  4180  05F0  1683               	bcf	status, 6	;RP1=0, select bank1
  4181  05F1  1303               	bsf	(143)^080h,4	;volatile
  4182  05F2  160F               	line	49
  4183                           ;FuncionOscilador.c: 49:             OSCCONbits.IRCF1 = 1;
  4184                           	bsf	(143)^080h,5	;volatile
  4185  05F3  168F               	line	50
  4186                           ;FuncionOscilador.c: 50:             OSCCONbits.IRCF2 = 1;
  4187                           	bsf	(143)^080h,6	;volatile
  4188  05F4  170F               	line	51
  4189                           ;FuncionOscilador.c: 51:             break;
  4190                           	goto	l182
  4191  05F5  2E1F               	line	52
  4192                           ;FuncionOscilador.c: 52:         default:
  4193                           	
  4194                           l190:	
  4195  05F6                     	line	53
  4196                           ;FuncionOscilador.c: 53:             OSCCONbits.IRCF0 = 0;
  4197                           	bsf	status, 5	;RP0=1, select bank1
  4198  05F6  1683               	bcf	status, 6	;RP1=0, select bank1
  4199  05F7  1303               	bcf	(143)^080h,4	;volatile
  4200  05F8  120F               	line	54
  4201                           ;FuncionOscilador.c: 54:             OSCCONbits.IRCF1 = 1;
  4202                           	bsf	(143)^080h,5	;volatile
  4203  05F9  168F               	line	55
  4204                           ;FuncionOscilador.c: 55:             OSCCONbits.IRCF2 = 1;
  4205                           	bsf	(143)^080h,6	;volatile
  4206  05FA  170F               	line	56
  4207                           ;FuncionOscilador.c: 56:             break;
  4208                           	goto	l182
  4209  05FB  2E1F               	line	57
  4210                           	
  4211                           l1869:	
  4212  05FC                     ;FuncionOscilador.c: 57:     }
  4213                           	goto	l182
  4214  05FC  2E1F               	
  4215                           l180:	
  4216  05FD                     	
  4217                           l1871:	
  4218  05FD                     	movf	(initOsc@frec),w
  4219  05FD  0875               	movwf	(??_initOsc+0)+0
  4220  05FE  00F3               	clrf	(??_initOsc+0)+0+1
  4221  05FF  01F4               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4222                           ; Switch size 1, requested type "space"
  4223                           ; Number of cases is 1, Range of values is 0 to 0
  4224                           ; switch strategies available:
  4225                           ; Name         Instructions Cycles
  4226                           ; simple_byte            4     3 (average)
  4227                           ; direct_byte           11     8 (fixed)
  4228                           ; jumptable            260     6 (fixed)
  4229                           ;	Chosen strategy is simple_byte
  4230                           
  4231                           	movf 1+(??_initOsc+0)+0,w
  4232  0600  0874               	opt asmopt_push
  4233                           	opt asmopt_off
  4234                           	xorlw	0^0	; case 0
  4235  0601  3A00               	skipnz
  4236  0602  1903               	goto	l2653
  4237  0603  2E05               	goto	l190
  4238  0604  2DF6               	opt asmopt_pop
  4239                           	
  4240                           l2653:	
  4241  0605                     ; Switch size 1, requested type "space"
  4242                           ; Number of cases is 8, Range of values is 0 to 7
  4243                           ; switch strategies available:
  4244                           ; Name         Instructions Cycles
  4245                           ; simple_byte           25    13 (average)
  4246                           ; direct_byte           32     8 (fixed)
  4247                           ; jumptable            260     6 (fixed)
  4248                           ;	Chosen strategy is simple_byte
  4249                           
  4250                           	movf 0+(??_initOsc+0)+0,w
  4251  0605  0873               	opt asmopt_push
  4252                           	opt asmopt_off
  4253                           	xorlw	0^0	; case 0
  4254  0606  3A00               	skipnz
  4255  0607  1903               	goto	l181
  4256  0608  2DC6               	xorlw	1^0	; case 1
  4257  0609  3A01               	skipnz
  4258  060A  1903               	goto	l183
  4259  060B  2DCC               	xorlw	2^1	; case 2
  4260  060C  3A03               	skipnz
  4261  060D  1903               	goto	l184
  4262  060E  2DD2               	xorlw	3^2	; case 3
  4263  060F  3A01               	skipnz
  4264  0610  1903               	goto	l185
  4265  0611  2DD8               	xorlw	4^3	; case 4
  4266  0612  3A07               	skipnz
  4267  0613  1903               	goto	l186
  4268  0614  2DDE               	xorlw	5^4	; case 5
  4269  0615  3A01               	skipnz
  4270  0616  1903               	goto	l187
  4271  0617  2DE4               	xorlw	6^5	; case 6
  4272  0618  3A03               	skipnz
  4273  0619  1903               	goto	l188
  4274  061A  2DEA               	xorlw	7^6	; case 7
  4275  061B  3A01               	skipnz
  4276  061C  1903               	goto	l189
  4277  061D  2DF0               	goto	l190
  4278  061E  2DF6               	opt asmopt_pop
  4279                           
  4280                           	
  4281                           l182:	
  4282  061F                     	line	59
  4283                           ;FuncionOscilador.c: 59:     OSCCONbits.SCS = 1;
  4284                           	bsf	(143)^080h,0	;volatile
  4285  061F  140F               	line	60
  4286                           	
  4287                           l191:	
  4288  0620                     	return
  4289  0620  0008               	opt stack 0
  4290                           GLOBAL	__end_of_initOsc
  4291                           	__end_of_initOsc:
  4292  0621                     	signat	_initOsc,4217
  4293                           	global	_init
  4294                           
  4295 ;; *************** function _init *****************
  4296 ;; Defined at:
  4297 ;;		line 248 in file "mainS1proyect.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;		None
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;		None
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  1    wreg      void 
  4304 ;; Registers used:
  4305 ;;		wreg, status,2
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4311 ;;      Params:         0       0       0       0       0
  4312 ;;      Locals:         0       0       0       0       0
  4313 ;;      Temps:          0       0       0       0       0
  4314 ;;      Totals:         0       0       0       0       0
  4315 ;;Total ram usage:        0 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:    1
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_main
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4325                           	file	"mainS1proyect.c"
  4326                           	line	248
  4327                           global __ptext5
  4328                           __ptext5:	;psect for function _init
  4329  077A                     psect	text5
  4330                           	file	"mainS1proyect.c"
  4331                           	line	248
  4332                           	global	__size_of_init
  4333                           	__size_of_init	equ	__end_of_init-_init
  4334  0016                     	
  4335                           _init:	
  4336  077A                     ;incstack = 0
  4337                           	opt	stack 6
  4338                           ; Regs used in _init: [wreg+status,2]
  4339                           	line	250
  4340                           	
  4341                           l1839:	
  4342  077A                     ;mainS1proyect.c: 250:     TRISB = 0;
  4343                           	bsf	status, 5	;RP0=1, select bank1
  4344  077A  1683               	bcf	status, 6	;RP1=0, select bank1
  4345  077B  1303               	clrf	(134)^080h	;volatile
  4346  077C  0186               	line	251
  4347                           	
  4348                           l1841:	
  4349  077D                     ;mainS1proyect.c: 251:     TRISA = 0x0F;
  4350                           	movlw	low(0Fh)
  4351  077D  300F               	movwf	(133)^080h	;volatile
  4352  077E  0085               	line	253
  4353                           	
  4354                           l1843:	
  4355  077F                     ;mainS1proyect.c: 253:     TRISD = 0;
  4356                           	clrf	(136)^080h	;volatile
  4357  077F  0188               	line	254
  4358                           	
  4359                           l1845:	
  4360  0780                     ;mainS1proyect.c: 254:     TRISC = 0;
  4361                           	clrf	(135)^080h	;volatile
  4362  0780  0187               	line	255
  4363                           	
  4364                           l1847:	
  4365  0781                     ;mainS1proyect.c: 255:     TRISE = 0;
  4366                           	clrf	(137)^080h	;volatile
  4367  0781  0189               	line	256
  4368                           	
  4369                           l1849:	
  4370  0782                     ;mainS1proyect.c: 256:     ANSEL = 0;
  4371                           	bsf	status, 5	;RP0=1, select bank3
  4372  0782  1683               	bsf	status, 6	;RP1=1, select bank3
  4373  0783  1703               	clrf	(392)^0180h	;volatile
  4374  0784  0188               	line	257
  4375                           	
  4376                           l1851:	
  4377  0785                     ;mainS1proyect.c: 257:     ANSELH = 0;
  4378                           	clrf	(393)^0180h	;volatile
  4379  0785  0189               	line	258
  4380                           	
  4381                           l1853:	
  4382  0786                     ;mainS1proyect.c: 258:     ANSELbits.ANS0 = 1;
  4383                           	bsf	(392)^0180h,0	;volatile
  4384  0786  1408               	line	260
  4385                           	
  4386                           l1855:	
  4387  0787                     ;mainS1proyect.c: 260:     PORTA = 0;
  4388                           	bcf	status, 5	;RP0=0, select bank0
  4389  0787  1283               	bcf	status, 6	;RP1=0, select bank0
  4390  0788  1303               	clrf	(5)	;volatile
  4391  0789  0185               	line	261
  4392                           	
  4393                           l1857:	
  4394  078A                     ;mainS1proyect.c: 261:     PORTB = 0;
  4395                           	clrf	(6)	;volatile
  4396  078A  0186               	line	262
  4397                           	
  4398                           l1859:	
  4399  078B                     ;mainS1proyect.c: 262:     PORTD = 0;
  4400                           	clrf	(8)	;volatile
  4401  078B  0188               	line	263
  4402                           	
  4403                           l1861:	
  4404  078C                     ;mainS1proyect.c: 263:     PORTC = 0;
  4405                           	clrf	(7)	;volatile
  4406  078C  0187               	line	264
  4407                           	
  4408                           l1863:	
  4409  078D                     ;mainS1proyect.c: 264:     PORTE = 0;
  4410                           	clrf	(9)	;volatile
  4411  078D  0189               	goto	l169
  4412  078E  2F8F               	line	266
  4413                           	
  4414                           l1865:	
  4415  078F                     	line	267
  4416                           ;mainS1proyect.c: 266:     return;
  4417                           	
  4418                           l169:	
  4419  078F                     	return
  4420  078F  0008               	opt stack 0
  4421                           GLOBAL	__end_of_init
  4422                           	__end_of_init:
  4423  0790                     	signat	_init,89
  4424                           	global	_funcAdc
  4425                           
  4426 ;; *************** function _funcAdc *****************
  4427 ;; Defined at:
  4428 ;;		line 9 in file "ADCconf.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  divD            1    wreg     unsigned char 
  4431 ;;  anaP            1    3[COMMON] unsigned char 
  4432 ;;  just            1    4[COMMON] unsigned char 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  divD            1    0[BANK0 ] unsigned char 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      void 
  4437 ;; Registers used:
  4438 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4444 ;;      Params:         2       0       0       0       0
  4445 ;;      Locals:         0       1       0       0       0
  4446 ;;      Temps:          2       0       0       0       0
  4447 ;;      Totals:         4       1       0       0       0
  4448 ;;Total ram usage:        5 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    1
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_main
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4458                           	file	"ADCconf.c"
  4459                           	line	9
  4460                           global __ptext6
  4461                           __ptext6:	;psect for function _funcAdc
  4462  0553                     psect	text6
  4463                           	file	"ADCconf.c"
  4464                           	line	9
  4465                           	global	__size_of_funcAdc
  4466                           	__size_of_funcAdc	equ	__end_of_funcAdc-_funcAdc
  4467  0071                     	
  4468                           _funcAdc:	
  4469  0553                     ;incstack = 0
  4470                           	opt	stack 6
  4471                           ; Regs used in _funcAdc: [wreg-fsr0h+status,2+status,0]
  4472                           ;funcAdc@divD stored from wreg
  4473                           	bcf	status, 5	;RP0=0, select bank0
  4474  0553  1283               	bcf	status, 6	;RP1=0, select bank0
  4475  0554  1303               	movwf	(funcAdc@divD)
  4476  0555  00A0               	line	10
  4477                           	
  4478                           l2351:	
  4479  0556                     ;ADCconf.c: 10:     switch(divD){
  4480                           	goto	l2355
  4481  0556  2D64               	line	11
  4482                           ;ADCconf.c: 11:         case 0:
  4483                           	
  4484                           l433:	
  4485  0557                     	line	12
  4486                           ;ADCconf.c: 12:             ADCON0bits.ADCS0 = 0;
  4487                           	bcf	(31),6	;volatile
  4488  0557  131F               	line	13
  4489                           ;ADCconf.c: 13:             ADCON0bits.ADCS1 = 0;
  4490                           	bcf	(31),7	;volatile
  4491  0558  139F               	line	14
  4492                           ;ADCconf.c: 14:             break;
  4493                           	goto	l2359
  4494  0559  2D8D               	line	15
  4495                           ;ADCconf.c: 15:         case 1:
  4496                           	
  4497                           l435:	
  4498  055A                     	line	16
  4499                           ;ADCconf.c: 16:             ADCON0bits.ADCS0 = 1;
  4500                           	bsf	(31),6	;volatile
  4501  055A  171F               	line	17
  4502                           ;ADCconf.c: 17:             ADCON0bits.ADCS1 = 0;
  4503                           	bcf	(31),7	;volatile
  4504  055B  139F               	line	18
  4505                           ;ADCconf.c: 18:             break;
  4506                           	goto	l2359
  4507  055C  2D8D               	line	20
  4508                           ;ADCconf.c: 20:         case 2:
  4509                           	
  4510                           l436:	
  4511  055D                     	line	21
  4512                           ;ADCconf.c: 21:             ADCON0bits.ADCS0 = 0;
  4513                           	bcf	(31),6	;volatile
  4514  055D  131F               	line	22
  4515                           ;ADCconf.c: 22:             ADCON0bits.ADCS1 = 1;
  4516                           	bsf	(31),7	;volatile
  4517  055E  179F               	line	23
  4518                           ;ADCconf.c: 23:             break;
  4519                           	goto	l2359
  4520  055F  2D8D               	line	25
  4521                           ;ADCconf.c: 25:         default:
  4522                           	
  4523                           l437:	
  4524  0560                     	line	26
  4525                           ;ADCconf.c: 26:             ADCON0bits.ADCS0 = 1;
  4526                           	bsf	(31),6	;volatile
  4527  0560  171F               	line	27
  4528                           ;ADCconf.c: 27:             ADCON0bits.ADCS1 = 1;
  4529                           	bsf	(31),7	;volatile
  4530  0561  179F               	line	28
  4531                           ;ADCconf.c: 28:             break;
  4532                           	goto	l2359
  4533  0562  2D8D               	line	29
  4534                           	
  4535                           l2353:	
  4536  0563                     ;ADCconf.c: 29:     }
  4537                           	goto	l2359
  4538  0563  2D8D               	
  4539                           l432:	
  4540  0564                     	
  4541                           l2355:	
  4542  0564                     	movf	(funcAdc@divD),w
  4543  0564  0820               	movwf	(??_funcAdc+0)+0
  4544  0565  00F5               	clrf	(??_funcAdc+0)+0+1
  4545  0566  01F6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4546                           ; Switch size 1, requested type "space"
  4547                           ; Number of cases is 1, Range of values is 0 to 0
  4548                           ; switch strategies available:
  4549                           ; Name         Instructions Cycles
  4550                           ; simple_byte            4     3 (average)
  4551                           ; direct_byte           11     8 (fixed)
  4552                           ; jumptable            260     6 (fixed)
  4553                           ;	Chosen strategy is simple_byte
  4554                           
  4555                           	movf 1+(??_funcAdc+0)+0,w
  4556  0567  0876               	opt asmopt_push
  4557                           	opt asmopt_off
  4558                           	xorlw	0^0	; case 0
  4559  0568  3A00               	skipnz
  4560  0569  1903               	goto	l2655
  4561  056A  2D6C               	goto	l437
  4562  056B  2D60               	opt asmopt_pop
  4563                           	
  4564                           l2655:	
  4565  056C                     ; Switch size 1, requested type "space"
  4566                           ; Number of cases is 3, Range of values is 0 to 2
  4567                           ; switch strategies available:
  4568                           ; Name         Instructions Cycles
  4569                           ; simple_byte           10     6 (average)
  4570                           ; direct_byte           17     8 (fixed)
  4571                           ; jumptable            260     6 (fixed)
  4572                           ;	Chosen strategy is simple_byte
  4573                           
  4574                           	movf 0+(??_funcAdc+0)+0,w
  4575  056C  0875               	opt asmopt_push
  4576                           	opt asmopt_off
  4577                           	xorlw	0^0	; case 0
  4578  056D  3A00               	skipnz
  4579  056E  1903               	goto	l433
  4580  056F  2D57               	xorlw	1^0	; case 1
  4581  0570  3A01               	skipnz
  4582  0571  1903               	goto	l435
  4583  0572  2D5A               	xorlw	2^1	; case 2
  4584  0573  3A03               	skipnz
  4585  0574  1903               	goto	l436
  4586  0575  2D5D               	goto	l437
  4587  0576  2D60               	opt asmopt_pop
  4588                           
  4589                           	
  4590                           l434:	
  4591  0577                     	line	31
  4592                           ;ADCconf.c: 31:     switch(anaP){
  4593                           	goto	l2359
  4594  0577  2D8D               	line	32
  4595                           ;ADCconf.c: 32:         case 0:
  4596                           	
  4597                           l439:	
  4598  0578                     	line	33
  4599                           ;ADCconf.c: 33:             ADCON0bits.CHS0 = 0;
  4600                           	bcf	(31),2	;volatile
  4601  0578  111F               	line	34
  4602                           ;ADCconf.c: 34:             ADCON0bits.CHS1 = 0;
  4603                           	bcf	(31),3	;volatile
  4604  0579  119F               	line	35
  4605                           ;ADCconf.c: 35:             ADCON0bits.CHS2 = 0;
  4606                           	bcf	(31),4	;volatile
  4607  057A  121F               	line	36
  4608                           ;ADCconf.c: 36:             ADCON0bits.CHS3 = 0;
  4609                           	bcf	(31),5	;volatile
  4610  057B  129F               	line	37
  4611                           ;ADCconf.c: 37:             break;
  4612                           	goto	l2363
  4613  057C  2DAA               	line	39
  4614                           ;ADCconf.c: 39:         case 1:
  4615                           	
  4616                           l441:	
  4617  057D                     	line	40
  4618                           ;ADCconf.c: 40:             ADCON0bits.CHS0 = 1;
  4619                           	bsf	(31),2	;volatile
  4620  057D  151F               	line	41
  4621                           ;ADCconf.c: 41:             ADCON0bits.CHS1 = 0;
  4622                           	bcf	(31),3	;volatile
  4623  057E  119F               	line	42
  4624                           ;ADCconf.c: 42:             ADCON0bits.CHS2 = 0;
  4625                           	bcf	(31),4	;volatile
  4626  057F  121F               	line	43
  4627                           ;ADCconf.c: 43:             ADCON0bits.CHS3 = 0;
  4628                           	bcf	(31),5	;volatile
  4629  0580  129F               	line	44
  4630                           ;ADCconf.c: 44:             break;
  4631                           	goto	l2363
  4632  0581  2DAA               	line	46
  4633                           ;ADCconf.c: 46:         case 2:
  4634                           	
  4635                           l442:	
  4636  0582                     	line	47
  4637                           ;ADCconf.c: 47:             ADCON0bits.CHS0 = 0;
  4638                           	bcf	(31),2	;volatile
  4639  0582  111F               	line	48
  4640                           ;ADCconf.c: 48:             ADCON0bits.CHS1 = 1;
  4641                           	bsf	(31),3	;volatile
  4642  0583  159F               	line	49
  4643                           ;ADCconf.c: 49:             ADCON0bits.CHS2 = 0;
  4644                           	bcf	(31),4	;volatile
  4645  0584  121F               	line	50
  4646                           ;ADCconf.c: 50:             ADCON0bits.CHS3 = 0;
  4647                           	bcf	(31),5	;volatile
  4648  0585  129F               	line	51
  4649                           ;ADCconf.c: 51:             break;
  4650                           	goto	l2363
  4651  0586  2DAA               	line	53
  4652                           ;ADCconf.c: 53:         default:
  4653                           	
  4654                           l443:	
  4655  0587                     	line	54
  4656                           ;ADCconf.c: 54:             ADCON0bits.CHS0 = 0;
  4657                           	bcf	(31),2	;volatile
  4658  0587  111F               	line	55
  4659                           ;ADCconf.c: 55:             ADCON0bits.CHS1 = 0;
  4660                           	bcf	(31),3	;volatile
  4661  0588  119F               	line	56
  4662                           ;ADCconf.c: 56:             ADCON0bits.CHS2 = 0;
  4663                           	bcf	(31),4	;volatile
  4664  0589  121F               	line	57
  4665                           ;ADCconf.c: 57:             ADCON0bits.CHS3 = 1;
  4666                           	bsf	(31),5	;volatile
  4667  058A  169F               	line	58
  4668                           ;ADCconf.c: 58:             break;
  4669                           	goto	l2363
  4670  058B  2DAA               	line	59
  4671                           	
  4672                           l2357:	
  4673  058C                     ;ADCconf.c: 59:     }
  4674                           	goto	l2363
  4675  058C  2DAA               	
  4676                           l438:	
  4677  058D                     	
  4678                           l2359:	
  4679  058D                     	movf	(funcAdc@anaP),w
  4680  058D  0873               	movwf	(??_funcAdc+0)+0
  4681  058E  00F5               	clrf	(??_funcAdc+0)+0+1
  4682  058F  01F6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4683                           ; Switch size 1, requested type "space"
  4684                           ; Number of cases is 1, Range of values is 0 to 0
  4685                           ; switch strategies available:
  4686                           ; Name         Instructions Cycles
  4687                           ; simple_byte            4     3 (average)
  4688                           ; direct_byte           11     8 (fixed)
  4689                           ; jumptable            260     6 (fixed)
  4690                           ;	Chosen strategy is simple_byte
  4691                           
  4692                           	movf 1+(??_funcAdc+0)+0,w
  4693  0590  0876               	opt asmopt_push
  4694                           	opt asmopt_off
  4695                           	xorlw	0^0	; case 0
  4696  0591  3A00               	skipnz
  4697  0592  1903               	goto	l2657
  4698  0593  2D95               	goto	l443
  4699  0594  2D87               	opt asmopt_pop
  4700                           	
  4701                           l2657:	
  4702  0595                     ; Switch size 1, requested type "space"
  4703                           ; Number of cases is 3, Range of values is 0 to 2
  4704                           ; switch strategies available:
  4705                           ; Name         Instructions Cycles
  4706                           ; simple_byte           10     6 (average)
  4707                           ; direct_byte           17     8 (fixed)
  4708                           ; jumptable            260     6 (fixed)
  4709                           ;	Chosen strategy is simple_byte
  4710                           
  4711                           	movf 0+(??_funcAdc+0)+0,w
  4712  0595  0875               	opt asmopt_push
  4713                           	opt asmopt_off
  4714                           	xorlw	0^0	; case 0
  4715  0596  3A00               	skipnz
  4716  0597  1903               	goto	l439
  4717  0598  2D78               	xorlw	1^0	; case 1
  4718  0599  3A01               	skipnz
  4719  059A  1903               	goto	l441
  4720  059B  2D7D               	xorlw	2^1	; case 2
  4721  059C  3A03               	skipnz
  4722  059D  1903               	goto	l442
  4723  059E  2D82               	goto	l443
  4724  059F  2D87               	opt asmopt_pop
  4725                           
  4726                           	
  4727                           l440:	
  4728  05A0                     	line	61
  4729                           ;ADCconf.c: 61:     switch(just){
  4730                           	goto	l2363
  4731  05A0  2DAA               	line	62
  4732                           ;ADCconf.c: 62:         case 0:
  4733                           	
  4734                           l445:	
  4735  05A1                     	line	63
  4736                           ;ADCconf.c: 63:             ADCON1bits.ADFM = 0;
  4737                           	bsf	status, 5	;RP0=1, select bank1
  4738  05A1  1683               	bcf	status, 6	;RP1=0, select bank1
  4739  05A2  1303               	bcf	(159)^080h,7	;volatile
  4740  05A3  139F               	line	64
  4741                           ;ADCconf.c: 64:             break;
  4742                           	goto	l446
  4743  05A4  2DB7               	line	65
  4744                           ;ADCconf.c: 65:         default:
  4745                           	
  4746                           l447:	
  4747  05A5                     	line	66
  4748                           ;ADCconf.c: 66:             ADCON1bits.ADFM = 1;
  4749                           	bsf	status, 5	;RP0=1, select bank1
  4750  05A5  1683               	bcf	status, 6	;RP1=0, select bank1
  4751  05A6  1303               	bsf	(159)^080h,7	;volatile
  4752  05A7  179F               	line	67
  4753                           ;ADCconf.c: 67:             break;
  4754                           	goto	l446
  4755  05A8  2DB7               	line	68
  4756                           	
  4757                           l2361:	
  4758  05A9                     ;ADCconf.c: 68:     }
  4759                           	goto	l446
  4760  05A9  2DB7               	
  4761                           l444:	
  4762  05AA                     	
  4763                           l2363:	
  4764  05AA                     	movf	(funcAdc@just),w
  4765  05AA  0874               	movwf	(??_funcAdc+0)+0
  4766  05AB  00F5               	clrf	(??_funcAdc+0)+0+1
  4767  05AC  01F6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4768                           ; Switch size 1, requested type "space"
  4769                           ; Number of cases is 1, Range of values is 0 to 0
  4770                           ; switch strategies available:
  4771                           ; Name         Instructions Cycles
  4772                           ; simple_byte            4     3 (average)
  4773                           ; direct_byte           11     8 (fixed)
  4774                           ; jumptable            260     6 (fixed)
  4775                           ;	Chosen strategy is simple_byte
  4776                           
  4777                           	movf 1+(??_funcAdc+0)+0,w
  4778  05AD  0876               	opt asmopt_push
  4779                           	opt asmopt_off
  4780                           	xorlw	0^0	; case 0
  4781  05AE  3A00               	skipnz
  4782  05AF  1903               	goto	l2659
  4783  05B0  2DB2               	goto	l447
  4784  05B1  2DA5               	opt asmopt_pop
  4785                           	
  4786                           l2659:	
  4787  05B2                     ; Switch size 1, requested type "space"
  4788                           ; Number of cases is 1, Range of values is 0 to 0
  4789                           ; switch strategies available:
  4790                           ; Name         Instructions Cycles
  4791                           ; simple_byte            4     3 (average)
  4792                           ; direct_byte           11     8 (fixed)
  4793                           ; jumptable            260     6 (fixed)
  4794                           ;	Chosen strategy is simple_byte
  4795                           
  4796                           	movf 0+(??_funcAdc+0)+0,w
  4797  05B2  0875               	opt asmopt_push
  4798                           	opt asmopt_off
  4799                           	xorlw	0^0	; case 0
  4800  05B3  3A00               	skipnz
  4801  05B4  1903               	goto	l445
  4802  05B5  2DA1               	goto	l447
  4803  05B6  2DA5               	opt asmopt_pop
  4804                           
  4805                           	
  4806                           l446:	
  4807  05B7                     	line	71
  4808                           ;ADCconf.c: 71:     ADCON0bits.ADON = 1;
  4809                           	bcf	status, 5	;RP0=0, select bank0
  4810  05B7  1283               	bcf	status, 6	;RP1=0, select bank0
  4811  05B8  1303               	bsf	(31),0	;volatile
  4812  05B9  141F               	line	73
  4813                           ;ADCconf.c: 73:     PIR1bits.ADIF = 0;
  4814                           	bcf	(12),6	;volatile
  4815  05BA  130C               	line	74
  4816                           ;ADCconf.c: 74:     PIE1bits.ADIE = 1;
  4817                           	bsf	status, 5	;RP0=1, select bank1
  4818  05BB  1683               	bcf	status, 6	;RP1=0, select bank1
  4819  05BC  1303               	bsf	(140)^080h,6	;volatile
  4820  05BD  170C               	line	75
  4821                           ;ADCconf.c: 75:     INTCONbits.PEIE = 1;
  4822                           	bsf	(11),6	;volatile
  4823  05BE  170B               	line	76
  4824                           ;ADCconf.c: 76:     INTCONbits.GIE = 1;
  4825                           	bsf	(11),7	;volatile
  4826  05BF  178B               	line	78
  4827                           ;ADCconf.c: 78:     ADCON0bits.GO_nDONE = 1;
  4828                           	bcf	status, 5	;RP0=0, select bank0
  4829  05C0  1283               	bcf	status, 6	;RP1=0, select bank0
  4830  05C1  1303               	bsf	(31),1	;volatile
  4831  05C2  149F               	line	81
  4832                           ;ADCconf.c: 80:     return;
  4833                           	
  4834                           l448:	
  4835  05C3                     	return
  4836  05C3  0008               	opt stack 0
  4837                           GLOBAL	__end_of_funcAdc
  4838                           	__end_of_funcAdc:
  4839  05C4                     	signat	_funcAdc,12409
  4840                           	global	_PWMconf
  4841                           
  4842 ;; *************** function _PWMconf *****************
  4843 ;; Defined at:
  4844 ;;		line 269 in file "mainS1proyect.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;		None
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;		None
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      void 
  4851 ;; Registers used:
  4852 ;;		wreg
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4858 ;;      Params:         0       0       0       0       0
  4859 ;;      Locals:         0       0       0       0       0
  4860 ;;      Temps:          0       0       0       0       0
  4861 ;;      Totals:         0       0       0       0       0
  4862 ;;Total ram usage:        0 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    1
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_main
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4872                           	file	"mainS1proyect.c"
  4873                           	line	269
  4874                           global __ptext7
  4875                           __ptext7:	;psect for function _PWMconf
  4876  072E                     psect	text7
  4877                           	file	"mainS1proyect.c"
  4878                           	line	269
  4879                           	global	__size_of_PWMconf
  4880                           	__size_of_PWMconf	equ	__end_of_PWMconf-_PWMconf
  4881  001A                     	
  4882                           _PWMconf:	
  4883  072E                     ;incstack = 0
  4884                           	opt	stack 6
  4885                           ; Regs used in _PWMconf: [wreg]
  4886                           	line	271
  4887                           	
  4888                           l1903:	
  4889  072E                     ;mainS1proyect.c: 271:     TRISCbits.TRISC2 = 1;
  4890                           	bsf	status, 5	;RP0=1, select bank1
  4891  072E  1683               	bcf	status, 6	;RP1=0, select bank1
  4892  072F  1303               	bsf	(135)^080h,2	;volatile
  4893  0730  1507               	line	272
  4894                           	
  4895                           l1905:	
  4896  0731                     ;mainS1proyect.c: 272:     PR2 = 155;
  4897                           	movlw	low(09Bh)
  4898  0731  309B               	movwf	(146)^080h	;volatile
  4899  0732  0092               	line	273
  4900                           	
  4901                           l1907:	
  4902  0733                     ;mainS1proyect.c: 273:     CCP1CONbits.P1M1 = 0;
  4903                           	bcf	status, 5	;RP0=0, select bank0
  4904  0733  1283               	bcf	status, 6	;RP1=0, select bank0
  4905  0734  1303               	bcf	(23),7	;volatile
  4906  0735  1397               	line	274
  4907                           	
  4908                           l1909:	
  4909  0736                     ;mainS1proyect.c: 274:     CCP1CONbits.P1M0 = 0;
  4910                           	bcf	(23),6	;volatile
  4911  0736  1317               	line	276
  4912                           	
  4913                           l1911:	
  4914  0737                     ;mainS1proyect.c: 276:     CCP1CONbits.CCP1M0 = 0;
  4915                           	bcf	(23),0	;volatile
  4916  0737  1017               	line	277
  4917                           	
  4918                           l1913:	
  4919  0738                     ;mainS1proyect.c: 277:     CCP1CONbits.CCP1M1 = 0;
  4920                           	bcf	(23),1	;volatile
  4921  0738  1097               	line	278
  4922                           	
  4923                           l1915:	
  4924  0739                     ;mainS1proyect.c: 278:     CCP1CONbits.CCP1M2 = 1;
  4925                           	bsf	(23),2	;volatile
  4926  0739  1517               	line	279
  4927                           	
  4928                           l1917:	
  4929  073A                     ;mainS1proyect.c: 279:     CCP1CONbits.CCP1M3 = 1;
  4930                           	bsf	(23),3	;volatile
  4931  073A  1597               	line	281
  4932                           ;mainS1proyect.c: 281:     CCPR1L = 6;
  4933                           	movlw	low(06h)
  4934  073B  3006               	movwf	(21)	;volatile
  4935  073C  0095               	line	282
  4936                           	
  4937                           l1919:	
  4938  073D                     ;mainS1proyect.c: 282:     CCP1CONbits.DC1B0 = 1;
  4939                           	bsf	(23),4	;volatile
  4940  073D  1617               	line	283
  4941                           	
  4942                           l1921:	
  4943  073E                     ;mainS1proyect.c: 283:     CCP1CONbits.DC1B1 = 1;
  4944                           	bsf	(23),5	;volatile
  4945  073E  1697               	line	285
  4946                           	
  4947                           l1923:	
  4948  073F                     ;mainS1proyect.c: 285:     PIR1bits.TMR2IF = 0;
  4949                           	bcf	(12),1	;volatile
  4950  073F  108C               	line	288
  4951                           	
  4952                           l1925:	
  4953  0740                     ;mainS1proyect.c: 288:     T2CONbits.T2CKPS0 = 1;
  4954                           	bsf	(18),0	;volatile
  4955  0740  1412               	line	289
  4956                           	
  4957                           l1927:	
  4958  0741                     ;mainS1proyect.c: 289:     T2CONbits.T2CKPS1 = 1;
  4959                           	bsf	(18),1	;volatile
  4960  0741  1492               	line	291
  4961                           	
  4962                           l1929:	
  4963  0742                     ;mainS1proyect.c: 291:     T2CONbits.TMR2ON = 1;
  4964                           	bsf	(18),2	;volatile
  4965  0742  1512               	line	293
  4966                           	
  4967                           l1931:	
  4968  0743                     ;mainS1proyect.c: 293:     PIR1bits.TMR2IF = 0;
  4969                           	bcf	(12),1	;volatile
  4970  0743  108C               	line	295
  4971                           	
  4972                           l1933:	
  4973  0744                     ;mainS1proyect.c: 295:     TRISCbits.TRISC2 = 0;
  4974                           	bsf	status, 5	;RP0=1, select bank1
  4975  0744  1683               	bcf	status, 6	;RP1=0, select bank1
  4976  0745  1303               	bcf	(135)^080h,2	;volatile
  4977  0746  1107               	line	296
  4978                           	
  4979                           l172:	
  4980  0747                     	return
  4981  0747  0008               	opt stack 0
  4982                           GLOBAL	__end_of_PWMconf
  4983                           	__end_of_PWMconf:
  4984  0748                     	signat	_PWMconf,89
  4985                           	global	_Lcd_Write_String
  4986                           
  4987 ;; *************** function _Lcd_Write_String *****************
  4988 ;; Defined at:
  4989 ;;		line 127 in file "LCD.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  a               1    wreg     PTR unsigned char 
  4992 ;;		 -> STR_11(11), STR_10(16), STR_9(17), STR_8(17), 
  4993 ;;		 -> STR_7(10), STR_6(16), STR_5(15), STR_4(8), 
  4994 ;;		 -> STR_3(16), STR_2(17), STR_1(17), 
  4995 ;;  modo            2    3[BANK0 ] int 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  a               1    7[BANK0 ] PTR unsigned char 
  4998 ;;		 -> STR_11(11), STR_10(16), STR_9(17), STR_8(17), 
  4999 ;;		 -> STR_7(10), STR_6(16), STR_5(15), STR_4(8), 
  5000 ;;		 -> STR_3(16), STR_2(17), STR_1(17), 
  5001 ;;  i               2    5[BANK0 ] int 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5011 ;;      Params:         0       2       0       0       0
  5012 ;;      Locals:         0       3       0       0       0
  5013 ;;      Temps:          0       0       0       0       0
  5014 ;;      Totals:         0       5       0       0       0
  5015 ;;Total ram usage:        5 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; Hardware stack levels required when called:    3
  5018 ;; This function calls:
  5019 ;;		_Lcd_Write_Char
  5020 ;; This function is called by:
  5021 ;;		_main
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5025                           	file	"LCD.c"
  5026                           	line	127
  5027                           global __ptext8
  5028                           __ptext8:	;psect for function _Lcd_Write_String
  5029  06BE                     psect	text8
  5030                           	file	"LCD.c"
  5031                           	line	127
  5032                           	global	__size_of_Lcd_Write_String
  5033                           	__size_of_Lcd_Write_String	equ	__end_of_Lcd_Write_String-_Lcd_Write_String
  5034  002F                     	
  5035                           _Lcd_Write_String:	
  5036  06BE                     ;incstack = 0
  5037                           	opt	stack 4
  5038                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5039                           ;Lcd_Write_String@a stored from wreg
  5040                           	bcf	status, 5	;RP0=0, select bank0
  5041  06BE  1283               	bcf	status, 6	;RP1=0, select bank0
  5042  06BF  1303               	movwf	(Lcd_Write_String@a)
  5043  06C0  00A7               	line	130
  5044                           	
  5045                           l2383:	
  5046  06C1                     ;LCD.c: 127: void Lcd_Write_String(char *a,int modo);LCD.c: 128: {;LCD.c: 129:  int i;;L
                                 CD.c: 130:  for(i=0;a[i]!='\0';i++)
  5047                           	clrf	(Lcd_Write_String@i)
  5048  06C1  01A5               	clrf	(Lcd_Write_String@i+1)
  5049  06C2  01A6               	goto	l2389
  5050  06C3  2EDE               	
  5051                           l290:	
  5052  06C4                     	line	131
  5053                           	
  5054                           l2385:	
  5055  06C4                     ;LCD.c: 131:     Lcd_Write_Char(a[i],modo);
  5056                           	movf	(Lcd_Write_String@modo+1),w
  5057  06C4  0824               	movwf	(Lcd_Write_Char@modo+1)
  5058  06C5  00F5               	movf	(Lcd_Write_String@modo),w
  5059  06C6  0823               	movwf	(Lcd_Write_Char@modo)
  5060  06C7  00F4               	movf	(Lcd_Write_String@i),w
  5061  06C8  0825               	addwf	(Lcd_Write_String@a),w
  5062  06C9  0727               	movwf	fsr0
  5063  06CA  0084               	fcall	stringdir
  5064  06CB  120A  118A  2418  120A  118A  	fcall	_Lcd_Write_Char
  5065  06D0  120A  118A  2621  120A  118A  	
  5066                           l2387:	
  5067  06D5                     	movlw	01h
  5068  06D5  3001               	bcf	status, 5	;RP0=0, select bank0
  5069  06D6  1283               	bcf	status, 6	;RP1=0, select bank0
  5070  06D7  1303               	addwf	(Lcd_Write_String@i),f
  5071  06D8  07A5               	skipnc
  5072  06D9  1803               	incf	(Lcd_Write_String@i+1),f
  5073  06DA  0AA6               	movlw	0
  5074  06DB  3000               	addwf	(Lcd_Write_String@i+1),f
  5075  06DC  07A6               	goto	l2389
  5076  06DD  2EDE               	
  5077                           l289:	
  5078  06DE                     	
  5079                           l2389:	
  5080  06DE                     	movf	(Lcd_Write_String@i),w
  5081  06DE  0825               	addwf	(Lcd_Write_String@a),w
  5082  06DF  0727               	movwf	fsr0
  5083  06E0  0084               	fcall	stringdir
  5084  06E1  120A  118A  2418  120A  118A  	xorlw	0
  5085  06E6  3A00               	skipz
  5086  06E7  1D03               	goto	u1521
  5087  06E8  2EEA               	goto	u1520
  5088  06E9  2EEB               u1521:
  5089  06EA                     	goto	l2385
  5090  06EA  2EC4               u1520:
  5091  06EB                     	goto	l292
  5092  06EB  2EEC               	
  5093                           l291:	
  5094  06EC                     	line	132
  5095                           	
  5096                           l292:	
  5097  06EC                     	return
  5098  06EC  0008               	opt stack 0
  5099                           GLOBAL	__end_of_Lcd_Write_String
  5100                           	__end_of_Lcd_Write_String:
  5101  06ED                     	signat	_Lcd_Write_String,8313
  5102                           	global	_Lcd_Write_Char
  5103                           
  5104 ;; *************** function _Lcd_Write_Char *****************
  5105 ;; Defined at:
  5106 ;;		line 98 in file "LCD.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  a               1    wreg     unsigned char 
  5109 ;;  modo            2    4[COMMON] int 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;  a               1    2[BANK0 ] unsigned char 
  5112 ;;  y               1    1[BANK0 ] unsigned char 
  5113 ;;  temp            1    0[BANK0 ] unsigned char 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, status,2, status,0, pclath, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5123 ;;      Params:         2       0       0       0       0
  5124 ;;      Locals:         0       3       0       0       0
  5125 ;;      Temps:          1       0       0       0       0
  5126 ;;      Totals:         3       3       0       0       0
  5127 ;;Total ram usage:        6 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    2
  5130 ;; This function calls:
  5131 ;;		_Lcd_Port
  5132 ;; This function is called by:
  5133 ;;		_main
  5134 ;;		_Lcd_Write_String
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  5138                           	line	98
  5139                           global __ptext9
  5140                           __ptext9:	;psect for function _Lcd_Write_Char
  5141  0621                     psect	text9
  5142                           	file	"LCD.c"
  5143                           	line	98
  5144                           	global	__size_of_Lcd_Write_Char
  5145                           	__size_of_Lcd_Write_Char	equ	__end_of_Lcd_Write_Char-_Lcd_Write_Char
  5146  0052                     	
  5147                           _Lcd_Write_Char:	
  5148  0621                     ;incstack = 0
  5149                           	opt	stack 4
  5150                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5151                           ;Lcd_Write_Char@a stored from wreg
  5152                           	bcf	status, 5	;RP0=0, select bank0
  5153  0621  1283               	bcf	status, 6	;RP1=0, select bank0
  5154  0622  1303               	movwf	(Lcd_Write_Char@a)
  5155  0623  00A2               	line	100
  5156                           	
  5157                           l2319:	
  5158  0624                     ;LCD.c: 98: void Lcd_Write_Char(char a,int modo);LCD.c: 99: {;LCD.c: 100:     if(modo==4
                                 )
  5159                           		movlw	4
  5160  0624  3004               	xorwf	((Lcd_Write_Char@modo)),w
  5161  0625  0674               iorwf	((Lcd_Write_Char@modo+1)),w
  5162  0626  0475               	btfss	status,2
  5163  0627  1D03               	goto	u1491
  5164  0628  2E2A               	goto	u1490
  5165  0629  2E2B               u1491:
  5166  062A                     	goto	l2341
  5167  062A  2E5D               u1490:
  5168  062B                     	line	103
  5169                           	
  5170                           l2321:	
  5171  062B                     ;LCD.c: 101:     {;LCD.c: 102:    char temp,y;;LCD.c: 103:    temp = a&0x0F;
  5172                           	movf	(Lcd_Write_Char@a),w
  5173  062B  0822               	andlw	0Fh
  5174  062C  390F               	movwf	(??_Lcd_Write_Char+0)+0
  5175  062D  00F6               	movf	(??_Lcd_Write_Char+0)+0,w
  5176  062E  0876               	movwf	(Lcd_Write_Char@temp)
  5177  062F  00A0               	line	104
  5178                           ;LCD.c: 104:    y = a&0xF0;
  5179                           	movf	(Lcd_Write_Char@a),w
  5180  0630  0822               	andlw	0F0h
  5181  0631  39F0               	movwf	(??_Lcd_Write_Char+0)+0
  5182  0632  00F6               	movf	(??_Lcd_Write_Char+0)+0,w
  5183  0633  0876               	movwf	(Lcd_Write_Char@y)
  5184  0634  00A1               	line	105
  5185                           	
  5186                           l2323:	
  5187  0635                     ;LCD.c: 105:    PORTEbits.RE0 = 1;
  5188                           	bsf	(9),0	;volatile
  5189  0635  1409               	line	106
  5190                           	
  5191                           l2325:	
  5192  0636                     ;LCD.c: 106:    Lcd_Port(y>>4);
  5193                           	movf	(Lcd_Write_Char@y),w
  5194  0636  0821               	movwf	(??_Lcd_Write_Char+0)+0
  5195  0637  00F6               	movlw	04h
  5196  0638  3004               u1505:
  5197  0639                     	clrc
  5198  0639  1003               	rrf	(??_Lcd_Write_Char+0)+0,f
  5199  063A  0CF6               	addlw	-1
  5200  063B  3EFF               	skipz
  5201  063C  1D03               	goto	u1505
  5202  063D  2E39               	movf	0+(??_Lcd_Write_Char+0)+0,w
  5203  063E  0876               	fcall	_Lcd_Port
  5204  063F  120A  118A  26ED  120A  118A  	line	107
  5205                           	
  5206                           l2327:	
  5207  0644                     ;LCD.c: 107:    PORTEbits.RE1 = 1;
  5208                           	bcf	status, 5	;RP0=0, select bank0
  5209  0644  1283               	bcf	status, 6	;RP1=0, select bank0
  5210  0645  1303               	bsf	(9),1	;volatile
  5211  0646  1489               	line	108
  5212                           	
  5213                           l2329:	
  5214  0647                     ;LCD.c: 108:    _delay((unsigned long)((40)*(500000/4000000.0)));
  5215                           		opt asmopt_push
  5216                           	opt asmopt_off
  5217                           	nop2	;2 cycle nop
  5218  0647  2E48               	nop2	;2 cycle nop
  5219  0648  2E49               	nop
  5220  0649  0000               	opt asmopt_pop
  5221                           
  5222                           	line	109
  5223                           	
  5224                           l2331:	
  5225  064A                     ;LCD.c: 109:    PORTEbits.RE1 = 0;
  5226                           	bcf	status, 5	;RP0=0, select bank0
  5227  064A  1283               	bcf	status, 6	;RP1=0, select bank0
  5228  064B  1303               	bcf	(9),1	;volatile
  5229  064C  1089               	line	110
  5230                           	
  5231                           l2333:	
  5232  064D                     ;LCD.c: 110:    Lcd_Port(temp);
  5233                           	movf	(Lcd_Write_Char@temp),w
  5234  064D  0820               	fcall	_Lcd_Port
  5235  064E  120A  118A  26ED  120A  118A  	line	111
  5236                           	
  5237                           l2335:	
  5238  0653                     ;LCD.c: 111:    PORTEbits.RE1 = 1;
  5239                           	bcf	status, 5	;RP0=0, select bank0
  5240  0653  1283               	bcf	status, 6	;RP1=0, select bank0
  5241  0654  1303               	bsf	(9),1	;volatile
  5242  0655  1489               	line	112
  5243                           	
  5244                           l2337:	
  5245  0656                     ;LCD.c: 112:    _delay((unsigned long)((40)*(500000/4000000.0)));
  5246                           		opt asmopt_push
  5247                           	opt asmopt_off
  5248                           	nop2	;2 cycle nop
  5249  0656  2E57               	nop2	;2 cycle nop
  5250  0657  2E58               	nop
  5251  0658  0000               	opt asmopt_pop
  5252                           
  5253                           	line	113
  5254                           	
  5255                           l2339:	
  5256  0659                     ;LCD.c: 113:    PORTEbits.RE1 = 0;
  5257                           	bcf	status, 5	;RP0=0, select bank0
  5258  0659  1283               	bcf	status, 6	;RP1=0, select bank0
  5259  065A  1303               	bcf	(9),1	;volatile
  5260  065B  1089               	line	114
  5261                           ;LCD.c: 114:     }
  5262                           	goto	l286
  5263  065C  2E72               	line	117
  5264                           ;LCD.c: 117:     else if(modo==8)
  5265                           	
  5266                           l283:	
  5267  065D                     	
  5268                           l2341:	
  5269  065D                     		movlw	8
  5270  065D  3008               	xorwf	((Lcd_Write_Char@modo)),w
  5271  065E  0674               iorwf	((Lcd_Write_Char@modo+1)),w
  5272  065F  0475               	btfss	status,2
  5273  0660  1D03               	goto	u1511
  5274  0661  2E63               	goto	u1510
  5275  0662  2E64               u1511:
  5276  0663                     	goto	l286
  5277  0663  2E72               u1510:
  5278  0664                     	line	119
  5279                           	
  5280                           l2343:	
  5281  0664                     ;LCD.c: 118:     {;LCD.c: 119:     PORTEbits.RE0 = 1;
  5282                           	bsf	(9),0	;volatile
  5283  0664  1409               	line	120
  5284                           	
  5285                           l2345:	
  5286  0665                     ;LCD.c: 120:     PORTB = a;
  5287                           	movf	(Lcd_Write_Char@a),w
  5288  0665  0822               	movwf	(6)	;volatile
  5289  0666  0086               	line	121
  5290                           	
  5291                           l2347:	
  5292  0667                     ;LCD.c: 121:     PORTEbits.RE1 = 1;
  5293                           	bsf	(9),1	;volatile
  5294  0667  1489               	line	122
  5295                           ;LCD.c: 122:     _delay((unsigned long)((1)*(500000/4000.0)));
  5296                           	opt asmopt_push
  5297                           opt asmopt_off
  5298                           	movlw	41
  5299  0668  3029               movwf	((??_Lcd_Write_Char+0)+0),f
  5300  0669  00F6               	u1867:
  5301  066A                     decfsz	(??_Lcd_Write_Char+0)+0,f
  5302  066A  0BF6               	goto	u1867
  5303  066B  2E6A               	nop
  5304  066C  0000               opt asmopt_pop
  5305                           
  5306                           	line	123
  5307                           	
  5308                           l2349:	
  5309  066D                     ;LCD.c: 123:     PORTEbits.RE1 = 0;
  5310                           	bcf	status, 5	;RP0=0, select bank0
  5311  066D  1283               	bcf	status, 6	;RP1=0, select bank0
  5312  066E  1303               	bcf	(9),1	;volatile
  5313  066F  1089               	goto	l286
  5314  0670  2E72               	line	124
  5315                           ;LCD.c: 124:     }
  5316                           	
  5317                           l285:	
  5318  0671                     	goto	l286
  5319  0671  2E72               	
  5320                           l284:	
  5321  0672                     	line	125
  5322                           	
  5323                           l286:	
  5324  0672                     	return
  5325  0672  0008               	opt stack 0
  5326                           GLOBAL	__end_of_Lcd_Write_Char
  5327                           	__end_of_Lcd_Write_Char:
  5328  0673                     	signat	_Lcd_Write_Char,8313
  5329                           	global	_Lcd_Port
  5330                           
  5331 ;; *************** function _Lcd_Port *****************
  5332 ;; Defined at:
  5333 ;;		line 20 in file "LCD.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  a               1    wreg     unsigned char 
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;  a               1    3[COMMON] unsigned char 
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  1    wreg      void 
  5340 ;; Registers used:
  5341 ;;		wreg
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5347 ;;      Params:         0       0       0       0       0
  5348 ;;      Locals:         1       0       0       0       0
  5349 ;;      Temps:          0       0       0       0       0
  5350 ;;      Totals:         1       0       0       0       0
  5351 ;;Total ram usage:        1 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    1
  5354 ;; This function calls:
  5355 ;;		Nothing
  5356 ;; This function is called by:
  5357 ;;		_Lcd_Write_Char
  5358 ;;		_Lcd_Cmd
  5359 ;;		_Lcd_Init
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5363                           	line	20
  5364                           global __ptext10
  5365                           __ptext10:	;psect for function _Lcd_Port
  5366  06ED                     psect	text10
  5367                           	file	"LCD.c"
  5368                           	line	20
  5369                           	global	__size_of_Lcd_Port
  5370                           	__size_of_Lcd_Port	equ	__end_of_Lcd_Port-_Lcd_Port
  5371  0023                     	
  5372                           _Lcd_Port:	
  5373  06ED                     ;incstack = 0
  5374                           	opt	stack 4
  5375                           ; Regs used in _Lcd_Port: [wreg]
  5376                           ;Lcd_Port@a stored from wreg
  5377                           	movwf	(Lcd_Port@a)
  5378  06ED  00F3               	line	23
  5379                           	
  5380                           l2309:	
  5381  06EE                     ;LCD.c: 20: void Lcd_Port(char a);LCD.c: 21: {;LCD.c: 23:  if(a & 1)
  5382                           	btfss	(Lcd_Port@a),(0)&7
  5383  06EE  1C73               	goto	u1451
  5384  06EF  2EF1               	goto	u1450
  5385  06F0  2EF2               u1451:
  5386  06F1                     	goto	l257
  5387  06F1  2EF6               u1450:
  5388  06F2                     	line	24
  5389                           	
  5390                           l2311:	
  5391  06F2                     ;LCD.c: 24:   PORTBbits.RB4 = 1;
  5392                           	bcf	status, 5	;RP0=0, select bank0
  5393  06F2  1283               	bcf	status, 6	;RP1=0, select bank0
  5394  06F3  1303               	bsf	(6),4	;volatile
  5395  06F4  1606               	goto	l258
  5396  06F5  2EF9               	line	25
  5397                           ;LCD.c: 25:  else
  5398                           	
  5399                           l257:	
  5400  06F6                     	line	26
  5401                           ;LCD.c: 26:   PORTBbits.RB4 = 0;
  5402                           	bcf	status, 5	;RP0=0, select bank0
  5403  06F6  1283               	bcf	status, 6	;RP1=0, select bank0
  5404  06F7  1303               	bcf	(6),4	;volatile
  5405  06F8  1206               	
  5406                           l258:	
  5407  06F9                     	line	28
  5408                           ;LCD.c: 28:  if(a & 2)
  5409                           	btfss	(Lcd_Port@a),(1)&7
  5410  06F9  1CF3               	goto	u1461
  5411  06FA  2EFC               	goto	u1460
  5412  06FB  2EFD               u1461:
  5413  06FC                     	goto	l259
  5414  06FC  2EFF               u1460:
  5415  06FD                     	line	29
  5416                           	
  5417                           l2313:	
  5418  06FD                     ;LCD.c: 29:   PORTBbits.RB5 = 1;
  5419                           	bsf	(6),5	;volatile
  5420  06FD  1686               	goto	l260
  5421  06FE  2F00               	line	30
  5422                           ;LCD.c: 30:  else
  5423                           	
  5424                           l259:	
  5425  06FF                     	line	31
  5426                           ;LCD.c: 31:   PORTBbits.RB5 = 0;
  5427                           	bcf	(6),5	;volatile
  5428  06FF  1286               	
  5429                           l260:	
  5430  0700                     	line	33
  5431                           ;LCD.c: 33:  if(a & 4)
  5432                           	btfss	(Lcd_Port@a),(2)&7
  5433  0700  1D73               	goto	u1471
  5434  0701  2F03               	goto	u1470
  5435  0702  2F04               u1471:
  5436  0703                     	goto	l261
  5437  0703  2F06               u1470:
  5438  0704                     	line	34
  5439                           	
  5440                           l2315:	
  5441  0704                     ;LCD.c: 34:   PORTBbits.RB6 = 1;
  5442                           	bsf	(6),6	;volatile
  5443  0704  1706               	goto	l262
  5444  0705  2F07               	line	35
  5445                           ;LCD.c: 35:  else
  5446                           	
  5447                           l261:	
  5448  0706                     	line	36
  5449                           ;LCD.c: 36:   PORTBbits.RB6 = 0;
  5450                           	bcf	(6),6	;volatile
  5451  0706  1306               	
  5452                           l262:	
  5453  0707                     	line	38
  5454                           ;LCD.c: 38:  if(a & 8)
  5455                           	btfss	(Lcd_Port@a),(3)&7
  5456  0707  1DF3               	goto	u1481
  5457  0708  2F0A               	goto	u1480
  5458  0709  2F0B               u1481:
  5459  070A                     	goto	l263
  5460  070A  2F0D               u1480:
  5461  070B                     	line	39
  5462                           	
  5463                           l2317:	
  5464  070B                     ;LCD.c: 39:   PORTBbits.RB7 = 1;
  5465                           	bsf	(6),7	;volatile
  5466  070B  1786               	goto	l265
  5467  070C  2F0F               	line	40
  5468                           ;LCD.c: 40:  else
  5469                           	
  5470                           l263:	
  5471  070D                     	line	41
  5472                           ;LCD.c: 41:   PORTBbits.RB7 = 0;
  5473                           	bcf	(6),7	;volatile
  5474  070D  1386               	goto	l265
  5475  070E  2F0F               	
  5476                           l264:	
  5477  070F                     	line	42
  5478                           	
  5479                           l265:	
  5480  070F                     	return
  5481  070F  0008               	opt stack 0
  5482                           GLOBAL	__end_of_Lcd_Port
  5483                           	__end_of_Lcd_Port:
  5484  0710                     	signat	_Lcd_Port,4217
  5485                           	global	_Lcd_Set_Cursor_8bits
  5486                           
  5487 ;; *************** function _Lcd_Set_Cursor_8bits *****************
  5488 ;; Defined at:
  5489 ;;		line 179 in file "LCD.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  y               1    wreg     unsigned char 
  5492 ;;  x               1    5[COMMON] unsigned char 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  y               1    6[COMMON] unsigned char 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1    wreg      void 
  5497 ;; Registers used:
  5498 ;;		wreg, status,2, status,0, pclath, cstack
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5504 ;;      Params:         1       0       0       0       0
  5505 ;;      Locals:         1       0       0       0       0
  5506 ;;      Temps:          0       0       0       0       0
  5507 ;;      Totals:         2       0       0       0       0
  5508 ;;Total ram usage:        2 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; Hardware stack levels required when called:    2
  5511 ;; This function calls:
  5512 ;;		_Lcd_Cmd_8bits
  5513 ;; This function is called by:
  5514 ;;		_main
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5518                           	line	179
  5519                           global __ptext11
  5520                           __ptext11:	;psect for function _Lcd_Set_Cursor_8bits
  5521  0710                     psect	text11
  5522                           	file	"LCD.c"
  5523                           	line	179
  5524                           	global	__size_of_Lcd_Set_Cursor_8bits
  5525                           	__size_of_Lcd_Set_Cursor_8bits	equ	__end_of_Lcd_Set_Cursor_8bits-_Lcd_Set_Cursor_8bits

  5526  001E                     	
  5527                           _Lcd_Set_Cursor_8bits:	
  5528  0710                     ;incstack = 0
  5529                           	opt	stack 5
  5530                           ; Regs used in _Lcd_Set_Cursor_8bits: [wreg+status,2+status,0+pclath+cstack]
  5531                           ;Lcd_Set_Cursor_8bits@y stored from wreg
  5532                           	movwf	(Lcd_Set_Cursor_8bits@y)
  5533  0710  00F6               	line	182
  5534                           	
  5535                           l1993:	
  5536  0711                     ;LCD.c: 179: void Lcd_Set_Cursor_8bits(unsigned char y, unsigned char x);LCD.c: 180: {;L
                                 CD.c: 182:     if(y == 1)
  5537                           		decf	((Lcd_Set_Cursor_8bits@y)),w
  5538  0711  0376               	btfss	status,2
  5539  0712  1D03               	goto	u1141
  5540  0713  2F15               	goto	u1140
  5541  0714  2F16               u1141:
  5542  0715                     	goto	l1997
  5543  0715  2F1E               u1140:
  5544  0716                     	line	184
  5545                           	
  5546                           l1995:	
  5547  0716                     ;LCD.c: 183:  {;LCD.c: 184:         Lcd_Cmd_8bits(0x80 + x - 1);
  5548                           	movf	(Lcd_Set_Cursor_8bits@x),w
  5549  0716  0875               	addlw	07Fh
  5550  0717  3E7F               	fcall	_Lcd_Cmd_8bits
  5551  0718  120A  118A  2790  120A  118A  	line	185
  5552                           ;LCD.c: 185:  }
  5553                           	goto	l316
  5554  071D  2F2D               	line	187
  5555                           ;LCD.c: 187:  else if(y == 2)
  5556                           	
  5557                           l313:	
  5558  071E                     	
  5559                           l1997:	
  5560  071E                     		movlw	2
  5561  071E  3002               	xorwf	((Lcd_Set_Cursor_8bits@y)),w
  5562  071F  0676               	btfss	status,2
  5563  0720  1D03               	goto	u1151
  5564  0721  2F23               	goto	u1150
  5565  0722  2F24               u1151:
  5566  0723                     	goto	l316
  5567  0723  2F2D               u1150:
  5568  0724                     	line	189
  5569                           	
  5570                           l1999:	
  5571  0724                     ;LCD.c: 188:  {;LCD.c: 189:   Lcd_Cmd_8bits(0xC0 + x - 1);
  5572                           	movf	(Lcd_Set_Cursor_8bits@x),w
  5573  0724  0875               	addlw	0BFh
  5574  0725  3EBF               	fcall	_Lcd_Cmd_8bits
  5575  0726  120A  118A  2790  120A  118A  	goto	l316
  5576  072B  2F2D               	line	190
  5577                           ;LCD.c: 190:  }
  5578                           	
  5579                           l315:	
  5580  072C                     	goto	l316
  5581  072C  2F2D               	
  5582                           l314:	
  5583  072D                     	line	191
  5584                           	
  5585                           l316:	
  5586  072D                     	return
  5587  072D  0008               	opt stack 0
  5588                           GLOBAL	__end_of_Lcd_Set_Cursor_8bits
  5589                           	__end_of_Lcd_Set_Cursor_8bits:
  5590  072E                     	signat	_Lcd_Set_Cursor_8bits,8313
  5591                           	global	_Lcd_Init_8bits
  5592                           
  5593 ;; *************** function _Lcd_Init_8bits *****************
  5594 ;; Defined at:
  5595 ;;		line 193 in file "LCD.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      void 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0, pclath, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5609 ;;      Params:         0       0       0       0       0
  5610 ;;      Locals:         0       0       0       0       0
  5611 ;;      Temps:          2       0       0       0       0
  5612 ;;      Totals:         2       0       0       0       0
  5613 ;;Total ram usage:        2 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:    2
  5616 ;; This function calls:
  5617 ;;		_Lcd_Cmd_8bits
  5618 ;; This function is called by:
  5619 ;;		_main
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5623                           	line	193
  5624                           global __ptext12
  5625                           __ptext12:	;psect for function _Lcd_Init_8bits
  5626  0673                     psect	text12
  5627                           	file	"LCD.c"
  5628                           	line	193
  5629                           	global	__size_of_Lcd_Init_8bits
  5630                           	__size_of_Lcd_Init_8bits	equ	__end_of_Lcd_Init_8bits-_Lcd_Init_8bits
  5631  004B                     	
  5632                           _Lcd_Init_8bits:	
  5633  0673                     ;incstack = 0
  5634                           	opt	stack 5
  5635                           ; Regs used in _Lcd_Init_8bits: [wreg+status,2+status,0+pclath+cstack]
  5636                           	line	195
  5637                           	
  5638                           l1935:	
  5639  0673                     ;LCD.c: 195:     PORTB = 0;
  5640                           	bcf	status, 5	;RP0=0, select bank0
  5641  0673  1283               	bcf	status, 6	;RP1=0, select bank0
  5642  0674  1303               	clrf	(6)	;volatile
  5643  0675  0186               	line	196
  5644                           	
  5645                           l1937:	
  5646  0676                     ;LCD.c: 196:     _delay((unsigned long)((20)*(500000/4000.0)));
  5647                           	opt asmopt_push
  5648                           opt asmopt_off
  5649                           movlw	4
  5650  0676  3004               movwf	((??_Lcd_Init_8bits+0)+0+1),f
  5651  0677  00F6               	movlw	61
  5652  0678  303D               movwf	((??_Lcd_Init_8bits+0)+0),f
  5653  0679  00F5               	u1877:
  5654  067A                     decfsz	((??_Lcd_Init_8bits+0)+0),f
  5655  067A  0BF5               	goto	u1877
  5656  067B  2E7A               	decfsz	((??_Lcd_Init_8bits+0)+0+1),f
  5657  067C  0BF6               	goto	u1877
  5658  067D  2E7A               	nop2
  5659  067E  2E7F               opt asmopt_pop
  5660                           
  5661                           	line	197
  5662                           	
  5663                           l1939:	
  5664  067F                     ;LCD.c: 197:     Lcd_Cmd_8bits(0x030);
  5665                           	movlw	low(030h)
  5666  067F  3030               	fcall	_Lcd_Cmd_8bits
  5667  0680  120A  118A  2790  120A  118A  	line	198
  5668                           	
  5669                           l1941:	
  5670  0685                     ;LCD.c: 198:     _delay((unsigned long)((5)*(500000/4000.0)));
  5671                           	opt asmopt_push
  5672                           opt asmopt_off
  5673                           	movlw	208
  5674  0685  30D0               movwf	((??_Lcd_Init_8bits+0)+0),f
  5675  0686  00F5               	u1887:
  5676  0687                     decfsz	(??_Lcd_Init_8bits+0)+0,f
  5677  0687  0BF5               	goto	u1887
  5678  0688  2E87               opt asmopt_pop
  5679                           
  5680                           	line	199
  5681                           	
  5682                           l1943:	
  5683  0689                     ;LCD.c: 199:     Lcd_Cmd_8bits(0x030);
  5684                           	movlw	low(030h)
  5685  0689  3030               	fcall	_Lcd_Cmd_8bits
  5686  068A  120A  118A  2790  120A  118A  	line	200
  5687                           	
  5688                           l1945:	
  5689  068F                     ;LCD.c: 200:     _delay((unsigned long)((160)*(500000/4000000.0)));
  5690                           	opt asmopt_push
  5691                           opt asmopt_off
  5692                           	movlw	6
  5693  068F  3006               movwf	((??_Lcd_Init_8bits+0)+0),f
  5694  0690  00F5               	u1897:
  5695  0691                     decfsz	(??_Lcd_Init_8bits+0)+0,f
  5696  0691  0BF5               	goto	u1897
  5697  0692  2E91               	nop
  5698  0693  0000               opt asmopt_pop
  5699                           
  5700                           	line	201
  5701                           	
  5702                           l1947:	
  5703  0694                     ;LCD.c: 201:     Lcd_Cmd_8bits(0x030);
  5704                           	movlw	low(030h)
  5705  0694  3030               	fcall	_Lcd_Cmd_8bits
  5706  0695  120A  118A  2790  120A  118A  	line	202
  5707                           	
  5708                           l1949:	
  5709  069A                     ;LCD.c: 202:     _delay((unsigned long)((160)*(500000/4000000.0)));
  5710                           	opt asmopt_push
  5711                           opt asmopt_off
  5712                           	movlw	6
  5713  069A  3006               movwf	((??_Lcd_Init_8bits+0)+0),f
  5714  069B  00F5               	u1907:
  5715  069C                     decfsz	(??_Lcd_Init_8bits+0)+0,f
  5716  069C  0BF5               	goto	u1907
  5717  069D  2E9C               	nop
  5718  069E  0000               opt asmopt_pop
  5719                           
  5720                           	line	204
  5721                           	
  5722                           l1951:	
  5723  069F                     ;LCD.c: 204:     Lcd_Cmd_8bits(0x38);
  5724                           	movlw	low(038h)
  5725  069F  3038               	fcall	_Lcd_Cmd_8bits
  5726  06A0  120A  118A  2790  120A  118A  	line	208
  5727                           	
  5728                           l1953:	
  5729  06A5                     ;LCD.c: 208:     Lcd_Cmd_8bits(0x14);
  5730                           	movlw	low(014h)
  5731  06A5  3014               	fcall	_Lcd_Cmd_8bits
  5732  06A6  120A  118A  2790  120A  118A  	line	209
  5733                           	
  5734                           l1955:	
  5735  06AB                     ;LCD.c: 209:     Lcd_Cmd_8bits(0x6);
  5736                           	movlw	low(06h)
  5737  06AB  3006               	fcall	_Lcd_Cmd_8bits
  5738  06AC  120A  118A  2790  120A  118A  	line	210
  5739                           	
  5740                           l1957:	
  5741  06B1                     ;LCD.c: 210:     Lcd_Cmd_8bits(0xc);
  5742                           	movlw	low(0Ch)
  5743  06B1  300C               	fcall	_Lcd_Cmd_8bits
  5744  06B2  120A  118A  2790  120A  118A  	line	211
  5745                           	
  5746                           l1959:	
  5747  06B7                     ;LCD.c: 211:     Lcd_Cmd_8bits(0x2);
  5748                           	movlw	low(02h)
  5749  06B7  3002               	fcall	_Lcd_Cmd_8bits
  5750  06B8  120A  118A  2790  120A  118A  	line	212
  5751                           	
  5752                           l319:	
  5753  06BD                     	return
  5754  06BD  0008               	opt stack 0
  5755                           GLOBAL	__end_of_Lcd_Init_8bits
  5756                           	__end_of_Lcd_Init_8bits:
  5757  06BE                     	signat	_Lcd_Init_8bits,89
  5758                           	global	_Lcd_Clear_8bits
  5759                           
  5760 ;; *************** function _Lcd_Clear_8bits *****************
  5761 ;; Defined at:
  5762 ;;		line 160 in file "LCD.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;		None
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2, status,0, pclath, cstack
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5776 ;;      Params:         0       0       0       0       0
  5777 ;;      Locals:         0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0
  5779 ;;      Totals:         0       0       0       0       0
  5780 ;;Total ram usage:        0 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:    2
  5783 ;; This function calls:
  5784 ;;		_Lcd_Cmd_8bits
  5785 ;; This function is called by:
  5786 ;;		_main
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5790                           	line	160
  5791                           global __ptext13
  5792                           __ptext13:	;psect for function _Lcd_Clear_8bits
  5793  07AD                     psect	text13
  5794                           	file	"LCD.c"
  5795                           	line	160
  5796                           	global	__size_of_Lcd_Clear_8bits
  5797                           	__size_of_Lcd_Clear_8bits	equ	__end_of_Lcd_Clear_8bits-_Lcd_Clear_8bits
  5798  000D                     	
  5799                           _Lcd_Clear_8bits:	
  5800  07AD                     ;incstack = 0
  5801                           	opt	stack 5
  5802                           ; Regs used in _Lcd_Clear_8bits: [wreg+status,2+status,0+pclath+cstack]
  5803                           	line	162
  5804                           	
  5805                           l1991:	
  5806  07AD                     ;LCD.c: 162:     Lcd_Cmd_8bits(0);
  5807                           	movlw	low(0)
  5808  07AD  3000               	fcall	_Lcd_Cmd_8bits
  5809  07AE  120A  118A  2790  120A  118A  	line	163
  5810                           ;LCD.c: 163:  Lcd_Cmd_8bits(1);
  5811                           	movlw	low(01h)
  5812  07B3  3001               	fcall	_Lcd_Cmd_8bits
  5813  07B4  120A  118A  2790  120A  118A  	line	164
  5814                           	
  5815                           l304:	
  5816  07B9                     	return
  5817  07B9  0008               	opt stack 0
  5818                           GLOBAL	__end_of_Lcd_Clear_8bits
  5819                           	__end_of_Lcd_Clear_8bits:
  5820  07BA                     	signat	_Lcd_Clear_8bits,89
  5821                           	global	_Lcd_Cmd_8bits
  5822                           
  5823 ;; *************** function _Lcd_Cmd_8bits *****************
  5824 ;; Defined at:
  5825 ;;		line 149 in file "LCD.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  comando         1    wreg     unsigned char 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  comando         1    4[COMMON] unsigned char 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      void 
  5832 ;; Registers used:
  5833 ;;		wreg
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5839 ;;      Params:         0       0       0       0       0
  5840 ;;      Locals:         1       0       0       0       0
  5841 ;;      Temps:          1       0       0       0       0
  5842 ;;      Totals:         2       0       0       0       0
  5843 ;;Total ram usage:        2 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    1
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_Lcd_Clear_8bits
  5850 ;;		_Lcd_Set_Cursor_8bits
  5851 ;;		_Lcd_Init_8bits
  5852 ;;		_Lcd_Shift_Right_8bits
  5853 ;;		_Lcd_Shift_Left_8bits
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5857                           	line	149
  5858                           global __ptext14
  5859                           __ptext14:	;psect for function _Lcd_Cmd_8bits
  5860  0790                     psect	text14
  5861                           	file	"LCD.c"
  5862                           	line	149
  5863                           	global	__size_of_Lcd_Cmd_8bits
  5864                           	__size_of_Lcd_Cmd_8bits	equ	__end_of_Lcd_Cmd_8bits-_Lcd_Cmd_8bits
  5865  0010                     	
  5866                           _Lcd_Cmd_8bits:	
  5867  0790                     ;incstack = 0
  5868                           	opt	stack 5
  5869                           ; Regs used in _Lcd_Cmd_8bits: [wreg]
  5870                           ;Lcd_Cmd_8bits@comando stored from wreg
  5871                           	movwf	(Lcd_Cmd_8bits@comando)
  5872  0790  00F4               	line	151
  5873                           	
  5874                           l1831:	
  5875  0791                     ;LCD.c: 149: void Lcd_Cmd_8bits(unsigned char comando);LCD.c: 150: {;LCD.c: 151:  PORTEb
                                 its.RE0 = 0;
  5876                           	bcf	status, 5	;RP0=0, select bank0
  5877  0791  1283               	bcf	status, 6	;RP1=0, select bank0
  5878  0792  1303               	bcf	(9),0	;volatile
  5879  0793  1009               	line	152
  5880                           	
  5881                           l1833:	
  5882  0794                     ;LCD.c: 152:  PORTB = comando;
  5883                           	movf	(Lcd_Cmd_8bits@comando),w
  5884  0794  0874               	movwf	(6)	;volatile
  5885  0795  0086               	line	154
  5886                           	
  5887                           l1835:	
  5888  0796                     ;LCD.c: 154:     PORTEbits.RE1 = 1;
  5889                           	bsf	(9),1	;volatile
  5890  0796  1489               	line	155
  5891                           ;LCD.c: 155:     _delay((unsigned long)((4)*(500000/4000.0)));
  5892                           	opt asmopt_push
  5893                           opt asmopt_off
  5894                           	movlw	166
  5895  0797  30A6               movwf	((??_Lcd_Cmd_8bits+0)+0),f
  5896  0798  00F3               	u1917:
  5897  0799                     decfsz	(??_Lcd_Cmd_8bits+0)+0,f
  5898  0799  0BF3               	goto	u1917
  5899  079A  2F99               	nop
  5900  079B  0000               opt asmopt_pop
  5901                           
  5902                           	line	156
  5903                           	
  5904                           l1837:	
  5905  079C                     ;LCD.c: 156:     PORTEbits.RE1 = 0;
  5906                           	bcf	status, 5	;RP0=0, select bank0
  5907  079C  1283               	bcf	status, 6	;RP1=0, select bank0
  5908  079D  1303               	bcf	(9),1	;volatile
  5909  079E  1089               	line	158
  5910                           	
  5911                           l301:	
  5912  079F                     	return
  5913  079F  0008               	opt stack 0
  5914                           GLOBAL	__end_of_Lcd_Cmd_8bits
  5915                           	__end_of_Lcd_Cmd_8bits:
  5916  07A0                     	signat	_Lcd_Cmd_8bits,4217
  5917                           	global	_InitKeypad
  5918                           
  5919 ;; *************** function _InitKeypad *****************
  5920 ;; Defined at:
  5921 ;;		line 97 in file "KEYPAD.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;		None
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;		None
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      void 
  5928 ;; Registers used:
  5929 ;;		wreg, status,2
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5935 ;;      Params:         0       0       0       0       0
  5936 ;;      Locals:         0       0       0       0       0
  5937 ;;      Temps:          0       0       0       0       0
  5938 ;;      Totals:         0       0       0       0       0
  5939 ;;Total ram usage:        0 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    1
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_main
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5949                           	file	"KEYPAD.c"
  5950                           	line	97
  5951                           global __ptext15
  5952                           __ptext15:	;psect for function _InitKeypad
  5953  07BA                     psect	text15
  5954                           	file	"KEYPAD.c"
  5955                           	line	97
  5956                           	global	__size_of_InitKeypad
  5957                           	__size_of_InitKeypad	equ	__end_of_InitKeypad-_InitKeypad
  5958  0009                     	
  5959                           _InitKeypad:	
  5960  07BA                     ;incstack = 0
  5961                           	opt	stack 6
  5962                           ; Regs used in _InitKeypad: [wreg+status,2]
  5963                           	line	98
  5964                           	
  5965                           l1961:	
  5966  07BA                     ;KEYPAD.c: 98:             PORTD = 0x00;
  5967                           	bcf	status, 5	;RP0=0, select bank0
  5968  07BA  1283               	bcf	status, 6	;RP1=0, select bank0
  5969  07BB  1303               	clrf	(8)	;volatile
  5970  07BC  0188               	line	99
  5971                           	
  5972                           l1963:	
  5973  07BD                     ;KEYPAD.c: 99:             TRISD = 0xF0;
  5974                           	movlw	low(0F0h)
  5975  07BD  30F0               	bsf	status, 5	;RP0=1, select bank1
  5976  07BE  1683               	bcf	status, 6	;RP1=0, select bank1
  5977  07BF  1303               	movwf	(136)^080h	;volatile
  5978  07C0  0088               	line	100
  5979                           	
  5980                           l1965:	
  5981  07C1                     ;KEYPAD.c: 100:             OPTION_REG &= 0xFF;
  5982                           	movf	(129)^080h,w	;volatile
  5983  07C1  0801               	line	101
  5984                           	
  5985                           l419:	
  5986  07C2                     	return
  5987  07C2  0008               	opt stack 0
  5988                           GLOBAL	__end_of_InitKeypad
  5989                           	__end_of_InitKeypad:
  5990  07C3                     	signat	_InitKeypad,89
  5991                           	global	_I2C_Slave_Init
  5992                           
  5993 ;; *************** function _I2C_Slave_Init *****************
  5994 ;; Defined at:
  5995 ;;		line 93 in file "I2C.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;  address         1    wreg     unsigned char 
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;  address         1    3[COMMON] unsigned char 
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  1    wreg      void 
  6002 ;; Registers used:
  6003 ;;		wreg
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6009 ;;      Params:         0       0       0       0       0
  6010 ;;      Locals:         1       0       0       0       0
  6011 ;;      Temps:          0       0       0       0       0
  6012 ;;      Totals:         1       0       0       0       0
  6013 ;;Total ram usage:        1 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; Hardware stack levels required when called:    1
  6016 ;; This function calls:
  6017 ;;		Nothing
  6018 ;; This function is called by:
  6019 ;;		_main
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  6023                           	file	"I2C.c"
  6024                           	line	93
  6025                           global __ptext16
  6026                           __ptext16:	;psect for function _I2C_Slave_Init
  6027  0748                     psect	text16
  6028                           	file	"I2C.c"
  6029                           	line	93
  6030                           	global	__size_of_I2C_Slave_Init
  6031                           	__size_of_I2C_Slave_Init	equ	__end_of_I2C_Slave_Init-_I2C_Slave_Init
  6032  001A                     	
  6033                           _I2C_Slave_Init:	
  6034  0748                     ;incstack = 0
  6035                           	opt	stack 6
  6036                           ; Regs used in _I2C_Slave_Init: [wreg]
  6037                           ;I2C_Slave_Init@address stored from wreg
  6038                           	movwf	(I2C_Slave_Init@address)
  6039  0748  00F3               	line	95
  6040                           	
  6041                           l1977:	
  6042  0749                     ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
                                 dress;
  6043                           	movf	(I2C_Slave_Init@address),w
  6044  0749  0873               	bsf	status, 5	;RP0=1, select bank1
  6045  074A  1683               	bcf	status, 6	;RP1=0, select bank1
  6046  074B  1303               	movwf	(147)^080h	;volatile
  6047  074C  0093               	line	96
  6048                           ;I2C.c: 96:     SSPCON = 0x36;
  6049                           	movlw	low(036h)
  6050  074D  3036               	bcf	status, 5	;RP0=0, select bank0
  6051  074E  1283               	bcf	status, 6	;RP1=0, select bank0
  6052  074F  1303               	movwf	(20)	;volatile
  6053  0750  0094               	line	97
  6054                           ;I2C.c: 97:     SSPSTAT = 0x80;
  6055                           	movlw	low(080h)
  6056  0751  3080               	bsf	status, 5	;RP0=1, select bank1
  6057  0752  1683               	bcf	status, 6	;RP1=0, select bank1
  6058  0753  1303               	movwf	(148)^080h	;volatile
  6059  0754  0094               	line	98
  6060                           ;I2C.c: 98:     SSPCON2 = 0x01;
  6061                           	movlw	low(01h)
  6062  0755  3001               	movwf	(145)^080h	;volatile
  6063  0756  0091               	line	99
  6064                           	
  6065                           l1979:	
  6066  0757                     ;I2C.c: 99:     TRISC3 = 1;
  6067                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  6068  0757  1587               	line	100
  6069                           	
  6070                           l1981:	
  6071  0758                     ;I2C.c: 100:     TRISC4 = 1;
  6072                           	bsf	(1084/8)^080h,(1084)&7	;volatile
  6073  0758  1607               	line	101
  6074                           	
  6075                           l1983:	
  6076  0759                     ;I2C.c: 101:     GIE = 1;
  6077                           	bsf	(95/8),(95)&7	;volatile
  6078  0759  178B               	line	102
  6079                           	
  6080                           l1985:	
  6081  075A                     ;I2C.c: 102:     PEIE = 1;
  6082                           	bsf	(94/8),(94)&7	;volatile
  6083  075A  170B               	line	103
  6084                           	
  6085                           l1987:	
  6086  075B                     ;I2C.c: 103:     SSPIF = 0;
  6087                           	bcf	status, 5	;RP0=0, select bank0
  6088  075B  1283               	bcf	status, 6	;RP1=0, select bank0
  6089  075C  1303               	bcf	(99/8),(99)&7	;volatile
  6090  075D  118C               	line	104
  6091                           	
  6092                           l1989:	
  6093  075E                     ;I2C.c: 104:     SSPIE = 1;
  6094                           	bsf	status, 5	;RP0=1, select bank1
  6095  075E  1683               	bcf	status, 6	;RP1=0, select bank1
  6096  075F  1303               	bsf	(1123/8)^080h,(1123)&7	;volatile
  6097  0760  158C               	line	105
  6098                           	
  6099                           l246:	
  6100  0761                     	return
  6101  0761  0008               	opt stack 0
  6102                           GLOBAL	__end_of_I2C_Slave_Init
  6103                           	__end_of_I2C_Slave_Init:
  6104  0762                     	signat	_I2C_Slave_Init,4217
  6105                           	global	_interrupciones
  6106                           
  6107 ;; *************** function _interrupciones *****************
  6108 ;; Defined at:
  6109 ;;		line 58 in file "mainS1proyect.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;		None
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;		None
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  1    wreg      void 
  6116 ;; Registers used:
  6117 ;;		wreg, status,2
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6123 ;;      Params:         0       0       0       0       0
  6124 ;;      Locals:         0       0       0       0       0
  6125 ;;      Temps:          3       0       0       0       0
  6126 ;;      Totals:         3       0       0       0       0
  6127 ;;Total ram usage:        3 bytes
  6128 ;; Hardware stack levels used:    1
  6129 ;; This function calls:
  6130 ;;		Nothing
  6131 ;; This function is called by:
  6132 ;;		Interrupt level 1
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  6136                           	file	"mainS1proyect.c"
  6137                           	line	58
  6138                           global __ptext17
  6139                           __ptext17:	;psect for function _interrupciones
  6140  04BE                     psect	text17
  6141                           	file	"mainS1proyect.c"
  6142                           	line	58
  6143                           	global	__size_of_interrupciones
  6144                           	__size_of_interrupciones	equ	__end_of_interrupciones-_interrupciones
  6145  0095                     	
  6146                           _interrupciones:	
  6147  04BE                     ;incstack = 0
  6148                           	opt	stack 4
  6149                           ; Regs used in _interrupciones: [wreg+status,2]
  6150                           psect	intentry,class=CODE,delta=2
  6151                           global __pintentry
  6152                           __pintentry:
  6153  0004                     global interrupt_function
  6154                           interrupt_function:
  6155  0004                     	global saved_w
  6156                           	saved_w	set	btemp+0
  6157  007E                     	movwf	saved_w
  6158  0004  00FE               	swapf	status,w
  6159  0005  0E03               	movwf	(??_interrupciones+1)
  6160  0006  00F1               	movf	pclath,w
  6161  0007  080A               	movwf	(??_interrupciones+2)
  6162  0008  00F2               	ljmp	_interrupciones
  6163  0009  120A  118A  2CBE   psect	text17
  6164                           	line	60
  6165                           	
  6166                           i1l2029:	
  6167  04BE                     ;mainS1proyect.c: 60:     if(PIR1bits.SSPIF == 1){
  6168                           	bcf	status, 5	;RP0=0, select bank0
  6169  04BE  1283               	bcf	status, 6	;RP1=0, select bank0
  6170  04BF  1303               	btfss	(12),3	;volatile
  6171  04C0  1D8C               	goto	u118_21
  6172  04C1  2CC3               	goto	u118_20
  6173  04C2  2CC4               u118_21:
  6174  04C3                     	goto	i1l121
  6175  04C3  2D1F               u118_20:
  6176  04C4                     	line	62
  6177                           	
  6178                           i1l2031:	
  6179  04C4                     ;mainS1proyect.c: 62:         SSPCONbits.CKP = 0;
  6180                           	bcf	(20),4	;volatile
  6181  04C4  1214               	line	64
  6182                           ;mainS1proyect.c: 64:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  6183                           	btfsc	(20),6	;volatile
  6184  04C5  1B14               	goto	u119_21
  6185  04C6  2CC8               	goto	u119_20
  6186  04C7  2CC9               u119_21:
  6187  04C8                     	goto	i1l2035
  6188  04C8  2CCE               u119_20:
  6189  04C9                     	
  6190                           i1l2033:	
  6191  04C9                     	btfss	(20),7	;volatile
  6192  04C9  1F94               	goto	u120_21
  6193  04CA  2CCC               	goto	u120_20
  6194  04CB  2CCD               u120_21:
  6195  04CC                     	goto	i1l2043
  6196  04CC  2CD6               u120_20:
  6197  04CD                     	goto	i1l2035
  6198  04CD  2CCE               	
  6199                           i1l124:	
  6200  04CE                     	line	65
  6201                           	
  6202                           i1l2035:	
  6203  04CE                     ;mainS1proyect.c: 65:             z = SSPBUF;
  6204                           	movf	(19),w	;volatile
  6205  04CE  0813               	movwf	(??_interrupciones+0)+0
  6206  04CF  00F0               	movf	(??_interrupciones+0)+0,w
  6207  04D0  0870               	movwf	(_z)
  6208  04D1  00F8               	line	66
  6209                           	
  6210                           i1l2037:	
  6211  04D2                     ;mainS1proyect.c: 66:             SSPCONbits.SSPOV = 0;
  6212                           	bcf	(20),6	;volatile
  6213  04D2  1314               	line	67
  6214                           	
  6215                           i1l2039:	
  6216  04D3                     ;mainS1proyect.c: 67:             SSPCONbits.WCOL = 0;
  6217                           	bcf	(20),7	;volatile
  6218  04D3  1394               	line	68
  6219                           	
  6220                           i1l2041:	
  6221  04D4                     ;mainS1proyect.c: 68:             SSPCONbits.CKP = 1;
  6222                           	bsf	(20),4	;volatile
  6223  04D4  1614               	goto	i1l2043
  6224  04D5  2CD6               	line	69
  6225                           ;mainS1proyect.c: 69:         }
  6226                           	
  6227                           i1l122:	
  6228  04D6                     	line	71
  6229                           	
  6230                           i1l2043:	
  6231  04D6                     ;mainS1proyect.c: 71:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  6232                           	bsf	status, 5	;RP0=1, select bank1
  6233  04D6  1683               	bcf	status, 6	;RP1=0, select bank1
  6234  04D7  1303               	btfsc	(148)^080h,5	;volatile
  6235  04D8  1A94               	goto	u121_21
  6236  04D9  2CDB               	goto	u121_20
  6237  04DA  2CDC               u121_21:
  6238  04DB                     	goto	i1l125
  6239  04DB  2CF9               u121_20:
  6240  04DC                     	
  6241                           i1l2045:	
  6242  04DC                     	btfsc	(148)^080h,2	;volatile
  6243  04DC  1914               	goto	u122_21
  6244  04DD  2CDF               	goto	u122_20
  6245  04DE  2CE0               u122_21:
  6246  04DF                     	goto	i1l125
  6247  04DF  2CF9               u122_20:
  6248  04E0                     	line	73
  6249                           	
  6250                           i1l2047:	
  6251  04E0                     ;mainS1proyect.c: 73:             z = SSPBUF;
  6252                           	bcf	status, 5	;RP0=0, select bank0
  6253  04E0  1283               	bcf	status, 6	;RP1=0, select bank0
  6254  04E1  1303               	movf	(19),w	;volatile
  6255  04E2  0813               	movwf	(??_interrupciones+0)+0
  6256  04E3  00F0               	movf	(??_interrupciones+0)+0,w
  6257  04E4  0870               	movwf	(_z)
  6258  04E5  00F8               	line	75
  6259                           	
  6260                           i1l2049:	
  6261  04E6                     ;mainS1proyect.c: 75:             PIR1bits.SSPIF = 0;
  6262                           	bcf	(12),3	;volatile
  6263  04E6  118C               	line	76
  6264                           	
  6265                           i1l2051:	
  6266  04E7                     ;mainS1proyect.c: 76:             SSPCONbits.CKP = 1;
  6267                           	bsf	(20),4	;volatile
  6268  04E7  1614               	line	77
  6269                           ;mainS1proyect.c: 77:             while(!SSPSTATbits.BF);
  6270                           	goto	i1l126
  6271  04E8  2CE9               	
  6272                           i1l127:	
  6273  04E9                     	
  6274                           i1l126:	
  6275  04E9                     	bsf	status, 5	;RP0=1, select bank1
  6276  04E9  1683               	bcf	status, 6	;RP1=0, select bank1
  6277  04EA  1303               	btfss	(148)^080h,0	;volatile
  6278  04EB  1C14               	goto	u123_21
  6279  04EC  2CEE               	goto	u123_20
  6280  04ED  2CEF               u123_21:
  6281  04EE                     	goto	i1l126
  6282  04EE  2CE9               u123_20:
  6283  04EF                     	goto	i1l2053
  6284  04EF  2CF0               	
  6285                           i1l128:	
  6286  04F0                     	line	78
  6287                           	
  6288                           i1l2053:	
  6289  04F0                     ;mainS1proyect.c: 78:             PORTD = SSPBUF;
  6290                           	bcf	status, 5	;RP0=0, select bank0
  6291  04F0  1283               	bcf	status, 6	;RP1=0, select bank0
  6292  04F1  1303               	movf	(19),w	;volatile
  6293  04F2  0813               	movwf	(8)	;volatile
  6294  04F3  0088               	line	79
  6295                           ;mainS1proyect.c: 79:             _delay((unsigned long)((250)*(500000/4000000.0)));
  6296                           	opt asmopt_push
  6297                           opt asmopt_off
  6298                           	movlw	10
  6299  04F4  300A               movwf	((??_interrupciones+0)+0),f
  6300  04F5  00F0               	u192_27:
  6301  04F6                     decfsz	(??_interrupciones+0)+0,f
  6302  04F6  0BF0               	goto	u192_27
  6303  04F7  2CF6               opt asmopt_pop
  6304                           
  6305                           	line	82
  6306                           ;mainS1proyect.c: 82:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  6307                           	goto	i1l129
  6308  04F8  2D1C               	
  6309                           i1l125:	
  6310  04F9                     	btfsc	(148)^080h,5	;volatile
  6311  04F9  1A94               	goto	u124_21
  6312  04FA  2CFC               	goto	u124_20
  6313  04FB  2CFD               u124_21:
  6314  04FC                     	goto	i1l129
  6315  04FC  2D1C               u124_20:
  6316  04FD                     	
  6317                           i1l2055:	
  6318  04FD                     	btfss	(148)^080h,2	;volatile
  6319  04FD  1D14               	goto	u125_21
  6320  04FE  2D00               	goto	u125_20
  6321  04FF  2D01               u125_21:
  6322  0500                     	goto	i1l129
  6323  0500  2D1C               u125_20:
  6324  0501                     	line	83
  6325                           	
  6326                           i1l2057:	
  6327  0501                     ;mainS1proyect.c: 83:             z = SSPBUF;
  6328                           	bcf	status, 5	;RP0=0, select bank0
  6329  0501  1283               	bcf	status, 6	;RP1=0, select bank0
  6330  0502  1303               	movf	(19),w	;volatile
  6331  0503  0813               	movwf	(??_interrupciones+0)+0
  6332  0504  00F0               	movf	(??_interrupciones+0)+0,w
  6333  0505  0870               	movwf	(_z)
  6334  0506  00F8               	line	84
  6335                           	
  6336                           i1l2059:	
  6337  0507                     ;mainS1proyect.c: 84:             BF = 0;
  6338                           	bsf	status, 5	;RP0=1, select bank1
  6339  0507  1683               	bcf	status, 6	;RP1=0, select bank1
  6340  0508  1303               	bcf	(1184/8)^080h,(1184)&7	;volatile
  6341  0509  1014               	line	86
  6342                           ;mainS1proyect.c: 86:             SSPBUF = Abierto;
  6343                           	bcf	status, 5	;RP0=0, select bank0
  6344  050A  1283               	bcf	status, 6	;RP1=0, select bank0
  6345  050B  1303               	movf	(_Abierto),w
  6346  050C  0839               	movwf	(19)	;volatile
  6347  050D  0093               	line	87
  6348                           	
  6349                           i1l2061:	
  6350  050E                     ;mainS1proyect.c: 87:             SSPCONbits.CKP = 1;
  6351                           	bsf	(20),4	;volatile
  6352  050E  1614               	line	88
  6353                           ;mainS1proyect.c: 88:             _delay((unsigned long)((250)*(500000/4000000.0)));
  6354                           	opt asmopt_push
  6355                           opt asmopt_off
  6356                           	movlw	10
  6357  050F  300A               movwf	((??_interrupciones+0)+0),f
  6358  0510  00F0               	u193_27:
  6359  0511                     decfsz	(??_interrupciones+0)+0,f
  6360  0511  0BF0               	goto	u193_27
  6361  0512  2D11               opt asmopt_pop
  6362                           
  6363                           	line	89
  6364                           ;mainS1proyect.c: 89:             while(SSPSTATbits.BF);
  6365                           	goto	i1l131
  6366  0513  2D14               	
  6367                           i1l132:	
  6368  0514                     	
  6369                           i1l131:	
  6370  0514                     	bsf	status, 5	;RP0=1, select bank1
  6371  0514  1683               	bcf	status, 6	;RP1=0, select bank1
  6372  0515  1303               	btfsc	(148)^080h,0	;volatile
  6373  0516  1814               	goto	u126_21
  6374  0517  2D19               	goto	u126_20
  6375  0518  2D1A               u126_21:
  6376  0519                     	goto	i1l131
  6377  0519  2D14               u126_20:
  6378  051A                     	goto	i1l129
  6379  051A  2D1C               	
  6380                           i1l133:	
  6381  051B                     	goto	i1l129
  6382  051B  2D1C               	line	90
  6383                           ;mainS1proyect.c: 90:         }
  6384                           	
  6385                           i1l130:	
  6386  051C                     	
  6387                           i1l129:	
  6388  051C                     	line	91
  6389                           ;mainS1proyect.c: 91:         PIR1bits.SSPIF = 0;
  6390                           	bcf	status, 5	;RP0=0, select bank0
  6391  051C  1283               	bcf	status, 6	;RP1=0, select bank0
  6392  051D  1303               	bcf	(12),3	;volatile
  6393  051E  118C               	line	92
  6394                           ;mainS1proyect.c: 92:     }
  6395                           	
  6396                           i1l121:	
  6397  051F                     	line	96
  6398                           ;mainS1proyect.c: 96:     if (PIR1bits.ADIF){
  6399                           	btfss	(12),6	;volatile
  6400  051F  1F0C               	goto	u127_21
  6401  0520  2D22               	goto	u127_20
  6402  0521  2D23               u127_21:
  6403  0522                     	goto	i1l134
  6404  0522  2D32               u127_20:
  6405  0523                     	line	97
  6406                           	
  6407                           i1l2063:	
  6408  0523                     ;mainS1proyect.c: 97:         PIR1bits.ADIF = 0;
  6409                           	bcf	(12),6	;volatile
  6410  0523  130C               	line	98
  6411                           	
  6412                           i1l2065:	
  6413  0524                     ;mainS1proyect.c: 98:         res = ADRESH;
  6414                           	movf	(30),w	;volatile
  6415  0524  081E               	movwf	(??_interrupciones+0)+0
  6416  0525  00F0               	movf	(??_interrupciones+0)+0,w
  6417  0526  0870               	movwf	(_res)
  6418  0527  00F9               	line	99
  6419                           ;mainS1proyect.c: 99:         if (res < 155){
  6420                           	movlw	low(09Bh)
  6421  0528  309B               	subwf	(_res),w
  6422  0529  0279               	skipnc
  6423  052A  1803               	goto	u128_21
  6424  052B  2D2D               	goto	u128_20
  6425  052C  2D2E               u128_21:
  6426  052D                     	goto	i1l135
  6427  052D  2D30               u128_20:
  6428  052E                     	line	100
  6429                           	
  6430                           i1l2067:	
  6431  052E                     ;mainS1proyect.c: 100:             PORTEbits.RE2 = 1;
  6432                           	bsf	(9),2	;volatile
  6433  052E  1509               	line	101
  6434                           ;mainS1proyect.c: 101:         }else{
  6435                           	goto	i1l136
  6436  052F  2D31               	
  6437                           i1l135:	
  6438  0530                     	line	102
  6439                           ;mainS1proyect.c: 102:             PORTEbits.RE2 = 0;
  6440                           	bcf	(9),2	;volatile
  6441  0530  1109               	line	103
  6442                           ;mainS1proyect.c: 103:         }
  6443                           	
  6444                           i1l136:	
  6445  0531                     	line	104
  6446                           ;mainS1proyect.c: 104:         ADCON0bits.GO_nDONE = 1;
  6447                           	bsf	(31),1	;volatile
  6448  0531  149F               	line	105
  6449                           ;mainS1proyect.c: 105:     }
  6450                           	
  6451                           i1l134:	
  6452  0532                     	line	107
  6453                           ;mainS1proyect.c: 107:     if (INTCONbits.TMR0IF ){
  6454                           	btfss	(11),2	;volatile
  6455  0532  1D0B               	goto	u129_21
  6456  0533  2D35               	goto	u129_20
  6457  0534  2D36               u129_21:
  6458  0535                     	goto	i1l141
  6459  0535  2D4C               u129_20:
  6460  0536                     	line	108
  6461                           	
  6462                           i1l2069:	
  6463  0536                     ;mainS1proyect.c: 108:         INTCONbits.TMR0IF = 0;
  6464                           	bcf	(11),2	;volatile
  6465  0536  110B               	line	109
  6466                           	
  6467                           i1l2071:	
  6468  0537                     ;mainS1proyect.c: 109:         TMR0 = 200;
  6469                           	movlw	low(0C8h)
  6470  0537  30C8               	movwf	(1)	;volatile
  6471  0538  0081               	line	111
  6472                           	
  6473                           i1l2073:	
  6474  0539                     ;mainS1proyect.c: 111:         if (PORTAbits.RA1 == 1){
  6475                           	btfss	(5),1	;volatile
  6476  0539  1C85               	goto	u130_21
  6477  053A  2D3C               	goto	u130_20
  6478  053B  2D3D               u130_21:
  6479  053C                     	goto	i1l138
  6480  053C  2D42               u130_20:
  6481  053D                     	line	112
  6482                           	
  6483                           i1l2075:	
  6484  053D                     ;mainS1proyect.c: 112:             CCPR1L = 15;
  6485                           	movlw	low(0Fh)
  6486  053D  300F               	movwf	(21)	;volatile
  6487  053E  0095               	line	113
  6488                           	
  6489                           i1l2077:	
  6490  053F                     ;mainS1proyect.c: 113:             Abierto = 1;
  6491                           	clrf	(_Abierto)
  6492  053F  01B9               	incf	(_Abierto),f
  6493  0540  0AB9               	line	114
  6494                           ;mainS1proyect.c: 114:         } else if (PORTAbits.RA2 == 1){
  6495                           	goto	i1l141
  6496  0541  2D4C               	
  6497                           i1l138:	
  6498  0542                     	btfss	(5),2	;volatile
  6499  0542  1D05               	goto	u131_21
  6500  0543  2D45               	goto	u131_20
  6501  0544  2D46               u131_21:
  6502  0545                     	goto	i1l141
  6503  0545  2D4C               u131_20:
  6504  0546                     	line	115
  6505                           	
  6506                           i1l2079:	
  6507  0546                     ;mainS1proyect.c: 115:             CCPR1L = 6;
  6508                           	movlw	low(06h)
  6509  0546  3006               	movwf	(21)	;volatile
  6510  0547  0095               	line	116
  6511                           	
  6512                           i1l2081:	
  6513  0548                     ;mainS1proyect.c: 116:             Abierto = 0;
  6514                           	clrf	(_Abierto)
  6515  0548  01B9               	goto	i1l141
  6516  0549  2D4C               	line	117
  6517                           ;mainS1proyect.c: 117:         }
  6518                           	
  6519                           i1l140:	
  6520  054A                     	goto	i1l141
  6521  054A  2D4C               	
  6522                           i1l139:	
  6523  054B                     	goto	i1l141
  6524  054B  2D4C               	line	120
  6525                           ;mainS1proyect.c: 120:     }
  6526                           	
  6527                           i1l137:	
  6528  054C                     	line	123
  6529                           	
  6530                           i1l141:	
  6531  054C                     	movf	(??_interrupciones+2),w
  6532  054C  0872               	movwf	pclath
  6533  054D  008A               	swapf	(??_interrupciones+1)^0FFFFFF80h,w
  6534  054E  0E71               	movwf	status
  6535  054F  0083               	swapf	saved_w,f
  6536  0550  0EFE               	swapf	saved_w,w
  6537  0551  0E7E               	retfie
  6538  0552  0009               	opt stack 0
  6539                           GLOBAL	__end_of_interrupciones
  6540                           	__end_of_interrupciones:
  6541  0553                     	signat	_interrupciones,89
  6542                           global	___latbits
  6543                           ___latbits	equ	2
  6544  0002                     	global	btemp
  6545                           	btemp set 07Eh
  6546  007E                     
  6547                           	DABS	1,126,2	;btemp
  6548                           	global	wtemp0
  6549                           	wtemp0 set btemp+0
  6550  007E                     	end


Data Sizes:
    Strings     160
    Constant    0
    Data        5
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     18      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_11(CODE[11]), STR_10(CODE[16]), STR_9(CODE[17]), STR_8(CODE[17]), 
		 -> STR_7(CODE[10]), STR_6(CODE[16]), STR_5(CODE[15]), STR_4(CODE[8]), 
		 -> STR_3(CODE[16]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init_8bits
    _main->_Lcd_Set_Cursor_8bits
    _main->_Lcd_Write_Char
    _main->_funcAdc
    _main->_switch_press_scan
    _switch_press_scan->_keypad_scanner
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor_8bits->_Lcd_Cmd_8bits
    _Lcd_Init_8bits->_Lcd_Cmd_8bits
    _Lcd_Clear_8bits->_Lcd_Cmd_8bits

Critical Paths under _interrupciones in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char

Critical Paths under _interrupciones in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupciones in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupciones in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupciones in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    4395
                                              8 BANK0     10    10      0
                     _I2C_Slave_Init
                         _InitKeypad
                    _Lcd_Clear_8bits
                     _Lcd_Init_8bits
               _Lcd_Set_Cursor_8bits
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            _PWMconf
                            _funcAdc
                               _init
                            _initOsc
                           _initTMR0
                     _keypad_scanner
                  _switch_press_scan
 ---------------------------------------------------------------------------------
 (1) _switch_press_scan                                    2     2      0      46
                                              5 COMMON     2     2      0
                     _keypad_scanner
 ---------------------------------------------------------------------------------
 (2) _keypad_scanner                                       2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initTMR0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _funcAdc                                              5     3      2     273
                                              3 COMMON     4     2      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWMconf                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2    2074
                                              3 BANK0      5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       6     4      2     527
                                              4 COMMON     3     1      2
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_8bits                                 2     1      1    1022
                                              5 COMMON     2     1      1
                      _Lcd_Cmd_8bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init_8bits                                       2     2      0      22
                                              5 COMMON     2     2      0
                      _Lcd_Cmd_8bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_8bits                                      0     0      0      22
                      _Lcd_Cmd_8bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd_8bits                                        2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitKeypad                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupciones                                       3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _InitKeypad
   _Lcd_Clear_8bits
     _Lcd_Cmd_8bits
   _Lcd_Init_8bits
     _Lcd_Cmd_8bits
   _Lcd_Set_Cursor_8bits
     _Lcd_Cmd_8bits
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _PWMconf
   _funcAdc
   _init
   _initOsc
   _initTMR0
   _keypad_scanner
   _switch_press_scan
     _keypad_scanner

 _interrupciones (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      24       5       45.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2F      12        0.0%
ABS                  0      0      2F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Mar 13 07:22:09 2020

                            _a 0037                              _i 003C                              _z 0078  
                            pc 0002                    __CFG_CP$OFF 0000                    _SSPSTATbits 0094  
                           _BF 04A0                             fsr 0004         __end_of_interrupciones 0553  
                          l301 079F                            l150 00F0                            l151 010F  
                          l304 07B9                            l400 03DB                            l160 022C  
                          l152 013E                            l313 071E                            l401 03DB  
                          l161 021A                            l153 01E0                            l314 072D  
                          l410 0412                            l402 03E2                            l162 022C  
                          l154 016B                            l146 00B7                            l315 072C  
                          l403 03FD                            l163 0233                            l155 01DF  
                          l147 00B8                            l316 072D                            l260 0700  
                          l172 0747                            l180 05FD                            l404 03F3  
                          l164 027F                            l156 01C9                            l148 00E0  
                          l261 0706                            l181 05C6                            l405 03F3  
                          l413 0770                            l165 0280                            l157 01EC  
                          l149 01EA                            l246 0761                            l262 0707  
                          l190 05F6                            l182 061F                            l406 03FA  
                          l350 0417                            l414 0767                            l166 0280  
                          l158 01E9                            l319 06BD                            l263 070D  
                          l191 0620                            l183 05CC                            l175 07AC  
                          l407 0415                            l351 02B9                            l415 0777  
                          l159 01EB                            l264 070F                            l440 05A0  
                          l432 0564                            l184 05D2                            l408 040B  
                          l360 02DF                            l352 02AF                            l416 0779  
                          l265 070F                            l257 06F6                            l441 057D  
                          l433 0557                            l169 078F                            l185 05D8  
                          l409 040B                            l361 02DF                            l353 02AF  
                          l258 06F9                            l290 06C4                            l442 0582  
                          l434 0577                            l186 05DE                            l370 031A  
                          l362 02E6                            l354 02B6                            l346 02A1  
                          l419 07C2                            l259 06FF                            l283 065D  
                          l291 06EC                            l443 0587                            l435 055A  
                          l187 05E4                            l371 0335                            l363 0305  
                          l355 02D1                            l347 0297                            l284 0672  
                          l292 06EC                            l444 05AA                            l436 055D  
                          l188 05EA                            l380 035F                            l372 032B  
                          l364 02FB                            l356 02C7                            l348 0297  
                          l285 0671                            l445 05A1                            l437 0560  
                          l189 05F0                            l381 035F                            l373 032B  
                          l365 02FB                            l357 02C7                            l349 029E  
                          l286 0672                            l446 05B7                            l438 058D  
                          l390 0396                            l382 0366                            l374 0332  
                          l366 0302                            l358 02CE                            l447 05A5  
                          l439 0578                            l391 03B1                            l383 0381  
                          l375 034D                            l367 031D                            l359 02E9  
                          l448 05C3                            l392 03A7                            l384 0377  
                          l376 0343                            l368 0313                            l289 06DE  
                          l393 03A7                            l385 0377                            l377 0343  
                          l369 0313                            l394 03AE                            l386 037E  
                          l378 034A                            l395 03CD                            l387 0399  
                          l379 0369                            l396 03C3                            l388 038F  
                          l397 03C3                            l389 038F                            l398 03CA  
                          l399 03E5                            _GIE 005F                            _RD0 0040  
                          _RD1 0041                            _RD2 0042                            _RD3 0043  
                          _RD4 0044                            _RD5 0045                            _RD6 0046  
                          _RD7 0047                            _PR2 0092                   __CFG_CPD$OFF 0000  
                          u900 02F1                            u820 028D                            u901 02F0  
                          u821 028C                            u910 0301                            u830 029D  
                          u911 0300                            u831 029C                            u920 0309  
                          u840 02A5                            u921 0308                            u841 02A4  
                          u930 0319                            u850 02B5                            u931 0318  
                          u851 02B4                            u940 0321                            u860 02BD  
                          u941 0320                            u861 02BC                            u950 0331  
                          u870 02CD                            u951 0330                            u871 02CC  
                          u960 0339                            u880 02D5                            u961 0338  
                          u881 02D4                            u970 0349                            u890 02E5  
                          u971 0348                            u891 02E4                            u980 0355  
                          u981 0354                            u990 0365                            u991 0364  
                          _res 0079                            fsr0 0004                            indf 0000  
                 __CFG_LVP$OFF 0000        __size_of_Lcd_Init_8bits 004B                           l2011 0767  
                         l2013 0770                           l2015 0777                           l2017 0779  
                         l2009 0762                           l2311 06F2                           l2313 06FD  
                         l2321 062B                           l2401 0042                           l2315 0704  
                         l2331 064A                           l2323 0635                           l2411 009C  
                         l2403 0047                           l2317 070B                           l2309 06EE  
                         l2333 064D                           l2325 0636                           l2341 065D  
                         l2501 0274                           l2421 00D4                           l2413 00AB  
                         l2405 004D                           l2343 0664                           l2335 0653  
                         l2327 0644                           l2319 0624                           l2351 0556  
                         l2503 0279                           l2431 0102                           l2423 00EA  
                         l2415 00B0                           l2407 007C                           l2345 0665  
                         l2337 0656                           l2329 0647                           l2361 05A9  
                         l2353 0563                           l1801 03B0                           l2505 027D  
                         l2441 0136                           l2433 010F                           l2425 00F4  
                         l2417 00B8                           l2409 0088                           l2347 0667  
                         l2339 0659                           l2363 05AA                           l2355 0564  
                         l1811 03E2                           l1803 03B9                           l1731 028D  
                         l2451 0158                           l2443 013D                           l2435 0119  
                         l2427 00F5                           l2419 00CC                           l2349 066D  
                         l2357 058C                           l1821 0401                           l1813 03E4  
                         l1805 03CA                           l1741 02B8                           l1733 029E  
                         l2461 018C                           l2453 015C                           l2445 013E  
                         l2437 0124                           l2429 00FA                           l1831 0791  
                         l2383 06C1                           l1911 0737                           l1903 072E  
                         l2359 058D                           l1823 0412                           l1815 03E9  
                         l1807 03CC                           l1751 02E6                           l1743 02BD  
                         l1735 02A0                           l2471 01D1                           l2463 0199  
                         l2455 016A                           l2447 0147                           l2439 0130  
                         l1833 0794                           l2385 06C4                           l1921 073E  
                         l1913 0738                           l1905 0731                           l1841 077D  
                         l1825 0414                           l1817 03FA                           l1809 03D1  
                         l1761 0309                           l1753 02E8                           l1745 02CE  
                         l1737 02A5                           l1729 0283                           l2481 0205  
                         l2465 01A5                           l2457 016B                           l2449 014D  
                         l2473 01E0                           l1835 0796                           l2387 06D5  
                         l1931 0743                           l1923 073F                           l1915 0739  
                         l1907 0733                           l1851 0785                           l1843 077F  
                         l1827 0415                           l1819 03FC                           l1771 0334  
                         l1763 031A                           l1755 02F1                           l1747 02D0  
                         l1739 02B6                           l2491 0240                           l2483 021A  
                         l2475 01E8                           l2467 01B9                           l2459 0182  
                         l1837 079C                           l1941 0685                           l2389 06DE  
                         l1933 0744                           l1925 0740                           l1917 073A  
                         l1909 0736                           l1861 078C                           l1853 0786  
                         l1845 0780                           l2653 0605                           l1829 0417  
                         l1781 0366                           l1773 0339                           l1765 031C  
                         l1757 0302                           l1749 02D5                           l2493 024C  
                         l2485 0224                           l2469 01C9                           l2477 01EC  
                         l1951 069F                           l1943 0689                           l1935 0673  
                         l1927 0741                           l1919 073D                           l2655 056C  
                         l1863 078D                           l1855 0787                           l1847 0781  
                         l1839 077A                           l1871 05FD                           l1791 0385  
                         l1783 0368                           l1775 034A                           l1767 0321  
                         l1759 0304                           l2495 0260                           l2487 022B  
                         l2479 01F9                           l1961 07BA                           l1953 06A5  
                         l1945 068F                           l1937 0676                           l1929 0742  
                         l2657 0595                           l1865 078F                           l1857 078A  
                         l1849 0782                           l1793 0396                           l1785 036D  
                         l1777 034C                           l1769 0332                           l2497 0264  
                         l2489 0233                           l1963 07BD                           l1955 06AB  
                         l1947 0694                           l1939 067F                           l2659 05B2  
                         l1859 078B                           l1867 05C5                           l1971 07A9  
                         l1795 0398                           l1787 037E                           l1779 0355  
                         l2499 0266                           l1981 0758                           l1965 07C1  
                         l1957 06B1                           l1949 069A                           l1869 05FC  
                         l1973 07AA                           l1797 039D                           l1789 0380  
                         l1983 0759                           l1991 07AD                           l1959 06B7  
                         l1975 07AC                           l1967 07A0                           l1799 03AE  
                         l1985 075A                           l1977 0749                           l1993 0711  
                         l1969 07A8                           l1987 075B                           l1979 0757  
                         l1995 0716                           l1989 075E                           l1997 071E  
                         l1999 0724                           STR_1 042F                           STR_2 0440  
                         STR_3 0472                           STR_4 04B6                           STR_5 0492  
                         STR_6 0462                           STR_7 04AC                           STR_8 041E  
                         STR_9 0451                           u1000 036D                           u1001 036C  
                         u1010 037D                           u1011 037C                           u1100 03E9  
                         u1020 0385                           u1101 03E8                           u1021 0384  
                         u1110 03F9                           u1030 0395                           u1111 03F8  
                         u1031 0394                           u1120 0401                           u1040 039D  
                         u1121 0400                           u1041 039C                           u1130 0411  
                         u1050 03AD                           u1131 0410                           u1051 03AC  
                         u1140 0716                           u1060 03B9                           u1141 0715  
                         u1061 03B8                           u1150 0724                           u1070 03C9  
                         u1151 0723                           u1071 03C8                           u1080 03D1  
                         u1081 03D0                           u1090 03E1                           u1170 0776  
                         u1091 03E0                           u1171 0775                           u1510 0664  
                         u1511 0663                           u1520 06EB                           u1600 022A  
                         u1505 0639                           u1521 06EA                           u1601 0229  
                         u1450 06F2                           u1610 0232                           u1530 00F0  
                         u1451 06F1                           u1611 0231                           u1531 00EF  
                         u1460 06FD                           u1540 013C                           u1461 06FC  
                         u1541 013B                           u1470 0704                           u1550 014D  
                         u1471 0703                           u1551 014C                           u1480 070B  
                         u1560 0169                           u1481 070A                           u1561 0168  
                         u1490 062B                           u1570 018C                           u1491 062A  
                         u1707 0291                           u1571 018B                           u1580 01DE  
                         u1717 02A9                           u1581 01DD                           u1565 0165  
                         u1590 01E7                           u1807 0389                           u1727 02C1  
                         u1591 01E6                           u1575 0188                           u1817 03A1  
                         u1737 02D9                           u1585 01DA                           u1907 069C  
                         u1827 03BD                           u1747 02F5                           u1667 00A4  
                         u1917 0799                           u1837 03D5                           u1757 030D  
                         u1677 0153                           u1847 03ED                           u1767 0325  
                         u1687 01C1                           u1857 0405                           u1777 033D  
                         u1697 026E                           u1867 066A                           u1787 0359  
                         _PEIE 005E                           u1877 067A                           u1797 0371  
                         u1887 0687                           u1897 0691                           _TMR0 0001  
                 __CFG_WRT$OFF 0000              ?_Lcd_Write_String 0023                           _cont 003D  
                         _main 0042                           _init 077A                           btemp 007E  
                         start 000C                __end_of_PWMconf 0748             ??_Lcd_Write_String 0077  
                __CFG_IESO$OFF 0000                  __CFG_MCLRE$ON 0000                ?_interrupciones 0070  
                        ?_main 0070                          ?_init 0070                          STR_10 0482  
                        STR_11 04A1                  __CFG_WDTE$OFF 0000              ??_Lcd_Clear_8bits 0075  
                        _ANSEL 0188                          i1l121 051F                          i1l130 051C  
                        i1l122 04D6                          i1l131 0514                          i1l140 054A  
                        i1l132 0514                          i1l124 04CE                          i1l141 054C  
                        i1l133 051B                          i1l125 04F9                          i1l134 0532  
                        i1l126 04E9                          i1l135 0530                          i1l127 04E9  
                        i1l136 0531                          i1l128 04F0                          i1l137 054C  
                        i1l129 051C                          i1l138 0542                          i1l139 054B  
                        _PORTA 0005                          _PORTB 0006                          _PORTC 0007  
                        _PORTD 0008                          _PORTE 0009                          _TRISA 0085  
                        _TRISB 0086                          _TRISC 0087                          _TRISD 0088  
                        _SSPIE 0463                          _TRISE 0089                          _SSPIF 0063  
         Lcd_Write_String@modo 0023                 __CFG_FCMEN$OFF 0000          __end_of_Lcd_Cmd_8bits 07A0  
             ??_keypad_scanner 0073                __end_of_funcAdc 05C4                __end_of_initOsc 0621  
                        main@i 002F                 __CFG_BOREN$OFF 0000                          pclath 000A  
                        status 0003                          wtemp0 007E                    funcAdc@anaP 0073  
                  funcAdc@divD 0020                    funcAdc@just 0074               __end_of_Lcd_Port 0710  
                   _InitKeypad 07BA                __initialization 000F                   __end_of_main 0283  
                 __end_of_init 0790  __size_of_Lcd_Set_Cursor_8bits 001E                         ??_main 0028  
                       ??_init 0073                         _ADRESH 001E                         _CCPR1L 0015  
                       _ANSELH 0189                      ??_PWMconf 0073                         i1l2031 04C4  
                       i1l2041 04D4                         i1l2033 04C9                         i1l2051 04E7  
                       i1l2043 04D6                         i1l2035 04CE                         i1l2061 050E  
                       i1l2053 04F0                         i1l2045 04DC                         i1l2037 04D2  
                       i1l2029 04BE                         i1l2071 0537                         i1l2063 0523  
                       i1l2055 04FD                         i1l2047 04E0                         i1l2039 04D3  
                       u120_20 04CD                         i1l2081 0548                         i1l2073 0539  
                       i1l2065 0524                         i1l2057 0501                         i1l2049 04E6  
                       u120_21 04CC                         i1l2075 053D                         i1l2067 052E  
                       i1l2059 0507                         i1l2077 053F                         i1l2069 0536  
                       i1l2079 0546                         u121_20 04DC                         u121_21 04DB  
                       u130_20 053D                         u122_20 04E0                         u130_21 053C  
                       u122_21 04DF                         u131_20 0546                         u123_20 04EF  
                       u131_21 0545                         u123_21 04EE                         u124_20 04FD  
                       u124_21 04FC                         u125_20 0501                         u125_21 0500  
                       u126_20 051A                         u118_20 04C4                         u126_21 0519  
                       u118_21 04C3                         u127_20 0523                         u119_20 04C9  
                       u127_21 0522                         u119_21 04C8                         u128_20 052E  
                       u128_21 052D                         u129_20 0536                         u129_21 0535  
                       u192_27 04F6                         u193_27 0511                    initOsc@frec 0075  
      __size_of_Lcd_Write_Char 0052                         _SSPADD 0093                         _TRISC3 043B  
                       _TRISC4 043C                         _SSPBUF 0013                         _SSPCON 0014  
               __CFG_PWRTE$OFF 0000               __end_of_initTMR0 07AD                         _conteo 007A  
                       _valor1 003B                         _valor2 003A                      ??_funcAdc 0075  
                    ??_initOsc 0073                         saved_w 007E                 _Lcd_Init_8bits 0673  
      __end_of__initialization 003E                    ?_InitKeypad 0070                 __pcstackCOMMON 0070  
                 __pidataBANK0 07C3        __size_of_I2C_Slave_Init 001A         __end_of_Lcd_Init_8bits 06BE  
                    ?_Lcd_Port 0070          I2C_Slave_Init@address 0073                     __pbssBANK0 0032  
              _Lcd_Clear_8bits 07AD                     __pmaintext 0042               ??_interrupciones 0070  
                   __pintentry 0004      __size_of_Lcd_Write_String 002F                ?_Lcd_Init_8bits 0070  
          __size_of_InitKeypad 0009                     ??_Lcd_Port 0073                        _SSPCON2 0091  
                      _SSPSTAT 0094                     __stringtab 0418                        _Abierto 0039  
                      _PWMconf 072E                      ?_initTMR0 0070                 _Lcd_Write_Char 0621  
                   _contrasena 003F                      _ANSELbits 0188                        __ptext1 0762  
                      __ptext2 0283                        __ptext3 07A0                        __ptext4 05C4  
                      __ptext5 077A                        __ptext6 0553                        __ptext7 072E  
                      __ptext8 06BE                        __ptext9 0621                        _compara 0032  
                      _funcAdc 0553                        _initOsc 05C4                      _T2CONbits 0012  
                      main@Key 0031   __end_of_Lcd_Set_Cursor_8bits 072E         __end_of_Lcd_Write_Char 0673  
         end_of_initialization 003E                     ??_initTMR0 0073        __end_of_Lcd_Clear_8bits 07BA  
               _I2C_Slave_Init 0748         __size_of_Lcd_Cmd_8bits 0010                      Lcd_Port@a 0073  
                    _PORTAbits 0005                      _PORTBbits 0006                      _PORTEbits 0009  
                    _TRISCbits 0087           switch_press_scan@key 0076                ?_Lcd_Write_Char 0074  
            Lcd_Write_String@a 0027              Lcd_Write_String@i 0025                    _CCP1CONbits 0017  
                   main@valor1 002B                     main@valor2 002D        __size_of_keypad_scanner 0195  
       __end_of_I2C_Slave_Init 0762                   ??_InitKeypad 0073               _Lcd_Write_String 06BE  
          start_initialization 000F                  _Lcd_Cmd_8bits 0790             __end_of_InitKeypad 07C3  
        Lcd_Set_Cursor_8bits@x 0075          Lcd_Set_Cursor_8bits@y 0076              __size_of_Lcd_Port 0023  
             ?_Lcd_Clear_8bits 0070       __CFG_FOSC$INTRC_NOCLKOUT 0000                ?_I2C_Slave_Init 0070  
         _Lcd_Set_Cursor_8bits 0710                    __pdataBANK0 003F                Lcd_Write_Char@a 0022  
              Lcd_Write_Char@y 0021               ??_Lcd_Init_8bits 0075                    __pbssCOMMON 0077  
                    ___latbits 0002                  __pcstackBANK0 0020                 ?_Lcd_Cmd_8bits 0070  
                     ?_PWMconf 0070              __size_of_initTMR0 000D          ?_Lcd_Set_Cursor_8bits 0075  
                    __pstrings 0418                      _contraAct 003E                       ?_funcAdc 0073  
                     ?_initOsc 0070              interrupt_function 0004                 _keypad_scanner 0283  
                     _PIE1bits 008C                       _PIR1bits 000C              _switch_press_scan 0762  
                   _ADCON0bits 001F                    __stringbase 041D                     _ADCON1bits 009F  
           ?_switch_press_scan 0070        __size_of_interrupciones 0095                ??_Lcd_Cmd_8bits 0073  
             ??_Lcd_Write_Char 0076            ??_switch_press_scan 0075                       _Lcd_Port 06ED  
     __end_of_Lcd_Write_String 06ED         __end_of_keypad_scanner 0418               __size_of_PWMconf 001A  
       ??_Lcd_Set_Cursor_8bits 0076      __end_of_switch_press_scan 077A             __end_of__stringtab 041E  
             __size_of_funcAdc 0071               __size_of_initOsc 005D                       __ptext10 06ED  
                     __ptext11 0710                       __ptext12 0673                       __ptext13 07AD  
                     __ptext14 0790                       __ptext15 07BA                       __ptext16 0748  
                     __ptext17 04BE              __CFG_BOR4V$BOR40V 0000               ??_I2C_Slave_Init 0073  
                     _initTMR0 07A0                ?_keypad_scanner 0070                  __size_of_main 0241  
                __size_of_init 0016           Lcd_Cmd_8bits@comando 0074                       _numerito 0077  
                   _INTCONbits 000B             Lcd_Write_Char@modo 0074             Lcd_Write_Char@temp 0020  
                     intlevel1 0000                      stringcode 0418                     _OSCCONbits 008F  
     __size_of_Lcd_Clear_8bits 000D     __size_of_switch_press_scan 0018                     _OPTION_REG 0081  
               _interrupciones 04BE                       stringdir 0418                       stringtab 0418  
                  _SSPCON2bits 0091                     _SSPCONbits 0014  
