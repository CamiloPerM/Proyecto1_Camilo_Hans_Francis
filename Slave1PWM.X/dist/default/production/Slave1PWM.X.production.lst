

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Mar 12 18:16:31 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_I2C_Slave_Init
  1180                           	FNCALL	_main,_InitKeypad
  1181                           	FNCALL	_main,_Lcd_Clear_8bits
  1182                           	FNCALL	_main,_Lcd_Init_8bits
  1183                           	FNCALL	_main,_Lcd_Set_Cursor_8bits
  1184                           	FNCALL	_main,_Lcd_Write_Char
  1185                           	FNCALL	_main,_Lcd_Write_String
  1186                           	FNCALL	_main,_PWMconf
  1187                           	FNCALL	_main,_funcAdc
  1188                           	FNCALL	_main,_init
  1189                           	FNCALL	_main,_initOsc
  1190                           	FNCALL	_main,_initTMR0
  1191                           	FNCALL	_main,_keypad_scanner
  1192                           	FNCALL	_main,_switch_press_scan
  1193                           	FNCALL	_switch_press_scan,_keypad_scanner
  1194                           	FNCALL	_Lcd_Write_String,_Lcd_Write_Char
  1195                           	FNCALL	_Lcd_Write_Char,_Lcd_Port
  1196                           	FNCALL	_Lcd_Set_Cursor_8bits,_Lcd_Cmd_8bits
  1197                           	FNCALL	_Lcd_Init_8bits,_Lcd_Cmd_8bits
  1198                           	FNCALL	_Lcd_Clear_8bits,_Lcd_Cmd_8bits
  1199                           	FNROOT	_main
  1200                           	FNCALL	intlevel1,_interrupciones
  1201                           	global	intlevel1
  1202                           	FNROOT	intlevel1
  1203                           	global	_contrasena
  1204                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1205                           global __pidataBANK0
  1206                           __pidataBANK0:
  1207  07C1                     	file	"mainS1proyect.c"
  1208                           	line	56
  1209                           
  1210                           ;initializer for _contrasena
  1211                           	retlw	031h
  1212  07C1  3431               	retlw	037h
  1213  07C2  3437               	retlw	033h
  1214  07C3  3433               	retlw	030h
  1215  07C4  3430               	retlw	038h
  1216  07C5  3438               	global	_DUM
  1217                           	global	_z
  1218                           	global	_res
  1219                           	global	_compara
  1220                           	global	_Abierto
  1221                           	global	_cont
  1222                           	global	_contraAct
  1223                           	global	_PORTBbits
  1224                           _PORTBbits	set	0x6
  1225  0006                     	global	_SSPCON
  1226                           _SSPCON	set	0x14
  1227  0014                     	global	_T2CONbits
  1228                           _T2CONbits	set	0x12
  1229  0012                     	global	_CCP1CONbits
  1230                           _CCP1CONbits	set	0x17
  1231  0017                     	global	_PORTE
  1232                           _PORTE	set	0x9
  1233  0009                     	global	_PORTC
  1234                           _PORTC	set	0x7
  1235  0007                     	global	_PORTD
  1236                           _PORTD	set	0x8
  1237  0008                     	global	_PORTB
  1238                           _PORTB	set	0x6
  1239  0006                     	global	_PORTA
  1240                           _PORTA	set	0x5
  1241  0005                     	global	_CCPR1L
  1242                           _CCPR1L	set	0x15
  1243  0015                     	global	_PORTAbits
  1244                           _PORTAbits	set	0x5
  1245  0005                     	global	_TMR0
  1246                           _TMR0	set	0x1
  1247  0001                     	global	_INTCONbits
  1248                           _INTCONbits	set	0xB
  1249  000B                     	global	_ADCON0bits
  1250                           _ADCON0bits	set	0x1F
  1251  001F                     	global	_PORTEbits
  1252                           _PORTEbits	set	0x9
  1253  0009                     	global	_ADRESH
  1254                           _ADRESH	set	0x1E
  1255  001E                     	global	_SSPBUF
  1256                           _SSPBUF	set	0x13
  1257  0013                     	global	_SSPCONbits
  1258                           _SSPCONbits	set	0x14
  1259  0014                     	global	_PIR1bits
  1260                           _PIR1bits	set	0xC
  1261  000C                     	global	_RD7
  1262                           _RD7	set	0x47
  1263  0047                     	global	_RD6
  1264                           _RD6	set	0x46
  1265  0046                     	global	_RD5
  1266                           _RD5	set	0x45
  1267  0045                     	global	_RD4
  1268                           _RD4	set	0x44
  1269  0044                     	global	_RD3
  1270                           _RD3	set	0x43
  1271  0043                     	global	_RD2
  1272                           _RD2	set	0x42
  1273  0042                     	global	_RD1
  1274                           _RD1	set	0x41
  1275  0041                     	global	_RD0
  1276                           _RD0	set	0x40
  1277  0040                     	global	_SSPIF
  1278                           _SSPIF	set	0x63
  1279  0063                     	global	_PEIE
  1280                           _PEIE	set	0x5E
  1281  005E                     	global	_GIE
  1282                           _GIE	set	0x5F
  1283  005F                     	global	_PIE1bits
  1284                           _PIE1bits	set	0x8C
  1285  008C                     	global	_ADCON1bits
  1286                           _ADCON1bits	set	0x9F
  1287  009F                     	global	_SSPCON2bits
  1288                           _SSPCON2bits	set	0x91
  1289  0091                     	global	_SSPSTAT
  1290                           _SSPSTAT	set	0x94
  1291  0094                     	global	_SSPADD
  1292                           _SSPADD	set	0x93
  1293  0093                     	global	_SSPCON2
  1294                           _SSPCON2	set	0x91
  1295  0091                     	global	_OSCCONbits
  1296                           _OSCCONbits	set	0x8F
  1297  008F                     	global	_OPTION_REG
  1298                           _OPTION_REG	set	0x81
  1299  0081                     	global	_PR2
  1300                           _PR2	set	0x92
  1301  0092                     	global	_TRISCbits
  1302                           _TRISCbits	set	0x87
  1303  0087                     	global	_TRISE
  1304                           _TRISE	set	0x89
  1305  0089                     	global	_TRISC
  1306                           _TRISC	set	0x87
  1307  0087                     	global	_TRISD
  1308                           _TRISD	set	0x88
  1309  0088                     	global	_TRISA
  1310                           _TRISA	set	0x85
  1311  0085                     	global	_TRISB
  1312                           _TRISB	set	0x86
  1313  0086                     	global	_SSPSTATbits
  1314                           _SSPSTATbits	set	0x94
  1315  0094                     	global	_SSPIE
  1316                           _SSPIE	set	0x463
  1317  0463                     	global	_TRISC4
  1318                           _TRISC4	set	0x43C
  1319  043C                     	global	_TRISC3
  1320                           _TRISC3	set	0x43B
  1321  043B                     	global	_BF
  1322                           _BF	set	0x4A0
  1323  04A0                     	global	_ANSELbits
  1324                           _ANSELbits	set	0x188
  1325  0188                     	global	_ANSELH
  1326                           _ANSELH	set	0x189
  1327  0189                     	global	_ANSEL
  1328                           _ANSEL	set	0x188
  1329  0188                     psect	strings,class=STRING,delta=2,noexec
  1330                           global __pstrings
  1331                           __pstrings:
  1332  0419                     stringtab:
  1333  0419                     	global    __stringtab
  1334                           __stringtab:
  1335  0419                     ;	String table - string pointers are 1 byte each
  1336                           stringcode:stringdir:
  1337  0419                     movlw high(stringdir)
      + 0419                     stringdir:	
  1338  0419  3004               movwf pclath
  1339  041A  008A               movf fsr,w
  1340  041B  0804               incf fsr
  1341  041C  0A84               	addwf pc
  1342  041D  0782               	global __stringbase
  1343                           __stringbase:
  1344  041E                     	retlw	0
  1345  041E  3400               psect	strings
  1346                           	global    __end_of__stringtab
  1347                           __end_of__stringtab:
  1348  041F                     	
  1349                           STR_8:	
  1350  041F                     	retlw	65	;'A'
  1351  041F  3441               	retlw	99	;'c'
  1352  0420  3463               	retlw	99	;'c'
  1353  0421  3463               	retlw	101	;'e'
  1354  0422  3465               	retlw	115	;'s'
  1355  0423  3473               	retlw	111	;'o'
  1356  0424  346F               	retlw	32	;' '
  1357  0425  3420               	retlw	98	;'b'
  1358  0426  3462               	retlw	114	;'r'
  1359  0427  3472               	retlw	105	;'i'
  1360  0428  3469               	retlw	110	;'n'
  1361  0429  346E               	retlw	100	;'d'
  1362  042A  3464               	retlw	97	;'a'
  1363  042B  3461               	retlw	100	;'d'
  1364  042C  3464               	retlw	111	;'o'
  1365  042D  346F               	retlw	44	;','
  1366  042E  342C               	retlw	0
  1367  042F  3400               psect	strings
  1368                           	
  1369                           STR_1:	
  1370  0430                     	retlw	66	;'B'
  1371  0430  3442               	retlw	105	;'i'
  1372  0431  3469               	retlw	101	;'e'
  1373  0432  3465               	retlw	110	;'n'
  1374  0433  346E               	retlw	118	;'v'
  1375  0434  3476               	retlw	101	;'e'
  1376  0435  3465               	retlw	110	;'n'
  1377  0436  346E               	retlw	105	;'i'
  1378  0437  3469               	retlw	100	;'d'
  1379  0438  3464               	retlw	111	;'o'
  1380  0439  346F               	retlw	32	;' '
  1381  043A  3420               	retlw	65	;'A'
  1382  043B  3441               	retlw	116	;'t'
  1383  043C  3474               	retlw	116	;'t'
  1384  043D  3474               	retlw	101	;'e'
  1385  043E  3465               	retlw	46	;'.'
  1386  043F  342E               	retlw	0
  1387  0440  3400               psect	strings
  1388                           	
  1389                           STR_9:	
  1390  0441                     	retlw	73	;'I'
  1391  0441  3449               	retlw	110	;'n'
  1392  0442  346E               	retlw	116	;'t'
  1393  0443  3474               	retlw	114	;'r'
  1394  0444  3472               	retlw	111	;'o'
  1395  0445  346F               	retlw	100	;'d'
  1396  0446  3464               	retlw	117	;'u'
  1397  0447  3475               	retlw	122	;'z'
  1398  0448  347A               	retlw	99	;'c'
  1399  0449  3463               	retlw	97	;'a'
  1400  044A  3461               	retlw	32	;' '
  1401  044B  3420               	retlw	108	;'l'
  1402  044C  346C               	retlw	108	;'l'
  1403  044D  346C               	retlw	97	;'a'
  1404  044E  3461               	retlw	118	;'v'
  1405  044F  3476               	retlw	101	;'e'
  1406  0450  3465               	retlw	0
  1407  0451  3400               psect	strings
  1408                           	
  1409                           STR_6:	
  1410  0452                     	retlw	67	;'C'
  1411  0452  3443               	retlw	111	;'o'
  1412  0453  346F               	retlw	110	;'n'
  1413  0454  346E               	retlw	116	;'t'
  1414  0455  3474               	retlw	114	;'r'
  1415  0456  3472               	retlw	97	;'a'
  1416  0457  3461               	retlw	115	;'s'
  1417  0458  3473               	retlw	101	;'e'
  1418  0459  3465               	retlw	110	;'n'
  1419  045A  346E               	retlw	97	;'a'
  1420  045B  3461               	retlw	32	;' '
  1421  045C  3420               	retlw	109	;'m'
  1422  045D  346D               	retlw	97	;'a'
  1423  045E  3461               	retlw	108	;'l'
  1424  045F  346C               	retlw	97	;'a'
  1425  0460  3461               	retlw	0
  1426  0461  3400               psect	strings
  1427                           	
  1428                           STR_3:	
  1429  0462                     	retlw	80	;'P'
  1430  0462  3450               	retlw	114	;'r'
  1431  0463  3472               	retlw	101	;'e'
  1432  0464  3465               	retlw	115	;'s'
  1433  0465  3473               	retlw	105	;'i'
  1434  0466  3469               	retlw	111	;'o'
  1435  0467  346F               	retlw	110	;'n'
  1436  0468  346E               	retlw	101	;'e'
  1437  0469  3465               	retlw	32	;' '
  1438  046A  3420               	retlw	35	;'#'
  1439  046B  3423               	retlw	32	;' '
  1440  046C  3420               	retlw	112	;'p'
  1441  046D  3470               	retlw	97	;'a'
  1442  046E  3461               	retlw	114	;'r'
  1443  046F  3472               	retlw	97	;'a'
  1444  0470  3461               	retlw	0
  1445  0471  3400               psect	strings
  1446                           	
  1447                           STR_10:	
  1448  0472                     	retlw	65	;'A'
  1449  0472  3441               	retlw	98	;'b'
  1450  0473  3462               	retlw	114	;'r'
  1451  0474  3472               	retlw	105	;'i'
  1452  0475  3469               	retlw	101	;'e'
  1453  0476  3465               	retlw	110	;'n'
  1454  0477  346E               	retlw	100	;'d'
  1455  0478  3464               	retlw	111	;'o'
  1456  0479  346F               	retlw	32	;' '
  1457  047A  3420               	retlw	112	;'p'
  1458  047B  3470               	retlw	117	;'u'
  1459  047C  3475               	retlw	101	;'e'
  1460  047D  3465               	retlw	114	;'r'
  1461  047E  3472               	retlw	116	;'t'
  1462  047F  3474               	retlw	97	;'a'
  1463  0480  3461               	retlw	0
  1464  0481  3400               psect	strings
  1465                           	
  1466                           STR_5:	
  1467  0482                     	retlw	73	;'I'
  1468  0482  3449               	retlw	110	;'n'
  1469  0483  346E               	retlw	103	;'g'
  1470  0484  3467               	retlw	114	;'r'
  1471  0485  3472               	retlw	101	;'e'
  1472  0486  3465               	retlw	115	;'s'
  1473  0487  3473               	retlw	101	;'e'
  1474  0488  3465               	retlw	32	;' '
  1475  0489  3420               	retlw	99	;'c'
  1476  048A  3463               	retlw	108	;'l'
  1477  048B  346C               	retlw	97	;'a'
  1478  048C  3461               	retlw	118	;'v'
  1479  048D  3476               	retlw	101	;'e'
  1480  048E  3465               	retlw	58	;':'
  1481  048F  343A               	retlw	0
  1482  0490  3400               psect	strings
  1483                           	
  1484                           STR_2:	
  1485  0491                     	retlw	70	;'F'
  1486  0491  3446               	retlw	97	;'a'
  1487  0492  3461               	retlw	109	;'m'
  1488  0493  346D               	retlw	105	;'i'
  1489  0494  3469               	retlw	108	;'l'
  1490  0495  346C               	retlw	105	;'i'
  1491  0496  3469               	retlw	97	;'a'
  1492  0497  3461               	retlw	32	;' '
  1493  0498  3420               	retlw	85	;'U'
  1494  0499  3455               	retlw	86	;'V'
  1495  049A  3456               	retlw	71	;'G'
  1496  049B  3447               	retlw	0
  1497  049C  3400               psect	strings
  1498                           	
  1499                           STR_11:	
  1500  049D                     	retlw	66	;'B'
  1501  049D  3442               	retlw	105	;'i'
  1502  049E  3469               	retlw	101	;'e'
  1503  049F  3465               	retlw	110	;'n'
  1504  04A0  346E               	retlw	118	;'v'
  1505  04A1  3476               	retlw	101	;'e'
  1506  04A2  3465               	retlw	110	;'n'
  1507  04A3  346E               	retlw	105	;'i'
  1508  04A4  3469               	retlw	100	;'d'
  1509  04A5  3464               	retlw	111	;'o'
  1510  04A6  346F               	retlw	0
  1511  04A7  3400               psect	strings
  1512                           	
  1513                           STR_7:	
  1514  04A8                     	retlw	105	;'i'
  1515  04A8  3469               	retlw	110	;'n'
  1516  04A9  346E               	retlw	116	;'t'
  1517  04AA  3474               	retlw	101	;'e'
  1518  04AB  3465               	retlw	110	;'n'
  1519  04AC  346E               	retlw	116	;'t'
  1520  04AD  3474               	retlw	101	;'e'
  1521  04AE  3465               	retlw	108	;'l'
  1522  04AF  346C               	retlw	111	;'o'
  1523  04B0  346F               	retlw	0
  1524  04B1  3400               psect	strings
  1525                           	
  1526                           STR_4:	
  1527  04B2                     	retlw	105	;'i'
  1528  04B2  3469               	retlw	110	;'n'
  1529  04B3  346E               	retlw	105	;'i'
  1530  04B4  3469               	retlw	99	;'c'
  1531  04B5  3463               	retlw	105	;'i'
  1532  04B6  3469               	retlw	97	;'a'
  1533  04B7  3461               	retlw	114	;'r'
  1534  04B8  3472               	retlw	0
  1535  04B9  3400               psect	strings
  1536                           ; #config settings
  1537                           global __CFG_FOSC$INTRC_NOCLKOUT
  1538                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1539  0000                     global __CFG_WDTE$OFF
  1540                           __CFG_WDTE$OFF equ 0x0
  1541  0000                     global __CFG_PWRTE$OFF
  1542                           __CFG_PWRTE$OFF equ 0x0
  1543  0000                     global __CFG_MCLRE$ON
  1544                           __CFG_MCLRE$ON equ 0x0
  1545  0000                     global __CFG_CP$OFF
  1546                           __CFG_CP$OFF equ 0x0
  1547  0000                     global __CFG_CPD$OFF
  1548                           __CFG_CPD$OFF equ 0x0
  1549  0000                     global __CFG_BOREN$ON
  1550                           __CFG_BOREN$ON equ 0x0
  1551  0000                     global __CFG_IESO$OFF
  1552                           __CFG_IESO$OFF equ 0x0
  1553  0000                     global __CFG_FCMEN$OFF
  1554                           __CFG_FCMEN$OFF equ 0x0
  1555  0000                     global __CFG_LVP$OFF
  1556                           __CFG_LVP$OFF equ 0x0
  1557  0000                     global __CFG_BOR4V$BOR40V
  1558                           __CFG_BOR4V$BOR40V equ 0x0
  1559  0000                     global __CFG_WRT$OFF
  1560                           __CFG_WRT$OFF equ 0x0
  1561  0000                     	file	"C:\Users\DIBUJO~1\AppData\Local\Temp\sh88."
  1562                           	line	#
  1563                           psect cinit,class=CODE,delta=2
  1564                           global start_initialization
  1565                           start_initialization:
  1566  000F                     
  1567                           global __initialization
  1568                           __initialization:
  1569  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1570                           global __pbssCOMMON
  1571                           __pbssCOMMON:
  1572  0077                     _DUM:
  1573  0077                            ds      1
  1574  0077                     
  1575                           _z:
  1576  0078                            ds      1
  1577  0078                     
  1578                           _res:
  1579  0079                            ds      1
  1580  0079                     
  1581                           _conteo:
  1582  007A                            ds      1
  1583  007A                     
  1584                           psect	bssBANK0,class=BANK0,space=1,noexec
  1585                           global __pbssBANK0
  1586                           __pbssBANK0:
  1587  0032                     _compara:
  1588  0032                            ds      5
  1589  0032                     
  1590                           _a:
  1591  0037                            ds      2
  1592  0037                     
  1593                           _Abierto:
  1594  0039                            ds      1
  1595  0039                     
  1596                           _valor2:
  1597  003A                            ds      1
  1598  003A                     
  1599                           _valor1:
  1600  003B                            ds      1
  1601  003B                     
  1602                           _i:
  1603  003C                            ds      1
  1604  003C                     
  1605                           _cont:
  1606  003D                            ds      1
  1607  003D                     
  1608                           _contraAct:
  1609  003E                            ds      1
  1610  003E                     
  1611                           _numerito:
  1612  003F                            ds      1
  1613  003F                     
  1614                           psect	dataBANK0,class=BANK0,space=1,noexec
  1615                           global __pdataBANK0
  1616                           __pdataBANK0:
  1617  0040                     	file	"mainS1proyect.c"
  1618                           	line	56
  1619                           _contrasena:
  1620  0040                            ds      5
  1621  0040                     
  1622                           	file	"C:\Users\DIBUJO~1\AppData\Local\Temp\sh88."
  1623                           	line	#
  1624                           ; Initialize objects allocated to BANK0
  1625                           	global __pidataBANK0
  1626                           psect cinit,class=CODE,delta=2,merge=1
  1627                           	fcall	__pidataBANK0+0		;fetch initializer
  1628  000F  120A  118A  27C1  120A  118A  	movwf	__pdataBANK0+0&07fh		
  1629  0014  00C0               	fcall	__pidataBANK0+1		;fetch initializer
  1630  0015  120A  118A  27C2  120A  118A  	movwf	__pdataBANK0+1&07fh		
  1631  001A  00C1               	fcall	__pidataBANK0+2		;fetch initializer
  1632  001B  120A  118A  27C3  120A  118A  	movwf	__pdataBANK0+2&07fh		
  1633  0020  00C2               	fcall	__pidataBANK0+3		;fetch initializer
  1634  0021  120A  118A  27C4  120A  118A  	movwf	__pdataBANK0+3&07fh		
  1635  0026  00C3               	fcall	__pidataBANK0+4		;fetch initializer
  1636  0027  120A  118A  27C5  120A  118A  	movwf	__pdataBANK0+4&07fh		
  1637  002C  00C4               	line	#
  1638                           ; Clear objects allocated to BANK0
  1639                           psect cinit,class=CODE,delta=2,merge=1
  1640                           	clrf	((__pbssBANK0)+0)&07Fh
  1641  002D  01B2               	clrf	((__pbssBANK0)+1)&07Fh
  1642  002E  01B3               	clrf	((__pbssBANK0)+2)&07Fh
  1643  002F  01B4               	clrf	((__pbssBANK0)+3)&07Fh
  1644  0030  01B5               	clrf	((__pbssBANK0)+4)&07Fh
  1645  0031  01B6               	clrf	((__pbssBANK0)+5)&07Fh
  1646  0032  01B7               	clrf	((__pbssBANK0)+6)&07Fh
  1647  0033  01B8               	clrf	((__pbssBANK0)+7)&07Fh
  1648  0034  01B9               	clrf	((__pbssBANK0)+8)&07Fh
  1649  0035  01BA               	clrf	((__pbssBANK0)+9)&07Fh
  1650  0036  01BB               	clrf	((__pbssBANK0)+10)&07Fh
  1651  0037  01BC               	clrf	((__pbssBANK0)+11)&07Fh
  1652  0038  01BD               	clrf	((__pbssBANK0)+12)&07Fh
  1653  0039  01BE               	clrf	((__pbssBANK0)+13)&07Fh
  1654  003A  01BF               ; Clear objects allocated to COMMON
  1655                           psect cinit,class=CODE,delta=2,merge=1
  1656                           	clrf	((__pbssCOMMON)+0)&07Fh
  1657  003B  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
  1658  003C  01F8               	clrf	((__pbssCOMMON)+2)&07Fh
  1659  003D  01F9               	clrf	((__pbssCOMMON)+3)&07Fh
  1660  003E  01FA               psect cinit,class=CODE,delta=2,merge=1
  1661                           global end_of_initialization,__end_of__initialization
  1662                           
  1663                           ;End of C runtime variable initialization code
  1664                           
  1665                           end_of_initialization:
  1666  003F                     __end_of__initialization:
  1667  003F                     clrf status
  1668  003F  0183               ljmp _main	;jump to C main() function
  1669  0040  120A  118A  2843   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1670                           global __pcstackCOMMON
  1671                           __pcstackCOMMON:
  1672  0070                     ?_init:	; 1 bytes @ 0x0
  1673  0070                     ?_initOsc:	; 1 bytes @ 0x0
  1674  0070                     ?_PWMconf:	; 1 bytes @ 0x0
  1675  0070                     ?_Lcd_Init_8bits:	; 1 bytes @ 0x0
  1676  0070                     ?_InitKeypad:	; 1 bytes @ 0x0
  1677  0070                     ?_initTMR0:	; 1 bytes @ 0x0
  1678  0070                     ?_I2C_Slave_Init:	; 1 bytes @ 0x0
  1679  0070                     ?_Lcd_Clear_8bits:	; 1 bytes @ 0x0
  1680  0070                     ?_switch_press_scan:	; 1 bytes @ 0x0
  1681  0070                     ?_keypad_scanner:	; 1 bytes @ 0x0
  1682  0070                     ?_interrupciones:	; 1 bytes @ 0x0
  1683  0070                     ??_interrupciones:	; 1 bytes @ 0x0
  1684  0070                     ?_main:	; 1 bytes @ 0x0
  1685  0070                     ?_Lcd_Port:	; 1 bytes @ 0x0
  1686  0070                     ?_Lcd_Cmd_8bits:	; 1 bytes @ 0x0
  1687  0070                     	ds	3
  1688  0070                     ??_init:	; 1 bytes @ 0x3
  1689  0073                     ??_initOsc:	; 1 bytes @ 0x3
  1690  0073                     ?_funcAdc:	; 1 bytes @ 0x3
  1691  0073                     ??_PWMconf:	; 1 bytes @ 0x3
  1692  0073                     ??_InitKeypad:	; 1 bytes @ 0x3
  1693  0073                     ??_initTMR0:	; 1 bytes @ 0x3
  1694  0073                     ??_I2C_Slave_Init:	; 1 bytes @ 0x3
  1695  0073                     ??_keypad_scanner:	; 1 bytes @ 0x3
  1696  0073                     ??_Lcd_Port:	; 1 bytes @ 0x3
  1697  0073                     ??_Lcd_Cmd_8bits:	; 1 bytes @ 0x3
  1698  0073                     	global	I2C_Slave_Init@address
  1699                           I2C_Slave_Init@address:	; 1 bytes @ 0x3
  1700  0073                     	global	Lcd_Port@a
  1701                           Lcd_Port@a:	; 1 bytes @ 0x3
  1702  0073                     	global	funcAdc@anaP
  1703                           funcAdc@anaP:	; 1 bytes @ 0x3
  1704  0073                     	ds	1
  1705  0073                     ?_Lcd_Write_Char:	; 1 bytes @ 0x4
  1706  0074                     	global	Lcd_Cmd_8bits@comando
  1707                           Lcd_Cmd_8bits@comando:	; 1 bytes @ 0x4
  1708  0074                     	global	funcAdc@just
  1709                           funcAdc@just:	; 1 bytes @ 0x4
  1710  0074                     	global	Lcd_Write_Char@modo
  1711                           Lcd_Write_Char@modo:	; 2 bytes @ 0x4
  1712  0074                     	ds	1
  1713  0074                     ??_funcAdc:	; 1 bytes @ 0x5
  1714  0075                     ??_Lcd_Init_8bits:	; 1 bytes @ 0x5
  1715  0075                     ??_Lcd_Clear_8bits:	; 1 bytes @ 0x5
  1716  0075                     ?_Lcd_Set_Cursor_8bits:	; 1 bytes @ 0x5
  1717  0075                     ??_switch_press_scan:	; 1 bytes @ 0x5
  1718  0075                     	global	initOsc@frec
  1719                           initOsc@frec:	; 1 bytes @ 0x5
  1720  0075                     	global	Lcd_Set_Cursor_8bits@x
  1721                           Lcd_Set_Cursor_8bits@x:	; 1 bytes @ 0x5
  1722  0075                     	ds	1
  1723  0075                     ??_Lcd_Set_Cursor_8bits:	; 1 bytes @ 0x6
  1724  0076                     ??_Lcd_Write_Char:	; 1 bytes @ 0x6
  1725  0076                     	global	Lcd_Set_Cursor_8bits@y
  1726                           Lcd_Set_Cursor_8bits@y:	; 1 bytes @ 0x6
  1727  0076                     	global	switch_press_scan@key
  1728                           switch_press_scan@key:	; 1 bytes @ 0x6
  1729  0076                     	ds	1
  1730  0076                     ??_Lcd_Write_String:	; 1 bytes @ 0x7
  1731  0077                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1732                           global __pcstackBANK0
  1733                           __pcstackBANK0:
  1734  0020                     	global	Lcd_Write_Char@temp
  1735                           Lcd_Write_Char@temp:	; 1 bytes @ 0x0
  1736  0020                     	global	funcAdc@divD
  1737                           funcAdc@divD:	; 1 bytes @ 0x0
  1738  0020                     	ds	1
  1739  0020                     	global	Lcd_Write_Char@y
  1740                           Lcd_Write_Char@y:	; 1 bytes @ 0x1
  1741  0021                     	ds	1
  1742  0021                     	global	Lcd_Write_Char@a
  1743                           Lcd_Write_Char@a:	; 1 bytes @ 0x2
  1744  0022                     	ds	1
  1745  0022                     ?_Lcd_Write_String:	; 1 bytes @ 0x3
  1746  0023                     	global	Lcd_Write_String@modo
  1747                           Lcd_Write_String@modo:	; 2 bytes @ 0x3
  1748  0023                     	ds	2
  1749  0023                     	global	Lcd_Write_String@i
  1750                           Lcd_Write_String@i:	; 2 bytes @ 0x5
  1751  0025                     	ds	2
  1752  0025                     	global	Lcd_Write_String@a
  1753                           Lcd_Write_String@a:	; 1 bytes @ 0x7
  1754  0027                     	ds	1
  1755  0027                     ??_main:	; 1 bytes @ 0x8
  1756  0028                     	ds	3
  1757  0028                     	global	main@valor1
  1758                           main@valor1:	; 2 bytes @ 0xB
  1759  002B                     	ds	2
  1760  002B                     	global	main@valor2
  1761                           main@valor2:	; 2 bytes @ 0xD
  1762  002D                     	ds	2
  1763  002D                     	global	main@i
  1764                           main@i:	; 2 bytes @ 0xF
  1765  002F                     	ds	2
  1766  002F                     	global	main@Key
  1767                           main@Key:	; 1 bytes @ 0x11
  1768  0031                     	ds	1
  1769  0031                     ;!
  1770                           ;!Data Sizes:
  1771                           ;!    Strings     155
  1772                           ;!    Constant    0
  1773                           ;!    Data        5
  1774                           ;!    BSS         18
  1775                           ;!    Persistent  0
  1776                           ;!    Stack       0
  1777                           ;!
  1778                           ;!Auto Spaces:
  1779                           ;!    Space          Size  Autos    Used
  1780                           ;!    COMMON           14      7      11
  1781                           ;!    BANK0            80     18      37
  1782                           ;!    BANK1            80      0       0
  1783                           ;!    BANK3            96      0       0
  1784                           ;!    BANK2            96      0       0
  1785                           
  1786                           ;!
  1787                           ;!Pointer List with Targets:
  1788                           ;!
  1789                           ;!    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
  1790                           ;!		 -> STR_11(CODE[11]), STR_10(CODE[16]), STR_9(CODE[17]), STR_8(CODE[17]), 
  1791                           ;!		 -> STR_7(CODE[10]), STR_6(CODE[16]), STR_5(CODE[15]), STR_4(CODE[8]), 
  1792                           ;!		 -> STR_3(CODE[16]), STR_2(CODE[12]), STR_1(CODE[17]), 
  1793                           ;!
  1794                           
  1795                           
  1796                           ;!
  1797                           ;!Critical Paths under _main in COMMON
  1798                           ;!
  1799                           ;!    _main->_Lcd_Init_8bits
  1800                           ;!    _main->_Lcd_Set_Cursor_8bits
  1801                           ;!    _main->_Lcd_Write_Char
  1802                           ;!    _main->_funcAdc
  1803                           ;!    _main->_switch_press_scan
  1804                           ;!    _switch_press_scan->_keypad_scanner
  1805                           ;!    _Lcd_Write_String->_Lcd_Write_Char
  1806                           ;!    _Lcd_Write_Char->_Lcd_Port
  1807                           ;!    _Lcd_Set_Cursor_8bits->_Lcd_Cmd_8bits
  1808                           ;!    _Lcd_Init_8bits->_Lcd_Cmd_8bits
  1809                           ;!    _Lcd_Clear_8bits->_Lcd_Cmd_8bits
  1810                           ;!
  1811                           ;!Critical Paths under _interrupciones in COMMON
  1812                           ;!
  1813                           ;!    None.
  1814                           ;!
  1815                           ;!Critical Paths under _main in BANK0
  1816                           ;!
  1817                           ;!    _main->_Lcd_Write_String
  1818                           ;!    _Lcd_Write_String->_Lcd_Write_Char
  1819                           ;!
  1820                           ;!Critical Paths under _interrupciones in BANK0
  1821                           ;!
  1822                           ;!    None.
  1823                           ;!
  1824                           ;!Critical Paths under _main in BANK1
  1825                           ;!
  1826                           ;!    None.
  1827                           ;!
  1828                           ;!Critical Paths under _interrupciones in BANK1
  1829                           ;!
  1830                           ;!    None.
  1831                           ;!
  1832                           ;!Critical Paths under _main in BANK3
  1833                           ;!
  1834                           ;!    None.
  1835                           ;!
  1836                           ;!Critical Paths under _interrupciones in BANK3
  1837                           ;!
  1838                           ;!    None.
  1839                           ;!
  1840                           ;!Critical Paths under _main in BANK2
  1841                           ;!
  1842                           ;!    None.
  1843                           ;!
  1844                           ;!Critical Paths under _interrupciones in BANK2
  1845                           ;!
  1846                           ;!    None.
  1847                           
  1848 ;;
  1849 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1850 ;;
  1851                           
  1852                           ;!
  1853                           ;!Call Graph Tables:
  1854                           ;!
  1855                           ;! ---------------------------------------------------------------------------------
  1856                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1857                           ;! ---------------------------------------------------------------------------------
  1858                           ;! (0) _main                                                10    10      0    4395
  1859                           ;!                                              8 BANK0     10    10      0
  1860                           ;!                     _I2C_Slave_Init
  1861                           ;!                         _InitKeypad
  1862                           ;!                    _Lcd_Clear_8bits
  1863                           ;!                     _Lcd_Init_8bits
  1864                           ;!               _Lcd_Set_Cursor_8bits
  1865                           ;!                     _Lcd_Write_Char
  1866                           ;!                   _Lcd_Write_String
  1867                           ;!                            _PWMconf
  1868                           ;!                            _funcAdc
  1869                           ;!                               _init
  1870                           ;!                            _initOsc
  1871                           ;!                           _initTMR0
  1872                           ;!                     _keypad_scanner
  1873                           ;!                  _switch_press_scan
  1874                           ;! ---------------------------------------------------------------------------------
  1875                           ;! (1) _switch_press_scan                                    2     2      0      46
  1876                           ;!                                              5 COMMON     2     2      0
  1877                           ;!                     _keypad_scanner
  1878                           ;! ---------------------------------------------------------------------------------
  1879                           ;! (2) _keypad_scanner                                       2     2      0       0
  1880                           ;!                                              3 COMMON     2     2      0
  1881                           ;! ---------------------------------------------------------------------------------
  1882                           ;! (1) _initTMR0                                             0     0      0       0
  1883                           ;! ---------------------------------------------------------------------------------
  1884                           ;! (1) _initOsc                                              3     3      0      22
  1885                           ;!                                              3 COMMON     3     3      0
  1886                           ;! ---------------------------------------------------------------------------------
  1887                           ;! (1) _init                                                 0     0      0       0
  1888                           ;! ---------------------------------------------------------------------------------
  1889                           ;! (1) _funcAdc                                              5     3      2     273
  1890                           ;!                                              3 COMMON     4     2      2
  1891                           ;!                                              0 BANK0      1     1      0
  1892                           ;! ---------------------------------------------------------------------------------
  1893                           ;! (1) _PWMconf                                              0     0      0       0
  1894                           ;! ---------------------------------------------------------------------------------
  1895                           ;! (1) _Lcd_Write_String                                     5     3      2    2074
  1896                           ;!                                              3 BANK0      5     3      2
  1897                           ;!                     _Lcd_Write_Char
  1898                           ;! ---------------------------------------------------------------------------------
  1899                           ;! (2) _Lcd_Write_Char                                       6     4      2     527
  1900                           ;!                                              4 COMMON     3     1      2
  1901                           ;!                                              0 BANK0      3     3      0
  1902                           ;!                           _Lcd_Port
  1903                           ;! ---------------------------------------------------------------------------------
  1904                           ;! (3) _Lcd_Port                                             1     1      0     124
  1905                           ;!                                              3 COMMON     1     1      0
  1906                           ;! ---------------------------------------------------------------------------------
  1907                           ;! (1) _Lcd_Set_Cursor_8bits                                 2     1      1    1022
  1908                           ;!                                              5 COMMON     2     1      1
  1909                           ;!                      _Lcd_Cmd_8bits
  1910                           ;! ---------------------------------------------------------------------------------
  1911                           ;! (1) _Lcd_Init_8bits                                       2     2      0      22
  1912                           ;!                                              5 COMMON     2     2      0
  1913                           ;!                      _Lcd_Cmd_8bits
  1914                           ;! ---------------------------------------------------------------------------------
  1915                           ;! (1) _Lcd_Clear_8bits                                      0     0      0      22
  1916                           ;!                      _Lcd_Cmd_8bits
  1917                           ;! ---------------------------------------------------------------------------------
  1918                           ;! (2) _Lcd_Cmd_8bits                                        2     2      0      22
  1919                           ;!                                              3 COMMON     2     2      0
  1920                           ;! ---------------------------------------------------------------------------------
  1921                           ;! (1) _InitKeypad                                           0     0      0       0
  1922                           ;! ---------------------------------------------------------------------------------
  1923                           ;! (1) _I2C_Slave_Init                                       1     1      0      22
  1924                           ;!                                              3 COMMON     1     1      0
  1925                           ;! ---------------------------------------------------------------------------------
  1926                           ;! Estimated maximum stack depth 3
  1927                           ;! ---------------------------------------------------------------------------------
  1928                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1929                           ;! ---------------------------------------------------------------------------------
  1930                           ;! (4) _interrupciones                                       3     3      0       0
  1931                           ;!                                              0 COMMON     3     3      0
  1932                           ;! ---------------------------------------------------------------------------------
  1933                           ;! Estimated maximum stack depth 4
  1934                           ;! ---------------------------------------------------------------------------------
  1935                           ;!
  1936                           ;! Call Graph Graphs:
  1937                           ;!
  1938                           ;! _main (ROOT)
  1939                           ;!   _I2C_Slave_Init
  1940                           ;!   _InitKeypad
  1941                           ;!   _Lcd_Clear_8bits
  1942                           ;!     _Lcd_Cmd_8bits
  1943                           ;!   _Lcd_Init_8bits
  1944                           ;!     _Lcd_Cmd_8bits
  1945                           ;!   _Lcd_Set_Cursor_8bits
  1946                           ;!     _Lcd_Cmd_8bits
  1947                           ;!   _Lcd_Write_Char
  1948                           ;!     _Lcd_Port
  1949                           ;!   _Lcd_Write_String
  1950                           ;!     _Lcd_Write_Char
  1951                           ;!       _Lcd_Port
  1952                           ;!   _PWMconf
  1953                           ;!   _funcAdc
  1954                           ;!   _init
  1955                           ;!   _initOsc
  1956                           ;!   _initTMR0
  1957                           ;!   _keypad_scanner
  1958                           ;!   _switch_press_scan
  1959                           ;!     _keypad_scanner
  1960                           ;!
  1961                           ;! _interrupciones (ROOT)
  1962                           ;!
  1963                           
  1964                           ;! Address spaces:
  1965                           
  1966                           ;!Name               Size   Autos  Total    Cost      Usage
  1967                           ;!BANK3               60      0       0       9        0.0%
  1968                           ;!BITBANK3            60      0       0       8        0.0%
  1969                           ;!SFR3                 0      0       0       4        0.0%
  1970                           ;!BITSFR3              0      0       0       4        0.0%
  1971                           ;!BANK2               60      0       0      11        0.0%
  1972                           ;!BITBANK2            60      0       0      10        0.0%
  1973                           ;!SFR2                 0      0       0       5        0.0%
  1974                           ;!BITSFR2              0      0       0       5        0.0%
  1975                           ;!BANK1               50      0       0       7        0.0%
  1976                           ;!BITBANK1            50      0       0       6        0.0%
  1977                           ;!SFR1                 0      0       0       2        0.0%
  1978                           ;!BITSFR1              0      0       0       2        0.0%
  1979                           ;!BANK0               50     12      25       5       46.3%
  1980                           ;!BITBANK0            50      0       0       4        0.0%
  1981                           ;!SFR0                 0      0       0       1        0.0%
  1982                           ;!BITSFR0              0      0       0       1        0.0%
  1983                           ;!COMMON               E      7       B       1       78.6%
  1984                           ;!BITCOMMON            E      0       0       0        0.0%
  1985                           ;!CODE                 0      0       0       0        0.0%
  1986                           ;!DATA                 0      0      30      12        0.0%
  1987                           ;!ABS                  0      0      30       3        0.0%
  1988                           ;!NULL                 0      0       0       0        0.0%
  1989                           ;!STACK                0      0       0       2        0.0%
  1990                           ;!EEDATA             100      0       0       0        0.0%
  1991                           
  1992                           	global	_main
  1993                           
  1994 ;; *************** function _main *****************
  1995 ;; Defined at:
  1996 ;;		line 123 in file "mainS1proyect.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;		None
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  valor2          2   13[BANK0 ] int 
  2001 ;;  valor1          2   11[BANK0 ] int 
  2002 ;;  i               2   15[BANK0 ] int 
  2003 ;;  Key             1   17[BANK0 ] unsigned char 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : B00/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2013 ;;      Params:         0       0       0       0       0
  2014 ;;      Locals:         0       7       0       0       0
  2015 ;;      Temps:          0       3       0       0       0
  2016 ;;      Totals:         0      10       0       0       0
  2017 ;;Total ram usage:       10 bytes
  2018 ;; Hardware stack levels required when called:    4
  2019 ;; This function calls:
  2020 ;;		_I2C_Slave_Init
  2021 ;;		_InitKeypad
  2022 ;;		_Lcd_Clear_8bits
  2023 ;;		_Lcd_Init_8bits
  2024 ;;		_Lcd_Set_Cursor_8bits
  2025 ;;		_Lcd_Write_Char
  2026 ;;		_Lcd_Write_String
  2027 ;;		_PWMconf
  2028 ;;		_funcAdc
  2029 ;;		_init
  2030 ;;		_initOsc
  2031 ;;		_initTMR0
  2032 ;;		_keypad_scanner
  2033 ;;		_switch_press_scan
  2034 ;; This function is called by:
  2035 ;;		Startup code after reset
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2039                           	file	"mainS1proyect.c"
  2040                           	line	123
  2041                           global __pmaintext
  2042                           __pmaintext:	;psect for function _main
  2043  0043                     psect	maintext
  2044                           	file	"mainS1proyect.c"
  2045                           	line	123
  2046                           	global	__size_of_main
  2047                           	__size_of_main	equ	__end_of_main-_main
  2048  0241                     	
  2049                           _main:	
  2050  0043                     ;incstack = 0
  2051                           	opt	stack 4
  2052                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2053                           	line	124
  2054                           	
  2055                           l2403:	
  2056  0043                     ;mainS1proyect.c: 124:     init();
  2057                           	fcall	_init
  2058  0043  120A  118A  2778  120A  118A  	line	125
  2059                           	
  2060                           l2405:	
  2061  0048                     ;mainS1proyect.c: 125:     initOsc(3);
  2062                           	movlw	low(03h)
  2063  0048  3003               	fcall	_initOsc
  2064  0049  120A  118A  25C2  120A  118A  	line	126
  2065                           	
  2066                           l2407:	
  2067  004E                     ;mainS1proyect.c: 126:     funcAdc(2,0,0);
  2068                           	clrf	(funcAdc@anaP)
  2069  004E  01F3               	clrf	(funcAdc@just)
  2070  004F  01F4               	movlw	low(02h)
  2071  0050  3002               	fcall	_funcAdc
  2072  0051  120A  118A  2551  120A  118A  	line	127
  2073                           ;mainS1proyect.c: 127:     PWMconf();
  2074                           	fcall	_PWMconf
  2075  0056  120A  118A  272C  120A  118A  	line	128
  2076                           ;mainS1proyect.c: 128:     Lcd_Init_8bits();
  2077                           	fcall	_Lcd_Init_8bits
  2078  005B  120A  118A  2671  120A  118A  	line	129
  2079                           ;mainS1proyect.c: 129:     InitKeypad();
  2080                           	fcall	_InitKeypad
  2081  0060  120A  118A  27B8  120A  118A  	line	130
  2082                           ;mainS1proyect.c: 130:     initTMR0();
  2083                           	fcall	_initTMR0
  2084  0065  120A  118A  279E  120A  118A  	line	131
  2085                           ;mainS1proyect.c: 131:     I2C_Slave_Init(0x70);
  2086                           	movlw	low(070h)
  2087  006A  3070               	fcall	_I2C_Slave_Init
  2088  006B  120A  118A  2746  120A  118A  	line	135
  2089                           ;mainS1proyect.c: 135:     Lcd_Clear_8bits();
  2090                           	fcall	_Lcd_Clear_8bits
  2091  0070  120A  118A  27AB  120A  118A  	line	136
  2092                           ;mainS1proyect.c: 136:     Lcd_Set_Cursor_8bits(1,1);
  2093                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2094  0075  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2095  0076  0AF5               	movlw	low(01h)
  2096  0077  3001               	fcall	_Lcd_Set_Cursor_8bits
  2097  0078  120A  118A  270E  120A  118A  	line	137
  2098                           	
  2099                           l2409:	
  2100  007D                     ;mainS1proyect.c: 137:     Lcd_Write_String("Bienvenido Atte.",8);
  2101                           	movlw	08h
  2102  007D  3008               	bcf	status, 5	;RP0=0, select bank0
  2103  007E  1283               	bcf	status, 6	;RP1=0, select bank0
  2104  007F  1303               	movwf	(Lcd_Write_String@modo)
  2105  0080  00A3               	movlw	0
  2106  0081  3000               	movwf	((Lcd_Write_String@modo))+1
  2107  0082  00A4               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2108  0083  3012               	fcall	_Lcd_Write_String
  2109  0084  120A  118A  26BC  120A  118A  	line	138
  2110                           	
  2111                           l2411:	
  2112  0089                     ;mainS1proyect.c: 138:     Lcd_Set_Cursor_8bits(2,1);
  2113                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2114  0089  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2115  008A  0AF5               	movlw	low(02h)
  2116  008B  3002               	fcall	_Lcd_Set_Cursor_8bits
  2117  008C  120A  118A  270E  120A  118A  	line	139
  2118                           ;mainS1proyect.c: 139:     Lcd_Write_String("Familia UVG",8);
  2119                           	movlw	08h
  2120  0091  3008               	bcf	status, 5	;RP0=0, select bank0
  2121  0092  1283               	bcf	status, 6	;RP1=0, select bank0
  2122  0093  1303               	movwf	(Lcd_Write_String@modo)
  2123  0094  00A3               	movlw	0
  2124  0095  3000               	movwf	((Lcd_Write_String@modo))+1
  2125  0096  00A4               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  2126  0097  3073               	fcall	_Lcd_Write_String
  2127  0098  120A  118A  26BC  120A  118A  	line	140
  2128                           	
  2129                           l2413:	
  2130  009D                     ;mainS1proyect.c: 140:     _delay((unsigned long)((3000)*(500000/4000.0)));
  2131                           	opt asmopt_push
  2132                           opt asmopt_off
  2133                           movlw  2
  2134  009D  3002               	bcf	status, 5	;RP0=0, select bank0
  2135  009E  1283               	bcf	status, 6	;RP1=0, select bank0
  2136  009F  1303               movwf	((??_main+0)+0+2),f
  2137  00A0  00AA               movlw	231
  2138  00A1  30E7               movwf	((??_main+0)+0+1),f
  2139  00A2  00A9               	movlw	255
  2140  00A3  30FF               movwf	((??_main+0)+0),f
  2141  00A4  00A8               	u1667:
  2142  00A5                     decfsz	((??_main+0)+0),f
  2143  00A5  0BA8               	goto	u1667
  2144  00A6  28A5               	decfsz	((??_main+0)+0+1),f
  2145  00A7  0BA9               	goto	u1667
  2146  00A8  28A5               	decfsz	((??_main+0)+0+2),f
  2147  00A9  0BAA               	goto	u1667
  2148  00AA  28A5               	nop2
  2149  00AB  28AC               opt asmopt_pop
  2150                           
  2151                           	line	141
  2152                           	
  2153                           l2415:	
  2154  00AC                     ;mainS1proyect.c: 141:     Lcd_Clear_8bits();
  2155                           	fcall	_Lcd_Clear_8bits
  2156  00AC  120A  118A  27AB  120A  118A  	line	144
  2157                           	
  2158                           l2417:	
  2159  00B1                     ;mainS1proyect.c: 144:     char Key = 'n';
  2160                           	movlw	low(06Eh)
  2161  00B1  306E               	bcf	status, 5	;RP0=0, select bank0
  2162  00B2  1283               	bcf	status, 6	;RP1=0, select bank0
  2163  00B3  1303               	movwf	(??_main+0)+0
  2164  00B4  00A8               	movf	(??_main+0)+0,w
  2165  00B5  0828               	movwf	(main@Key)
  2166  00B6  00B1               	goto	l2419
  2167  00B7  28B9               	line	147
  2168                           ;mainS1proyect.c: 147:     while(1){
  2169                           	
  2170                           l148:	
  2171  00B8                     	goto	l2419
  2172  00B8  28B9               	line	148
  2173                           ;mainS1proyect.c: 148:         Inicio:
  2174                           	
  2175                           l149:	
  2176  00B9                     	line	149
  2177                           	
  2178                           l2419:	
  2179  00B9                     ;mainS1proyect.c: 149:         Lcd_Set_Cursor_8bits(1,1);
  2180                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2181  00B9  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2182  00BA  0AF5               	movlw	low(01h)
  2183  00BB  3001               	fcall	_Lcd_Set_Cursor_8bits
  2184  00BC  120A  118A  270E  120A  118A  	line	150
  2185                           ;mainS1proyect.c: 150:         Lcd_Write_String("Presione # para",8);
  2186                           	movlw	08h
  2187  00C1  3008               	bcf	status, 5	;RP0=0, select bank0
  2188  00C2  1283               	bcf	status, 6	;RP1=0, select bank0
  2189  00C3  1303               	movwf	(Lcd_Write_String@modo)
  2190  00C4  00A3               	movlw	0
  2191  00C5  3000               	movwf	((Lcd_Write_String@modo))+1
  2192  00C6  00A4               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  2193  00C7  3044               	fcall	_Lcd_Write_String
  2194  00C8  120A  118A  26BC  120A  118A  	line	151
  2195                           	
  2196                           l2421:	
  2197  00CD                     ;mainS1proyect.c: 151:         Lcd_Set_Cursor_8bits(2,1);
  2198                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2199  00CD  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2200  00CE  0AF5               	movlw	low(02h)
  2201  00CF  3002               	fcall	_Lcd_Set_Cursor_8bits
  2202  00D0  120A  118A  270E  120A  118A  	line	152
  2203                           	
  2204                           l2423:	
  2205  00D5                     ;mainS1proyect.c: 152:         Lcd_Write_String("iniciar",8);
  2206                           	movlw	08h
  2207  00D5  3008               	bcf	status, 5	;RP0=0, select bank0
  2208  00D6  1283               	bcf	status, 6	;RP1=0, select bank0
  2209  00D7  1303               	movwf	(Lcd_Write_String@modo)
  2210  00D8  00A3               	movlw	0
  2211  00D9  3000               	movwf	((Lcd_Write_String@modo))+1
  2212  00DA  00A4               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  2213  00DB  3094               	fcall	_Lcd_Write_String
  2214  00DC  120A  118A  26BC  120A  118A  	line	154
  2215                           ;mainS1proyect.c: 154:         Presiona:
  2216                           	
  2217                           l150:	
  2218  00E1                     	line	155
  2219                           ;mainS1proyect.c: 155:         Key = switch_press_scan();
  2220                           	fcall	_switch_press_scan
  2221  00E1  120A  118A  2760  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2222  00E6  1283               	bcf	status, 6	;RP1=0, select bank0
  2223  00E7  1303               	movwf	(??_main+0)+0
  2224  00E8  00A8               	movf	(??_main+0)+0,w
  2225  00E9  0828               	movwf	(main@Key)
  2226  00EA  00B1               	line	157
  2227                           	
  2228                           l2425:	
  2229  00EB                     ;mainS1proyect.c: 157:         if (Key == 35){
  2230                           		movlw	35
  2231  00EB  3023               	xorwf	((main@Key)),w
  2232  00EC  0631               	btfss	status,2
  2233  00ED  1D03               	goto	u1531
  2234  00EE  28F0               	goto	u1530
  2235  00EF  28F1               u1531:
  2236  00F0                     	goto	l150
  2237  00F0  28E1               u1530:
  2238  00F1                     	line	158
  2239                           ;mainS1proyect.c: 158:             Intentelo:
  2240                           	
  2241                           l152:	
  2242  00F1                     	line	160
  2243                           ;mainS1proyect.c: 160:             contraAct = 1;
  2244                           	bcf	status, 5	;RP0=0, select bank0
  2245  00F1  1283               	bcf	status, 6	;RP1=0, select bank0
  2246  00F2  1303               	clrf	(_contraAct)
  2247  00F3  01BE               	incf	(_contraAct),f
  2248  00F4  0ABE               	line	161
  2249                           	
  2250                           l2427:	
  2251  00F5                     ;mainS1proyect.c: 161:             cont = 0;
  2252                           	clrf	(_cont)
  2253  00F5  01BD               	line	162
  2254                           	
  2255                           l2429:	
  2256  00F6                     ;mainS1proyect.c: 162:             Lcd_Clear_8bits();
  2257                           	fcall	_Lcd_Clear_8bits
  2258  00F6  120A  118A  27AB  120A  118A  	line	163
  2259                           	
  2260                           l2431:	
  2261  00FB                     ;mainS1proyect.c: 163:             Lcd_Set_Cursor_8bits(1,1);
  2262                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2263  00FB  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2264  00FC  0AF5               	movlw	low(01h)
  2265  00FD  3001               	fcall	_Lcd_Set_Cursor_8bits
  2266  00FE  120A  118A  270E  120A  118A  	line	164
  2267                           	
  2268                           l2433:	
  2269  0103                     ;mainS1proyect.c: 164:             Lcd_Write_String("Ingrese clave:",8);
  2270                           	movlw	08h
  2271  0103  3008               	bcf	status, 5	;RP0=0, select bank0
  2272  0104  1283               	bcf	status, 6	;RP1=0, select bank0
  2273  0105  1303               	movwf	(Lcd_Write_String@modo)
  2274  0106  00A3               	movlw	0
  2275  0107  3000               	movwf	((Lcd_Write_String@modo))+1
  2276  0108  00A4               	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  2277  0109  3064               	fcall	_Lcd_Write_String
  2278  010A  120A  118A  26BC  120A  118A  	goto	l2435
  2279  010F  2910               	line	166
  2280                           ;mainS1proyect.c: 166:             IngresarC:
  2281                           	
  2282                           l153:	
  2283  0110                     	line	168
  2284                           	
  2285                           l2435:	
  2286  0110                     ;mainS1proyect.c: 168:             Key = switch_press_scan();
  2287                           	fcall	_switch_press_scan
  2288  0110  120A  118A  2760  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2289  0115  1283               	bcf	status, 6	;RP1=0, select bank0
  2290  0116  1303               	movwf	(??_main+0)+0
  2291  0117  00A8               	movf	(??_main+0)+0,w
  2292  0118  0828               	movwf	(main@Key)
  2293  0119  00B1               	line	169
  2294                           	
  2295                           l2437:	
  2296  011A                     ;mainS1proyect.c: 169:             Lcd_Set_Cursor_8bits(2,cont + 1);
  2297                           	movf	(_cont),w
  2298  011A  083D               	addlw	01h
  2299  011B  3E01               	movwf	(??_main+0)+0
  2300  011C  00A8               	movf	(??_main+0)+0,w
  2301  011D  0828               	movwf	(Lcd_Set_Cursor_8bits@x)
  2302  011E  00F5               	movlw	low(02h)
  2303  011F  3002               	fcall	_Lcd_Set_Cursor_8bits
  2304  0120  120A  118A  270E  120A  118A  	line	170
  2305                           	
  2306                           l2439:	
  2307  0125                     ;mainS1proyect.c: 170:             Lcd_Write_Char(Key,8);
  2308                           	movlw	08h
  2309  0125  3008               	movwf	(Lcd_Write_Char@modo)
  2310  0126  00F4               	movlw	0
  2311  0127  3000               	movwf	((Lcd_Write_Char@modo))+1
  2312  0128  00F5               	bcf	status, 5	;RP0=0, select bank0
  2313  0129  1283               	bcf	status, 6	;RP1=0, select bank0
  2314  012A  1303               	movf	(main@Key),w
  2315  012B  0831               	fcall	_Lcd_Write_Char
  2316  012C  120A  118A  261F  120A  118A  	line	171
  2317                           	
  2318                           l2441:	
  2319  0131                     ;mainS1proyect.c: 171:             cont ++;
  2320                           	movlw	low(01h)
  2321  0131  3001               	bcf	status, 5	;RP0=0, select bank0
  2322  0132  1283               	bcf	status, 6	;RP1=0, select bank0
  2323  0133  1303               	movwf	(??_main+0)+0
  2324  0134  00A8               	movf	(??_main+0)+0,w
  2325  0135  0828               	addwf	(_cont),f
  2326  0136  07BD               	line	173
  2327                           	
  2328                           l2443:	
  2329  0137                     ;mainS1proyect.c: 173:             if (Key == 42){
  2330                           		movlw	42
  2331  0137  302A               	xorwf	((main@Key)),w
  2332  0138  0631               	btfss	status,2
  2333  0139  1D03               	goto	u1541
  2334  013A  293C               	goto	u1540
  2335  013B  293D               u1541:
  2336  013C                     	goto	l2447
  2337  013C  293F               u1540:
  2338  013D                     	goto	l152
  2339  013D  28F1               	line	174
  2340                           	
  2341                           l2445:	
  2342  013E                     ;mainS1proyect.c: 174:                 goto Intentelo;
  2343                           	goto	l152
  2344  013E  28F1               	line	175
  2345                           ;mainS1proyect.c: 175:             }
  2346                           	
  2347                           l154:	
  2348  013F                     	line	177
  2349                           	
  2350                           l2447:	
  2351  013F                     ;mainS1proyect.c: 177:             compara[cont - 1] = Key;
  2352                           	movf	(main@Key),w
  2353  013F  0831               	movwf	(??_main+0)+0
  2354  0140  00A8               	movf	(_cont),w
  2355  0141  083D               	addlw	0FFh
  2356  0142  3EFF               	addlw	low(_compara|((0x0)<<8))&0ffh
  2357  0143  3E32               	movwf	fsr0
  2358  0144  0084               	movf	(??_main+0)+0,w
  2359  0145  0828               	bcf	status, 7	;select IRP bank0
  2360  0146  1383               	movwf	indf
  2361  0147  0080               	line	178
  2362                           	
  2363                           l2449:	
  2364  0148                     ;mainS1proyect.c: 178:             if (cont == 5){
  2365                           		movlw	5
  2366  0148  3005               	xorwf	((_cont)),w
  2367  0149  063D               	btfss	status,2
  2368  014A  1D03               	goto	u1551
  2369  014B  294D               	goto	u1550
  2370  014C  294E               u1551:
  2371  014D                     	goto	l2475
  2372  014D  29E1               u1550:
  2373  014E                     	line	179
  2374                           	
  2375                           l2451:	
  2376  014E                     ;mainS1proyect.c: 179:                 _delay((unsigned long)((1000)*(500000/4000.0)));

  2377                           	opt asmopt_push
  2378                           opt asmopt_off
  2379                           movlw	163
  2380  014E  30A3               	bcf	status, 5	;RP0=0, select bank0
  2381  014F  1283               	bcf	status, 6	;RP1=0, select bank0
  2382  0150  1303               movwf	((??_main+0)+0+1),f
  2383  0151  00A9               	movlw	84
  2384  0152  3054               movwf	((??_main+0)+0),f
  2385  0153  00A8               	u1677:
  2386  0154                     decfsz	((??_main+0)+0),f
  2387  0154  0BA8               	goto	u1677
  2388  0155  2954               	decfsz	((??_main+0)+0+1),f
  2389  0156  0BA9               	goto	u1677
  2390  0157  2954               	nop
  2391  0158  0000               opt asmopt_pop
  2392                           
  2393                           	line	180
  2394                           	
  2395                           l2453:	
  2396  0159                     ;mainS1proyect.c: 180:                 for (int i = 0; i < 5; i++) {
  2397                           	bcf	status, 5	;RP0=0, select bank0
  2398  0159  1283               	bcf	status, 6	;RP1=0, select bank0
  2399  015A  1303               	clrf	(main@i)
  2400  015B  01AF               	clrf	(main@i+1)
  2401  015C  01B0               	
  2402                           l2455:	
  2403  015D                     	movf	(main@i+1),w
  2404  015D  0830               	xorlw	80h
  2405  015E  3A80               	movwf	btemp+1
  2406  015F  00FF               	movlw	(0)^80h
  2407  0160  3080               	subwf	btemp+1,w
  2408  0161  027F               	skipz
  2409  0162  1D03               	goto	u1565
  2410  0163  2966               	movlw	05h
  2411  0164  3005               	subwf	(main@i),w
  2412  0165  022F               u1565:
  2413  0166                     
  2414                           	skipc
  2415  0166  1C03               	goto	u1561
  2416  0167  2969               	goto	u1560
  2417  0168  296A               u1561:
  2418  0169                     	goto	l2459
  2419  0169  296C               u1560:
  2420  016A                     	goto	l2479
  2421  016A  29ED               	
  2422                           l2457:	
  2423  016B                     	goto	l2479
  2424  016B  29ED               	
  2425                           l156:	
  2426  016C                     	line	182
  2427                           	
  2428                           l2459:	
  2429  016C                     ;mainS1proyect.c: 182:                     int valor1 = contrasena[i], valor2 = compara[
                                 i];
  2430                           	bcf	status, 5	;RP0=0, select bank0
  2431  016C  1283               	bcf	status, 6	;RP1=0, select bank0
  2432  016D  1303               	movf	(main@i),w
  2433  016E  082F               	addlw	low(_contrasena|((0x0)<<8))&0ffh
  2434  016F  3E40               	movwf	fsr0
  2435  0170  0084               	bcf	status, 7	;select IRP bank0
  2436  0171  1383               	movf	indf,w
  2437  0172  0800               	movwf	(??_main+0)+0
  2438  0173  00A8               	clrf	(??_main+0)+0+1
  2439  0174  01A9               	movf	0+(??_main+0)+0,w
  2440  0175  0828               	movwf	(main@valor1)
  2441  0176  00AB               	movf	1+(??_main+0)+0,w
  2442  0177  0829               	movwf	(main@valor1+1)
  2443  0178  00AC               	movf	(main@i),w
  2444  0179  082F               	addlw	low(_compara|((0x0)<<8))&0ffh
  2445  017A  3E32               	movwf	fsr0
  2446  017B  0084               	movf	indf,w
  2447  017C  0800               	movwf	(??_main+0)+0
  2448  017D  00A8               	clrf	(??_main+0)+0+1
  2449  017E  01A9               	movf	0+(??_main+0)+0,w
  2450  017F  0828               	movwf	(main@valor2)
  2451  0180  00AD               	movf	1+(??_main+0)+0,w
  2452  0181  0829               	movwf	(main@valor2+1)
  2453  0182  00AE               	line	185
  2454                           	
  2455                           l2461:	
  2456  0183                     ;mainS1proyect.c: 185:                     if (valor1 != valor2) {
  2457                           	movf	(main@valor2+1),w
  2458  0183  082E               	xorwf	(main@valor1+1),w
  2459  0184  062C               	skipz
  2460  0185  1D03               	goto	u1575
  2461  0186  2989               	movf	(main@valor2),w
  2462  0187  082D               	xorwf	(main@valor1),w
  2463  0188  062B               u1575:
  2464  0189                     
  2465                           	skipnz
  2466  0189  1903               	goto	u1571
  2467  018A  298C               	goto	u1570
  2468  018B  298D               u1571:
  2469  018C                     	goto	l2471
  2470  018C  29CA               u1570:
  2471  018D                     	line	186
  2472                           	
  2473                           l2463:	
  2474  018D                     ;mainS1proyect.c: 186:                         Lcd_Clear_8bits();
  2475                           	fcall	_Lcd_Clear_8bits
  2476  018D  120A  118A  27AB  120A  118A  	line	187
  2477                           ;mainS1proyect.c: 187:                         Lcd_Set_Cursor_8bits(1,1);
  2478                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2479  0192  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2480  0193  0AF5               	movlw	low(01h)
  2481  0194  3001               	fcall	_Lcd_Set_Cursor_8bits
  2482  0195  120A  118A  270E  120A  118A  	line	188
  2483                           	
  2484                           l2465:	
  2485  019A                     ;mainS1proyect.c: 188:                         Lcd_Write_String("Contrasena mala",8);
  2486                           	movlw	08h
  2487  019A  3008               	bcf	status, 5	;RP0=0, select bank0
  2488  019B  1283               	bcf	status, 6	;RP1=0, select bank0
  2489  019C  1303               	movwf	(Lcd_Write_String@modo)
  2490  019D  00A3               	movlw	0
  2491  019E  3000               	movwf	((Lcd_Write_String@modo))+1
  2492  019F  00A4               	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  2493  01A0  3034               	fcall	_Lcd_Write_String
  2494  01A1  120A  118A  26BC  120A  118A  	line	190
  2495                           	
  2496                           l2467:	
  2497  01A6                     ;mainS1proyect.c: 190:                         Lcd_Set_Cursor_8bits(2,1);
  2498                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2499  01A6  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2500  01A7  0AF5               	movlw	low(02h)
  2501  01A8  3002               	fcall	_Lcd_Set_Cursor_8bits
  2502  01A9  120A  118A  270E  120A  118A  	line	191
  2503                           ;mainS1proyect.c: 191:                         Lcd_Write_String("intentelo",8);
  2504                           	movlw	08h
  2505  01AE  3008               	bcf	status, 5	;RP0=0, select bank0
  2506  01AF  1283               	bcf	status, 6	;RP1=0, select bank0
  2507  01B0  1303               	movwf	(Lcd_Write_String@modo)
  2508  01B1  00A3               	movlw	0
  2509  01B2  3000               	movwf	((Lcd_Write_String@modo))+1
  2510  01B3  00A4               	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  2511  01B4  308A               	fcall	_Lcd_Write_String
  2512  01B5  120A  118A  26BC  120A  118A  	line	192
  2513                           	
  2514                           l2469:	
  2515  01BA                     ;mainS1proyect.c: 192:                         _delay((unsigned long)((3000)*(500000/400
                                 0.0)));
  2516                           	opt asmopt_push
  2517                           opt asmopt_off
  2518                           movlw  2
  2519  01BA  3002               	bcf	status, 5	;RP0=0, select bank0
  2520  01BB  1283               	bcf	status, 6	;RP1=0, select bank0
  2521  01BC  1303               movwf	((??_main+0)+0+2),f
  2522  01BD  00AA               movlw	231
  2523  01BE  30E7               movwf	((??_main+0)+0+1),f
  2524  01BF  00A9               	movlw	255
  2525  01C0  30FF               movwf	((??_main+0)+0),f
  2526  01C1  00A8               	u1687:
  2527  01C2                     decfsz	((??_main+0)+0),f
  2528  01C2  0BA8               	goto	u1687
  2529  01C3  29C2               	decfsz	((??_main+0)+0+1),f
  2530  01C4  0BA9               	goto	u1687
  2531  01C5  29C2               	decfsz	((??_main+0)+0+2),f
  2532  01C6  0BAA               	goto	u1687
  2533  01C7  29C2               	nop2
  2534  01C8  29C9               opt asmopt_pop
  2535                           
  2536                           	line	193
  2537                           ;mainS1proyect.c: 193:                         goto Intentelo;
  2538                           	goto	l152
  2539  01C9  28F1               	line	195
  2540                           ;mainS1proyect.c: 195:                     }
  2541                           	
  2542                           l158:	
  2543  01CA                     	line	196
  2544                           	
  2545                           l2471:	
  2546  01CA                     ;mainS1proyect.c: 196:                 }
  2547                           	movlw	01h
  2548  01CA  3001               	bcf	status, 5	;RP0=0, select bank0
  2549  01CB  1283               	bcf	status, 6	;RP1=0, select bank0
  2550  01CC  1303               	addwf	(main@i),f
  2551  01CD  07AF               	skipnc
  2552  01CE  1803               	incf	(main@i+1),f
  2553  01CF  0AB0               	movlw	0
  2554  01D0  3000               	addwf	(main@i+1),f
  2555  01D1  07B0               	
  2556                           l2473:	
  2557  01D2                     	movf	(main@i+1),w
  2558  01D2  0830               	xorlw	80h
  2559  01D3  3A80               	movwf	btemp+1
  2560  01D4  00FF               	movlw	(0)^80h
  2561  01D5  3080               	subwf	btemp+1,w
  2562  01D6  027F               	skipz
  2563  01D7  1D03               	goto	u1585
  2564  01D8  29DB               	movlw	05h
  2565  01D9  3005               	subwf	(main@i),w
  2566  01DA  022F               u1585:
  2567  01DB                     
  2568                           	skipc
  2569  01DB  1C03               	goto	u1581
  2570  01DC  29DE               	goto	u1580
  2571  01DD  29DF               u1581:
  2572  01DE                     	goto	l2459
  2573  01DE  296C               u1580:
  2574  01DF                     	goto	l2479
  2575  01DF  29ED               	
  2576                           l157:	
  2577  01E0                     	line	197
  2578                           ;mainS1proyect.c: 197:                 goto Bueno;
  2579                           	goto	l2479
  2580  01E0  29ED               	line	199
  2581                           ;mainS1proyect.c: 199:             }
  2582                           	
  2583                           l155:	
  2584  01E1                     	line	203
  2585                           	
  2586                           l2475:	
  2587  01E1                     ;mainS1proyect.c: 203:             if (contraAct == 1){
  2588                           	bcf	status, 5	;RP0=0, select bank0
  2589  01E1  1283               	bcf	status, 6	;RP1=0, select bank0
  2590  01E2  1303               		decf	((_contraAct)),w
  2591  01E3  033E               	btfss	status,2
  2592  01E4  1D03               	goto	u1591
  2593  01E5  29E7               	goto	u1590
  2594  01E6  29E8               u1591:
  2595  01E7                     	goto	l2479
  2596  01E7  29ED               u1590:
  2597  01E8                     	goto	l2435
  2598  01E8  2910               	line	204
  2599                           	
  2600                           l2477:	
  2601  01E9                     ;mainS1proyect.c: 204:                 goto IngresarC;
  2602                           	goto	l2435
  2603  01E9  2910               	line	205
  2604                           ;mainS1proyect.c: 205:             }
  2605                           	
  2606                           l160:	
  2607  01EA                     	line	207
  2608                           ;mainS1proyect.c: 207:         } else {
  2609                           	goto	l2479
  2610  01EA  29ED               	
  2611                           l151:	
  2612  01EB                     	line	208
  2613                           ;mainS1proyect.c: 208:             goto Presiona;
  2614                           	goto	l150
  2615  01EB  28E1               	line	209
  2616                           ;mainS1proyect.c: 209:         }
  2617                           	
  2618                           l161:	
  2619  01EC                     	goto	l2479
  2620  01EC  29ED               	line	211
  2621                           ;mainS1proyect.c: 211:         Bueno:
  2622                           	
  2623                           l159:	
  2624  01ED                     	line	213
  2625                           	
  2626                           l2479:	
  2627  01ED                     ;mainS1proyect.c: 213:         Lcd_Clear_8bits();
  2628                           	fcall	_Lcd_Clear_8bits
  2629  01ED  120A  118A  27AB  120A  118A  	line	214
  2630                           ;mainS1proyect.c: 214:         Lcd_Set_Cursor_8bits(1,1);
  2631                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2632  01F2  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2633  01F3  0AF5               	movlw	low(01h)
  2634  01F4  3001               	fcall	_Lcd_Set_Cursor_8bits
  2635  01F5  120A  118A  270E  120A  118A  	line	215
  2636                           	
  2637                           l2481:	
  2638  01FA                     ;mainS1proyect.c: 215:         Lcd_Write_String("Acceso brindado,",8);
  2639                           	movlw	08h
  2640  01FA  3008               	bcf	status, 5	;RP0=0, select bank0
  2641  01FB  1283               	bcf	status, 6	;RP1=0, select bank0
  2642  01FC  1303               	movwf	(Lcd_Write_String@modo)
  2643  01FD  00A3               	movlw	0
  2644  01FE  3000               	movwf	((Lcd_Write_String@modo))+1
  2645  01FF  00A4               	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  2646  0200  3001               	fcall	_Lcd_Write_String
  2647  0201  120A  118A  26BC  120A  118A  	line	216
  2648                           	
  2649                           l2483:	
  2650  0206                     ;mainS1proyect.c: 216:         Lcd_Set_Cursor_8bits(2,1);
  2651                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2652  0206  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2653  0207  0AF5               	movlw	low(02h)
  2654  0208  3002               	fcall	_Lcd_Set_Cursor_8bits
  2655  0209  120A  118A  270E  120A  118A  	line	217
  2656                           ;mainS1proyect.c: 217:         Lcd_Write_String("Introduzca llave",8);
  2657                           	movlw	08h
  2658  020E  3008               	bcf	status, 5	;RP0=0, select bank0
  2659  020F  1283               	bcf	status, 6	;RP1=0, select bank0
  2660  0210  1303               	movwf	(Lcd_Write_String@modo)
  2661  0211  00A3               	movlw	0
  2662  0212  3000               	movwf	((Lcd_Write_String@modo))+1
  2663  0213  00A4               	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  2664  0214  3023               	fcall	_Lcd_Write_String
  2665  0215  120A  118A  26BC  120A  118A  	line	219
  2666                           ;mainS1proyect.c: 219:         while (PORTEbits.RE2 == 0){
  2667                           	goto	l162
  2668  021A  2A2D               	
  2669                           l163:	
  2670  021B                     	line	220
  2671                           	
  2672                           l2485:	
  2673  021B                     ;mainS1proyect.c: 220:             Key = keypad_scanner();
  2674                           	fcall	_keypad_scanner
  2675  021B  120A  118A  2284  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2676  0220  1283               	bcf	status, 6	;RP1=0, select bank0
  2677  0221  1303               	movwf	(??_main+0)+0
  2678  0222  00A8               	movf	(??_main+0)+0,w
  2679  0223  0828               	movwf	(main@Key)
  2680  0224  00B1               	line	221
  2681                           	
  2682                           l2487:	
  2683  0225                     ;mainS1proyect.c: 221:             if (Key == 42){
  2684                           		movlw	42
  2685  0225  302A               	xorwf	((main@Key)),w
  2686  0226  0631               	btfss	status,2
  2687  0227  1D03               	goto	u1601
  2688  0228  2A2A               	goto	u1600
  2689  0229  2A2B               u1601:
  2690  022A                     	goto	l162
  2691  022A  2A2D               u1600:
  2692  022B                     	goto	l152
  2693  022B  28F1               	line	222
  2694                           	
  2695                           l2489:	
  2696  022C                     ;mainS1proyect.c: 222:                 goto Intentelo;
  2697                           	goto	l152
  2698  022C  28F1               	line	223
  2699                           ;mainS1proyect.c: 223:             }
  2700                           	
  2701                           l164:	
  2702  022D                     	line	224
  2703                           ;mainS1proyect.c: 224:         }
  2704                           	
  2705                           l162:	
  2706  022D                     	line	219
  2707                           ;mainS1proyect.c: 219:         while (PORTEbits.RE2 == 0){
  2708                           	bcf	status, 5	;RP0=0, select bank0
  2709  022D  1283               	bcf	status, 6	;RP1=0, select bank0
  2710  022E  1303               	btfss	(9),2	;volatile
  2711  022F  1D09               	goto	u1611
  2712  0230  2A32               	goto	u1610
  2713  0231  2A33               u1611:
  2714  0232                     	goto	l2485
  2715  0232  2A1B               u1610:
  2716  0233                     	goto	l2491
  2717  0233  2A34               	
  2718                           l165:	
  2719  0234                     	line	225
  2720                           	
  2721                           l2491:	
  2722  0234                     ;mainS1proyect.c: 225:         Lcd_Clear_8bits();
  2723                           	fcall	_Lcd_Clear_8bits
  2724  0234  120A  118A  27AB  120A  118A  	line	226
  2725                           ;mainS1proyect.c: 226:         Lcd_Set_Cursor_8bits(1,1);
  2726                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2727  0239  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2728  023A  0AF5               	movlw	low(01h)
  2729  023B  3001               	fcall	_Lcd_Set_Cursor_8bits
  2730  023C  120A  118A  270E  120A  118A  	line	227
  2731                           	
  2732                           l2493:	
  2733  0241                     ;mainS1proyect.c: 227:         Lcd_Write_String("Abriendo puerta",8);
  2734                           	movlw	08h
  2735  0241  3008               	bcf	status, 5	;RP0=0, select bank0
  2736  0242  1283               	bcf	status, 6	;RP1=0, select bank0
  2737  0243  1303               	movwf	(Lcd_Write_String@modo)
  2738  0244  00A3               	movlw	0
  2739  0245  3000               	movwf	((Lcd_Write_String@modo))+1
  2740  0246  00A4               	movlw	(low((((STR_10)-__stringbase)|8000h)))&0ffh
  2741  0247  3054               	fcall	_Lcd_Write_String
  2742  0248  120A  118A  26BC  120A  118A  	line	228
  2743                           	
  2744                           l2495:	
  2745  024D                     ;mainS1proyect.c: 228:         Lcd_Set_Cursor_8bits(2,1);
  2746                           	clrf	(Lcd_Set_Cursor_8bits@x)
  2747  024D  01F5               	incf	(Lcd_Set_Cursor_8bits@x),f
  2748  024E  0AF5               	movlw	low(02h)
  2749  024F  3002               	fcall	_Lcd_Set_Cursor_8bits
  2750  0250  120A  118A  270E  120A  118A  	line	229
  2751                           ;mainS1proyect.c: 229:         Lcd_Write_String("Bienvenido",8);
  2752                           	movlw	08h
  2753  0255  3008               	bcf	status, 5	;RP0=0, select bank0
  2754  0256  1283               	bcf	status, 6	;RP1=0, select bank0
  2755  0257  1303               	movwf	(Lcd_Write_String@modo)
  2756  0258  00A3               	movlw	0
  2757  0259  3000               	movwf	((Lcd_Write_String@modo))+1
  2758  025A  00A4               	movlw	(low((((STR_11)-__stringbase)|8000h)))&0ffh
  2759  025B  307F               	fcall	_Lcd_Write_String
  2760  025C  120A  118A  26BC  120A  118A  	line	231
  2761                           	
  2762                           l2497:	
  2763  0261                     ;mainS1proyect.c: 231:         CCPR1L = 15;
  2764                           	movlw	low(0Fh)
  2765  0261  300F               	bcf	status, 5	;RP0=0, select bank0
  2766  0262  1283               	bcf	status, 6	;RP1=0, select bank0
  2767  0263  1303               	movwf	(21)	;volatile
  2768  0264  0095               	line	232
  2769                           	
  2770                           l2499:	
  2771  0265                     ;mainS1proyect.c: 232:         Abierto = 1;
  2772                           	clrf	(_Abierto)
  2773  0265  01B9               	incf	(_Abierto),f
  2774  0266  0AB9               	line	234
  2775                           	
  2776                           l2501:	
  2777  0267                     ;mainS1proyect.c: 234:         _delay((unsigned long)((5000)*(500000/4000.0)));
  2778                           	opt asmopt_push
  2779                           opt asmopt_off
  2780                           movlw  4
  2781  0267  3004               	bcf	status, 5	;RP0=0, select bank0
  2782  0268  1283               	bcf	status, 6	;RP1=0, select bank0
  2783  0269  1303               movwf	((??_main+0)+0+2),f
  2784  026A  00AA               movlw	44
  2785  026B  302C               movwf	((??_main+0)+0+1),f
  2786  026C  00A9               	movlw	171
  2787  026D  30AB               movwf	((??_main+0)+0),f
  2788  026E  00A8               	u1697:
  2789  026F                     decfsz	((??_main+0)+0),f
  2790  026F  0BA8               	goto	u1697
  2791  0270  2A6F               	decfsz	((??_main+0)+0+1),f
  2792  0271  0BA9               	goto	u1697
  2793  0272  2A6F               	decfsz	((??_main+0)+0+2),f
  2794  0273  0BAA               	goto	u1697
  2795  0274  2A6F               opt asmopt_pop
  2796                           
  2797                           	line	235
  2798                           	
  2799                           l2503:	
  2800  0275                     ;mainS1proyect.c: 235:         Lcd_Clear_8bits();
  2801                           	fcall	_Lcd_Clear_8bits
  2802  0275  120A  118A  27AB  120A  118A  	line	236
  2803                           	
  2804                           l2505:	
  2805  027A                     ;mainS1proyect.c: 236:         CCPR1L = 6;
  2806                           	movlw	low(06h)
  2807  027A  3006               	bcf	status, 5	;RP0=0, select bank0
  2808  027B  1283               	bcf	status, 6	;RP1=0, select bank0
  2809  027C  1303               	movwf	(21)	;volatile
  2810  027D  0095               	line	237
  2811                           	
  2812                           l2507:	
  2813  027E                     ;mainS1proyect.c: 237:         Abierto = 0;
  2814                           	clrf	(_Abierto)
  2815  027E  01B9               	line	238
  2816                           ;mainS1proyect.c: 238:         goto Inicio;
  2817                           	goto	l2419
  2818  027F  28B9               	line	239
  2819                           ;mainS1proyect.c: 239:     }
  2820                           	
  2821                           l166:	
  2822  0280                     	goto	l2419
  2823  0280  28B9               	
  2824                           l167:	
  2825  0281                     	line	242
  2826                           ;mainS1proyect.c: 241:     return;
  2827                           	
  2828                           l168:	
  2829  0281                     	global	start
  2830                           	ljmp	start
  2831  0281  120A  118A  280C   	opt stack 0
  2832                           GLOBAL	__end_of_main
  2833                           	__end_of_main:
  2834  0284                     	signat	_main,89
  2835                           	global	_switch_press_scan
  2836                           
  2837 ;; *************** function _switch_press_scan *****************
  2838 ;; Defined at:
  2839 ;;		line 90 in file "KEYPAD.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;		None
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  key             1    6[COMMON] unsigned char 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  1    wreg      unsigned char 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0, pclath, cstack
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2853 ;;      Params:         0       0       0       0       0
  2854 ;;      Locals:         1       0       0       0       0
  2855 ;;      Temps:          1       0       0       0       0
  2856 ;;      Totals:         2       0       0       0       0
  2857 ;;Total ram usage:        2 bytes
  2858 ;; Hardware stack levels used:    1
  2859 ;; Hardware stack levels required when called:    2
  2860 ;; This function calls:
  2861 ;;		_keypad_scanner
  2862 ;; This function is called by:
  2863 ;;		_main
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2867                           	file	"KEYPAD.c"
  2868                           	line	90
  2869                           global __ptext1
  2870                           __ptext1:	;psect for function _switch_press_scan
  2871  0760                     psect	text1
  2872                           	file	"KEYPAD.c"
  2873                           	line	90
  2874                           	global	__size_of_switch_press_scan
  2875                           	__size_of_switch_press_scan	equ	__end_of_switch_press_scan-_switch_press_scan
  2876  0018                     	
  2877                           _switch_press_scan:	
  2878  0760                     ;incstack = 0
  2879                           	opt	stack 5
  2880                           ; Regs used in _switch_press_scan: [wreg+status,2+status,0+pclath+cstack]
  2881                           	line	91
  2882                           	
  2883                           l2011:	
  2884  0760                     ;KEYPAD.c: 91:             char key = 'n';
  2885                           	movlw	low(06Eh)
  2886  0760  306E               	movwf	(??_switch_press_scan+0)+0
  2887  0761  00F5               	movf	(??_switch_press_scan+0)+0,w
  2888  0762  0875               	movwf	(switch_press_scan@key)
  2889  0763  00F6               	line	92
  2890                           ;KEYPAD.c: 92:             while(key=='n')
  2891                           	goto	l2015
  2892  0764  2F6E               	
  2893                           l416:	
  2894  0765                     	line	93
  2895                           	
  2896                           l2013:	
  2897  0765                     ;KEYPAD.c: 93:             key = keypad_scanner();
  2898                           	fcall	_keypad_scanner
  2899  0765  120A  118A  2284  120A  118A  	movwf	(??_switch_press_scan+0)+0
  2900  076A  00F5               	movf	(??_switch_press_scan+0)+0,w
  2901  076B  0875               	movwf	(switch_press_scan@key)
  2902  076C  00F6               	goto	l2015
  2903  076D  2F6E               	
  2904                           l415:	
  2905  076E                     	line	92
  2906                           	
  2907                           l2015:	
  2908  076E                     ;KEYPAD.c: 92:             while(key=='n')
  2909                           		movlw	110
  2910  076E  306E               	xorwf	((switch_press_scan@key)),w
  2911  076F  0676               	btfsc	status,2
  2912  0770  1903               	goto	u1171
  2913  0771  2F73               	goto	u1170
  2914  0772  2F74               u1171:
  2915  0773                     	goto	l2013
  2916  0773  2F65               u1170:
  2917  0774                     	goto	l2017
  2918  0774  2F75               	
  2919                           l417:	
  2920  0775                     	line	94
  2921                           	
  2922                           l2017:	
  2923  0775                     ;KEYPAD.c: 94:             return key;
  2924                           	movf	(switch_press_scan@key),w
  2925  0775  0876               	goto	l418
  2926  0776  2F77               	
  2927                           l2019:	
  2928  0777                     	line	95
  2929                           	
  2930                           l418:	
  2931  0777                     	return
  2932  0777  0008               	opt stack 0
  2933                           GLOBAL	__end_of_switch_press_scan
  2934                           	__end_of_switch_press_scan:
  2935  0778                     	signat	_switch_press_scan,89
  2936                           	global	_keypad_scanner
  2937                           
  2938 ;; *************** function _keypad_scanner *****************
  2939 ;; Defined at:
  2940 ;;		line 14 in file "KEYPAD.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  1    wreg      unsigned char 
  2947 ;; Registers used:
  2948 ;;		wreg
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2954 ;;      Params:         0       0       0       0       0
  2955 ;;      Locals:         0       0       0       0       0
  2956 ;;      Temps:          2       0       0       0       0
  2957 ;;      Totals:         2       0       0       0       0
  2958 ;;Total ram usage:        2 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    1
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_main
  2965 ;;		_switch_press_scan
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2969                           	line	14
  2970                           global __ptext2
  2971                           __ptext2:	;psect for function _keypad_scanner
  2972  0284                     psect	text2
  2973                           	file	"KEYPAD.c"
  2974                           	line	14
  2975                           	global	__size_of_keypad_scanner
  2976                           	__size_of_keypad_scanner	equ	__end_of_keypad_scanner-_keypad_scanner
  2977  0195                     	
  2978                           _keypad_scanner:	
  2979  0284                     ;incstack = 0
  2980                           	opt	stack 5
  2981                           ; Regs used in _keypad_scanner: [wreg]
  2982                           	line	16
  2983                           	
  2984                           l1731:	
  2985  0284                     ;KEYPAD.c: 16:             RD0 = 0; RD1 = 1; RD2 = 1; RD3 = 1;
  2986                           	bcf	status, 5	;RP0=0, select bank0
  2987  0284  1283               	bcf	status, 6	;RP1=0, select bank0
  2988  0285  1303               	bcf	(64/8),(64)&7	;volatile
  2989  0286  1008               	bsf	(65/8),(65)&7	;volatile
  2990  0287  1488               	bsf	(66/8),(66)&7	;volatile
  2991  0288  1508               	bsf	(67/8),(67)&7	;volatile
  2992  0289  1588               	line	17
  2993                           ;KEYPAD.c: 17:             if (RD4 == 0) {
  2994                           	btfsc	(68/8),(68)&7	;volatile
  2995  028A  1A08               	goto	u821
  2996  028B  2A8D               	goto	u820
  2997  028C  2A8E               u821:
  2998  028D                     	goto	l348
  2999  028D  2AA2               u820:
  3000  028E                     	line	18
  3001                           	
  3002                           l1733:	
  3003  028E                     ;KEYPAD.c: 18:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3004                           	opt asmopt_push
  3005                           opt asmopt_off
  3006                           movlw	17
  3007  028E  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3008  028F  00F4               	movlw	58
  3009  0290  303A               movwf	((??_keypad_scanner+0)+0),f
  3010  0291  00F3               	u1707:
  3011  0292                     decfsz	((??_keypad_scanner+0)+0),f
  3012  0292  0BF3               	goto	u1707
  3013  0293  2A92               	decfsz	((??_keypad_scanner+0)+0+1),f
  3014  0294  0BF4               	goto	u1707
  3015  0295  2A92               	nop
  3016  0296  0000               opt asmopt_pop
  3017                           
  3018                           	line	19
  3019                           ;KEYPAD.c: 19:                 while (RD4==0);
  3020                           	goto	l349
  3021  0297  2A98               	
  3022                           l350:	
  3023  0298                     	
  3024                           l349:	
  3025  0298                     	bcf	status, 5	;RP0=0, select bank0
  3026  0298  1283               	bcf	status, 6	;RP1=0, select bank0
  3027  0299  1303               	btfss	(68/8),(68)&7	;volatile
  3028  029A  1E08               	goto	u831
  3029  029B  2A9D               	goto	u830
  3030  029C  2A9E               u831:
  3031  029D                     	goto	l349
  3032  029D  2A98               u830:
  3033  029E                     	goto	l1735
  3034  029E  2A9F               	
  3035                           l351:	
  3036  029F                     	line	20
  3037                           	
  3038                           l1735:	
  3039  029F                     ;KEYPAD.c: 20:                 return '1'; }
  3040                           	movlw	low(031h)
  3041  029F  3031               	goto	l352
  3042  02A0  2C18               	
  3043                           l1737:	
  3044  02A1                     	goto	l352
  3045  02A1  2C18               	
  3046                           l348:	
  3047  02A2                     	line	21
  3048                           ;KEYPAD.c: 21:             if (RD5 == 0) {
  3049                           	btfsc	(69/8),(69)&7	;volatile
  3050  02A2  1A88               	goto	u841
  3051  02A3  2AA5               	goto	u840
  3052  02A4  2AA6               u841:
  3053  02A5                     	goto	l353
  3054  02A5  2ABA               u840:
  3055  02A6                     	line	22
  3056                           	
  3057                           l1739:	
  3058  02A6                     ;KEYPAD.c: 22:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3059                           	opt asmopt_push
  3060                           opt asmopt_off
  3061                           movlw	17
  3062  02A6  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3063  02A7  00F4               	movlw	58
  3064  02A8  303A               movwf	((??_keypad_scanner+0)+0),f
  3065  02A9  00F3               	u1717:
  3066  02AA                     decfsz	((??_keypad_scanner+0)+0),f
  3067  02AA  0BF3               	goto	u1717
  3068  02AB  2AAA               	decfsz	((??_keypad_scanner+0)+0+1),f
  3069  02AC  0BF4               	goto	u1717
  3070  02AD  2AAA               	nop
  3071  02AE  0000               opt asmopt_pop
  3072                           
  3073                           	line	23
  3074                           ;KEYPAD.c: 23:                 while (RD5==0);
  3075                           	goto	l354
  3076  02AF  2AB0               	
  3077                           l355:	
  3078  02B0                     	
  3079                           l354:	
  3080  02B0                     	bcf	status, 5	;RP0=0, select bank0
  3081  02B0  1283               	bcf	status, 6	;RP1=0, select bank0
  3082  02B1  1303               	btfss	(69/8),(69)&7	;volatile
  3083  02B2  1E88               	goto	u851
  3084  02B3  2AB5               	goto	u850
  3085  02B4  2AB6               u851:
  3086  02B5                     	goto	l354
  3087  02B5  2AB0               u850:
  3088  02B6                     	goto	l1741
  3089  02B6  2AB7               	
  3090                           l356:	
  3091  02B7                     	line	24
  3092                           	
  3093                           l1741:	
  3094  02B7                     ;KEYPAD.c: 24:                 return '2'; }
  3095                           	movlw	low(032h)
  3096  02B7  3032               	goto	l352
  3097  02B8  2C18               	
  3098                           l1743:	
  3099  02B9                     	goto	l352
  3100  02B9  2C18               	
  3101                           l353:	
  3102  02BA                     	line	25
  3103                           ;KEYPAD.c: 25:             if (RD6 == 0) {
  3104                           	btfsc	(70/8),(70)&7	;volatile
  3105  02BA  1B08               	goto	u861
  3106  02BB  2ABD               	goto	u860
  3107  02BC  2ABE               u861:
  3108  02BD                     	goto	l357
  3109  02BD  2AD2               u860:
  3110  02BE                     	line	26
  3111                           	
  3112                           l1745:	
  3113  02BE                     ;KEYPAD.c: 26:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3114                           	opt asmopt_push
  3115                           opt asmopt_off
  3116                           movlw	17
  3117  02BE  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3118  02BF  00F4               	movlw	58
  3119  02C0  303A               movwf	((??_keypad_scanner+0)+0),f
  3120  02C1  00F3               	u1727:
  3121  02C2                     decfsz	((??_keypad_scanner+0)+0),f
  3122  02C2  0BF3               	goto	u1727
  3123  02C3  2AC2               	decfsz	((??_keypad_scanner+0)+0+1),f
  3124  02C4  0BF4               	goto	u1727
  3125  02C5  2AC2               	nop
  3126  02C6  0000               opt asmopt_pop
  3127                           
  3128                           	line	27
  3129                           ;KEYPAD.c: 27:                 while (RD6==0);
  3130                           	goto	l358
  3131  02C7  2AC8               	
  3132                           l359:	
  3133  02C8                     	
  3134                           l358:	
  3135  02C8                     	bcf	status, 5	;RP0=0, select bank0
  3136  02C8  1283               	bcf	status, 6	;RP1=0, select bank0
  3137  02C9  1303               	btfss	(70/8),(70)&7	;volatile
  3138  02CA  1F08               	goto	u871
  3139  02CB  2ACD               	goto	u870
  3140  02CC  2ACE               u871:
  3141  02CD                     	goto	l358
  3142  02CD  2AC8               u870:
  3143  02CE                     	goto	l1747
  3144  02CE  2ACF               	
  3145                           l360:	
  3146  02CF                     	line	28
  3147                           	
  3148                           l1747:	
  3149  02CF                     ;KEYPAD.c: 28:                 return '3'; }
  3150                           	movlw	low(033h)
  3151  02CF  3033               	goto	l352
  3152  02D0  2C18               	
  3153                           l1749:	
  3154  02D1                     	goto	l352
  3155  02D1  2C18               	
  3156                           l357:	
  3157  02D2                     	line	29
  3158                           ;KEYPAD.c: 29:             if (RD7 == 0) {
  3159                           	btfsc	(71/8),(71)&7	;volatile
  3160  02D2  1B88               	goto	u881
  3161  02D3  2AD5               	goto	u880
  3162  02D4  2AD6               u881:
  3163  02D5                     	goto	l361
  3164  02D5  2AEA               u880:
  3165  02D6                     	line	30
  3166                           	
  3167                           l1751:	
  3168  02D6                     ;KEYPAD.c: 30:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3169                           	opt asmopt_push
  3170                           opt asmopt_off
  3171                           movlw	17
  3172  02D6  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3173  02D7  00F4               	movlw	58
  3174  02D8  303A               movwf	((??_keypad_scanner+0)+0),f
  3175  02D9  00F3               	u1737:
  3176  02DA                     decfsz	((??_keypad_scanner+0)+0),f
  3177  02DA  0BF3               	goto	u1737
  3178  02DB  2ADA               	decfsz	((??_keypad_scanner+0)+0+1),f
  3179  02DC  0BF4               	goto	u1737
  3180  02DD  2ADA               	nop
  3181  02DE  0000               opt asmopt_pop
  3182                           
  3183                           	line	31
  3184                           ;KEYPAD.c: 31:                 while (RD7==0);
  3185                           	goto	l362
  3186  02DF  2AE0               	
  3187                           l363:	
  3188  02E0                     	
  3189                           l362:	
  3190  02E0                     	bcf	status, 5	;RP0=0, select bank0
  3191  02E0  1283               	bcf	status, 6	;RP1=0, select bank0
  3192  02E1  1303               	btfss	(71/8),(71)&7	;volatile
  3193  02E2  1F88               	goto	u891
  3194  02E3  2AE5               	goto	u890
  3195  02E4  2AE6               u891:
  3196  02E5                     	goto	l362
  3197  02E5  2AE0               u890:
  3198  02E6                     	goto	l1753
  3199  02E6  2AE7               	
  3200                           l364:	
  3201  02E7                     	line	32
  3202                           	
  3203                           l1753:	
  3204  02E7                     ;KEYPAD.c: 32:                 return 'A'; }
  3205                           	movlw	low(041h)
  3206  02E7  3041               	goto	l352
  3207  02E8  2C18               	
  3208                           l1755:	
  3209  02E9                     	goto	l352
  3210  02E9  2C18               	
  3211                           l361:	
  3212  02EA                     	line	34
  3213                           ;KEYPAD.c: 34:             RD0 = 1; RD1 = 0; RD2 = 1; RD3 = 1;
  3214                           	bsf	(64/8),(64)&7	;volatile
  3215  02EA  1408               	bcf	(65/8),(65)&7	;volatile
  3216  02EB  1088               	bsf	(66/8),(66)&7	;volatile
  3217  02EC  1508               	bsf	(67/8),(67)&7	;volatile
  3218  02ED  1588               	line	35
  3219                           ;KEYPAD.c: 35:             if (RD4 == 0) {
  3220                           	btfsc	(68/8),(68)&7	;volatile
  3221  02EE  1A08               	goto	u901
  3222  02EF  2AF1               	goto	u900
  3223  02F0  2AF2               u901:
  3224  02F1                     	goto	l365
  3225  02F1  2B06               u900:
  3226  02F2                     	line	36
  3227                           	
  3228                           l1757:	
  3229  02F2                     ;KEYPAD.c: 36:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3230                           	opt asmopt_push
  3231                           opt asmopt_off
  3232                           movlw	17
  3233  02F2  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3234  02F3  00F4               	movlw	58
  3235  02F4  303A               movwf	((??_keypad_scanner+0)+0),f
  3236  02F5  00F3               	u1747:
  3237  02F6                     decfsz	((??_keypad_scanner+0)+0),f
  3238  02F6  0BF3               	goto	u1747
  3239  02F7  2AF6               	decfsz	((??_keypad_scanner+0)+0+1),f
  3240  02F8  0BF4               	goto	u1747
  3241  02F9  2AF6               	nop
  3242  02FA  0000               opt asmopt_pop
  3243                           
  3244                           	line	37
  3245                           ;KEYPAD.c: 37:                 while (RD4==0);
  3246                           	goto	l366
  3247  02FB  2AFC               	
  3248                           l367:	
  3249  02FC                     	
  3250                           l366:	
  3251  02FC                     	bcf	status, 5	;RP0=0, select bank0
  3252  02FC  1283               	bcf	status, 6	;RP1=0, select bank0
  3253  02FD  1303               	btfss	(68/8),(68)&7	;volatile
  3254  02FE  1E08               	goto	u911
  3255  02FF  2B01               	goto	u910
  3256  0300  2B02               u911:
  3257  0301                     	goto	l366
  3258  0301  2AFC               u910:
  3259  0302                     	goto	l1759
  3260  0302  2B03               	
  3261                           l368:	
  3262  0303                     	line	38
  3263                           	
  3264                           l1759:	
  3265  0303                     ;KEYPAD.c: 38:                 return '4'; }
  3266                           	movlw	low(034h)
  3267  0303  3034               	goto	l352
  3268  0304  2C18               	
  3269                           l1761:	
  3270  0305                     	goto	l352
  3271  0305  2C18               	
  3272                           l365:	
  3273  0306                     	line	39
  3274                           ;KEYPAD.c: 39:             if (RD5 == 0) {
  3275                           	btfsc	(69/8),(69)&7	;volatile
  3276  0306  1A88               	goto	u921
  3277  0307  2B09               	goto	u920
  3278  0308  2B0A               u921:
  3279  0309                     	goto	l369
  3280  0309  2B1E               u920:
  3281  030A                     	line	40
  3282                           	
  3283                           l1763:	
  3284  030A                     ;KEYPAD.c: 40:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3285                           	opt asmopt_push
  3286                           opt asmopt_off
  3287                           movlw	17
  3288  030A  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3289  030B  00F4               	movlw	58
  3290  030C  303A               movwf	((??_keypad_scanner+0)+0),f
  3291  030D  00F3               	u1757:
  3292  030E                     decfsz	((??_keypad_scanner+0)+0),f
  3293  030E  0BF3               	goto	u1757
  3294  030F  2B0E               	decfsz	((??_keypad_scanner+0)+0+1),f
  3295  0310  0BF4               	goto	u1757
  3296  0311  2B0E               	nop
  3297  0312  0000               opt asmopt_pop
  3298                           
  3299                           	line	41
  3300                           ;KEYPAD.c: 41:                 while (RD5==0);
  3301                           	goto	l370
  3302  0313  2B14               	
  3303                           l371:	
  3304  0314                     	
  3305                           l370:	
  3306  0314                     	bcf	status, 5	;RP0=0, select bank0
  3307  0314  1283               	bcf	status, 6	;RP1=0, select bank0
  3308  0315  1303               	btfss	(69/8),(69)&7	;volatile
  3309  0316  1E88               	goto	u931
  3310  0317  2B19               	goto	u930
  3311  0318  2B1A               u931:
  3312  0319                     	goto	l370
  3313  0319  2B14               u930:
  3314  031A                     	goto	l1765
  3315  031A  2B1B               	
  3316                           l372:	
  3317  031B                     	line	42
  3318                           	
  3319                           l1765:	
  3320  031B                     ;KEYPAD.c: 42:                 return '5'; }
  3321                           	movlw	low(035h)
  3322  031B  3035               	goto	l352
  3323  031C  2C18               	
  3324                           l1767:	
  3325  031D                     	goto	l352
  3326  031D  2C18               	
  3327                           l369:	
  3328  031E                     	line	43
  3329                           ;KEYPAD.c: 43:             if (RD6 == 0) {
  3330                           	btfsc	(70/8),(70)&7	;volatile
  3331  031E  1B08               	goto	u941
  3332  031F  2B21               	goto	u940
  3333  0320  2B22               u941:
  3334  0321                     	goto	l373
  3335  0321  2B36               u940:
  3336  0322                     	line	44
  3337                           	
  3338                           l1769:	
  3339  0322                     ;KEYPAD.c: 44:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3340                           	opt asmopt_push
  3341                           opt asmopt_off
  3342                           movlw	17
  3343  0322  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3344  0323  00F4               	movlw	58
  3345  0324  303A               movwf	((??_keypad_scanner+0)+0),f
  3346  0325  00F3               	u1767:
  3347  0326                     decfsz	((??_keypad_scanner+0)+0),f
  3348  0326  0BF3               	goto	u1767
  3349  0327  2B26               	decfsz	((??_keypad_scanner+0)+0+1),f
  3350  0328  0BF4               	goto	u1767
  3351  0329  2B26               	nop
  3352  032A  0000               opt asmopt_pop
  3353                           
  3354                           	line	45
  3355                           ;KEYPAD.c: 45:                 while (RD6==0);
  3356                           	goto	l374
  3357  032B  2B2C               	
  3358                           l375:	
  3359  032C                     	
  3360                           l374:	
  3361  032C                     	bcf	status, 5	;RP0=0, select bank0
  3362  032C  1283               	bcf	status, 6	;RP1=0, select bank0
  3363  032D  1303               	btfss	(70/8),(70)&7	;volatile
  3364  032E  1F08               	goto	u951
  3365  032F  2B31               	goto	u950
  3366  0330  2B32               u951:
  3367  0331                     	goto	l374
  3368  0331  2B2C               u950:
  3369  0332                     	goto	l1771
  3370  0332  2B33               	
  3371                           l376:	
  3372  0333                     	line	46
  3373                           	
  3374                           l1771:	
  3375  0333                     ;KEYPAD.c: 46:                 return '6'; }
  3376                           	movlw	low(036h)
  3377  0333  3036               	goto	l352
  3378  0334  2C18               	
  3379                           l1773:	
  3380  0335                     	goto	l352
  3381  0335  2C18               	
  3382                           l373:	
  3383  0336                     	line	47
  3384                           ;KEYPAD.c: 47:             if (RD7 == 0) {
  3385                           	btfsc	(71/8),(71)&7	;volatile
  3386  0336  1B88               	goto	u961
  3387  0337  2B39               	goto	u960
  3388  0338  2B3A               u961:
  3389  0339                     	goto	l377
  3390  0339  2B4E               u960:
  3391  033A                     	line	48
  3392                           	
  3393                           l1775:	
  3394  033A                     ;KEYPAD.c: 48:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3395                           	opt asmopt_push
  3396                           opt asmopt_off
  3397                           movlw	17
  3398  033A  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3399  033B  00F4               	movlw	58
  3400  033C  303A               movwf	((??_keypad_scanner+0)+0),f
  3401  033D  00F3               	u1777:
  3402  033E                     decfsz	((??_keypad_scanner+0)+0),f
  3403  033E  0BF3               	goto	u1777
  3404  033F  2B3E               	decfsz	((??_keypad_scanner+0)+0+1),f
  3405  0340  0BF4               	goto	u1777
  3406  0341  2B3E               	nop
  3407  0342  0000               opt asmopt_pop
  3408                           
  3409                           	line	49
  3410                           ;KEYPAD.c: 49:                 while (RD7==0);
  3411                           	goto	l378
  3412  0343  2B44               	
  3413                           l379:	
  3414  0344                     	
  3415                           l378:	
  3416  0344                     	bcf	status, 5	;RP0=0, select bank0
  3417  0344  1283               	bcf	status, 6	;RP1=0, select bank0
  3418  0345  1303               	btfss	(71/8),(71)&7	;volatile
  3419  0346  1F88               	goto	u971
  3420  0347  2B49               	goto	u970
  3421  0348  2B4A               u971:
  3422  0349                     	goto	l378
  3423  0349  2B44               u970:
  3424  034A                     	goto	l1777
  3425  034A  2B4B               	
  3426                           l380:	
  3427  034B                     	line	50
  3428                           	
  3429                           l1777:	
  3430  034B                     ;KEYPAD.c: 50:                 return 'B'; }
  3431                           	movlw	low(042h)
  3432  034B  3042               	goto	l352
  3433  034C  2C18               	
  3434                           l1779:	
  3435  034D                     	goto	l352
  3436  034D  2C18               	
  3437                           l377:	
  3438  034E                     	line	52
  3439                           ;KEYPAD.c: 52:             RD0 = 1; RD1 = 1; RD2 = 0; RD3 = 1;
  3440                           	bsf	(64/8),(64)&7	;volatile
  3441  034E  1408               	bsf	(65/8),(65)&7	;volatile
  3442  034F  1488               	bcf	(66/8),(66)&7	;volatile
  3443  0350  1108               	bsf	(67/8),(67)&7	;volatile
  3444  0351  1588               	line	53
  3445                           ;KEYPAD.c: 53:             if (RD4 == 0) {
  3446                           	btfsc	(68/8),(68)&7	;volatile
  3447  0352  1A08               	goto	u981
  3448  0353  2B55               	goto	u980
  3449  0354  2B56               u981:
  3450  0355                     	goto	l381
  3451  0355  2B6A               u980:
  3452  0356                     	line	54
  3453                           	
  3454                           l1781:	
  3455  0356                     ;KEYPAD.c: 54:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3456                           	opt asmopt_push
  3457                           opt asmopt_off
  3458                           movlw	17
  3459  0356  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3460  0357  00F4               	movlw	58
  3461  0358  303A               movwf	((??_keypad_scanner+0)+0),f
  3462  0359  00F3               	u1787:
  3463  035A                     decfsz	((??_keypad_scanner+0)+0),f
  3464  035A  0BF3               	goto	u1787
  3465  035B  2B5A               	decfsz	((??_keypad_scanner+0)+0+1),f
  3466  035C  0BF4               	goto	u1787
  3467  035D  2B5A               	nop
  3468  035E  0000               opt asmopt_pop
  3469                           
  3470                           	line	55
  3471                           ;KEYPAD.c: 55:                 while (RD4==0);
  3472                           	goto	l382
  3473  035F  2B60               	
  3474                           l383:	
  3475  0360                     	
  3476                           l382:	
  3477  0360                     	bcf	status, 5	;RP0=0, select bank0
  3478  0360  1283               	bcf	status, 6	;RP1=0, select bank0
  3479  0361  1303               	btfss	(68/8),(68)&7	;volatile
  3480  0362  1E08               	goto	u991
  3481  0363  2B65               	goto	u990
  3482  0364  2B66               u991:
  3483  0365                     	goto	l382
  3484  0365  2B60               u990:
  3485  0366                     	goto	l1783
  3486  0366  2B67               	
  3487                           l384:	
  3488  0367                     	line	56
  3489                           	
  3490                           l1783:	
  3491  0367                     ;KEYPAD.c: 56:                 return '7'; }
  3492                           	movlw	low(037h)
  3493  0367  3037               	goto	l352
  3494  0368  2C18               	
  3495                           l1785:	
  3496  0369                     	goto	l352
  3497  0369  2C18               	
  3498                           l381:	
  3499  036A                     	line	57
  3500                           ;KEYPAD.c: 57:             if (RD5 == 0) {
  3501                           	btfsc	(69/8),(69)&7	;volatile
  3502  036A  1A88               	goto	u1001
  3503  036B  2B6D               	goto	u1000
  3504  036C  2B6E               u1001:
  3505  036D                     	goto	l385
  3506  036D  2B82               u1000:
  3507  036E                     	line	58
  3508                           	
  3509                           l1787:	
  3510  036E                     ;KEYPAD.c: 58:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3511                           	opt asmopt_push
  3512                           opt asmopt_off
  3513                           movlw	17
  3514  036E  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3515  036F  00F4               	movlw	58
  3516  0370  303A               movwf	((??_keypad_scanner+0)+0),f
  3517  0371  00F3               	u1797:
  3518  0372                     decfsz	((??_keypad_scanner+0)+0),f
  3519  0372  0BF3               	goto	u1797
  3520  0373  2B72               	decfsz	((??_keypad_scanner+0)+0+1),f
  3521  0374  0BF4               	goto	u1797
  3522  0375  2B72               	nop
  3523  0376  0000               opt asmopt_pop
  3524                           
  3525                           	line	59
  3526                           ;KEYPAD.c: 59:                 while (RD5==0);
  3527                           	goto	l386
  3528  0377  2B78               	
  3529                           l387:	
  3530  0378                     	
  3531                           l386:	
  3532  0378                     	bcf	status, 5	;RP0=0, select bank0
  3533  0378  1283               	bcf	status, 6	;RP1=0, select bank0
  3534  0379  1303               	btfss	(69/8),(69)&7	;volatile
  3535  037A  1E88               	goto	u1011
  3536  037B  2B7D               	goto	u1010
  3537  037C  2B7E               u1011:
  3538  037D                     	goto	l386
  3539  037D  2B78               u1010:
  3540  037E                     	goto	l1789
  3541  037E  2B7F               	
  3542                           l388:	
  3543  037F                     	line	60
  3544                           	
  3545                           l1789:	
  3546  037F                     ;KEYPAD.c: 60:                 return '8'; }
  3547                           	movlw	low(038h)
  3548  037F  3038               	goto	l352
  3549  0380  2C18               	
  3550                           l1791:	
  3551  0381                     	goto	l352
  3552  0381  2C18               	
  3553                           l385:	
  3554  0382                     	line	61
  3555                           ;KEYPAD.c: 61:             if (RD6 == 0) {
  3556                           	btfsc	(70/8),(70)&7	;volatile
  3557  0382  1B08               	goto	u1021
  3558  0383  2B85               	goto	u1020
  3559  0384  2B86               u1021:
  3560  0385                     	goto	l389
  3561  0385  2B9A               u1020:
  3562  0386                     	line	62
  3563                           	
  3564                           l1793:	
  3565  0386                     ;KEYPAD.c: 62:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3566                           	opt asmopt_push
  3567                           opt asmopt_off
  3568                           movlw	17
  3569  0386  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3570  0387  00F4               	movlw	58
  3571  0388  303A               movwf	((??_keypad_scanner+0)+0),f
  3572  0389  00F3               	u1807:
  3573  038A                     decfsz	((??_keypad_scanner+0)+0),f
  3574  038A  0BF3               	goto	u1807
  3575  038B  2B8A               	decfsz	((??_keypad_scanner+0)+0+1),f
  3576  038C  0BF4               	goto	u1807
  3577  038D  2B8A               	nop
  3578  038E  0000               opt asmopt_pop
  3579                           
  3580                           	line	63
  3581                           ;KEYPAD.c: 63:                 while (RD6==0);
  3582                           	goto	l390
  3583  038F  2B90               	
  3584                           l391:	
  3585  0390                     	
  3586                           l390:	
  3587  0390                     	bcf	status, 5	;RP0=0, select bank0
  3588  0390  1283               	bcf	status, 6	;RP1=0, select bank0
  3589  0391  1303               	btfss	(70/8),(70)&7	;volatile
  3590  0392  1F08               	goto	u1031
  3591  0393  2B95               	goto	u1030
  3592  0394  2B96               u1031:
  3593  0395                     	goto	l390
  3594  0395  2B90               u1030:
  3595  0396                     	goto	l1795
  3596  0396  2B97               	
  3597                           l392:	
  3598  0397                     	line	64
  3599                           	
  3600                           l1795:	
  3601  0397                     ;KEYPAD.c: 64:                 return '9'; }
  3602                           	movlw	low(039h)
  3603  0397  3039               	goto	l352
  3604  0398  2C18               	
  3605                           l1797:	
  3606  0399                     	goto	l352
  3607  0399  2C18               	
  3608                           l389:	
  3609  039A                     	line	65
  3610                           ;KEYPAD.c: 65:             if (RD7 == 0) {
  3611                           	btfsc	(71/8),(71)&7	;volatile
  3612  039A  1B88               	goto	u1041
  3613  039B  2B9D               	goto	u1040
  3614  039C  2B9E               u1041:
  3615  039D                     	goto	l393
  3616  039D  2BB2               u1040:
  3617  039E                     	line	66
  3618                           	
  3619                           l1799:	
  3620  039E                     ;KEYPAD.c: 66:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3621                           	opt asmopt_push
  3622                           opt asmopt_off
  3623                           movlw	17
  3624  039E  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3625  039F  00F4               	movlw	58
  3626  03A0  303A               movwf	((??_keypad_scanner+0)+0),f
  3627  03A1  00F3               	u1817:
  3628  03A2                     decfsz	((??_keypad_scanner+0)+0),f
  3629  03A2  0BF3               	goto	u1817
  3630  03A3  2BA2               	decfsz	((??_keypad_scanner+0)+0+1),f
  3631  03A4  0BF4               	goto	u1817
  3632  03A5  2BA2               	nop
  3633  03A6  0000               opt asmopt_pop
  3634                           
  3635                           	line	67
  3636                           ;KEYPAD.c: 67:                 while (RD7==0);
  3637                           	goto	l394
  3638  03A7  2BA8               	
  3639                           l395:	
  3640  03A8                     	
  3641                           l394:	
  3642  03A8                     	bcf	status, 5	;RP0=0, select bank0
  3643  03A8  1283               	bcf	status, 6	;RP1=0, select bank0
  3644  03A9  1303               	btfss	(71/8),(71)&7	;volatile
  3645  03AA  1F88               	goto	u1051
  3646  03AB  2BAD               	goto	u1050
  3647  03AC  2BAE               u1051:
  3648  03AD                     	goto	l394
  3649  03AD  2BA8               u1050:
  3650  03AE                     	goto	l1801
  3651  03AE  2BAF               	
  3652                           l396:	
  3653  03AF                     	line	68
  3654                           	
  3655                           l1801:	
  3656  03AF                     ;KEYPAD.c: 68:                 return 'C'; }
  3657                           	movlw	low(043h)
  3658  03AF  3043               	goto	l352
  3659  03B0  2C18               	
  3660                           l1803:	
  3661  03B1                     	goto	l352
  3662  03B1  2C18               	
  3663                           l393:	
  3664  03B2                     	line	70
  3665                           ;KEYPAD.c: 70:             RD0 = 1; RD1 = 1; RD2 = 1; RD3 = 0;
  3666                           	bsf	(64/8),(64)&7	;volatile
  3667  03B2  1408               	bsf	(65/8),(65)&7	;volatile
  3668  03B3  1488               	bsf	(66/8),(66)&7	;volatile
  3669  03B4  1508               	bcf	(67/8),(67)&7	;volatile
  3670  03B5  1188               	line	71
  3671                           ;KEYPAD.c: 71:             if (RD4 == 0) {
  3672                           	btfsc	(68/8),(68)&7	;volatile
  3673  03B6  1A08               	goto	u1061
  3674  03B7  2BB9               	goto	u1060
  3675  03B8  2BBA               u1061:
  3676  03B9                     	goto	l397
  3677  03B9  2BCE               u1060:
  3678  03BA                     	line	72
  3679                           	
  3680                           l1805:	
  3681  03BA                     ;KEYPAD.c: 72:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3682                           	opt asmopt_push
  3683                           opt asmopt_off
  3684                           movlw	17
  3685  03BA  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3686  03BB  00F4               	movlw	58
  3687  03BC  303A               movwf	((??_keypad_scanner+0)+0),f
  3688  03BD  00F3               	u1827:
  3689  03BE                     decfsz	((??_keypad_scanner+0)+0),f
  3690  03BE  0BF3               	goto	u1827
  3691  03BF  2BBE               	decfsz	((??_keypad_scanner+0)+0+1),f
  3692  03C0  0BF4               	goto	u1827
  3693  03C1  2BBE               	nop
  3694  03C2  0000               opt asmopt_pop
  3695                           
  3696                           	line	73
  3697                           ;KEYPAD.c: 73:                 while (RD4==0);
  3698                           	goto	l398
  3699  03C3  2BC4               	
  3700                           l399:	
  3701  03C4                     	
  3702                           l398:	
  3703  03C4                     	bcf	status, 5	;RP0=0, select bank0
  3704  03C4  1283               	bcf	status, 6	;RP1=0, select bank0
  3705  03C5  1303               	btfss	(68/8),(68)&7	;volatile
  3706  03C6  1E08               	goto	u1071
  3707  03C7  2BC9               	goto	u1070
  3708  03C8  2BCA               u1071:
  3709  03C9                     	goto	l398
  3710  03C9  2BC4               u1070:
  3711  03CA                     	goto	l1807
  3712  03CA  2BCB               	
  3713                           l400:	
  3714  03CB                     	line	74
  3715                           	
  3716                           l1807:	
  3717  03CB                     ;KEYPAD.c: 74:                 return '*'; }
  3718                           	movlw	low(02Ah)
  3719  03CB  302A               	goto	l352
  3720  03CC  2C18               	
  3721                           l1809:	
  3722  03CD                     	goto	l352
  3723  03CD  2C18               	
  3724                           l397:	
  3725  03CE                     	line	75
  3726                           ;KEYPAD.c: 75:             if (RD5 == 0) {
  3727                           	btfsc	(69/8),(69)&7	;volatile
  3728  03CE  1A88               	goto	u1081
  3729  03CF  2BD1               	goto	u1080
  3730  03D0  2BD2               u1081:
  3731  03D1                     	goto	l401
  3732  03D1  2BE6               u1080:
  3733  03D2                     	line	76
  3734                           	
  3735                           l1811:	
  3736  03D2                     ;KEYPAD.c: 76:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3737                           	opt asmopt_push
  3738                           opt asmopt_off
  3739                           movlw	17
  3740  03D2  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3741  03D3  00F4               	movlw	58
  3742  03D4  303A               movwf	((??_keypad_scanner+0)+0),f
  3743  03D5  00F3               	u1837:
  3744  03D6                     decfsz	((??_keypad_scanner+0)+0),f
  3745  03D6  0BF3               	goto	u1837
  3746  03D7  2BD6               	decfsz	((??_keypad_scanner+0)+0+1),f
  3747  03D8  0BF4               	goto	u1837
  3748  03D9  2BD6               	nop
  3749  03DA  0000               opt asmopt_pop
  3750                           
  3751                           	line	77
  3752                           ;KEYPAD.c: 77:                 while (RD5==0);
  3753                           	goto	l402
  3754  03DB  2BDC               	
  3755                           l403:	
  3756  03DC                     	
  3757                           l402:	
  3758  03DC                     	bcf	status, 5	;RP0=0, select bank0
  3759  03DC  1283               	bcf	status, 6	;RP1=0, select bank0
  3760  03DD  1303               	btfss	(69/8),(69)&7	;volatile
  3761  03DE  1E88               	goto	u1091
  3762  03DF  2BE1               	goto	u1090
  3763  03E0  2BE2               u1091:
  3764  03E1                     	goto	l402
  3765  03E1  2BDC               u1090:
  3766  03E2                     	goto	l1813
  3767  03E2  2BE3               	
  3768                           l404:	
  3769  03E3                     	line	78
  3770                           	
  3771                           l1813:	
  3772  03E3                     ;KEYPAD.c: 78:                 return '0'; }
  3773                           	movlw	low(030h)
  3774  03E3  3030               	goto	l352
  3775  03E4  2C18               	
  3776                           l1815:	
  3777  03E5                     	goto	l352
  3778  03E5  2C18               	
  3779                           l401:	
  3780  03E6                     	line	79
  3781                           ;KEYPAD.c: 79:             if (RD6 == 0) {
  3782                           	btfsc	(70/8),(70)&7	;volatile
  3783  03E6  1B08               	goto	u1101
  3784  03E7  2BE9               	goto	u1100
  3785  03E8  2BEA               u1101:
  3786  03E9                     	goto	l405
  3787  03E9  2BFE               u1100:
  3788  03EA                     	line	80
  3789                           	
  3790                           l1817:	
  3791  03EA                     ;KEYPAD.c: 80:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3792                           	opt asmopt_push
  3793                           opt asmopt_off
  3794                           movlw	17
  3795  03EA  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3796  03EB  00F4               	movlw	58
  3797  03EC  303A               movwf	((??_keypad_scanner+0)+0),f
  3798  03ED  00F3               	u1847:
  3799  03EE                     decfsz	((??_keypad_scanner+0)+0),f
  3800  03EE  0BF3               	goto	u1847
  3801  03EF  2BEE               	decfsz	((??_keypad_scanner+0)+0+1),f
  3802  03F0  0BF4               	goto	u1847
  3803  03F1  2BEE               	nop
  3804  03F2  0000               opt asmopt_pop
  3805                           
  3806                           	line	81
  3807                           ;KEYPAD.c: 81:                 while (RD6==0);
  3808                           	goto	l406
  3809  03F3  2BF4               	
  3810                           l407:	
  3811  03F4                     	
  3812                           l406:	
  3813  03F4                     	bcf	status, 5	;RP0=0, select bank0
  3814  03F4  1283               	bcf	status, 6	;RP1=0, select bank0
  3815  03F5  1303               	btfss	(70/8),(70)&7	;volatile
  3816  03F6  1F08               	goto	u1111
  3817  03F7  2BF9               	goto	u1110
  3818  03F8  2BFA               u1111:
  3819  03F9                     	goto	l406
  3820  03F9  2BF4               u1110:
  3821  03FA                     	goto	l1819
  3822  03FA  2BFB               	
  3823                           l408:	
  3824  03FB                     	line	82
  3825                           	
  3826                           l1819:	
  3827  03FB                     ;KEYPAD.c: 82:                 return '#'; }
  3828                           	movlw	low(023h)
  3829  03FB  3023               	goto	l352
  3830  03FC  2C18               	
  3831                           l1821:	
  3832  03FD                     	goto	l352
  3833  03FD  2C18               	
  3834                           l405:	
  3835  03FE                     	line	83
  3836                           ;KEYPAD.c: 83:             if (RD7 == 0) {
  3837                           	btfsc	(71/8),(71)&7	;volatile
  3838  03FE  1B88               	goto	u1121
  3839  03FF  2C01               	goto	u1120
  3840  0400  2C02               u1121:
  3841  0401                     	goto	l1829
  3842  0401  2C16               u1120:
  3843  0402                     	line	84
  3844                           	
  3845                           l1823:	
  3846  0402                     ;KEYPAD.c: 84:                 _delay((unsigned long)((100)*(500000/4000.0)));
  3847                           	opt asmopt_push
  3848                           opt asmopt_off
  3849                           movlw	17
  3850  0402  3011               movwf	((??_keypad_scanner+0)+0+1),f
  3851  0403  00F4               	movlw	58
  3852  0404  303A               movwf	((??_keypad_scanner+0)+0),f
  3853  0405  00F3               	u1857:
  3854  0406                     decfsz	((??_keypad_scanner+0)+0),f
  3855  0406  0BF3               	goto	u1857
  3856  0407  2C06               	decfsz	((??_keypad_scanner+0)+0+1),f
  3857  0408  0BF4               	goto	u1857
  3858  0409  2C06               	nop
  3859  040A  0000               opt asmopt_pop
  3860                           
  3861                           	line	85
  3862                           ;KEYPAD.c: 85:                 while (RD7==0);
  3863                           	goto	l410
  3864  040B  2C0C               	
  3865                           l411:	
  3866  040C                     	
  3867                           l410:	
  3868  040C                     	bcf	status, 5	;RP0=0, select bank0
  3869  040C  1283               	bcf	status, 6	;RP1=0, select bank0
  3870  040D  1303               	btfss	(71/8),(71)&7	;volatile
  3871  040E  1F88               	goto	u1131
  3872  040F  2C11               	goto	u1130
  3873  0410  2C12               u1131:
  3874  0411                     	goto	l410
  3875  0411  2C0C               u1130:
  3876  0412                     	goto	l1825
  3877  0412  2C13               	
  3878                           l412:	
  3879  0413                     	line	86
  3880                           	
  3881                           l1825:	
  3882  0413                     ;KEYPAD.c: 86:                 return 'D'; }
  3883                           	movlw	low(044h)
  3884  0413  3044               	goto	l352
  3885  0414  2C18               	
  3886                           l1827:	
  3887  0415                     	goto	l352
  3888  0415  2C18               	
  3889                           l409:	
  3890  0416                     	line	88
  3891                           	
  3892                           l1829:	
  3893  0416                     ;KEYPAD.c: 88:     return 'n';
  3894                           	movlw	low(06Eh)
  3895  0416  306E               	goto	l352
  3896  0417  2C18               	
  3897                           l1831:	
  3898  0418                     	line	89
  3899                           	
  3900                           l352:	
  3901  0418                     	return
  3902  0418  0008               	opt stack 0
  3903                           GLOBAL	__end_of_keypad_scanner
  3904                           	__end_of_keypad_scanner:
  3905  0419                     	signat	_keypad_scanner,89
  3906                           	global	_initTMR0
  3907                           
  3908 ;; *************** function _initTMR0 *****************
  3909 ;; Defined at:
  3910 ;;		line 296 in file "mainS1proyect.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;		None
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;                  1    wreg      void 
  3917 ;; Registers used:
  3918 ;;		wreg
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3924 ;;      Params:         0       0       0       0       0
  3925 ;;      Locals:         0       0       0       0       0
  3926 ;;      Temps:          0       0       0       0       0
  3927 ;;      Totals:         0       0       0       0       0
  3928 ;;Total ram usage:        0 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    1
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_main
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3938                           	file	"mainS1proyect.c"
  3939                           	line	296
  3940                           global __ptext3
  3941                           __ptext3:	;psect for function _initTMR0
  3942  079E                     psect	text3
  3943                           	file	"mainS1proyect.c"
  3944                           	line	296
  3945                           	global	__size_of_initTMR0
  3946                           	__size_of_initTMR0	equ	__end_of_initTMR0-_initTMR0
  3947  000D                     	
  3948                           _initTMR0:	
  3949  079E                     ;incstack = 0
  3950                           	opt	stack 6
  3951                           ; Regs used in _initTMR0: [wreg]
  3952                           	line	297
  3953                           	
  3954                           l1969:	
  3955  079E                     ;mainS1proyect.c: 297:     OPTION_REG = 0x85;
  3956                           	movlw	low(085h)
  3957  079E  3085               	bsf	status, 5	;RP0=1, select bank1
  3958  079F  1683               	bcf	status, 6	;RP1=0, select bank1
  3959  07A0  1303               	movwf	(129)^080h	;volatile
  3960  07A1  0081               	line	298
  3961                           ;mainS1proyect.c: 298:     TMR0 = 62;
  3962                           	movlw	low(03Eh)
  3963  07A2  303E               	bcf	status, 5	;RP0=0, select bank0
  3964  07A3  1283               	bcf	status, 6	;RP1=0, select bank0
  3965  07A4  1303               	movwf	(1)	;volatile
  3966  07A5  0081               	line	300
  3967                           	
  3968                           l1971:	
  3969  07A6                     ;mainS1proyect.c: 300:     INTCONbits.GIE = 1;
  3970                           	bsf	(11),7	;volatile
  3971  07A6  178B               	line	301
  3972                           	
  3973                           l1973:	
  3974  07A7                     ;mainS1proyect.c: 301:     INTCONbits.T0IE = 1;
  3975                           	bsf	(11),5	;volatile
  3976  07A7  168B               	line	302
  3977                           	
  3978                           l1975:	
  3979  07A8                     ;mainS1proyect.c: 302:     INTCONbits.T0IF = 0;
  3980                           	bcf	(11),2	;volatile
  3981  07A8  110B               	goto	l177
  3982  07A9  2FAA               	line	304
  3983                           	
  3984                           l1977:	
  3985  07AA                     	line	305
  3986                           ;mainS1proyect.c: 304:     return;
  3987                           	
  3988                           l177:	
  3989  07AA                     	return
  3990  07AA  0008               	opt stack 0
  3991                           GLOBAL	__end_of_initTMR0
  3992                           	__end_of_initTMR0:
  3993  07AB                     	signat	_initTMR0,89
  3994                           	global	_initOsc
  3995                           
  3996 ;; *************** function _initOsc *****************
  3997 ;; Defined at:
  3998 ;;		line 9 in file "FuncionOscilador.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  frec            1    wreg     unsigned char 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  frec            1    5[COMMON] unsigned char 
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  1    wreg      void 
  4005 ;; Registers used:
  4006 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4012 ;;      Params:         0       0       0       0       0
  4013 ;;      Locals:         1       0       0       0       0
  4014 ;;      Temps:          2       0       0       0       0
  4015 ;;      Totals:         3       0       0       0       0
  4016 ;;Total ram usage:        3 bytes
  4017 ;; Hardware stack levels used:    1
  4018 ;; Hardware stack levels required when called:    1
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_main
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4026                           	file	"FuncionOscilador.c"
  4027                           	line	9
  4028                           global __ptext4
  4029                           __ptext4:	;psect for function _initOsc
  4030  05C2                     psect	text4
  4031                           	file	"FuncionOscilador.c"
  4032                           	line	9
  4033                           	global	__size_of_initOsc
  4034                           	__size_of_initOsc	equ	__end_of_initOsc-_initOsc
  4035  005D                     	
  4036                           _initOsc:	
  4037  05C2                     ;incstack = 0
  4038                           	opt	stack 6
  4039                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  4040                           ;initOsc@frec stored from wreg
  4041                           	movwf	(initOsc@frec)
  4042  05C2  00F5               	line	10
  4043                           	
  4044                           l1869:	
  4045  05C3                     ;FuncionOscilador.c: 10:     switch(frec){
  4046                           	goto	l1873
  4047  05C3  2DFB               	line	11
  4048                           ;FuncionOscilador.c: 11:         case 0:
  4049                           	
  4050                           l183:	
  4051  05C4                     	line	12
  4052                           ;FuncionOscilador.c: 12:             OSCCONbits.IRCF0 = 0;
  4053                           	bsf	status, 5	;RP0=1, select bank1
  4054  05C4  1683               	bcf	status, 6	;RP1=0, select bank1
  4055  05C5  1303               	bcf	(143)^080h,4	;volatile
  4056  05C6  120F               	line	13
  4057                           ;FuncionOscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  4058                           	bcf	(143)^080h,5	;volatile
  4059  05C7  128F               	line	14
  4060                           ;FuncionOscilador.c: 14:             OSCCONbits.IRCF2 = 0;
  4061                           	bcf	(143)^080h,6	;volatile
  4062  05C8  130F               	line	15
  4063                           ;FuncionOscilador.c: 15:             break;
  4064                           	goto	l184
  4065  05C9  2E1D               	line	16
  4066                           ;FuncionOscilador.c: 16:         case 1:
  4067                           	
  4068                           l185:	
  4069  05CA                     	line	17
  4070                           ;FuncionOscilador.c: 17:             OSCCONbits.IRCF0 = 1;
  4071                           	bsf	status, 5	;RP0=1, select bank1
  4072  05CA  1683               	bcf	status, 6	;RP1=0, select bank1
  4073  05CB  1303               	bsf	(143)^080h,4	;volatile
  4074  05CC  160F               	line	18
  4075                           ;FuncionOscilador.c: 18:             OSCCONbits.IRCF1 = 0;
  4076                           	bcf	(143)^080h,5	;volatile
  4077  05CD  128F               	line	19
  4078                           ;FuncionOscilador.c: 19:             OSCCONbits.IRCF2 = 0;
  4079                           	bcf	(143)^080h,6	;volatile
  4080  05CE  130F               	line	20
  4081                           ;FuncionOscilador.c: 20:             break;
  4082                           	goto	l184
  4083  05CF  2E1D               	line	21
  4084                           ;FuncionOscilador.c: 21:         case 2:
  4085                           	
  4086                           l186:	
  4087  05D0                     	line	22
  4088                           ;FuncionOscilador.c: 22:             OSCCONbits.IRCF0 = 0;
  4089                           	bsf	status, 5	;RP0=1, select bank1
  4090  05D0  1683               	bcf	status, 6	;RP1=0, select bank1
  4091  05D1  1303               	bcf	(143)^080h,4	;volatile
  4092  05D2  120F               	line	23
  4093                           ;FuncionOscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  4094                           	bsf	(143)^080h,5	;volatile
  4095  05D3  168F               	line	24
  4096                           ;FuncionOscilador.c: 24:             OSCCONbits.IRCF2 = 0;
  4097                           	bcf	(143)^080h,6	;volatile
  4098  05D4  130F               	line	25
  4099                           ;FuncionOscilador.c: 25:             break;
  4100                           	goto	l184
  4101  05D5  2E1D               	line	26
  4102                           ;FuncionOscilador.c: 26:         case 3:
  4103                           	
  4104                           l187:	
  4105  05D6                     	line	27
  4106                           ;FuncionOscilador.c: 27:             OSCCONbits.IRCF0 = 1;
  4107                           	bsf	status, 5	;RP0=1, select bank1
  4108  05D6  1683               	bcf	status, 6	;RP1=0, select bank1
  4109  05D7  1303               	bsf	(143)^080h,4	;volatile
  4110  05D8  160F               	line	28
  4111                           ;FuncionOscilador.c: 28:             OSCCONbits.IRCF1 = 1;
  4112                           	bsf	(143)^080h,5	;volatile
  4113  05D9  168F               	line	29
  4114                           ;FuncionOscilador.c: 29:             OSCCONbits.IRCF2 = 0;
  4115                           	bcf	(143)^080h,6	;volatile
  4116  05DA  130F               	line	30
  4117                           ;FuncionOscilador.c: 30:             break;
  4118                           	goto	l184
  4119  05DB  2E1D               	line	31
  4120                           ;FuncionOscilador.c: 31:         case 4:
  4121                           	
  4122                           l188:	
  4123  05DC                     	line	32
  4124                           ;FuncionOscilador.c: 32:             OSCCONbits.IRCF0 = 0;
  4125                           	bsf	status, 5	;RP0=1, select bank1
  4126  05DC  1683               	bcf	status, 6	;RP1=0, select bank1
  4127  05DD  1303               	bcf	(143)^080h,4	;volatile
  4128  05DE  120F               	line	33
  4129                           ;FuncionOscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  4130                           	bcf	(143)^080h,5	;volatile
  4131  05DF  128F               	line	34
  4132                           ;FuncionOscilador.c: 34:             OSCCONbits.IRCF2 = 1;
  4133                           	bsf	(143)^080h,6	;volatile
  4134  05E0  170F               	line	35
  4135                           ;FuncionOscilador.c: 35:             break;
  4136                           	goto	l184
  4137  05E1  2E1D               	line	36
  4138                           ;FuncionOscilador.c: 36:         case 5:
  4139                           	
  4140                           l189:	
  4141  05E2                     	line	37
  4142                           ;FuncionOscilador.c: 37:             OSCCONbits.IRCF0 = 1;
  4143                           	bsf	status, 5	;RP0=1, select bank1
  4144  05E2  1683               	bcf	status, 6	;RP1=0, select bank1
  4145  05E3  1303               	bsf	(143)^080h,4	;volatile
  4146  05E4  160F               	line	38
  4147                           ;FuncionOscilador.c: 38:             OSCCONbits.IRCF1 = 0;
  4148                           	bcf	(143)^080h,5	;volatile
  4149  05E5  128F               	line	39
  4150                           ;FuncionOscilador.c: 39:             OSCCONbits.IRCF2 = 1;
  4151                           	bsf	(143)^080h,6	;volatile
  4152  05E6  170F               	line	40
  4153                           ;FuncionOscilador.c: 40:             break;
  4154                           	goto	l184
  4155  05E7  2E1D               	line	42
  4156                           ;FuncionOscilador.c: 42:         case 6:
  4157                           	
  4158                           l190:	
  4159  05E8                     	line	43
  4160                           ;FuncionOscilador.c: 43:             OSCCONbits.IRCF0 = 0;
  4161                           	bsf	status, 5	;RP0=1, select bank1
  4162  05E8  1683               	bcf	status, 6	;RP1=0, select bank1
  4163  05E9  1303               	bcf	(143)^080h,4	;volatile
  4164  05EA  120F               	line	44
  4165                           ;FuncionOscilador.c: 44:             OSCCONbits.IRCF1 = 1;
  4166                           	bsf	(143)^080h,5	;volatile
  4167  05EB  168F               	line	45
  4168                           ;FuncionOscilador.c: 45:             OSCCONbits.IRCF2 = 1;
  4169                           	bsf	(143)^080h,6	;volatile
  4170  05EC  170F               	line	46
  4171                           ;FuncionOscilador.c: 46:             break;
  4172                           	goto	l184
  4173  05ED  2E1D               	line	47
  4174                           ;FuncionOscilador.c: 47:         case 7:
  4175                           	
  4176                           l191:	
  4177  05EE                     	line	48
  4178                           ;FuncionOscilador.c: 48:             OSCCONbits.IRCF0 = 1;
  4179                           	bsf	status, 5	;RP0=1, select bank1
  4180  05EE  1683               	bcf	status, 6	;RP1=0, select bank1
  4181  05EF  1303               	bsf	(143)^080h,4	;volatile
  4182  05F0  160F               	line	49
  4183                           ;FuncionOscilador.c: 49:             OSCCONbits.IRCF1 = 1;
  4184                           	bsf	(143)^080h,5	;volatile
  4185  05F1  168F               	line	50
  4186                           ;FuncionOscilador.c: 50:             OSCCONbits.IRCF2 = 1;
  4187                           	bsf	(143)^080h,6	;volatile
  4188  05F2  170F               	line	51
  4189                           ;FuncionOscilador.c: 51:             break;
  4190                           	goto	l184
  4191  05F3  2E1D               	line	52
  4192                           ;FuncionOscilador.c: 52:         default:
  4193                           	
  4194                           l192:	
  4195  05F4                     	line	53
  4196                           ;FuncionOscilador.c: 53:             OSCCONbits.IRCF0 = 0;
  4197                           	bsf	status, 5	;RP0=1, select bank1
  4198  05F4  1683               	bcf	status, 6	;RP1=0, select bank1
  4199  05F5  1303               	bcf	(143)^080h,4	;volatile
  4200  05F6  120F               	line	54
  4201                           ;FuncionOscilador.c: 54:             OSCCONbits.IRCF1 = 1;
  4202                           	bsf	(143)^080h,5	;volatile
  4203  05F7  168F               	line	55
  4204                           ;FuncionOscilador.c: 55:             OSCCONbits.IRCF2 = 1;
  4205                           	bsf	(143)^080h,6	;volatile
  4206  05F8  170F               	line	56
  4207                           ;FuncionOscilador.c: 56:             break;
  4208                           	goto	l184
  4209  05F9  2E1D               	line	57
  4210                           	
  4211                           l1871:	
  4212  05FA                     ;FuncionOscilador.c: 57:     }
  4213                           	goto	l184
  4214  05FA  2E1D               	
  4215                           l182:	
  4216  05FB                     	
  4217                           l1873:	
  4218  05FB                     	movf	(initOsc@frec),w
  4219  05FB  0875               	movwf	(??_initOsc+0)+0
  4220  05FC  00F3               	clrf	(??_initOsc+0)+0+1
  4221  05FD  01F4               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4222                           ; Switch size 1, requested type "space"
  4223                           ; Number of cases is 1, Range of values is 0 to 0
  4224                           ; switch strategies available:
  4225                           ; Name         Instructions Cycles
  4226                           ; simple_byte            4     3 (average)
  4227                           ; direct_byte           11     8 (fixed)
  4228                           ; jumptable            260     6 (fixed)
  4229                           ;	Chosen strategy is simple_byte
  4230                           
  4231                           	movf 1+(??_initOsc+0)+0,w
  4232  05FE  0874               	opt asmopt_push
  4233                           	opt asmopt_off
  4234                           	xorlw	0^0	; case 0
  4235  05FF  3A00               	skipnz
  4236  0600  1903               	goto	l2655
  4237  0601  2E03               	goto	l192
  4238  0602  2DF4               	opt asmopt_pop
  4239                           	
  4240                           l2655:	
  4241  0603                     ; Switch size 1, requested type "space"
  4242                           ; Number of cases is 8, Range of values is 0 to 7
  4243                           ; switch strategies available:
  4244                           ; Name         Instructions Cycles
  4245                           ; simple_byte           25    13 (average)
  4246                           ; direct_byte           32     8 (fixed)
  4247                           ; jumptable            260     6 (fixed)
  4248                           ;	Chosen strategy is simple_byte
  4249                           
  4250                           	movf 0+(??_initOsc+0)+0,w
  4251  0603  0873               	opt asmopt_push
  4252                           	opt asmopt_off
  4253                           	xorlw	0^0	; case 0
  4254  0604  3A00               	skipnz
  4255  0605  1903               	goto	l183
  4256  0606  2DC4               	xorlw	1^0	; case 1
  4257  0607  3A01               	skipnz
  4258  0608  1903               	goto	l185
  4259  0609  2DCA               	xorlw	2^1	; case 2
  4260  060A  3A03               	skipnz
  4261  060B  1903               	goto	l186
  4262  060C  2DD0               	xorlw	3^2	; case 3
  4263  060D  3A01               	skipnz
  4264  060E  1903               	goto	l187
  4265  060F  2DD6               	xorlw	4^3	; case 4
  4266  0610  3A07               	skipnz
  4267  0611  1903               	goto	l188
  4268  0612  2DDC               	xorlw	5^4	; case 5
  4269  0613  3A01               	skipnz
  4270  0614  1903               	goto	l189
  4271  0615  2DE2               	xorlw	6^5	; case 6
  4272  0616  3A03               	skipnz
  4273  0617  1903               	goto	l190
  4274  0618  2DE8               	xorlw	7^6	; case 7
  4275  0619  3A01               	skipnz
  4276  061A  1903               	goto	l191
  4277  061B  2DEE               	goto	l192
  4278  061C  2DF4               	opt asmopt_pop
  4279                           
  4280                           	
  4281                           l184:	
  4282  061D                     	line	59
  4283                           ;FuncionOscilador.c: 59:     OSCCONbits.SCS = 1;
  4284                           	bsf	(143)^080h,0	;volatile
  4285  061D  140F               	line	60
  4286                           	
  4287                           l193:	
  4288  061E                     	return
  4289  061E  0008               	opt stack 0
  4290                           GLOBAL	__end_of_initOsc
  4291                           	__end_of_initOsc:
  4292  061F                     	signat	_initOsc,4217
  4293                           	global	_init
  4294                           
  4295 ;; *************** function _init *****************
  4296 ;; Defined at:
  4297 ;;		line 246 in file "mainS1proyect.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;		None
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;		None
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  1    wreg      void 
  4304 ;; Registers used:
  4305 ;;		wreg, status,2
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4311 ;;      Params:         0       0       0       0       0
  4312 ;;      Locals:         0       0       0       0       0
  4313 ;;      Temps:          0       0       0       0       0
  4314 ;;      Totals:         0       0       0       0       0
  4315 ;;Total ram usage:        0 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:    1
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_main
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4325                           	file	"mainS1proyect.c"
  4326                           	line	246
  4327                           global __ptext5
  4328                           __ptext5:	;psect for function _init
  4329  0778                     psect	text5
  4330                           	file	"mainS1proyect.c"
  4331                           	line	246
  4332                           	global	__size_of_init
  4333                           	__size_of_init	equ	__end_of_init-_init
  4334  0016                     	
  4335                           _init:	
  4336  0778                     ;incstack = 0
  4337                           	opt	stack 6
  4338                           ; Regs used in _init: [wreg+status,2]
  4339                           	line	248
  4340                           	
  4341                           l1841:	
  4342  0778                     ;mainS1proyect.c: 248:     TRISB = 0;
  4343                           	bsf	status, 5	;RP0=1, select bank1
  4344  0778  1683               	bcf	status, 6	;RP1=0, select bank1
  4345  0779  1303               	clrf	(134)^080h	;volatile
  4346  077A  0186               	line	249
  4347                           	
  4348                           l1843:	
  4349  077B                     ;mainS1proyect.c: 249:     TRISA = 0x0F;
  4350                           	movlw	low(0Fh)
  4351  077B  300F               	movwf	(133)^080h	;volatile
  4352  077C  0085               	line	251
  4353                           	
  4354                           l1845:	
  4355  077D                     ;mainS1proyect.c: 251:     TRISD = 0;
  4356                           	clrf	(136)^080h	;volatile
  4357  077D  0188               	line	252
  4358                           	
  4359                           l1847:	
  4360  077E                     ;mainS1proyect.c: 252:     TRISC = 0;
  4361                           	clrf	(135)^080h	;volatile
  4362  077E  0187               	line	253
  4363                           	
  4364                           l1849:	
  4365  077F                     ;mainS1proyect.c: 253:     TRISE = 0;
  4366                           	clrf	(137)^080h	;volatile
  4367  077F  0189               	line	254
  4368                           	
  4369                           l1851:	
  4370  0780                     ;mainS1proyect.c: 254:     ANSEL = 0;
  4371                           	bsf	status, 5	;RP0=1, select bank3
  4372  0780  1683               	bsf	status, 6	;RP1=1, select bank3
  4373  0781  1703               	clrf	(392)^0180h	;volatile
  4374  0782  0188               	line	255
  4375                           	
  4376                           l1853:	
  4377  0783                     ;mainS1proyect.c: 255:     ANSELH = 0;
  4378                           	clrf	(393)^0180h	;volatile
  4379  0783  0189               	line	256
  4380                           	
  4381                           l1855:	
  4382  0784                     ;mainS1proyect.c: 256:     ANSELbits.ANS0 = 1;
  4383                           	bsf	(392)^0180h,0	;volatile
  4384  0784  1408               	line	258
  4385                           	
  4386                           l1857:	
  4387  0785                     ;mainS1proyect.c: 258:     PORTA = 0;
  4388                           	bcf	status, 5	;RP0=0, select bank0
  4389  0785  1283               	bcf	status, 6	;RP1=0, select bank0
  4390  0786  1303               	clrf	(5)	;volatile
  4391  0787  0185               	line	259
  4392                           	
  4393                           l1859:	
  4394  0788                     ;mainS1proyect.c: 259:     PORTB = 0;
  4395                           	clrf	(6)	;volatile
  4396  0788  0186               	line	260
  4397                           	
  4398                           l1861:	
  4399  0789                     ;mainS1proyect.c: 260:     PORTD = 0;
  4400                           	clrf	(8)	;volatile
  4401  0789  0188               	line	261
  4402                           	
  4403                           l1863:	
  4404  078A                     ;mainS1proyect.c: 261:     PORTC = 0;
  4405                           	clrf	(7)	;volatile
  4406  078A  0187               	line	262
  4407                           	
  4408                           l1865:	
  4409  078B                     ;mainS1proyect.c: 262:     PORTE = 0;
  4410                           	clrf	(9)	;volatile
  4411  078B  0189               	goto	l171
  4412  078C  2F8D               	line	264
  4413                           	
  4414                           l1867:	
  4415  078D                     	line	265
  4416                           ;mainS1proyect.c: 264:     return;
  4417                           	
  4418                           l171:	
  4419  078D                     	return
  4420  078D  0008               	opt stack 0
  4421                           GLOBAL	__end_of_init
  4422                           	__end_of_init:
  4423  078E                     	signat	_init,89
  4424                           	global	_funcAdc
  4425                           
  4426 ;; *************** function _funcAdc *****************
  4427 ;; Defined at:
  4428 ;;		line 9 in file "ADCconf.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  divD            1    wreg     unsigned char 
  4431 ;;  anaP            1    3[COMMON] unsigned char 
  4432 ;;  just            1    4[COMMON] unsigned char 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  divD            1    0[BANK0 ] unsigned char 
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      void 
  4437 ;; Registers used:
  4438 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4444 ;;      Params:         2       0       0       0       0
  4445 ;;      Locals:         0       1       0       0       0
  4446 ;;      Temps:          2       0       0       0       0
  4447 ;;      Totals:         4       1       0       0       0
  4448 ;;Total ram usage:        5 bytes
  4449 ;; Hardware stack levels used:    1
  4450 ;; Hardware stack levels required when called:    1
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_main
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4458                           	file	"ADCconf.c"
  4459                           	line	9
  4460                           global __ptext6
  4461                           __ptext6:	;psect for function _funcAdc
  4462  0551                     psect	text6
  4463                           	file	"ADCconf.c"
  4464                           	line	9
  4465                           	global	__size_of_funcAdc
  4466                           	__size_of_funcAdc	equ	__end_of_funcAdc-_funcAdc
  4467  0071                     	
  4468                           _funcAdc:	
  4469  0551                     ;incstack = 0
  4470                           	opt	stack 6
  4471                           ; Regs used in _funcAdc: [wreg-fsr0h+status,2+status,0]
  4472                           ;funcAdc@divD stored from wreg
  4473                           	bcf	status, 5	;RP0=0, select bank0
  4474  0551  1283               	bcf	status, 6	;RP1=0, select bank0
  4475  0552  1303               	movwf	(funcAdc@divD)
  4476  0553  00A0               	line	10
  4477                           	
  4478                           l2353:	
  4479  0554                     ;ADCconf.c: 10:     switch(divD){
  4480                           	goto	l2357
  4481  0554  2D62               	line	11
  4482                           ;ADCconf.c: 11:         case 0:
  4483                           	
  4484                           l435:	
  4485  0555                     	line	12
  4486                           ;ADCconf.c: 12:             ADCON0bits.ADCS0 = 0;
  4487                           	bcf	(31),6	;volatile
  4488  0555  131F               	line	13
  4489                           ;ADCconf.c: 13:             ADCON0bits.ADCS1 = 0;
  4490                           	bcf	(31),7	;volatile
  4491  0556  139F               	line	14
  4492                           ;ADCconf.c: 14:             break;
  4493                           	goto	l2361
  4494  0557  2D8B               	line	15
  4495                           ;ADCconf.c: 15:         case 1:
  4496                           	
  4497                           l437:	
  4498  0558                     	line	16
  4499                           ;ADCconf.c: 16:             ADCON0bits.ADCS0 = 1;
  4500                           	bsf	(31),6	;volatile
  4501  0558  171F               	line	17
  4502                           ;ADCconf.c: 17:             ADCON0bits.ADCS1 = 0;
  4503                           	bcf	(31),7	;volatile
  4504  0559  139F               	line	18
  4505                           ;ADCconf.c: 18:             break;
  4506                           	goto	l2361
  4507  055A  2D8B               	line	20
  4508                           ;ADCconf.c: 20:         case 2:
  4509                           	
  4510                           l438:	
  4511  055B                     	line	21
  4512                           ;ADCconf.c: 21:             ADCON0bits.ADCS0 = 0;
  4513                           	bcf	(31),6	;volatile
  4514  055B  131F               	line	22
  4515                           ;ADCconf.c: 22:             ADCON0bits.ADCS1 = 1;
  4516                           	bsf	(31),7	;volatile
  4517  055C  179F               	line	23
  4518                           ;ADCconf.c: 23:             break;
  4519                           	goto	l2361
  4520  055D  2D8B               	line	25
  4521                           ;ADCconf.c: 25:         default:
  4522                           	
  4523                           l439:	
  4524  055E                     	line	26
  4525                           ;ADCconf.c: 26:             ADCON0bits.ADCS0 = 1;
  4526                           	bsf	(31),6	;volatile
  4527  055E  171F               	line	27
  4528                           ;ADCconf.c: 27:             ADCON0bits.ADCS1 = 1;
  4529                           	bsf	(31),7	;volatile
  4530  055F  179F               	line	28
  4531                           ;ADCconf.c: 28:             break;
  4532                           	goto	l2361
  4533  0560  2D8B               	line	29
  4534                           	
  4535                           l2355:	
  4536  0561                     ;ADCconf.c: 29:     }
  4537                           	goto	l2361
  4538  0561  2D8B               	
  4539                           l434:	
  4540  0562                     	
  4541                           l2357:	
  4542  0562                     	movf	(funcAdc@divD),w
  4543  0562  0820               	movwf	(??_funcAdc+0)+0
  4544  0563  00F5               	clrf	(??_funcAdc+0)+0+1
  4545  0564  01F6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4546                           ; Switch size 1, requested type "space"
  4547                           ; Number of cases is 1, Range of values is 0 to 0
  4548                           ; switch strategies available:
  4549                           ; Name         Instructions Cycles
  4550                           ; simple_byte            4     3 (average)
  4551                           ; direct_byte           11     8 (fixed)
  4552                           ; jumptable            260     6 (fixed)
  4553                           ;	Chosen strategy is simple_byte
  4554                           
  4555                           	movf 1+(??_funcAdc+0)+0,w
  4556  0565  0876               	opt asmopt_push
  4557                           	opt asmopt_off
  4558                           	xorlw	0^0	; case 0
  4559  0566  3A00               	skipnz
  4560  0567  1903               	goto	l2657
  4561  0568  2D6A               	goto	l439
  4562  0569  2D5E               	opt asmopt_pop
  4563                           	
  4564                           l2657:	
  4565  056A                     ; Switch size 1, requested type "space"
  4566                           ; Number of cases is 3, Range of values is 0 to 2
  4567                           ; switch strategies available:
  4568                           ; Name         Instructions Cycles
  4569                           ; simple_byte           10     6 (average)
  4570                           ; direct_byte           17     8 (fixed)
  4571                           ; jumptable            260     6 (fixed)
  4572                           ;	Chosen strategy is simple_byte
  4573                           
  4574                           	movf 0+(??_funcAdc+0)+0,w
  4575  056A  0875               	opt asmopt_push
  4576                           	opt asmopt_off
  4577                           	xorlw	0^0	; case 0
  4578  056B  3A00               	skipnz
  4579  056C  1903               	goto	l435
  4580  056D  2D55               	xorlw	1^0	; case 1
  4581  056E  3A01               	skipnz
  4582  056F  1903               	goto	l437
  4583  0570  2D58               	xorlw	2^1	; case 2
  4584  0571  3A03               	skipnz
  4585  0572  1903               	goto	l438
  4586  0573  2D5B               	goto	l439
  4587  0574  2D5E               	opt asmopt_pop
  4588                           
  4589                           	
  4590                           l436:	
  4591  0575                     	line	31
  4592                           ;ADCconf.c: 31:     switch(anaP){
  4593                           	goto	l2361
  4594  0575  2D8B               	line	32
  4595                           ;ADCconf.c: 32:         case 0:
  4596                           	
  4597                           l441:	
  4598  0576                     	line	33
  4599                           ;ADCconf.c: 33:             ADCON0bits.CHS0 = 0;
  4600                           	bcf	(31),2	;volatile
  4601  0576  111F               	line	34
  4602                           ;ADCconf.c: 34:             ADCON0bits.CHS1 = 0;
  4603                           	bcf	(31),3	;volatile
  4604  0577  119F               	line	35
  4605                           ;ADCconf.c: 35:             ADCON0bits.CHS2 = 0;
  4606                           	bcf	(31),4	;volatile
  4607  0578  121F               	line	36
  4608                           ;ADCconf.c: 36:             ADCON0bits.CHS3 = 0;
  4609                           	bcf	(31),5	;volatile
  4610  0579  129F               	line	37
  4611                           ;ADCconf.c: 37:             break;
  4612                           	goto	l2365
  4613  057A  2DA8               	line	39
  4614                           ;ADCconf.c: 39:         case 1:
  4615                           	
  4616                           l443:	
  4617  057B                     	line	40
  4618                           ;ADCconf.c: 40:             ADCON0bits.CHS0 = 1;
  4619                           	bsf	(31),2	;volatile
  4620  057B  151F               	line	41
  4621                           ;ADCconf.c: 41:             ADCON0bits.CHS1 = 0;
  4622                           	bcf	(31),3	;volatile
  4623  057C  119F               	line	42
  4624                           ;ADCconf.c: 42:             ADCON0bits.CHS2 = 0;
  4625                           	bcf	(31),4	;volatile
  4626  057D  121F               	line	43
  4627                           ;ADCconf.c: 43:             ADCON0bits.CHS3 = 0;
  4628                           	bcf	(31),5	;volatile
  4629  057E  129F               	line	44
  4630                           ;ADCconf.c: 44:             break;
  4631                           	goto	l2365
  4632  057F  2DA8               	line	46
  4633                           ;ADCconf.c: 46:         case 2:
  4634                           	
  4635                           l444:	
  4636  0580                     	line	47
  4637                           ;ADCconf.c: 47:             ADCON0bits.CHS0 = 0;
  4638                           	bcf	(31),2	;volatile
  4639  0580  111F               	line	48
  4640                           ;ADCconf.c: 48:             ADCON0bits.CHS1 = 1;
  4641                           	bsf	(31),3	;volatile
  4642  0581  159F               	line	49
  4643                           ;ADCconf.c: 49:             ADCON0bits.CHS2 = 0;
  4644                           	bcf	(31),4	;volatile
  4645  0582  121F               	line	50
  4646                           ;ADCconf.c: 50:             ADCON0bits.CHS3 = 0;
  4647                           	bcf	(31),5	;volatile
  4648  0583  129F               	line	51
  4649                           ;ADCconf.c: 51:             break;
  4650                           	goto	l2365
  4651  0584  2DA8               	line	53
  4652                           ;ADCconf.c: 53:         default:
  4653                           	
  4654                           l445:	
  4655  0585                     	line	54
  4656                           ;ADCconf.c: 54:             ADCON0bits.CHS0 = 0;
  4657                           	bcf	(31),2	;volatile
  4658  0585  111F               	line	55
  4659                           ;ADCconf.c: 55:             ADCON0bits.CHS1 = 0;
  4660                           	bcf	(31),3	;volatile
  4661  0586  119F               	line	56
  4662                           ;ADCconf.c: 56:             ADCON0bits.CHS2 = 0;
  4663                           	bcf	(31),4	;volatile
  4664  0587  121F               	line	57
  4665                           ;ADCconf.c: 57:             ADCON0bits.CHS3 = 1;
  4666                           	bsf	(31),5	;volatile
  4667  0588  169F               	line	58
  4668                           ;ADCconf.c: 58:             break;
  4669                           	goto	l2365
  4670  0589  2DA8               	line	59
  4671                           	
  4672                           l2359:	
  4673  058A                     ;ADCconf.c: 59:     }
  4674                           	goto	l2365
  4675  058A  2DA8               	
  4676                           l440:	
  4677  058B                     	
  4678                           l2361:	
  4679  058B                     	movf	(funcAdc@anaP),w
  4680  058B  0873               	movwf	(??_funcAdc+0)+0
  4681  058C  00F5               	clrf	(??_funcAdc+0)+0+1
  4682  058D  01F6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4683                           ; Switch size 1, requested type "space"
  4684                           ; Number of cases is 1, Range of values is 0 to 0
  4685                           ; switch strategies available:
  4686                           ; Name         Instructions Cycles
  4687                           ; simple_byte            4     3 (average)
  4688                           ; direct_byte           11     8 (fixed)
  4689                           ; jumptable            260     6 (fixed)
  4690                           ;	Chosen strategy is simple_byte
  4691                           
  4692                           	movf 1+(??_funcAdc+0)+0,w
  4693  058E  0876               	opt asmopt_push
  4694                           	opt asmopt_off
  4695                           	xorlw	0^0	; case 0
  4696  058F  3A00               	skipnz
  4697  0590  1903               	goto	l2659
  4698  0591  2D93               	goto	l445
  4699  0592  2D85               	opt asmopt_pop
  4700                           	
  4701                           l2659:	
  4702  0593                     ; Switch size 1, requested type "space"
  4703                           ; Number of cases is 3, Range of values is 0 to 2
  4704                           ; switch strategies available:
  4705                           ; Name         Instructions Cycles
  4706                           ; simple_byte           10     6 (average)
  4707                           ; direct_byte           17     8 (fixed)
  4708                           ; jumptable            260     6 (fixed)
  4709                           ;	Chosen strategy is simple_byte
  4710                           
  4711                           	movf 0+(??_funcAdc+0)+0,w
  4712  0593  0875               	opt asmopt_push
  4713                           	opt asmopt_off
  4714                           	xorlw	0^0	; case 0
  4715  0594  3A00               	skipnz
  4716  0595  1903               	goto	l441
  4717  0596  2D76               	xorlw	1^0	; case 1
  4718  0597  3A01               	skipnz
  4719  0598  1903               	goto	l443
  4720  0599  2D7B               	xorlw	2^1	; case 2
  4721  059A  3A03               	skipnz
  4722  059B  1903               	goto	l444
  4723  059C  2D80               	goto	l445
  4724  059D  2D85               	opt asmopt_pop
  4725                           
  4726                           	
  4727                           l442:	
  4728  059E                     	line	61
  4729                           ;ADCconf.c: 61:     switch(just){
  4730                           	goto	l2365
  4731  059E  2DA8               	line	62
  4732                           ;ADCconf.c: 62:         case 0:
  4733                           	
  4734                           l447:	
  4735  059F                     	line	63
  4736                           ;ADCconf.c: 63:             ADCON1bits.ADFM = 0;
  4737                           	bsf	status, 5	;RP0=1, select bank1
  4738  059F  1683               	bcf	status, 6	;RP1=0, select bank1
  4739  05A0  1303               	bcf	(159)^080h,7	;volatile
  4740  05A1  139F               	line	64
  4741                           ;ADCconf.c: 64:             break;
  4742                           	goto	l448
  4743  05A2  2DB5               	line	65
  4744                           ;ADCconf.c: 65:         default:
  4745                           	
  4746                           l449:	
  4747  05A3                     	line	66
  4748                           ;ADCconf.c: 66:             ADCON1bits.ADFM = 1;
  4749                           	bsf	status, 5	;RP0=1, select bank1
  4750  05A3  1683               	bcf	status, 6	;RP1=0, select bank1
  4751  05A4  1303               	bsf	(159)^080h,7	;volatile
  4752  05A5  179F               	line	67
  4753                           ;ADCconf.c: 67:             break;
  4754                           	goto	l448
  4755  05A6  2DB5               	line	68
  4756                           	
  4757                           l2363:	
  4758  05A7                     ;ADCconf.c: 68:     }
  4759                           	goto	l448
  4760  05A7  2DB5               	
  4761                           l446:	
  4762  05A8                     	
  4763                           l2365:	
  4764  05A8                     	movf	(funcAdc@just),w
  4765  05A8  0874               	movwf	(??_funcAdc+0)+0
  4766  05A9  00F5               	clrf	(??_funcAdc+0)+0+1
  4767  05AA  01F6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4768                           ; Switch size 1, requested type "space"
  4769                           ; Number of cases is 1, Range of values is 0 to 0
  4770                           ; switch strategies available:
  4771                           ; Name         Instructions Cycles
  4772                           ; simple_byte            4     3 (average)
  4773                           ; direct_byte           11     8 (fixed)
  4774                           ; jumptable            260     6 (fixed)
  4775                           ;	Chosen strategy is simple_byte
  4776                           
  4777                           	movf 1+(??_funcAdc+0)+0,w
  4778  05AB  0876               	opt asmopt_push
  4779                           	opt asmopt_off
  4780                           	xorlw	0^0	; case 0
  4781  05AC  3A00               	skipnz
  4782  05AD  1903               	goto	l2661
  4783  05AE  2DB0               	goto	l449
  4784  05AF  2DA3               	opt asmopt_pop
  4785                           	
  4786                           l2661:	
  4787  05B0                     ; Switch size 1, requested type "space"
  4788                           ; Number of cases is 1, Range of values is 0 to 0
  4789                           ; switch strategies available:
  4790                           ; Name         Instructions Cycles
  4791                           ; simple_byte            4     3 (average)
  4792                           ; direct_byte           11     8 (fixed)
  4793                           ; jumptable            260     6 (fixed)
  4794                           ;	Chosen strategy is simple_byte
  4795                           
  4796                           	movf 0+(??_funcAdc+0)+0,w
  4797  05B0  0875               	opt asmopt_push
  4798                           	opt asmopt_off
  4799                           	xorlw	0^0	; case 0
  4800  05B1  3A00               	skipnz
  4801  05B2  1903               	goto	l447
  4802  05B3  2D9F               	goto	l449
  4803  05B4  2DA3               	opt asmopt_pop
  4804                           
  4805                           	
  4806                           l448:	
  4807  05B5                     	line	71
  4808                           ;ADCconf.c: 71:     ADCON0bits.ADON = 1;
  4809                           	bcf	status, 5	;RP0=0, select bank0
  4810  05B5  1283               	bcf	status, 6	;RP1=0, select bank0
  4811  05B6  1303               	bsf	(31),0	;volatile
  4812  05B7  141F               	line	73
  4813                           ;ADCconf.c: 73:     PIR1bits.ADIF = 0;
  4814                           	bcf	(12),6	;volatile
  4815  05B8  130C               	line	74
  4816                           ;ADCconf.c: 74:     PIE1bits.ADIE = 1;
  4817                           	bsf	status, 5	;RP0=1, select bank1
  4818  05B9  1683               	bcf	status, 6	;RP1=0, select bank1
  4819  05BA  1303               	bsf	(140)^080h,6	;volatile
  4820  05BB  170C               	line	75
  4821                           ;ADCconf.c: 75:     INTCONbits.PEIE = 1;
  4822                           	bsf	(11),6	;volatile
  4823  05BC  170B               	line	76
  4824                           ;ADCconf.c: 76:     INTCONbits.GIE = 1;
  4825                           	bsf	(11),7	;volatile
  4826  05BD  178B               	line	78
  4827                           ;ADCconf.c: 78:     ADCON0bits.GO_nDONE = 1;
  4828                           	bcf	status, 5	;RP0=0, select bank0
  4829  05BE  1283               	bcf	status, 6	;RP1=0, select bank0
  4830  05BF  1303               	bsf	(31),1	;volatile
  4831  05C0  149F               	line	81
  4832                           ;ADCconf.c: 80:     return;
  4833                           	
  4834                           l450:	
  4835  05C1                     	return
  4836  05C1  0008               	opt stack 0
  4837                           GLOBAL	__end_of_funcAdc
  4838                           	__end_of_funcAdc:
  4839  05C2                     	signat	_funcAdc,12409
  4840                           	global	_PWMconf
  4841                           
  4842 ;; *************** function _PWMconf *****************
  4843 ;; Defined at:
  4844 ;;		line 267 in file "mainS1proyect.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;		None
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;		None
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      void 
  4851 ;; Registers used:
  4852 ;;		wreg
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4858 ;;      Params:         0       0       0       0       0
  4859 ;;      Locals:         0       0       0       0       0
  4860 ;;      Temps:          0       0       0       0       0
  4861 ;;      Totals:         0       0       0       0       0
  4862 ;;Total ram usage:        0 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    1
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_main
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4872                           	file	"mainS1proyect.c"
  4873                           	line	267
  4874                           global __ptext7
  4875                           __ptext7:	;psect for function _PWMconf
  4876  072C                     psect	text7
  4877                           	file	"mainS1proyect.c"
  4878                           	line	267
  4879                           	global	__size_of_PWMconf
  4880                           	__size_of_PWMconf	equ	__end_of_PWMconf-_PWMconf
  4881  001A                     	
  4882                           _PWMconf:	
  4883  072C                     ;incstack = 0
  4884                           	opt	stack 6
  4885                           ; Regs used in _PWMconf: [wreg]
  4886                           	line	269
  4887                           	
  4888                           l1905:	
  4889  072C                     ;mainS1proyect.c: 269:     TRISCbits.TRISC2 = 1;
  4890                           	bsf	status, 5	;RP0=1, select bank1
  4891  072C  1683               	bcf	status, 6	;RP1=0, select bank1
  4892  072D  1303               	bsf	(135)^080h,2	;volatile
  4893  072E  1507               	line	270
  4894                           	
  4895                           l1907:	
  4896  072F                     ;mainS1proyect.c: 270:     PR2 = 155;
  4897                           	movlw	low(09Bh)
  4898  072F  309B               	movwf	(146)^080h	;volatile
  4899  0730  0092               	line	271
  4900                           	
  4901                           l1909:	
  4902  0731                     ;mainS1proyect.c: 271:     CCP1CONbits.P1M1 = 0;
  4903                           	bcf	status, 5	;RP0=0, select bank0
  4904  0731  1283               	bcf	status, 6	;RP1=0, select bank0
  4905  0732  1303               	bcf	(23),7	;volatile
  4906  0733  1397               	line	272
  4907                           	
  4908                           l1911:	
  4909  0734                     ;mainS1proyect.c: 272:     CCP1CONbits.P1M0 = 0;
  4910                           	bcf	(23),6	;volatile
  4911  0734  1317               	line	274
  4912                           	
  4913                           l1913:	
  4914  0735                     ;mainS1proyect.c: 274:     CCP1CONbits.CCP1M0 = 0;
  4915                           	bcf	(23),0	;volatile
  4916  0735  1017               	line	275
  4917                           	
  4918                           l1915:	
  4919  0736                     ;mainS1proyect.c: 275:     CCP1CONbits.CCP1M1 = 0;
  4920                           	bcf	(23),1	;volatile
  4921  0736  1097               	line	276
  4922                           	
  4923                           l1917:	
  4924  0737                     ;mainS1proyect.c: 276:     CCP1CONbits.CCP1M2 = 1;
  4925                           	bsf	(23),2	;volatile
  4926  0737  1517               	line	277
  4927                           	
  4928                           l1919:	
  4929  0738                     ;mainS1proyect.c: 277:     CCP1CONbits.CCP1M3 = 1;
  4930                           	bsf	(23),3	;volatile
  4931  0738  1597               	line	279
  4932                           ;mainS1proyect.c: 279:     CCPR1L = 6;
  4933                           	movlw	low(06h)
  4934  0739  3006               	movwf	(21)	;volatile
  4935  073A  0095               	line	280
  4936                           	
  4937                           l1921:	
  4938  073B                     ;mainS1proyect.c: 280:     CCP1CONbits.DC1B0 = 1;
  4939                           	bsf	(23),4	;volatile
  4940  073B  1617               	line	281
  4941                           	
  4942                           l1923:	
  4943  073C                     ;mainS1proyect.c: 281:     CCP1CONbits.DC1B1 = 1;
  4944                           	bsf	(23),5	;volatile
  4945  073C  1697               	line	283
  4946                           	
  4947                           l1925:	
  4948  073D                     ;mainS1proyect.c: 283:     PIR1bits.TMR2IF = 0;
  4949                           	bcf	(12),1	;volatile
  4950  073D  108C               	line	286
  4951                           	
  4952                           l1927:	
  4953  073E                     ;mainS1proyect.c: 286:     T2CONbits.T2CKPS0 = 1;
  4954                           	bsf	(18),0	;volatile
  4955  073E  1412               	line	287
  4956                           	
  4957                           l1929:	
  4958  073F                     ;mainS1proyect.c: 287:     T2CONbits.T2CKPS1 = 1;
  4959                           	bsf	(18),1	;volatile
  4960  073F  1492               	line	289
  4961                           	
  4962                           l1931:	
  4963  0740                     ;mainS1proyect.c: 289:     T2CONbits.TMR2ON = 1;
  4964                           	bsf	(18),2	;volatile
  4965  0740  1512               	line	291
  4966                           	
  4967                           l1933:	
  4968  0741                     ;mainS1proyect.c: 291:     PIR1bits.TMR2IF = 0;
  4969                           	bcf	(12),1	;volatile
  4970  0741  108C               	line	293
  4971                           	
  4972                           l1935:	
  4973  0742                     ;mainS1proyect.c: 293:     TRISCbits.TRISC2 = 0;
  4974                           	bsf	status, 5	;RP0=1, select bank1
  4975  0742  1683               	bcf	status, 6	;RP1=0, select bank1
  4976  0743  1303               	bcf	(135)^080h,2	;volatile
  4977  0744  1107               	line	294
  4978                           	
  4979                           l174:	
  4980  0745                     	return
  4981  0745  0008               	opt stack 0
  4982                           GLOBAL	__end_of_PWMconf
  4983                           	__end_of_PWMconf:
  4984  0746                     	signat	_PWMconf,89
  4985                           	global	_Lcd_Write_String
  4986                           
  4987 ;; *************** function _Lcd_Write_String *****************
  4988 ;; Defined at:
  4989 ;;		line 127 in file "LCD.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  a               1    wreg     PTR unsigned char 
  4992 ;;		 -> STR_11(11), STR_10(16), STR_9(17), STR_8(17), 
  4993 ;;		 -> STR_7(10), STR_6(16), STR_5(15), STR_4(8), 
  4994 ;;		 -> STR_3(16), STR_2(12), STR_1(17), 
  4995 ;;  modo            2    3[BANK0 ] int 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;  a               1    7[BANK0 ] PTR unsigned char 
  4998 ;;		 -> STR_11(11), STR_10(16), STR_9(17), STR_8(17), 
  4999 ;;		 -> STR_7(10), STR_6(16), STR_5(15), STR_4(8), 
  5000 ;;		 -> STR_3(16), STR_2(12), STR_1(17), 
  5001 ;;  i               2    5[BANK0 ] int 
  5002 ;; Return value:  Size  Location     Type
  5003 ;;                  1    wreg      void 
  5004 ;; Registers used:
  5005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5011 ;;      Params:         0       2       0       0       0
  5012 ;;      Locals:         0       3       0       0       0
  5013 ;;      Temps:          0       0       0       0       0
  5014 ;;      Totals:         0       5       0       0       0
  5015 ;;Total ram usage:        5 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; Hardware stack levels required when called:    3
  5018 ;; This function calls:
  5019 ;;		_Lcd_Write_Char
  5020 ;; This function is called by:
  5021 ;;		_main
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5025                           	file	"LCD.c"
  5026                           	line	127
  5027                           global __ptext8
  5028                           __ptext8:	;psect for function _Lcd_Write_String
  5029  06BC                     psect	text8
  5030                           	file	"LCD.c"
  5031                           	line	127
  5032                           	global	__size_of_Lcd_Write_String
  5033                           	__size_of_Lcd_Write_String	equ	__end_of_Lcd_Write_String-_Lcd_Write_String
  5034  002F                     	
  5035                           _Lcd_Write_String:	
  5036  06BC                     ;incstack = 0
  5037                           	opt	stack 4
  5038                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5039                           ;Lcd_Write_String@a stored from wreg
  5040                           	bcf	status, 5	;RP0=0, select bank0
  5041  06BC  1283               	bcf	status, 6	;RP1=0, select bank0
  5042  06BD  1303               	movwf	(Lcd_Write_String@a)
  5043  06BE  00A7               	line	130
  5044                           	
  5045                           l2385:	
  5046  06BF                     ;LCD.c: 127: void Lcd_Write_String(char *a,int modo);LCD.c: 128: {;LCD.c: 129:  int i;;L
                                 CD.c: 130:  for(i=0;a[i]!='\0';i++)
  5047                           	clrf	(Lcd_Write_String@i)
  5048  06BF  01A5               	clrf	(Lcd_Write_String@i+1)
  5049  06C0  01A6               	goto	l2391
  5050  06C1  2EDC               	
  5051                           l292:	
  5052  06C2                     	line	131
  5053                           	
  5054                           l2387:	
  5055  06C2                     ;LCD.c: 131:     Lcd_Write_Char(a[i],modo);
  5056                           	movf	(Lcd_Write_String@modo+1),w
  5057  06C2  0824               	movwf	(Lcd_Write_Char@modo+1)
  5058  06C3  00F5               	movf	(Lcd_Write_String@modo),w
  5059  06C4  0823               	movwf	(Lcd_Write_Char@modo)
  5060  06C5  00F4               	movf	(Lcd_Write_String@i),w
  5061  06C6  0825               	addwf	(Lcd_Write_String@a),w
  5062  06C7  0727               	movwf	fsr0
  5063  06C8  0084               	fcall	stringdir
  5064  06C9  120A  118A  2419  120A  118A  	fcall	_Lcd_Write_Char
  5065  06CE  120A  118A  261F  120A  118A  	
  5066                           l2389:	
  5067  06D3                     	movlw	01h
  5068  06D3  3001               	bcf	status, 5	;RP0=0, select bank0
  5069  06D4  1283               	bcf	status, 6	;RP1=0, select bank0
  5070  06D5  1303               	addwf	(Lcd_Write_String@i),f
  5071  06D6  07A5               	skipnc
  5072  06D7  1803               	incf	(Lcd_Write_String@i+1),f
  5073  06D8  0AA6               	movlw	0
  5074  06D9  3000               	addwf	(Lcd_Write_String@i+1),f
  5075  06DA  07A6               	goto	l2391
  5076  06DB  2EDC               	
  5077                           l291:	
  5078  06DC                     	
  5079                           l2391:	
  5080  06DC                     	movf	(Lcd_Write_String@i),w
  5081  06DC  0825               	addwf	(Lcd_Write_String@a),w
  5082  06DD  0727               	movwf	fsr0
  5083  06DE  0084               	fcall	stringdir
  5084  06DF  120A  118A  2419  120A  118A  	xorlw	0
  5085  06E4  3A00               	skipz
  5086  06E5  1D03               	goto	u1521
  5087  06E6  2EE8               	goto	u1520
  5088  06E7  2EE9               u1521:
  5089  06E8                     	goto	l2387
  5090  06E8  2EC2               u1520:
  5091  06E9                     	goto	l294
  5092  06E9  2EEA               	
  5093                           l293:	
  5094  06EA                     	line	132
  5095                           	
  5096                           l294:	
  5097  06EA                     	return
  5098  06EA  0008               	opt stack 0
  5099                           GLOBAL	__end_of_Lcd_Write_String
  5100                           	__end_of_Lcd_Write_String:
  5101  06EB                     	signat	_Lcd_Write_String,8313
  5102                           	global	_Lcd_Write_Char
  5103                           
  5104 ;; *************** function _Lcd_Write_Char *****************
  5105 ;; Defined at:
  5106 ;;		line 98 in file "LCD.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  a               1    wreg     unsigned char 
  5109 ;;  modo            2    4[COMMON] int 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;  a               1    2[BANK0 ] unsigned char 
  5112 ;;  y               1    1[BANK0 ] unsigned char 
  5113 ;;  temp            1    0[BANK0 ] unsigned char 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, status,2, status,0, pclath, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5123 ;;      Params:         2       0       0       0       0
  5124 ;;      Locals:         0       3       0       0       0
  5125 ;;      Temps:          1       0       0       0       0
  5126 ;;      Totals:         3       3       0       0       0
  5127 ;;Total ram usage:        6 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    2
  5130 ;; This function calls:
  5131 ;;		_Lcd_Port
  5132 ;; This function is called by:
  5133 ;;		_main
  5134 ;;		_Lcd_Write_String
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  5138                           	line	98
  5139                           global __ptext9
  5140                           __ptext9:	;psect for function _Lcd_Write_Char
  5141  061F                     psect	text9
  5142                           	file	"LCD.c"
  5143                           	line	98
  5144                           	global	__size_of_Lcd_Write_Char
  5145                           	__size_of_Lcd_Write_Char	equ	__end_of_Lcd_Write_Char-_Lcd_Write_Char
  5146  0052                     	
  5147                           _Lcd_Write_Char:	
  5148  061F                     ;incstack = 0
  5149                           	opt	stack 4
  5150                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5151                           ;Lcd_Write_Char@a stored from wreg
  5152                           	bcf	status, 5	;RP0=0, select bank0
  5153  061F  1283               	bcf	status, 6	;RP1=0, select bank0
  5154  0620  1303               	movwf	(Lcd_Write_Char@a)
  5155  0621  00A2               	line	100
  5156                           	
  5157                           l2321:	
  5158  0622                     ;LCD.c: 98: void Lcd_Write_Char(char a,int modo);LCD.c: 99: {;LCD.c: 100:     if(modo==4
                                 )
  5159                           		movlw	4
  5160  0622  3004               	xorwf	((Lcd_Write_Char@modo)),w
  5161  0623  0674               iorwf	((Lcd_Write_Char@modo+1)),w
  5162  0624  0475               	btfss	status,2
  5163  0625  1D03               	goto	u1491
  5164  0626  2E28               	goto	u1490
  5165  0627  2E29               u1491:
  5166  0628                     	goto	l2343
  5167  0628  2E5B               u1490:
  5168  0629                     	line	103
  5169                           	
  5170                           l2323:	
  5171  0629                     ;LCD.c: 101:     {;LCD.c: 102:    char temp,y;;LCD.c: 103:    temp = a&0x0F;
  5172                           	movf	(Lcd_Write_Char@a),w
  5173  0629  0822               	andlw	0Fh
  5174  062A  390F               	movwf	(??_Lcd_Write_Char+0)+0
  5175  062B  00F6               	movf	(??_Lcd_Write_Char+0)+0,w
  5176  062C  0876               	movwf	(Lcd_Write_Char@temp)
  5177  062D  00A0               	line	104
  5178                           ;LCD.c: 104:    y = a&0xF0;
  5179                           	movf	(Lcd_Write_Char@a),w
  5180  062E  0822               	andlw	0F0h
  5181  062F  39F0               	movwf	(??_Lcd_Write_Char+0)+0
  5182  0630  00F6               	movf	(??_Lcd_Write_Char+0)+0,w
  5183  0631  0876               	movwf	(Lcd_Write_Char@y)
  5184  0632  00A1               	line	105
  5185                           	
  5186                           l2325:	
  5187  0633                     ;LCD.c: 105:    PORTEbits.RE0 = 1;
  5188                           	bsf	(9),0	;volatile
  5189  0633  1409               	line	106
  5190                           	
  5191                           l2327:	
  5192  0634                     ;LCD.c: 106:    Lcd_Port(y>>4);
  5193                           	movf	(Lcd_Write_Char@y),w
  5194  0634  0821               	movwf	(??_Lcd_Write_Char+0)+0
  5195  0635  00F6               	movlw	04h
  5196  0636  3004               u1505:
  5197  0637                     	clrc
  5198  0637  1003               	rrf	(??_Lcd_Write_Char+0)+0,f
  5199  0638  0CF6               	addlw	-1
  5200  0639  3EFF               	skipz
  5201  063A  1D03               	goto	u1505
  5202  063B  2E37               	movf	0+(??_Lcd_Write_Char+0)+0,w
  5203  063C  0876               	fcall	_Lcd_Port
  5204  063D  120A  118A  26EB  120A  118A  	line	107
  5205                           	
  5206                           l2329:	
  5207  0642                     ;LCD.c: 107:    PORTEbits.RE1 = 1;
  5208                           	bcf	status, 5	;RP0=0, select bank0
  5209  0642  1283               	bcf	status, 6	;RP1=0, select bank0
  5210  0643  1303               	bsf	(9),1	;volatile
  5211  0644  1489               	line	108
  5212                           	
  5213                           l2331:	
  5214  0645                     ;LCD.c: 108:    _delay((unsigned long)((40)*(500000/4000000.0)));
  5215                           		opt asmopt_push
  5216                           	opt asmopt_off
  5217                           	nop2	;2 cycle nop
  5218  0645  2E46               	nop2	;2 cycle nop
  5219  0646  2E47               	nop
  5220  0647  0000               	opt asmopt_pop
  5221                           
  5222                           	line	109
  5223                           	
  5224                           l2333:	
  5225  0648                     ;LCD.c: 109:    PORTEbits.RE1 = 0;
  5226                           	bcf	status, 5	;RP0=0, select bank0
  5227  0648  1283               	bcf	status, 6	;RP1=0, select bank0
  5228  0649  1303               	bcf	(9),1	;volatile
  5229  064A  1089               	line	110
  5230                           	
  5231                           l2335:	
  5232  064B                     ;LCD.c: 110:    Lcd_Port(temp);
  5233                           	movf	(Lcd_Write_Char@temp),w
  5234  064B  0820               	fcall	_Lcd_Port
  5235  064C  120A  118A  26EB  120A  118A  	line	111
  5236                           	
  5237                           l2337:	
  5238  0651                     ;LCD.c: 111:    PORTEbits.RE1 = 1;
  5239                           	bcf	status, 5	;RP0=0, select bank0
  5240  0651  1283               	bcf	status, 6	;RP1=0, select bank0
  5241  0652  1303               	bsf	(9),1	;volatile
  5242  0653  1489               	line	112
  5243                           	
  5244                           l2339:	
  5245  0654                     ;LCD.c: 112:    _delay((unsigned long)((40)*(500000/4000000.0)));
  5246                           		opt asmopt_push
  5247                           	opt asmopt_off
  5248                           	nop2	;2 cycle nop
  5249  0654  2E55               	nop2	;2 cycle nop
  5250  0655  2E56               	nop
  5251  0656  0000               	opt asmopt_pop
  5252                           
  5253                           	line	113
  5254                           	
  5255                           l2341:	
  5256  0657                     ;LCD.c: 113:    PORTEbits.RE1 = 0;
  5257                           	bcf	status, 5	;RP0=0, select bank0
  5258  0657  1283               	bcf	status, 6	;RP1=0, select bank0
  5259  0658  1303               	bcf	(9),1	;volatile
  5260  0659  1089               	line	114
  5261                           ;LCD.c: 114:     }
  5262                           	goto	l288
  5263  065A  2E70               	line	117
  5264                           ;LCD.c: 117:     else if(modo==8)
  5265                           	
  5266                           l285:	
  5267  065B                     	
  5268                           l2343:	
  5269  065B                     		movlw	8
  5270  065B  3008               	xorwf	((Lcd_Write_Char@modo)),w
  5271  065C  0674               iorwf	((Lcd_Write_Char@modo+1)),w
  5272  065D  0475               	btfss	status,2
  5273  065E  1D03               	goto	u1511
  5274  065F  2E61               	goto	u1510
  5275  0660  2E62               u1511:
  5276  0661                     	goto	l288
  5277  0661  2E70               u1510:
  5278  0662                     	line	119
  5279                           	
  5280                           l2345:	
  5281  0662                     ;LCD.c: 118:     {;LCD.c: 119:     PORTEbits.RE0 = 1;
  5282                           	bsf	(9),0	;volatile
  5283  0662  1409               	line	120
  5284                           	
  5285                           l2347:	
  5286  0663                     ;LCD.c: 120:     PORTB = a;
  5287                           	movf	(Lcd_Write_Char@a),w
  5288  0663  0822               	movwf	(6)	;volatile
  5289  0664  0086               	line	121
  5290                           	
  5291                           l2349:	
  5292  0665                     ;LCD.c: 121:     PORTEbits.RE1 = 1;
  5293                           	bsf	(9),1	;volatile
  5294  0665  1489               	line	122
  5295                           ;LCD.c: 122:     _delay((unsigned long)((1)*(500000/4000.0)));
  5296                           	opt asmopt_push
  5297                           opt asmopt_off
  5298                           	movlw	41
  5299  0666  3029               movwf	((??_Lcd_Write_Char+0)+0),f
  5300  0667  00F6               	u1867:
  5301  0668                     decfsz	(??_Lcd_Write_Char+0)+0,f
  5302  0668  0BF6               	goto	u1867
  5303  0669  2E68               	nop
  5304  066A  0000               opt asmopt_pop
  5305                           
  5306                           	line	123
  5307                           	
  5308                           l2351:	
  5309  066B                     ;LCD.c: 123:     PORTEbits.RE1 = 0;
  5310                           	bcf	status, 5	;RP0=0, select bank0
  5311  066B  1283               	bcf	status, 6	;RP1=0, select bank0
  5312  066C  1303               	bcf	(9),1	;volatile
  5313  066D  1089               	goto	l288
  5314  066E  2E70               	line	124
  5315                           ;LCD.c: 124:     }
  5316                           	
  5317                           l287:	
  5318  066F                     	goto	l288
  5319  066F  2E70               	
  5320                           l286:	
  5321  0670                     	line	125
  5322                           	
  5323                           l288:	
  5324  0670                     	return
  5325  0670  0008               	opt stack 0
  5326                           GLOBAL	__end_of_Lcd_Write_Char
  5327                           	__end_of_Lcd_Write_Char:
  5328  0671                     	signat	_Lcd_Write_Char,8313
  5329                           	global	_Lcd_Port
  5330                           
  5331 ;; *************** function _Lcd_Port *****************
  5332 ;; Defined at:
  5333 ;;		line 20 in file "LCD.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  a               1    wreg     unsigned char 
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;  a               1    3[COMMON] unsigned char 
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  1    wreg      void 
  5340 ;; Registers used:
  5341 ;;		wreg
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5347 ;;      Params:         0       0       0       0       0
  5348 ;;      Locals:         1       0       0       0       0
  5349 ;;      Temps:          0       0       0       0       0
  5350 ;;      Totals:         1       0       0       0       0
  5351 ;;Total ram usage:        1 bytes
  5352 ;; Hardware stack levels used:    1
  5353 ;; Hardware stack levels required when called:    1
  5354 ;; This function calls:
  5355 ;;		Nothing
  5356 ;; This function is called by:
  5357 ;;		_Lcd_Write_Char
  5358 ;;		_Lcd_Cmd
  5359 ;;		_Lcd_Init
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5363                           	line	20
  5364                           global __ptext10
  5365                           __ptext10:	;psect for function _Lcd_Port
  5366  06EB                     psect	text10
  5367                           	file	"LCD.c"
  5368                           	line	20
  5369                           	global	__size_of_Lcd_Port
  5370                           	__size_of_Lcd_Port	equ	__end_of_Lcd_Port-_Lcd_Port
  5371  0023                     	
  5372                           _Lcd_Port:	
  5373  06EB                     ;incstack = 0
  5374                           	opt	stack 4
  5375                           ; Regs used in _Lcd_Port: [wreg]
  5376                           ;Lcd_Port@a stored from wreg
  5377                           	movwf	(Lcd_Port@a)
  5378  06EB  00F3               	line	23
  5379                           	
  5380                           l2311:	
  5381  06EC                     ;LCD.c: 20: void Lcd_Port(char a);LCD.c: 21: {;LCD.c: 23:  if(a & 1)
  5382                           	btfss	(Lcd_Port@a),(0)&7
  5383  06EC  1C73               	goto	u1451
  5384  06ED  2EEF               	goto	u1450
  5385  06EE  2EF0               u1451:
  5386  06EF                     	goto	l259
  5387  06EF  2EF4               u1450:
  5388  06F0                     	line	24
  5389                           	
  5390                           l2313:	
  5391  06F0                     ;LCD.c: 24:   PORTBbits.RB4 = 1;
  5392                           	bcf	status, 5	;RP0=0, select bank0
  5393  06F0  1283               	bcf	status, 6	;RP1=0, select bank0
  5394  06F1  1303               	bsf	(6),4	;volatile
  5395  06F2  1606               	goto	l260
  5396  06F3  2EF7               	line	25
  5397                           ;LCD.c: 25:  else
  5398                           	
  5399                           l259:	
  5400  06F4                     	line	26
  5401                           ;LCD.c: 26:   PORTBbits.RB4 = 0;
  5402                           	bcf	status, 5	;RP0=0, select bank0
  5403  06F4  1283               	bcf	status, 6	;RP1=0, select bank0
  5404  06F5  1303               	bcf	(6),4	;volatile
  5405  06F6  1206               	
  5406                           l260:	
  5407  06F7                     	line	28
  5408                           ;LCD.c: 28:  if(a & 2)
  5409                           	btfss	(Lcd_Port@a),(1)&7
  5410  06F7  1CF3               	goto	u1461
  5411  06F8  2EFA               	goto	u1460
  5412  06F9  2EFB               u1461:
  5413  06FA                     	goto	l261
  5414  06FA  2EFD               u1460:
  5415  06FB                     	line	29
  5416                           	
  5417                           l2315:	
  5418  06FB                     ;LCD.c: 29:   PORTBbits.RB5 = 1;
  5419                           	bsf	(6),5	;volatile
  5420  06FB  1686               	goto	l262
  5421  06FC  2EFE               	line	30
  5422                           ;LCD.c: 30:  else
  5423                           	
  5424                           l261:	
  5425  06FD                     	line	31
  5426                           ;LCD.c: 31:   PORTBbits.RB5 = 0;
  5427                           	bcf	(6),5	;volatile
  5428  06FD  1286               	
  5429                           l262:	
  5430  06FE                     	line	33
  5431                           ;LCD.c: 33:  if(a & 4)
  5432                           	btfss	(Lcd_Port@a),(2)&7
  5433  06FE  1D73               	goto	u1471
  5434  06FF  2F01               	goto	u1470
  5435  0700  2F02               u1471:
  5436  0701                     	goto	l263
  5437  0701  2F04               u1470:
  5438  0702                     	line	34
  5439                           	
  5440                           l2317:	
  5441  0702                     ;LCD.c: 34:   PORTBbits.RB6 = 1;
  5442                           	bsf	(6),6	;volatile
  5443  0702  1706               	goto	l264
  5444  0703  2F05               	line	35
  5445                           ;LCD.c: 35:  else
  5446                           	
  5447                           l263:	
  5448  0704                     	line	36
  5449                           ;LCD.c: 36:   PORTBbits.RB6 = 0;
  5450                           	bcf	(6),6	;volatile
  5451  0704  1306               	
  5452                           l264:	
  5453  0705                     	line	38
  5454                           ;LCD.c: 38:  if(a & 8)
  5455                           	btfss	(Lcd_Port@a),(3)&7
  5456  0705  1DF3               	goto	u1481
  5457  0706  2F08               	goto	u1480
  5458  0707  2F09               u1481:
  5459  0708                     	goto	l265
  5460  0708  2F0B               u1480:
  5461  0709                     	line	39
  5462                           	
  5463                           l2319:	
  5464  0709                     ;LCD.c: 39:   PORTBbits.RB7 = 1;
  5465                           	bsf	(6),7	;volatile
  5466  0709  1786               	goto	l267
  5467  070A  2F0D               	line	40
  5468                           ;LCD.c: 40:  else
  5469                           	
  5470                           l265:	
  5471  070B                     	line	41
  5472                           ;LCD.c: 41:   PORTBbits.RB7 = 0;
  5473                           	bcf	(6),7	;volatile
  5474  070B  1386               	goto	l267
  5475  070C  2F0D               	
  5476                           l266:	
  5477  070D                     	line	42
  5478                           	
  5479                           l267:	
  5480  070D                     	return
  5481  070D  0008               	opt stack 0
  5482                           GLOBAL	__end_of_Lcd_Port
  5483                           	__end_of_Lcd_Port:
  5484  070E                     	signat	_Lcd_Port,4217
  5485                           	global	_Lcd_Set_Cursor_8bits
  5486                           
  5487 ;; *************** function _Lcd_Set_Cursor_8bits *****************
  5488 ;; Defined at:
  5489 ;;		line 179 in file "LCD.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  y               1    wreg     unsigned char 
  5492 ;;  x               1    5[COMMON] unsigned char 
  5493 ;; Auto vars:     Size  Location     Type
  5494 ;;  y               1    6[COMMON] unsigned char 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  1    wreg      void 
  5497 ;; Registers used:
  5498 ;;		wreg, status,2, status,0, pclath, cstack
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5504 ;;      Params:         1       0       0       0       0
  5505 ;;      Locals:         1       0       0       0       0
  5506 ;;      Temps:          0       0       0       0       0
  5507 ;;      Totals:         2       0       0       0       0
  5508 ;;Total ram usage:        2 bytes
  5509 ;; Hardware stack levels used:    1
  5510 ;; Hardware stack levels required when called:    2
  5511 ;; This function calls:
  5512 ;;		_Lcd_Cmd_8bits
  5513 ;; This function is called by:
  5514 ;;		_main
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5518                           	line	179
  5519                           global __ptext11
  5520                           __ptext11:	;psect for function _Lcd_Set_Cursor_8bits
  5521  070E                     psect	text11
  5522                           	file	"LCD.c"
  5523                           	line	179
  5524                           	global	__size_of_Lcd_Set_Cursor_8bits
  5525                           	__size_of_Lcd_Set_Cursor_8bits	equ	__end_of_Lcd_Set_Cursor_8bits-_Lcd_Set_Cursor_8bits

  5526  001E                     	
  5527                           _Lcd_Set_Cursor_8bits:	
  5528  070E                     ;incstack = 0
  5529                           	opt	stack 5
  5530                           ; Regs used in _Lcd_Set_Cursor_8bits: [wreg+status,2+status,0+pclath+cstack]
  5531                           ;Lcd_Set_Cursor_8bits@y stored from wreg
  5532                           	movwf	(Lcd_Set_Cursor_8bits@y)
  5533  070E  00F6               	line	182
  5534                           	
  5535                           l1995:	
  5536  070F                     ;LCD.c: 179: void Lcd_Set_Cursor_8bits(unsigned char y, unsigned char x);LCD.c: 180: {;L
                                 CD.c: 182:     if(y == 1)
  5537                           		decf	((Lcd_Set_Cursor_8bits@y)),w
  5538  070F  0376               	btfss	status,2
  5539  0710  1D03               	goto	u1141
  5540  0711  2F13               	goto	u1140
  5541  0712  2F14               u1141:
  5542  0713                     	goto	l1999
  5543  0713  2F1C               u1140:
  5544  0714                     	line	184
  5545                           	
  5546                           l1997:	
  5547  0714                     ;LCD.c: 183:  {;LCD.c: 184:         Lcd_Cmd_8bits(0x80 + x - 1);
  5548                           	movf	(Lcd_Set_Cursor_8bits@x),w
  5549  0714  0875               	addlw	07Fh
  5550  0715  3E7F               	fcall	_Lcd_Cmd_8bits
  5551  0716  120A  118A  278E  120A  118A  	line	185
  5552                           ;LCD.c: 185:  }
  5553                           	goto	l318
  5554  071B  2F2B               	line	187
  5555                           ;LCD.c: 187:  else if(y == 2)
  5556                           	
  5557                           l315:	
  5558  071C                     	
  5559                           l1999:	
  5560  071C                     		movlw	2
  5561  071C  3002               	xorwf	((Lcd_Set_Cursor_8bits@y)),w
  5562  071D  0676               	btfss	status,2
  5563  071E  1D03               	goto	u1151
  5564  071F  2F21               	goto	u1150
  5565  0720  2F22               u1151:
  5566  0721                     	goto	l318
  5567  0721  2F2B               u1150:
  5568  0722                     	line	189
  5569                           	
  5570                           l2001:	
  5571  0722                     ;LCD.c: 188:  {;LCD.c: 189:   Lcd_Cmd_8bits(0xC0 + x - 1);
  5572                           	movf	(Lcd_Set_Cursor_8bits@x),w
  5573  0722  0875               	addlw	0BFh
  5574  0723  3EBF               	fcall	_Lcd_Cmd_8bits
  5575  0724  120A  118A  278E  120A  118A  	goto	l318
  5576  0729  2F2B               	line	190
  5577                           ;LCD.c: 190:  }
  5578                           	
  5579                           l317:	
  5580  072A                     	goto	l318
  5581  072A  2F2B               	
  5582                           l316:	
  5583  072B                     	line	191
  5584                           	
  5585                           l318:	
  5586  072B                     	return
  5587  072B  0008               	opt stack 0
  5588                           GLOBAL	__end_of_Lcd_Set_Cursor_8bits
  5589                           	__end_of_Lcd_Set_Cursor_8bits:
  5590  072C                     	signat	_Lcd_Set_Cursor_8bits,8313
  5591                           	global	_Lcd_Init_8bits
  5592                           
  5593 ;; *************** function _Lcd_Init_8bits *****************
  5594 ;; Defined at:
  5595 ;;		line 193 in file "LCD.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      void 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0, pclath, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5609 ;;      Params:         0       0       0       0       0
  5610 ;;      Locals:         0       0       0       0       0
  5611 ;;      Temps:          2       0       0       0       0
  5612 ;;      Totals:         2       0       0       0       0
  5613 ;;Total ram usage:        2 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:    2
  5616 ;; This function calls:
  5617 ;;		_Lcd_Cmd_8bits
  5618 ;; This function is called by:
  5619 ;;		_main
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5623                           	line	193
  5624                           global __ptext12
  5625                           __ptext12:	;psect for function _Lcd_Init_8bits
  5626  0671                     psect	text12
  5627                           	file	"LCD.c"
  5628                           	line	193
  5629                           	global	__size_of_Lcd_Init_8bits
  5630                           	__size_of_Lcd_Init_8bits	equ	__end_of_Lcd_Init_8bits-_Lcd_Init_8bits
  5631  004B                     	
  5632                           _Lcd_Init_8bits:	
  5633  0671                     ;incstack = 0
  5634                           	opt	stack 5
  5635                           ; Regs used in _Lcd_Init_8bits: [wreg+status,2+status,0+pclath+cstack]
  5636                           	line	195
  5637                           	
  5638                           l1937:	
  5639  0671                     ;LCD.c: 195:     PORTB = 0;
  5640                           	bcf	status, 5	;RP0=0, select bank0
  5641  0671  1283               	bcf	status, 6	;RP1=0, select bank0
  5642  0672  1303               	clrf	(6)	;volatile
  5643  0673  0186               	line	196
  5644                           	
  5645                           l1939:	
  5646  0674                     ;LCD.c: 196:     _delay((unsigned long)((20)*(500000/4000.0)));
  5647                           	opt asmopt_push
  5648                           opt asmopt_off
  5649                           movlw	4
  5650  0674  3004               movwf	((??_Lcd_Init_8bits+0)+0+1),f
  5651  0675  00F6               	movlw	61
  5652  0676  303D               movwf	((??_Lcd_Init_8bits+0)+0),f
  5653  0677  00F5               	u1877:
  5654  0678                     decfsz	((??_Lcd_Init_8bits+0)+0),f
  5655  0678  0BF5               	goto	u1877
  5656  0679  2E78               	decfsz	((??_Lcd_Init_8bits+0)+0+1),f
  5657  067A  0BF6               	goto	u1877
  5658  067B  2E78               	nop2
  5659  067C  2E7D               opt asmopt_pop
  5660                           
  5661                           	line	197
  5662                           	
  5663                           l1941:	
  5664  067D                     ;LCD.c: 197:     Lcd_Cmd_8bits(0x030);
  5665                           	movlw	low(030h)
  5666  067D  3030               	fcall	_Lcd_Cmd_8bits
  5667  067E  120A  118A  278E  120A  118A  	line	198
  5668                           	
  5669                           l1943:	
  5670  0683                     ;LCD.c: 198:     _delay((unsigned long)((5)*(500000/4000.0)));
  5671                           	opt asmopt_push
  5672                           opt asmopt_off
  5673                           	movlw	208
  5674  0683  30D0               movwf	((??_Lcd_Init_8bits+0)+0),f
  5675  0684  00F5               	u1887:
  5676  0685                     decfsz	(??_Lcd_Init_8bits+0)+0,f
  5677  0685  0BF5               	goto	u1887
  5678  0686  2E85               opt asmopt_pop
  5679                           
  5680                           	line	199
  5681                           	
  5682                           l1945:	
  5683  0687                     ;LCD.c: 199:     Lcd_Cmd_8bits(0x030);
  5684                           	movlw	low(030h)
  5685  0687  3030               	fcall	_Lcd_Cmd_8bits
  5686  0688  120A  118A  278E  120A  118A  	line	200
  5687                           	
  5688                           l1947:	
  5689  068D                     ;LCD.c: 200:     _delay((unsigned long)((160)*(500000/4000000.0)));
  5690                           	opt asmopt_push
  5691                           opt asmopt_off
  5692                           	movlw	6
  5693  068D  3006               movwf	((??_Lcd_Init_8bits+0)+0),f
  5694  068E  00F5               	u1897:
  5695  068F                     decfsz	(??_Lcd_Init_8bits+0)+0,f
  5696  068F  0BF5               	goto	u1897
  5697  0690  2E8F               	nop
  5698  0691  0000               opt asmopt_pop
  5699                           
  5700                           	line	201
  5701                           	
  5702                           l1949:	
  5703  0692                     ;LCD.c: 201:     Lcd_Cmd_8bits(0x030);
  5704                           	movlw	low(030h)
  5705  0692  3030               	fcall	_Lcd_Cmd_8bits
  5706  0693  120A  118A  278E  120A  118A  	line	202
  5707                           	
  5708                           l1951:	
  5709  0698                     ;LCD.c: 202:     _delay((unsigned long)((160)*(500000/4000000.0)));
  5710                           	opt asmopt_push
  5711                           opt asmopt_off
  5712                           	movlw	6
  5713  0698  3006               movwf	((??_Lcd_Init_8bits+0)+0),f
  5714  0699  00F5               	u1907:
  5715  069A                     decfsz	(??_Lcd_Init_8bits+0)+0,f
  5716  069A  0BF5               	goto	u1907
  5717  069B  2E9A               	nop
  5718  069C  0000               opt asmopt_pop
  5719                           
  5720                           	line	204
  5721                           	
  5722                           l1953:	
  5723  069D                     ;LCD.c: 204:     Lcd_Cmd_8bits(0x38);
  5724                           	movlw	low(038h)
  5725  069D  3038               	fcall	_Lcd_Cmd_8bits
  5726  069E  120A  118A  278E  120A  118A  	line	208
  5727                           	
  5728                           l1955:	
  5729  06A3                     ;LCD.c: 208:     Lcd_Cmd_8bits(0x14);
  5730                           	movlw	low(014h)
  5731  06A3  3014               	fcall	_Lcd_Cmd_8bits
  5732  06A4  120A  118A  278E  120A  118A  	line	209
  5733                           	
  5734                           l1957:	
  5735  06A9                     ;LCD.c: 209:     Lcd_Cmd_8bits(0x6);
  5736                           	movlw	low(06h)
  5737  06A9  3006               	fcall	_Lcd_Cmd_8bits
  5738  06AA  120A  118A  278E  120A  118A  	line	210
  5739                           	
  5740                           l1959:	
  5741  06AF                     ;LCD.c: 210:     Lcd_Cmd_8bits(0xc);
  5742                           	movlw	low(0Ch)
  5743  06AF  300C               	fcall	_Lcd_Cmd_8bits
  5744  06B0  120A  118A  278E  120A  118A  	line	211
  5745                           	
  5746                           l1961:	
  5747  06B5                     ;LCD.c: 211:     Lcd_Cmd_8bits(0x2);
  5748                           	movlw	low(02h)
  5749  06B5  3002               	fcall	_Lcd_Cmd_8bits
  5750  06B6  120A  118A  278E  120A  118A  	line	212
  5751                           	
  5752                           l321:	
  5753  06BB                     	return
  5754  06BB  0008               	opt stack 0
  5755                           GLOBAL	__end_of_Lcd_Init_8bits
  5756                           	__end_of_Lcd_Init_8bits:
  5757  06BC                     	signat	_Lcd_Init_8bits,89
  5758                           	global	_Lcd_Clear_8bits
  5759                           
  5760 ;; *************** function _Lcd_Clear_8bits *****************
  5761 ;; Defined at:
  5762 ;;		line 160 in file "LCD.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;		None
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2, status,0, pclath, cstack
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5776 ;;      Params:         0       0       0       0       0
  5777 ;;      Locals:         0       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0
  5779 ;;      Totals:         0       0       0       0       0
  5780 ;;Total ram usage:        0 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; Hardware stack levels required when called:    2
  5783 ;; This function calls:
  5784 ;;		_Lcd_Cmd_8bits
  5785 ;; This function is called by:
  5786 ;;		_main
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5790                           	line	160
  5791                           global __ptext13
  5792                           __ptext13:	;psect for function _Lcd_Clear_8bits
  5793  07AB                     psect	text13
  5794                           	file	"LCD.c"
  5795                           	line	160
  5796                           	global	__size_of_Lcd_Clear_8bits
  5797                           	__size_of_Lcd_Clear_8bits	equ	__end_of_Lcd_Clear_8bits-_Lcd_Clear_8bits
  5798  000D                     	
  5799                           _Lcd_Clear_8bits:	
  5800  07AB                     ;incstack = 0
  5801                           	opt	stack 5
  5802                           ; Regs used in _Lcd_Clear_8bits: [wreg+status,2+status,0+pclath+cstack]
  5803                           	line	162
  5804                           	
  5805                           l1993:	
  5806  07AB                     ;LCD.c: 162:     Lcd_Cmd_8bits(0);
  5807                           	movlw	low(0)
  5808  07AB  3000               	fcall	_Lcd_Cmd_8bits
  5809  07AC  120A  118A  278E  120A  118A  	line	163
  5810                           ;LCD.c: 163:  Lcd_Cmd_8bits(1);
  5811                           	movlw	low(01h)
  5812  07B1  3001               	fcall	_Lcd_Cmd_8bits
  5813  07B2  120A  118A  278E  120A  118A  	line	164
  5814                           	
  5815                           l306:	
  5816  07B7                     	return
  5817  07B7  0008               	opt stack 0
  5818                           GLOBAL	__end_of_Lcd_Clear_8bits
  5819                           	__end_of_Lcd_Clear_8bits:
  5820  07B8                     	signat	_Lcd_Clear_8bits,89
  5821                           	global	_Lcd_Cmd_8bits
  5822                           
  5823 ;; *************** function _Lcd_Cmd_8bits *****************
  5824 ;; Defined at:
  5825 ;;		line 149 in file "LCD.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  comando         1    wreg     unsigned char 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  comando         1    4[COMMON] unsigned char 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      void 
  5832 ;; Registers used:
  5833 ;;		wreg
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5839 ;;      Params:         0       0       0       0       0
  5840 ;;      Locals:         1       0       0       0       0
  5841 ;;      Temps:          1       0       0       0       0
  5842 ;;      Totals:         2       0       0       0       0
  5843 ;;Total ram usage:        2 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    1
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_Lcd_Clear_8bits
  5850 ;;		_Lcd_Set_Cursor_8bits
  5851 ;;		_Lcd_Init_8bits
  5852 ;;		_Lcd_Shift_Right_8bits
  5853 ;;		_Lcd_Shift_Left_8bits
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5857                           	line	149
  5858                           global __ptext14
  5859                           __ptext14:	;psect for function _Lcd_Cmd_8bits
  5860  078E                     psect	text14
  5861                           	file	"LCD.c"
  5862                           	line	149
  5863                           	global	__size_of_Lcd_Cmd_8bits
  5864                           	__size_of_Lcd_Cmd_8bits	equ	__end_of_Lcd_Cmd_8bits-_Lcd_Cmd_8bits
  5865  0010                     	
  5866                           _Lcd_Cmd_8bits:	
  5867  078E                     ;incstack = 0
  5868                           	opt	stack 5
  5869                           ; Regs used in _Lcd_Cmd_8bits: [wreg]
  5870                           ;Lcd_Cmd_8bits@comando stored from wreg
  5871                           	movwf	(Lcd_Cmd_8bits@comando)
  5872  078E  00F4               	line	151
  5873                           	
  5874                           l1833:	
  5875  078F                     ;LCD.c: 149: void Lcd_Cmd_8bits(unsigned char comando);LCD.c: 150: {;LCD.c: 151:  PORTEb
                                 its.RE0 = 0;
  5876                           	bcf	status, 5	;RP0=0, select bank0
  5877  078F  1283               	bcf	status, 6	;RP1=0, select bank0
  5878  0790  1303               	bcf	(9),0	;volatile
  5879  0791  1009               	line	152
  5880                           	
  5881                           l1835:	
  5882  0792                     ;LCD.c: 152:  PORTB = comando;
  5883                           	movf	(Lcd_Cmd_8bits@comando),w
  5884  0792  0874               	movwf	(6)	;volatile
  5885  0793  0086               	line	154
  5886                           	
  5887                           l1837:	
  5888  0794                     ;LCD.c: 154:     PORTEbits.RE1 = 1;
  5889                           	bsf	(9),1	;volatile
  5890  0794  1489               	line	155
  5891                           ;LCD.c: 155:     _delay((unsigned long)((4)*(500000/4000.0)));
  5892                           	opt asmopt_push
  5893                           opt asmopt_off
  5894                           	movlw	166
  5895  0795  30A6               movwf	((??_Lcd_Cmd_8bits+0)+0),f
  5896  0796  00F3               	u1917:
  5897  0797                     decfsz	(??_Lcd_Cmd_8bits+0)+0,f
  5898  0797  0BF3               	goto	u1917
  5899  0798  2F97               	nop
  5900  0799  0000               opt asmopt_pop
  5901                           
  5902                           	line	156
  5903                           	
  5904                           l1839:	
  5905  079A                     ;LCD.c: 156:     PORTEbits.RE1 = 0;
  5906                           	bcf	status, 5	;RP0=0, select bank0
  5907  079A  1283               	bcf	status, 6	;RP1=0, select bank0
  5908  079B  1303               	bcf	(9),1	;volatile
  5909  079C  1089               	line	158
  5910                           	
  5911                           l303:	
  5912  079D                     	return
  5913  079D  0008               	opt stack 0
  5914                           GLOBAL	__end_of_Lcd_Cmd_8bits
  5915                           	__end_of_Lcd_Cmd_8bits:
  5916  079E                     	signat	_Lcd_Cmd_8bits,4217
  5917                           	global	_InitKeypad
  5918                           
  5919 ;; *************** function _InitKeypad *****************
  5920 ;; Defined at:
  5921 ;;		line 97 in file "KEYPAD.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;		None
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;		None
  5926 ;; Return value:  Size  Location     Type
  5927 ;;                  1    wreg      void 
  5928 ;; Registers used:
  5929 ;;		wreg, status,2
  5930 ;; Tracked objects:
  5931 ;;		On entry : 0/0
  5932 ;;		On exit  : 0/0
  5933 ;;		Unchanged: 0/0
  5934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5935 ;;      Params:         0       0       0       0       0
  5936 ;;      Locals:         0       0       0       0       0
  5937 ;;      Temps:          0       0       0       0       0
  5938 ;;      Totals:         0       0       0       0       0
  5939 ;;Total ram usage:        0 bytes
  5940 ;; Hardware stack levels used:    1
  5941 ;; Hardware stack levels required when called:    1
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_main
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5949                           	file	"KEYPAD.c"
  5950                           	line	97
  5951                           global __ptext15
  5952                           __ptext15:	;psect for function _InitKeypad
  5953  07B8                     psect	text15
  5954                           	file	"KEYPAD.c"
  5955                           	line	97
  5956                           	global	__size_of_InitKeypad
  5957                           	__size_of_InitKeypad	equ	__end_of_InitKeypad-_InitKeypad
  5958  0009                     	
  5959                           _InitKeypad:	
  5960  07B8                     ;incstack = 0
  5961                           	opt	stack 6
  5962                           ; Regs used in _InitKeypad: [wreg+status,2]
  5963                           	line	98
  5964                           	
  5965                           l1963:	
  5966  07B8                     ;KEYPAD.c: 98:             PORTD = 0x00;
  5967                           	bcf	status, 5	;RP0=0, select bank0
  5968  07B8  1283               	bcf	status, 6	;RP1=0, select bank0
  5969  07B9  1303               	clrf	(8)	;volatile
  5970  07BA  0188               	line	99
  5971                           	
  5972                           l1965:	
  5973  07BB                     ;KEYPAD.c: 99:             TRISD = 0xF0;
  5974                           	movlw	low(0F0h)
  5975  07BB  30F0               	bsf	status, 5	;RP0=1, select bank1
  5976  07BC  1683               	bcf	status, 6	;RP1=0, select bank1
  5977  07BD  1303               	movwf	(136)^080h	;volatile
  5978  07BE  0088               	line	100
  5979                           	
  5980                           l1967:	
  5981  07BF                     ;KEYPAD.c: 100:             OPTION_REG &= 0xFF;
  5982                           	movf	(129)^080h,w	;volatile
  5983  07BF  0801               	line	101
  5984                           	
  5985                           l421:	
  5986  07C0                     	return
  5987  07C0  0008               	opt stack 0
  5988                           GLOBAL	__end_of_InitKeypad
  5989                           	__end_of_InitKeypad:
  5990  07C1                     	signat	_InitKeypad,89
  5991                           	global	_I2C_Slave_Init
  5992                           
  5993 ;; *************** function _I2C_Slave_Init *****************
  5994 ;; Defined at:
  5995 ;;		line 93 in file "I2C.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;  address         1    wreg     unsigned char 
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;  address         1    3[COMMON] unsigned char 
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  1    wreg      void 
  6002 ;; Registers used:
  6003 ;;		wreg
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6009 ;;      Params:         0       0       0       0       0
  6010 ;;      Locals:         1       0       0       0       0
  6011 ;;      Temps:          0       0       0       0       0
  6012 ;;      Totals:         1       0       0       0       0
  6013 ;;Total ram usage:        1 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; Hardware stack levels required when called:    1
  6016 ;; This function calls:
  6017 ;;		Nothing
  6018 ;; This function is called by:
  6019 ;;		_main
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  6023                           	file	"I2C.c"
  6024                           	line	93
  6025                           global __ptext16
  6026                           __ptext16:	;psect for function _I2C_Slave_Init
  6027  0746                     psect	text16
  6028                           	file	"I2C.c"
  6029                           	line	93
  6030                           	global	__size_of_I2C_Slave_Init
  6031                           	__size_of_I2C_Slave_Init	equ	__end_of_I2C_Slave_Init-_I2C_Slave_Init
  6032  001A                     	
  6033                           _I2C_Slave_Init:	
  6034  0746                     ;incstack = 0
  6035                           	opt	stack 6
  6036                           ; Regs used in _I2C_Slave_Init: [wreg]
  6037                           ;I2C_Slave_Init@address stored from wreg
  6038                           	movwf	(I2C_Slave_Init@address)
  6039  0746  00F3               	line	95
  6040                           	
  6041                           l1979:	
  6042  0747                     ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
                                 dress;
  6043                           	movf	(I2C_Slave_Init@address),w
  6044  0747  0873               	bsf	status, 5	;RP0=1, select bank1
  6045  0748  1683               	bcf	status, 6	;RP1=0, select bank1
  6046  0749  1303               	movwf	(147)^080h	;volatile
  6047  074A  0093               	line	96
  6048                           ;I2C.c: 96:     SSPCON = 0x36;
  6049                           	movlw	low(036h)
  6050  074B  3036               	bcf	status, 5	;RP0=0, select bank0
  6051  074C  1283               	bcf	status, 6	;RP1=0, select bank0
  6052  074D  1303               	movwf	(20)	;volatile
  6053  074E  0094               	line	97
  6054                           ;I2C.c: 97:     SSPSTAT = 0x80;
  6055                           	movlw	low(080h)
  6056  074F  3080               	bsf	status, 5	;RP0=1, select bank1
  6057  0750  1683               	bcf	status, 6	;RP1=0, select bank1
  6058  0751  1303               	movwf	(148)^080h	;volatile
  6059  0752  0094               	line	98
  6060                           ;I2C.c: 98:     SSPCON2 = 0x01;
  6061                           	movlw	low(01h)
  6062  0753  3001               	movwf	(145)^080h	;volatile
  6063  0754  0091               	line	99
  6064                           	
  6065                           l1981:	
  6066  0755                     ;I2C.c: 99:     TRISC3 = 1;
  6067                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  6068  0755  1587               	line	100
  6069                           	
  6070                           l1983:	
  6071  0756                     ;I2C.c: 100:     TRISC4 = 1;
  6072                           	bsf	(1084/8)^080h,(1084)&7	;volatile
  6073  0756  1607               	line	101
  6074                           	
  6075                           l1985:	
  6076  0757                     ;I2C.c: 101:     GIE = 1;
  6077                           	bsf	(95/8),(95)&7	;volatile
  6078  0757  178B               	line	102
  6079                           	
  6080                           l1987:	
  6081  0758                     ;I2C.c: 102:     PEIE = 1;
  6082                           	bsf	(94/8),(94)&7	;volatile
  6083  0758  170B               	line	103
  6084                           	
  6085                           l1989:	
  6086  0759                     ;I2C.c: 103:     SSPIF = 0;
  6087                           	bcf	status, 5	;RP0=0, select bank0
  6088  0759  1283               	bcf	status, 6	;RP1=0, select bank0
  6089  075A  1303               	bcf	(99/8),(99)&7	;volatile
  6090  075B  118C               	line	104
  6091                           	
  6092                           l1991:	
  6093  075C                     ;I2C.c: 104:     SSPIE = 1;
  6094                           	bsf	status, 5	;RP0=1, select bank1
  6095  075C  1683               	bcf	status, 6	;RP1=0, select bank1
  6096  075D  1303               	bsf	(1123/8)^080h,(1123)&7	;volatile
  6097  075E  158C               	line	105
  6098                           	
  6099                           l248:	
  6100  075F                     	return
  6101  075F  0008               	opt stack 0
  6102                           GLOBAL	__end_of_I2C_Slave_Init
  6103                           	__end_of_I2C_Slave_Init:
  6104  0760                     	signat	_I2C_Slave_Init,4217
  6105                           	global	_interrupciones
  6106                           
  6107 ;; *************** function _interrupciones *****************
  6108 ;; Defined at:
  6109 ;;		line 60 in file "mainS1proyect.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;		None
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;		None
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  1    wreg      void 
  6116 ;; Registers used:
  6117 ;;		wreg, status,2
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6123 ;;      Params:         0       0       0       0       0
  6124 ;;      Locals:         0       0       0       0       0
  6125 ;;      Temps:          3       0       0       0       0
  6126 ;;      Totals:         3       0       0       0       0
  6127 ;;Total ram usage:        3 bytes
  6128 ;; Hardware stack levels used:    1
  6129 ;; This function calls:
  6130 ;;		Nothing
  6131 ;; This function is called by:
  6132 ;;		Interrupt level 1
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  6136                           	file	"mainS1proyect.c"
  6137                           	line	60
  6138                           global __ptext17
  6139                           __ptext17:	;psect for function _interrupciones
  6140  04BA                     psect	text17
  6141                           	file	"mainS1proyect.c"
  6142                           	line	60
  6143                           	global	__size_of_interrupciones
  6144                           	__size_of_interrupciones	equ	__end_of_interrupciones-_interrupciones
  6145  0097                     	
  6146                           _interrupciones:	
  6147  04BA                     ;incstack = 0
  6148                           	opt	stack 4
  6149                           ; Regs used in _interrupciones: [wreg+status,2]
  6150                           psect	intentry,class=CODE,delta=2
  6151                           global __pintentry
  6152                           __pintentry:
  6153  0004                     global interrupt_function
  6154                           interrupt_function:
  6155  0004                     	global saved_w
  6156                           	saved_w	set	btemp+0
  6157  007E                     	movwf	saved_w
  6158  0004  00FE               	swapf	status,w
  6159  0005  0E03               	movwf	(??_interrupciones+1)
  6160  0006  00F1               	movf	pclath,w
  6161  0007  080A               	movwf	(??_interrupciones+2)
  6162  0008  00F2               	ljmp	_interrupciones
  6163  0009  120A  118A  2CBA   psect	text17
  6164                           	line	61
  6165                           	
  6166                           i1l2031:	
  6167  04BA                     ;mainS1proyect.c: 61:         if(PIR1bits.SSPIF == 1){
  6168                           	bcf	status, 5	;RP0=0, select bank0
  6169  04BA  1283               	bcf	status, 6	;RP1=0, select bank0
  6170  04BB  1303               	btfss	(12),3	;volatile
  6171  04BC  1D8C               	goto	u118_21
  6172  04BD  2CBF               	goto	u118_20
  6173  04BE  2CC0               u118_21:
  6174  04BF                     	goto	i1l123
  6175  04BF  2D1D               u118_20:
  6176  04C0                     	line	63
  6177                           	
  6178                           i1l2033:	
  6179  04C0                     ;mainS1proyect.c: 63:        SSPCONbits.CKP = 0;
  6180                           	bcf	(20),4	;volatile
  6181  04C0  1214               	line	65
  6182                           ;mainS1proyect.c: 65:        if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  6183                           	btfsc	(20),6	;volatile
  6184  04C1  1B14               	goto	u119_21
  6185  04C2  2CC4               	goto	u119_20
  6186  04C3  2CC5               u119_21:
  6187  04C4                     	goto	i1l2037
  6188  04C4  2CCA               u119_20:
  6189  04C5                     	
  6190                           i1l2035:	
  6191  04C5                     	btfss	(20),7	;volatile
  6192  04C5  1F94               	goto	u120_21
  6193  04C6  2CC8               	goto	u120_20
  6194  04C7  2CC9               u120_21:
  6195  04C8                     	goto	i1l2045
  6196  04C8  2CD2               u120_20:
  6197  04C9                     	goto	i1l2037
  6198  04C9  2CCA               	
  6199                           i1l126:	
  6200  04CA                     	line	66
  6201                           	
  6202                           i1l2037:	
  6203  04CA                     ;mainS1proyect.c: 66:            z = SSPBUF;
  6204                           	movf	(19),w	;volatile
  6205  04CA  0813               	movwf	(??_interrupciones+0)+0
  6206  04CB  00F0               	movf	(??_interrupciones+0)+0,w
  6207  04CC  0870               	movwf	(_z)
  6208  04CD  00F8               	line	67
  6209                           	
  6210                           i1l2039:	
  6211  04CE                     ;mainS1proyect.c: 67:            SSPCONbits.SSPOV = 0;
  6212                           	bcf	(20),6	;volatile
  6213  04CE  1314               	line	68
  6214                           	
  6215                           i1l2041:	
  6216  04CF                     ;mainS1proyect.c: 68:            SSPCONbits.WCOL = 0;
  6217                           	bcf	(20),7	;volatile
  6218  04CF  1394               	line	69
  6219                           	
  6220                           i1l2043:	
  6221  04D0                     ;mainS1proyect.c: 69:            SSPCONbits.CKP = 1;
  6222                           	bsf	(20),4	;volatile
  6223  04D0  1614               	goto	i1l2045
  6224  04D1  2CD2               	line	70
  6225                           ;mainS1proyect.c: 70:        }
  6226                           	
  6227                           i1l124:	
  6228  04D2                     	line	71
  6229                           	
  6230                           i1l2045:	
  6231  04D2                     ;mainS1proyect.c: 71:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  6232                           	bsf	status, 5	;RP0=1, select bank1
  6233  04D2  1683               	bcf	status, 6	;RP1=0, select bank1
  6234  04D3  1303               	btfsc	(148)^080h,5	;volatile
  6235  04D4  1A94               	goto	u121_21
  6236  04D5  2CD7               	goto	u121_20
  6237  04D6  2CD8               u121_21:
  6238  04D7                     	goto	i1l127
  6239  04D7  2CF7               u121_20:
  6240  04D8                     	
  6241                           i1l2047:	
  6242  04D8                     	btfsc	(148)^080h,2	;volatile
  6243  04D8  1914               	goto	u122_21
  6244  04D9  2CDB               	goto	u122_20
  6245  04DA  2CDC               u122_21:
  6246  04DB                     	goto	i1l127
  6247  04DB  2CF7               u122_20:
  6248  04DC                     	line	72
  6249                           	
  6250                           i1l2049:	
  6251  04DC                     ;mainS1proyect.c: 72:             z = SSPBUF;
  6252                           	bcf	status, 5	;RP0=0, select bank0
  6253  04DC  1283               	bcf	status, 6	;RP1=0, select bank0
  6254  04DD  1303               	movf	(19),w	;volatile
  6255  04DE  0813               	movwf	(??_interrupciones+0)+0
  6256  04DF  00F0               	movf	(??_interrupciones+0)+0,w
  6257  04E0  0870               	movwf	(_z)
  6258  04E1  00F8               	line	73
  6259                           	
  6260                           i1l2051:	
  6261  04E2                     ;mainS1proyect.c: 73:             PIR1bits.SSPIF = 0;
  6262                           	bcf	(12),3	;volatile
  6263  04E2  118C               	line	74
  6264                           	
  6265                           i1l2053:	
  6266  04E3                     ;mainS1proyect.c: 74:             SSPCONbits.CKP = 1;
  6267                           	bsf	(20),4	;volatile
  6268  04E3  1614               	line	75
  6269                           ;mainS1proyect.c: 75:             while(!SSPSTATbits.BF);
  6270                           	goto	i1l128
  6271  04E4  2CE5               	
  6272                           i1l129:	
  6273  04E5                     	
  6274                           i1l128:	
  6275  04E5                     	bsf	status, 5	;RP0=1, select bank1
  6276  04E5  1683               	bcf	status, 6	;RP1=0, select bank1
  6277  04E6  1303               	btfss	(148)^080h,0	;volatile
  6278  04E7  1C14               	goto	u123_21
  6279  04E8  2CEA               	goto	u123_20
  6280  04E9  2CEB               u123_21:
  6281  04EA                     	goto	i1l128
  6282  04EA  2CE5               u123_20:
  6283  04EB                     	goto	i1l2055
  6284  04EB  2CEC               	
  6285                           i1l130:	
  6286  04EC                     	line	76
  6287                           	
  6288                           i1l2055:	
  6289  04EC                     ;mainS1proyect.c: 76:             DUM = SSPBUF;
  6290                           	bcf	status, 5	;RP0=0, select bank0
  6291  04EC  1283               	bcf	status, 6	;RP1=0, select bank0
  6292  04ED  1303               	movf	(19),w	;volatile
  6293  04EE  0813               	movwf	(??_interrupciones+0)+0
  6294  04EF  00F0               	movf	(??_interrupciones+0)+0,w
  6295  04F0  0870               	movwf	(_DUM)
  6296  04F1  00F7               	line	77
  6297                           ;mainS1proyect.c: 77:             _delay((unsigned long)((250)*(500000/4000000.0)));
  6298                           	opt asmopt_push
  6299                           opt asmopt_off
  6300                           	movlw	10
  6301  04F2  300A               movwf	((??_interrupciones+0)+0),f
  6302  04F3  00F0               	u192_27:
  6303  04F4                     decfsz	(??_interrupciones+0)+0,f
  6304  04F4  0BF0               	goto	u192_27
  6305  04F5  2CF4               opt asmopt_pop
  6306                           
  6307                           	line	79
  6308                           ;mainS1proyect.c: 79:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  6309                           	goto	i1l131
  6310  04F6  2D1A               	
  6311                           i1l127:	
  6312  04F7                     	btfsc	(148)^080h,5	;volatile
  6313  04F7  1A94               	goto	u124_21
  6314  04F8  2CFA               	goto	u124_20
  6315  04F9  2CFB               u124_21:
  6316  04FA                     	goto	i1l131
  6317  04FA  2D1A               u124_20:
  6318  04FB                     	
  6319                           i1l2057:	
  6320  04FB                     	btfss	(148)^080h,2	;volatile
  6321  04FB  1D14               	goto	u125_21
  6322  04FC  2CFE               	goto	u125_20
  6323  04FD  2CFF               u125_21:
  6324  04FE                     	goto	i1l131
  6325  04FE  2D1A               u125_20:
  6326  04FF                     	line	80
  6327                           	
  6328                           i1l2059:	
  6329  04FF                     ;mainS1proyect.c: 80:            z = SSPBUF;
  6330                           	bcf	status, 5	;RP0=0, select bank0
  6331  04FF  1283               	bcf	status, 6	;RP1=0, select bank0
  6332  0500  1303               	movf	(19),w	;volatile
  6333  0501  0813               	movwf	(??_interrupciones+0)+0
  6334  0502  00F0               	movf	(??_interrupciones+0)+0,w
  6335  0503  0870               	movwf	(_z)
  6336  0504  00F8               	line	81
  6337                           	
  6338                           i1l2061:	
  6339  0505                     ;mainS1proyect.c: 81:            BF = 0;
  6340                           	bsf	status, 5	;RP0=1, select bank1
  6341  0505  1683               	bcf	status, 6	;RP1=0, select bank1
  6342  0506  1303               	bcf	(1184/8)^080h,(1184)&7	;volatile
  6343  0507  1014               	line	82
  6344                           ;mainS1proyect.c: 82:            SSPBUF = Abierto;
  6345                           	bcf	status, 5	;RP0=0, select bank0
  6346  0508  1283               	bcf	status, 6	;RP1=0, select bank0
  6347  0509  1303               	movf	(_Abierto),w
  6348  050A  0839               	movwf	(19)	;volatile
  6349  050B  0093               	line	83
  6350                           	
  6351                           i1l2063:	
  6352  050C                     ;mainS1proyect.c: 83:            SSPCONbits.CKP = 1;
  6353                           	bsf	(20),4	;volatile
  6354  050C  1614               	line	84
  6355                           ;mainS1proyect.c: 84:            _delay((unsigned long)((250)*(500000/4000000.0)));
  6356                           	opt asmopt_push
  6357                           opt asmopt_off
  6358                           	movlw	10
  6359  050D  300A               movwf	((??_interrupciones+0)+0),f
  6360  050E  00F0               	u193_27:
  6361  050F                     decfsz	(??_interrupciones+0)+0,f
  6362  050F  0BF0               	goto	u193_27
  6363  0510  2D0F               opt asmopt_pop
  6364                           
  6365                           	line	85
  6366                           ;mainS1proyect.c: 85:            while(SSPSTATbits.BF);
  6367                           	goto	i1l133
  6368  0511  2D12               	
  6369                           i1l134:	
  6370  0512                     	
  6371                           i1l133:	
  6372  0512                     	bsf	status, 5	;RP0=1, select bank1
  6373  0512  1683               	bcf	status, 6	;RP1=0, select bank1
  6374  0513  1303               	btfsc	(148)^080h,0	;volatile
  6375  0514  1814               	goto	u126_21
  6376  0515  2D17               	goto	u126_20
  6377  0516  2D18               u126_21:
  6378  0517                     	goto	i1l133
  6379  0517  2D12               u126_20:
  6380  0518                     	goto	i1l131
  6381  0518  2D1A               	
  6382                           i1l135:	
  6383  0519                     	goto	i1l131
  6384  0519  2D1A               	line	87
  6385                           ;mainS1proyect.c: 87:        }
  6386                           	
  6387                           i1l132:	
  6388  051A                     	
  6389                           i1l131:	
  6390  051A                     	line	89
  6391                           ;mainS1proyect.c: 89:        PIR1bits.SSPIF = 0;
  6392                           	bcf	status, 5	;RP0=0, select bank0
  6393  051A  1283               	bcf	status, 6	;RP1=0, select bank0
  6394  051B  1303               	bcf	(12),3	;volatile
  6395  051C  118C               	line	91
  6396                           ;mainS1proyect.c: 91:     }
  6397                           	
  6398                           i1l123:	
  6399  051D                     	line	94
  6400                           ;mainS1proyect.c: 94:     if (PIR1bits.ADIF){
  6401                           	btfss	(12),6	;volatile
  6402  051D  1F0C               	goto	u127_21
  6403  051E  2D20               	goto	u127_20
  6404  051F  2D21               u127_21:
  6405  0520                     	goto	i1l136
  6406  0520  2D30               u127_20:
  6407  0521                     	line	95
  6408                           	
  6409                           i1l2065:	
  6410  0521                     ;mainS1proyect.c: 95:         PIR1bits.ADIF = 0;
  6411                           	bcf	(12),6	;volatile
  6412  0521  130C               	line	96
  6413                           	
  6414                           i1l2067:	
  6415  0522                     ;mainS1proyect.c: 96:         res = ADRESH;
  6416                           	movf	(30),w	;volatile
  6417  0522  081E               	movwf	(??_interrupciones+0)+0
  6418  0523  00F0               	movf	(??_interrupciones+0)+0,w
  6419  0524  0870               	movwf	(_res)
  6420  0525  00F9               	line	97
  6421                           ;mainS1proyect.c: 97:         if (res < 155){
  6422                           	movlw	low(09Bh)
  6423  0526  309B               	subwf	(_res),w
  6424  0527  0279               	skipnc
  6425  0528  1803               	goto	u128_21
  6426  0529  2D2B               	goto	u128_20
  6427  052A  2D2C               u128_21:
  6428  052B                     	goto	i1l137
  6429  052B  2D2E               u128_20:
  6430  052C                     	line	98
  6431                           	
  6432                           i1l2069:	
  6433  052C                     ;mainS1proyect.c: 98:             PORTEbits.RE2 = 1;
  6434                           	bsf	(9),2	;volatile
  6435  052C  1509               	line	99
  6436                           ;mainS1proyect.c: 99:         }else{
  6437                           	goto	i1l138
  6438  052D  2D2F               	
  6439                           i1l137:	
  6440  052E                     	line	100
  6441                           ;mainS1proyect.c: 100:             PORTEbits.RE2 = 0;
  6442                           	bcf	(9),2	;volatile
  6443  052E  1109               	line	101
  6444                           ;mainS1proyect.c: 101:         }
  6445                           	
  6446                           i1l138:	
  6447  052F                     	line	102
  6448                           ;mainS1proyect.c: 102:         ADCON0bits.GO_nDONE = 1;
  6449                           	bsf	(31),1	;volatile
  6450  052F  149F               	line	103
  6451                           ;mainS1proyect.c: 103:     }
  6452                           	
  6453                           i1l136:	
  6454  0530                     	line	105
  6455                           ;mainS1proyect.c: 105:     if (INTCONbits.TMR0IF ){
  6456                           	btfss	(11),2	;volatile
  6457  0530  1D0B               	goto	u129_21
  6458  0531  2D33               	goto	u129_20
  6459  0532  2D34               u129_21:
  6460  0533                     	goto	i1l143
  6461  0533  2D4A               u129_20:
  6462  0534                     	line	106
  6463                           	
  6464                           i1l2071:	
  6465  0534                     ;mainS1proyect.c: 106:         INTCONbits.TMR0IF = 0;
  6466                           	bcf	(11),2	;volatile
  6467  0534  110B               	line	107
  6468                           	
  6469                           i1l2073:	
  6470  0535                     ;mainS1proyect.c: 107:         TMR0 = 61;
  6471                           	movlw	low(03Dh)
  6472  0535  303D               	movwf	(1)	;volatile
  6473  0536  0081               	line	109
  6474                           	
  6475                           i1l2075:	
  6476  0537                     ;mainS1proyect.c: 109:         if (PORTAbits.RA1 == 1){
  6477                           	btfss	(5),1	;volatile
  6478  0537  1C85               	goto	u130_21
  6479  0538  2D3A               	goto	u130_20
  6480  0539  2D3B               u130_21:
  6481  053A                     	goto	i1l140
  6482  053A  2D40               u130_20:
  6483  053B                     	line	110
  6484                           	
  6485                           i1l2077:	
  6486  053B                     ;mainS1proyect.c: 110:             CCPR1L = 15;
  6487                           	movlw	low(0Fh)
  6488  053B  300F               	movwf	(21)	;volatile
  6489  053C  0095               	line	111
  6490                           	
  6491                           i1l2079:	
  6492  053D                     ;mainS1proyect.c: 111:             Abierto = 1;
  6493                           	clrf	(_Abierto)
  6494  053D  01B9               	incf	(_Abierto),f
  6495  053E  0AB9               	line	112
  6496                           ;mainS1proyect.c: 112:         } else if (PORTAbits.RA2 == 1){
  6497                           	goto	i1l143
  6498  053F  2D4A               	
  6499                           i1l140:	
  6500  0540                     	btfss	(5),2	;volatile
  6501  0540  1D05               	goto	u131_21
  6502  0541  2D43               	goto	u131_20
  6503  0542  2D44               u131_21:
  6504  0543                     	goto	i1l143
  6505  0543  2D4A               u131_20:
  6506  0544                     	line	113
  6507                           	
  6508                           i1l2081:	
  6509  0544                     ;mainS1proyect.c: 113:             CCPR1L = 6;
  6510                           	movlw	low(06h)
  6511  0544  3006               	movwf	(21)	;volatile
  6512  0545  0095               	line	114
  6513                           	
  6514                           i1l2083:	
  6515  0546                     ;mainS1proyect.c: 114:             Abierto = 0;
  6516                           	clrf	(_Abierto)
  6517  0546  01B9               	goto	i1l143
  6518  0547  2D4A               	line	115
  6519                           ;mainS1proyect.c: 115:         }
  6520                           	
  6521                           i1l142:	
  6522  0548                     	goto	i1l143
  6523  0548  2D4A               	
  6524                           i1l141:	
  6525  0549                     	goto	i1l143
  6526  0549  2D4A               	line	118
  6527                           ;mainS1proyect.c: 118:     }
  6528                           	
  6529                           i1l139:	
  6530  054A                     	line	121
  6531                           	
  6532                           i1l143:	
  6533  054A                     	movf	(??_interrupciones+2),w
  6534  054A  0872               	movwf	pclath
  6535  054B  008A               	swapf	(??_interrupciones+1)^0FFFFFF80h,w
  6536  054C  0E71               	movwf	status
  6537  054D  0083               	swapf	saved_w,f
  6538  054E  0EFE               	swapf	saved_w,w
  6539  054F  0E7E               	retfie
  6540  0550  0009               	opt stack 0
  6541                           GLOBAL	__end_of_interrupciones
  6542                           	__end_of_interrupciones:
  6543  0551                     	signat	_interrupciones,89
  6544                           global	___latbits
  6545                           ___latbits	equ	2
  6546  0002                     	global	btemp
  6547                           	btemp set 07Eh
  6548  007E                     
  6549                           	DABS	1,126,2	;btemp
  6550                           	global	wtemp0
  6551                           	wtemp0 set btemp+0
  6552  007E                     	end


Data Sizes:
    Strings     155
    Constant    0
    Data        5
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80     18      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_11(CODE[11]), STR_10(CODE[16]), STR_9(CODE[17]), STR_8(CODE[17]), 
		 -> STR_7(CODE[10]), STR_6(CODE[16]), STR_5(CODE[15]), STR_4(CODE[8]), 
		 -> STR_3(CODE[16]), STR_2(CODE[12]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init_8bits
    _main->_Lcd_Set_Cursor_8bits
    _main->_Lcd_Write_Char
    _main->_funcAdc
    _main->_switch_press_scan
    _switch_press_scan->_keypad_scanner
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor_8bits->_Lcd_Cmd_8bits
    _Lcd_Init_8bits->_Lcd_Cmd_8bits
    _Lcd_Clear_8bits->_Lcd_Cmd_8bits

Critical Paths under _interrupciones in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char

Critical Paths under _interrupciones in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupciones in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupciones in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupciones in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    4395
                                              8 BANK0     10    10      0
                     _I2C_Slave_Init
                         _InitKeypad
                    _Lcd_Clear_8bits
                     _Lcd_Init_8bits
               _Lcd_Set_Cursor_8bits
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            _PWMconf
                            _funcAdc
                               _init
                            _initOsc
                           _initTMR0
                     _keypad_scanner
                  _switch_press_scan
 ---------------------------------------------------------------------------------
 (1) _switch_press_scan                                    2     2      0      46
                                              5 COMMON     2     2      0
                     _keypad_scanner
 ---------------------------------------------------------------------------------
 (2) _keypad_scanner                                       2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initTMR0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _funcAdc                                              5     3      2     273
                                              3 COMMON     4     2      2
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWMconf                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2    2074
                                              3 BANK0      5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       6     4      2     527
                                              4 COMMON     3     1      2
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     124
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_8bits                                 2     1      1    1022
                                              5 COMMON     2     1      1
                      _Lcd_Cmd_8bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init_8bits                                       2     2      0      22
                                              5 COMMON     2     2      0
                      _Lcd_Cmd_8bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_8bits                                      0     0      0      22
                      _Lcd_Cmd_8bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd_8bits                                        2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitKeypad                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupciones                                       3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _InitKeypad
   _Lcd_Clear_8bits
     _Lcd_Cmd_8bits
   _Lcd_Init_8bits
     _Lcd_Cmd_8bits
   _Lcd_Set_Cursor_8bits
     _Lcd_Cmd_8bits
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _PWMconf
   _funcAdc
   _init
   _initOsc
   _initTMR0
   _keypad_scanner
   _switch_press_scan
     _keypad_scanner

 _interrupciones (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      25       5       46.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      30      12        0.0%
ABS                  0      0      30       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Mar 12 18:16:31 2020

                            _a 0037                              _i 003C                              _z 0078  
                            pc 0002                    __CFG_CP$OFF 0000                    _SSPSTATbits 0094  
                           _BF 04A0                             fsr 0004         __end_of_interrupciones 0551  
                          l150 00E1                            l303 079D                            l151 01EB  
                          l400 03CB                            l160 01EA                            l152 00F1  
                          l321 06BB                            l401 03E6                            l161 01EC  
                          l153 0110                            l306 07B7                            l410 040C  
                          l402 03DC                            l162 022D                            l154 013F  
                          l315 071C                            l171 078D                            l411 040C  
                          l403 03DC                            l163 021B                            l155 01E1  
                          l316 072B                            l260 06F7                            l412 0413  
                          l404 03E3                            l164 022D                            l156 016C  
                          l148 00B8                            l421 07C0                            l317 072A  
                          l261 06FD                            l405 03FE                            l165 0234  
                          l157 01E0                            l149 00B9                            l318 072B  
                          l262 06FE                            l174 0745                            l182 05FB  
                          l190 05E8                            l406 03F4                            l350 0298  
                          l166 0280                            l158 01CA                            l263 0704  
                          l191 05EE                            l183 05C4                            l407 03F4  
                          l351 029F                            l415 076E                            l167 0281  
                          l159 01ED                            l248 075F                            l264 0705  
                          l440 058B                            l192 05F4                            l184 061D  
                          l408 03FB                            l360 02CF                            l352 0418  
                          l416 0765                            l168 0281                            l265 070B  
                          l441 0576                            l193 061E                            l185 05CA  
                          l177 07AA                            l409 0416                            l361 02EA  
                          l353 02BA                            l417 0775                            l266 070D  
                          l450 05C1                            l442 059E                            l434 0562  
                          l186 05D0                            l370 0314                            l362 02E0  
                          l354 02B0                            l418 0777                            l267 070D  
                          l259 06F4                            l291 06DC                            l443 057B  
                          l435 0555                            l187 05D6                            l371 0314  
                          l363 02E0                            l355 02B0                            l292 06C2  
                          l444 0580                            l436 0575                            l188 05DC  
                          l380 034B                            l372 031B                            l364 02E7  
                          l356 02B7                            l348 02A2                            l285 065B  
                          l293 06EA                            l445 0585                            l437 0558  
                          l189 05E2                            l381 036A                            l373 0336  
                          l365 0306                            l357 02D2                            l349 0298  
                          l286 0670                            l294 06EA                            l446 05A8  
                          l438 055B                            l390 0390                            l382 0360  
                          l374 032C                            l366 02FC                            l358 02C8  
                          l287 066F                            l447 059F                            l439 055E  
                          l391 0390                            l383 0360                            l375 032C  
                          l367 02FC                            l359 02C8                            l288 0670  
                          l448 05B5                            l392 0397                            l384 0367  
                          l376 0333                            l368 0303                            l449 05A3  
                          l393 03B2                            l385 0382                            l377 034E  
                          l369 031E                            l394 03A8                            l386 0378  
                          l378 0344                            l395 03A8                            l387 0378  
                          l379 0344                            l396 03AF                            l388 037F  
                          l397 03CE                            l389 039A                            l398 03C4  
                          l399 03C4                            _GIE 005F                            _RD0 0040  
                          _RD1 0041                            _RD2 0042                            _RD3 0043  
                          _RD4 0044                            _RD5 0045                            _RD6 0046  
                          _RD7 0047                            _DUM 0077                            _PR2 0092  
                 __CFG_CPD$OFF 0000                            u900 02F2                            u820 028E  
                          u901 02F1                            u821 028D                            u910 0302  
                          u830 029E                            u911 0301                            u831 029D  
                          u920 030A                            u840 02A6                            u921 0309  
                          u841 02A5                            u930 031A                            u850 02B6  
                          u931 0319                            u851 02B5                            u940 0322  
                          u860 02BE                            u941 0321                            u861 02BD  
                          u950 0332                            u870 02CE                            u951 0331  
                          u871 02CD                            u960 033A                            u880 02D6  
                          u961 0339                            u881 02D5                            u970 034A  
                          u890 02E6                            u971 0349                            u891 02E5  
                          u980 0356                            u981 0355                            u990 0366  
                          u991 0365                            _res 0079                            fsr0 0004  
                          indf 0000                   __CFG_LVP$OFF 0000        __size_of_Lcd_Init_8bits 004B  
                         l2001 0722                           l2011 0760                           l2013 0765  
                         l2015 076E                           l2017 0775                           l2019 0777  
                         l2311 06EC                           l2313 06F0                           l2321 0622  
                         l2315 06FB                           l2331 0645                           l2323 0629  
                         l2411 0089                           l2403 0043                           l2317 0702  
                         l2341 0657                           l2333 0648                           l2325 0633  
                         l2501 0267                           l2421 00CD                           l2413 009D  
                         l2405 0048                           l2319 0709                           l2351 066B  
                         l2335 064B                           l2327 0634                           l2343 065B  
                         l2503 0275                           l2431 00FB                           l2423 00D5  
                         l2415 00AC                           l2407 004E                           l2345 0662  
                         l2337 0651                           l2329 0642                           l2361 058B  
                         l2353 0554                           l1801 03AF                           l2505 027A  
                         l2441 0131                           l2433 0103                           l2425 00EB  
                         l2417 00B1                           l2409 007D                           l2347 0663  
                         l2339 0654                           l2363 05A7                           l2355 0561  
                         l1811 03D2                           l1803 03B1                           l1731 0284  
                         l2507 027E                           l2451 014E                           l2443 0137  
                         l2435 0110                           l2427 00F5                           l2419 00B9  
                         l2349 0665                           l2365 05A8                           l2357 0562  
                         l1821 03FD                           l1813 03E3                           l1805 03BA  
                         l1741 02B7                           l1733 028E                           l2461 0183  
                         l2453 0159                           l2445 013E                           l2437 011A  
                         l2429 00F6                           l2391 06DC                           l1911 0734  
                         l2359 058A                           l1831 0418                           l1823 0402  
                         l1815 03E5                           l1807 03CB                           l1751 02D6  
                         l1743 02B9                           l1735 029F                           l2463 018D  
                         l2471 01CA                           l2455 015D                           l2447 013F  
                         l2439 0125                           l1833 078F                           l2385 06BF  
                         l1921 073B                           l1913 0735                           l1905 072C  
                         l1841 0778                           l1825 0413                           l1817 03EA  
                         l1809 03CD                           l1761 0305                           l1753 02E7  
                         l1745 02BE                           l1737 02A1                           l2481 01FA  
                         l2473 01D2                           l2465 019A                           l2457 016B  
                         l2449 0148                           l1835 0792                           l2387 06C2  
                         l1931 0740                           l1923 073C                           l1915 0736  
                         l1907 072F                           l1851 0780                           l1843 077B  
                         l1827 0415                           l1819 03FB                           l1771 0333  
                         l1763 030A                           l1755 02E9                           l1747 02CF  
                         l1739 02A6                           l2491 0234                           l2483 0206  
                         l2467 01A6                           l2459 016C                           l2475 01E1  
                         l1837 0794                           l1941 067D                           l2389 06D3  
                         l1933 0741                           l1925 073D                           l1917 0737  
                         l1909 0731                           l2661 05B0                           l1861 0789  
                         l1853 0783                           l1845 077D                           l1829 0416  
                         l1781 0356                           l1773 0335                           l1765 031B  
                         l1757 02F2                           l1749 02D1                           l2493 0241  
                         l2485 021B                           l2477 01E9                           l2469 01BA  
                         l1839 079A                           l1951 0698                           l1943 0683  
                         l1935 0742                           l1927 073E                           l1919 0738  
                         l1863 078A                           l1855 0784                           l1847 077E  
                         l2655 0603                           l1871 05FA                           l1791 0381  
                         l1783 0367                           l1775 033A                           l1767 031D  
                         l1759 0303                           l2495 024D                           l2487 0225  
                         l2479 01ED                           l1961 06B5                           l1953 069D  
                         l1945 0687                           l1937 0671                           l1929 073F  
                         l2657 056A                           l1865 078B                           l1857 0785  
                         l1849 077F                           l1873 05FB                           l1793 0386  
                         l1785 0369                           l1777 034B                           l1769 0322  
                         l2497 0261                           l2489 022C                           l1963 07B8  
                         l1955 06A3                           l1947 068D                           l1939 0674  
                         l2659 0593                           l1867 078D                           l1859 0788  
                         l1971 07A6                           l1795 0397                           l1787 036E  
                         l1779 034D                           l2499 0265                           l1981 0755  
                         l1965 07BB                           l1957 06A9                           l1949 0692  
                         l1869 05C3                           l1973 07A7                           l1797 0399  
                         l1789 037F                           l1991 075C                           l1983 0756  
                         l1967 07BF                           l1959 06AF                           l1975 07A8  
                         l1799 039E                           l1985 0757                           l1993 07AB  
                         l1977 07AA                           l1969 079E                           l1987 0758  
                         l1979 0747                           l1995 070F                           l1989 0759  
                         l1997 0714                           l1999 071C                           STR_1 0430  
                         STR_2 0491                           STR_3 0462                           STR_4 04B2  
                         STR_5 0482                           STR_6 0452                           STR_7 04A8  
                         STR_8 041F                           STR_9 0441                           u1000 036E  
                         u1001 036D                           u1010 037E                           u1011 037D  
                         u1100 03EA                           u1020 0386                           u1101 03E9  
                         u1021 0385                           u1110 03FA                           u1030 0396  
                         u1111 03F9                           u1031 0395                           u1120 0402  
                         u1040 039E                           u1121 0401                           u1041 039D  
                         u1130 0412                           u1050 03AE                           u1131 0411  
                         u1051 03AD                           u1140 0714                           u1060 03BA  
                         u1141 0713                           u1061 03B9                           u1150 0722  
                         u1070 03CA                           u1151 0721                           u1071 03C9  
                         u1080 03D2                           u1081 03D1                           u1090 03E2  
                         u1170 0774                           u1091 03E1                           u1171 0773  
                         u1510 0662                           u1511 0661                           u1520 06E9  
                         u1600 022B                           u1505 0637                           u1521 06E8  
                         u1601 022A                           u1450 06F0                           u1610 0233  
                         u1530 00F1                           u1451 06EF                           u1611 0232  
                         u1531 00F0                           u1460 06FB                           u1540 013D  
                         u1461 06FA                           u1541 013C                           u1470 0702  
                         u1550 014E                           u1471 0701                           u1551 014D  
                         u1480 0709                           u1560 016A                           u1481 0708  
                         u1561 0169                           u1490 0629                           u1570 018D  
                         u1491 0628                           u1707 0292                           u1571 018C  
                         u1580 01DF                           u1717 02AA                           u1581 01DE  
                         u1565 0166                           u1590 01E8                           u1807 038A  
                         u1727 02C2                           u1591 01E7                           u1575 0189  
                         u1817 03A2                           u1737 02DA                           u1585 01DB  
                         u1907 069A                           u1827 03BE                           u1747 02F6  
                         u1667 00A5                           u1917 0797                           u1837 03D6  
                         u1757 030E                           u1677 0154                           u1847 03EE  
                         u1767 0326                           u1687 01C2                           u1857 0406  
                         u1777 033E                           u1697 026F                           u1867 0668  
                         u1787 035A                           _PEIE 005E                           u1877 0678  
                         u1797 0372                           u1887 0685                           u1897 068F  
                         _TMR0 0001                   __CFG_WRT$OFF 0000              ?_Lcd_Write_String 0023  
                         _cont 003D                           _main 0043                           _init 0778  
                         btemp 007E                  __CFG_BOREN$ON 0000                           start 000C  
              __end_of_PWMconf 0746             ??_Lcd_Write_String 0077                  __CFG_IESO$OFF 0000  
                __CFG_MCLRE$ON 0000                ?_interrupciones 0070                          ?_main 0070  
                        ?_init 0070                          STR_10 0472                          STR_11 049D  
                __CFG_WDTE$OFF 0000              ??_Lcd_Clear_8bits 0075                          _ANSEL 0188  
                        i1l130 04EC                          i1l131 051A                          i1l123 051D  
                        i1l140 0540                          i1l132 051A                          i1l124 04D2  
                        i1l141 0549                          i1l133 0512                          i1l142 0548  
                        i1l134 0512                          i1l126 04CA                          i1l143 054A  
                        i1l135 0519                          i1l127 04F7                          i1l136 0530  
                        i1l128 04E5                          i1l137 052E                          i1l129 04E5  
                        i1l138 052F                          i1l139 054A                          _PORTA 0005  
                        _PORTB 0006                          _PORTC 0007                          _PORTD 0008  
                        _PORTE 0009                          _TRISA 0085                          _TRISB 0086  
                        _TRISC 0087                          _TRISD 0088                          _SSPIE 0463  
                        _TRISE 0089                          _SSPIF 0063           Lcd_Write_String@modo 0023  
               __CFG_FCMEN$OFF 0000          __end_of_Lcd_Cmd_8bits 079E               ??_keypad_scanner 0073  
              __end_of_funcAdc 05C2                __end_of_initOsc 061F                          main@i 002F  
                        pclath 000A                          status 0003                          wtemp0 007E  
                  funcAdc@anaP 0073                    funcAdc@divD 0020                    funcAdc@just 0074  
             __end_of_Lcd_Port 070E                     _InitKeypad 07B8                __initialization 000F  
                 __end_of_main 0284                   __end_of_init 078E  __size_of_Lcd_Set_Cursor_8bits 001E  
                       ??_main 0028                         ??_init 0073                         _ADRESH 001E  
                       _CCPR1L 0015                         _ANSELH 0189                      ??_PWMconf 0073  
                       i1l2031 04BA                         i1l2041 04CF                         i1l2033 04C0  
                       i1l2051 04E2                         i1l2043 04D0                         i1l2035 04C5  
                       i1l2061 0505                         i1l2053 04E3                         i1l2045 04D2  
                       i1l2037 04CA                         i1l2071 0534                         i1l2063 050C  
                       i1l2055 04EC                         i1l2047 04D8                         i1l2039 04CE  
                       u120_20 04C9                         i1l2081 0544                         i1l2073 0535  
                       i1l2065 0521                         i1l2057 04FB                         i1l2049 04DC  
                       u120_21 04C8                         i1l2083 0546                         i1l2075 0537  
                       i1l2067 0522                         i1l2059 04FF                         i1l2077 053B  
                       i1l2069 052C                         i1l2079 053D                         u121_20 04D8  
                       u121_21 04D7                         u130_20 053B                         u122_20 04DC  
                       u130_21 053A                         u122_21 04DB                         u131_20 0544  
                       u123_20 04EB                         u131_21 0543                         u123_21 04EA  
                       u124_20 04FB                         u124_21 04FA                         u125_20 04FF  
                       u125_21 04FE                         u126_20 0518                         u118_20 04C0  
                       u126_21 0517                         u118_21 04BF                         u127_20 0521  
                       u119_20 04C5                         u127_21 0520                         u119_21 04C4  
                       u128_20 052C                         u128_21 052B                         u129_20 0534  
                       u129_21 0533                         u192_27 04F4                         u193_27 050F  
                  initOsc@frec 0075        __size_of_Lcd_Write_Char 0052                         _SSPADD 0093  
                       _TRISC3 043B                         _TRISC4 043C                         _SSPBUF 0013  
                       _SSPCON 0014                 __CFG_PWRTE$OFF 0000               __end_of_initTMR0 07AB  
                       _conteo 007A                         _valor1 003B                         _valor2 003A  
                    ??_funcAdc 0075                      ??_initOsc 0073                         saved_w 007E  
               _Lcd_Init_8bits 0671        __end_of__initialization 003F                    ?_InitKeypad 0070  
               __pcstackCOMMON 0070                   __pidataBANK0 07C1        __size_of_I2C_Slave_Init 001A  
       __end_of_Lcd_Init_8bits 06BC                      ?_Lcd_Port 0070          I2C_Slave_Init@address 0073  
                   __pbssBANK0 0032                _Lcd_Clear_8bits 07AB                     __pmaintext 0043  
             ??_interrupciones 0070                     __pintentry 0004      __size_of_Lcd_Write_String 002F  
              ?_Lcd_Init_8bits 0070            __size_of_InitKeypad 0009                     ??_Lcd_Port 0073  
                      _SSPCON2 0091                        _SSPSTAT 0094                     __stringtab 0419  
                      _Abierto 0039                        _PWMconf 072C                      ?_initTMR0 0070  
               _Lcd_Write_Char 061F                     _contrasena 0040                      _ANSELbits 0188  
                      __ptext1 0760                        __ptext2 0284                        __ptext3 079E  
                      __ptext4 05C2                        __ptext5 0778                        __ptext6 0551  
                      __ptext7 072C                        __ptext8 06BC                        __ptext9 061F  
                      _compara 0032                        _funcAdc 0551                        _initOsc 05C2  
                    _T2CONbits 0012                        main@Key 0031   __end_of_Lcd_Set_Cursor_8bits 072C  
       __end_of_Lcd_Write_Char 0671           end_of_initialization 003F                     ??_initTMR0 0073  
      __end_of_Lcd_Clear_8bits 07B8                 _I2C_Slave_Init 0746         __size_of_Lcd_Cmd_8bits 0010  
                    Lcd_Port@a 0073                      _PORTAbits 0005                      _PORTBbits 0006  
                    _PORTEbits 0009                      _TRISCbits 0087           switch_press_scan@key 0076  
              ?_Lcd_Write_Char 0074              Lcd_Write_String@a 0027              Lcd_Write_String@i 0025  
                  _CCP1CONbits 0017                     main@valor1 002B                     main@valor2 002D  
      __size_of_keypad_scanner 0195         __end_of_I2C_Slave_Init 0760                   ??_InitKeypad 0073  
             _Lcd_Write_String 06BC            start_initialization 000F                  _Lcd_Cmd_8bits 078E  
           __end_of_InitKeypad 07C1          Lcd_Set_Cursor_8bits@x 0075          Lcd_Set_Cursor_8bits@y 0076  
            __size_of_Lcd_Port 0023               ?_Lcd_Clear_8bits 0070       __CFG_FOSC$INTRC_NOCLKOUT 0000  
              ?_I2C_Slave_Init 0070           _Lcd_Set_Cursor_8bits 070E                    __pdataBANK0 0040  
              Lcd_Write_Char@a 0022                Lcd_Write_Char@y 0021               ??_Lcd_Init_8bits 0075  
                  __pbssCOMMON 0077                      ___latbits 0002                  __pcstackBANK0 0020  
               ?_Lcd_Cmd_8bits 0070                       ?_PWMconf 0070              __size_of_initTMR0 000D  
        ?_Lcd_Set_Cursor_8bits 0075                      __pstrings 0419                      _contraAct 003E  
                     ?_funcAdc 0073                       ?_initOsc 0070              interrupt_function 0004  
               _keypad_scanner 0284                       _PIE1bits 008C                       _PIR1bits 000C  
            _switch_press_scan 0760                     _ADCON0bits 001F                    __stringbase 041E  
                   _ADCON1bits 009F             ?_switch_press_scan 0070        __size_of_interrupciones 0097  
              ??_Lcd_Cmd_8bits 0073               ??_Lcd_Write_Char 0076            ??_switch_press_scan 0075  
                     _Lcd_Port 06EB       __end_of_Lcd_Write_String 06EB         __end_of_keypad_scanner 0419  
             __size_of_PWMconf 001A         ??_Lcd_Set_Cursor_8bits 0076      __end_of_switch_press_scan 0778  
           __end_of__stringtab 041F               __size_of_funcAdc 0071               __size_of_initOsc 005D  
                     __ptext10 06EB                       __ptext11 070E                       __ptext12 0671  
                     __ptext13 07AB                       __ptext14 078E                       __ptext15 07B8  
                     __ptext16 0746                       __ptext17 04BA              __CFG_BOR4V$BOR40V 0000  
             ??_I2C_Slave_Init 0073                       _initTMR0 079E                ?_keypad_scanner 0070  
                __size_of_main 0241                  __size_of_init 0016           Lcd_Cmd_8bits@comando 0074  
                     _numerito 003F                     _INTCONbits 000B             Lcd_Write_Char@modo 0074  
           Lcd_Write_Char@temp 0020                       intlevel1 0000                      stringcode 0419  
                   _OSCCONbits 008F       __size_of_Lcd_Clear_8bits 000D     __size_of_switch_press_scan 0018  
                   _OPTION_REG 0081                 _interrupciones 04BA                       stringdir 0419  
                     stringtab 0419                    _SSPCON2bits 0091                     _SSPCONbits 0014  
