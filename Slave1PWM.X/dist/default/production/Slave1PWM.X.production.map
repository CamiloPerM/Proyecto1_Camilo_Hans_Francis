Microchip MPLAB XC8 Compiler V2.00 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.00\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\Slave1PWM.X.production.sym \
  --cmf=dist/default/production\Slave1PWM.X.production.cmf -z -Q16F887 \
  -oC:\Users\DIBUJO~1\AppData\Local\Temp\sm9c.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Slave1PWM.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\DIBUJO~1\AppData\Local\Temp\sm9c.o \
  dist/default/production\Slave1PWM.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\DIBUJO~1\AppData\Local\Temp\sm9c.o
                end_init                              C        C        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2     400E       0
dist/default/production\Slave1PWM.X.production.o
                cinit                                 F        F       32        8       0
                intentry                              4        4        8        8       0
                text15                              689      689       1D      95C       0
                text14                              70B      70B        9      95C       0
                text13                              6EE      6EE       10      95C       0
                text12                              6FE      6FE        D      95C       0
                text11                              5CE      5CE       4B      95C       0
                text10                              66B      66B       1E      95C       0
                text9                               648      648       23      95C       0
                text8                               57C      57C       52      95C       0
                text7                               619      619       2F      95C       0
                text6                               6A6      6A6       1A      95C       0
                text5                               4AE      4AE       71      95C       0
                text4                               6D8      6D8       16      95C       0
                text3                               51F      51F       5D      95C       0
                text2                               274      274      195        8       0
                text1                               6C0      6C0       18      95C       0
                maintext                             41       41      233        8       0
                cstackBANK0                          20       20       12       20       1
                cstackCOMMON                         70       70        7       70       1
                dataBANK0                            3E       3E        5       20       1
                bssBANK0                             32       32        C       20       1
                bssCOMMON                            77       77        4       70       1
                strings                             409      409       A5      812       0
                idataBANK0                          714      714        5      95C       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              C        C        3         0
                cinit                                 F        F       32         0
                intentry                              4        4        8         0
                reset_vec                             0        0        3         0
                text15                              689      689       1D         0
                text14                              70B      70B        9         0
                text13                              6EE      6EE       10         0
                text12                              6FE      6FE        D         0
                text11                              5CE      5CE       4B         0
                text10                              66B      66B       1E         0
                text9                               648      648       23         0
                text8                               57C      57C       52         0
                text7                               619      619       2F         0
                text6                               6A6      6A6       1A         0
                text5                               4AE      4AE       71         0
                text4                               6D8      6D8       16         0
                text3                               51F      51F       5D         0
                text2                               274      274      195         0
                text1                               6C0      6C0       18         0
                maintext                             41       41      233         0
                idataBANK0                          714      714        5         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             409      409       A5         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        7         1
                bssCOMMON                            77       77        4         1

        CLASS   BANK0          
                cstackBANK0                          20       20       12         1
                dataBANK0                            3E       3E        5         1
                bssBANK0                             32       32        C         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  000405  000409         8       0  CODE        2
                cstackBANK0                    000020  000023  000043        20       1  BANK0       1
                cstackCOMMON                   000070  00000B  00007B        70       1  COMMON      1
                strings                        000409  0000A5  0004AE       812       0  STRING      2
                text5                          0004AE  00026B  000719       95C       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0043-006F             2D           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         0719-1FFF            800
        COMMON           007B-007D              3           1
        CONST            0003-0003              1           2
                         0719-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         0719-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0043-006F             2D           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         0719-1FFF           18E7
        STRING           0003-0003              1           2
                         0719-1FFF            100

                                  Symbol Table

Lcd_Cmd_8bits@comando          cstackCOMMON 0074
Lcd_Port@a                     cstackCOMMON 0073
Lcd_Set_Cursor_8bits@x         cstackCOMMON 0075
Lcd_Set_Cursor_8bits@y         cstackCOMMON 0076
Lcd_Write_Char@a               cstackBANK0  0022
Lcd_Write_Char@modo            cstackCOMMON 0074
Lcd_Write_Char@temp            cstackBANK0  0020
Lcd_Write_Char@y               cstackBANK0  0021
Lcd_Write_String@a             cstackBANK0  0027
Lcd_Write_String@i             cstackBANK0  0025
Lcd_Write_String@modo          cstackBANK0  0023
_ADCON0bits                    (abs)        001F
_ADCON1bits                    (abs)        009F
_ADRESH                        (abs)        001E
_ANSEL                         (abs)        0188
_ANSELH                        (abs)        0189
_ANSELbits                     (abs)        0188
_CCP1CONbits                   (abs)        0017
_CCPR1L                        (abs)        0015
_GIE                           (abs)        005F
_INTCONbits                    (abs)        000B
_InitKeypad                    text14       070B
_Lcd_Clear_8bits               text12       06FE
_Lcd_Cmd_8bits                 text13       06EE
_Lcd_Init_8bits                text11       05CE
_Lcd_Port                      text9        0648
_Lcd_Set_Cursor_8bits          text10       066B
_Lcd_Write_Char                text8        057C
_Lcd_Write_String              text7        0619
_OPTION_REG                    (abs)        0081
_OSCCONbits                    (abs)        008F
_PEIE                          (abs)        005E
_PIE1bits                      (abs)        008C
_PIR1bits                      (abs)        000C
_PORTA                         (abs)        0005
_PORTB                         (abs)        0006
_PORTBbits                     (abs)        0006
_PORTC                         (abs)        0007
_PORTD                         (abs)        0008
_PORTE                         (abs)        0009
_PORTEbits                     (abs)        0009
_PR2                           (abs)        0092
_PWMconf                       text6        06A6
_RD0                           (abs)        0040
_RD1                           (abs)        0041
_RD2                           (abs)        0042
_RD3                           (abs)        0043
_RD4                           (abs)        0044
_RD5                           (abs)        0045
_RD6                           (abs)        0046
_RD7                           (abs)        0047
_SSPADD                        (abs)        0093
_SSPBUF                        (abs)        0013
_SSPCON                        (abs)        0014
_SSPCON2                       (abs)        0091
_SSPCON2bits                   (abs)        0091
_SSPIE                         (abs)        0463
_SSPIF                         (abs)        0063
_SSPSTAT                       (abs)        0094
_T2CONbits                     (abs)        0012
_TRISA                         (abs)        0085
_TRISB                         (abs)        0086
_TRISC                         (abs)        0087
_TRISC3                        (abs)        043B
_TRISC4                        (abs)        043C
_TRISCbits                     (abs)        0087
_TRISD                         (abs)        0088
_TRISE                         (abs)        0089
__CFG_BOR4V$BOR40V             (abs)        0000
__CFG_BOREN$ON                 (abs)        0000
__CFG_CP$OFF                   (abs)        0000
__CFG_CPD$OFF                  (abs)        0000
__CFG_FCMEN$OFF                (abs)        0000
__CFG_FOSC$INTRC_NOCLKOUT      (abs)        0000
__CFG_IESO$OFF                 (abs)        0000
__CFG_LVP$OFF                  (abs)        0000
__CFG_MCLRE$ON                 (abs)        0000
__CFG_PWRTE$OFF                (abs)        0000
__CFG_WDTE$OFF                 (abs)        0000
__CFG_WRT$OFF                  (abs)        0000
__Habs1                        abs1         0000
__Hbank0                       bank0        0000
__Hbank1                       bank1        0000
__Hbank2                       bank2        0000
__Hbank3                       bank3        0000
__HbssBANK0                    bssBANK0     0000
__HbssCOMMON                   bssCOMMON    0000
__Hcinit                       cinit        0041
__Hclrtext                     clrtext      0000
__Hcode                        code         0000
__Hcommon                      common       0000
__Hconfig                      config       2009
__HcstackBANK0                 cstackBANK0  0000
__HcstackCOMMON                cstackCOMMON 0000
__HdataBANK0                   dataBANK0    0000
__Heeprom_data                 eeprom_data  0000
__Hend_init                    end_init     000F
__Hfunctab                     functab      0000
__HidataBANK0                  idataBANK0   0000
__Hidloc                       idloc        0000
__Hinit                        init         000C
__Hintentry                    intentry     000C
__Hmaintext                    maintext     0000
__Hpowerup                     powerup      0000
__Hram                         ram          0000
__Hreset_vec                   reset_vec    0003
__Hsfr0                        sfr0         0000
__Hsfr1                        sfr1         0000
__Hsfr2                        sfr2         0000
__Hsfr3                        sfr3         0000
__Hspace_0                     (abs)        2009
__Hspace_1                     (abs)        007B
__Hspace_2                     (abs)        0000
__Hspace_3                     (abs)        0000
__Hstack                       stack        0000
__Hstrings                     strings      0000
__Htext                        text         0000
__Labs1                        abs1         0000
__Lbank0                       bank0        0000
__Lbank1                       bank1        0000
__Lbank2                       bank2        0000
__Lbank3                       bank3        0000
__LbssBANK0                    bssBANK0     0000
__LbssCOMMON                   bssCOMMON    0000
__Lcinit                       cinit        000F
__Lclrtext                     clrtext      0000
__Lcode                        code         0000
__Lcommon                      common       0000
__Lconfig                      config       2007
__LcstackBANK0                 cstackBANK0  0000
__LcstackCOMMON                cstackCOMMON 0000
__LdataBANK0                   dataBANK0    0000
__Leeprom_data                 eeprom_data  0000
__Lend_init                    end_init     000C
__Lfunctab                     functab      0000
__LidataBANK0                  idataBANK0   0000
__Lidloc                       idloc        0000
__Linit                        init         000C
__Lintentry                    intentry     0004
__Lmaintext                    maintext     0000
__Lpowerup                     powerup      0000
__Lram                         ram          0000
__Lreset_vec                   reset_vec    0000
__Lsfr0                        sfr0         0000
__Lsfr1                        sfr1         0000
__Lsfr2                        sfr2         0000
__Lsfr3                        sfr3         0000
__Lspace_0                     (abs)        0000
__Lspace_1                     (abs)        0000
__Lspace_2                     (abs)        0000
__Lspace_3                     (abs)        0000
__Lstack                       stack        0000
__Lstrings                     strings      0000
__Ltext                        text         0000
__S0                           (abs)        2009
__S1                           (abs)        007B
__S2                           (abs)        0000
__S3                           (abs)        0000
___int_sp                      stack        0000
___latbits                     (abs)        0002
___sp                          stack        0000
__end_of_InitKeypad            text14       0714
__end_of_Lcd_Clear_8bits       text12       070B
__end_of_Lcd_Cmd_8bits         text13       06FE
__end_of_Lcd_Init_8bits        text11       0619
__end_of_Lcd_Port              text9        066B
__end_of_Lcd_Set_Cursor_8bits  text10       0689
__end_of_Lcd_Write_Char        text8        05CE
__end_of_Lcd_Write_String      text7        0648
__end_of_PWMconf               text6        06C0
__end_of__initialization       cinit        003D
__end_of__stringtab            strings      040F
__end_of_funcAdc               text5        051F
__end_of_init                  text4        06EE
__end_of_initOsc               text3        057C
__end_of_interrupciones        text15       06A6
__end_of_keypad_scanner        text2        0409
__end_of_main                  maintext     0274
__end_of_switch_press_scan     text1        06D8
__initialization               cinit        000F
__pbssBANK0                    bssBANK0     0032
__pbssCOMMON                   bssCOMMON    0077
__pcstackBANK0                 cstackBANK0  0020
__pcstackCOMMON                cstackCOMMON 0070
__pdataBANK0                   dataBANK0    003E
__pidataBANK0                  idataBANK0   0714
__pintentry                    intentry     0004
__pmaintext                    maintext     0041
__pstrings                     strings      0409
__ptext1                       text1        06C0
__ptext10                      text10       066B
__ptext11                      text11       05CE
__ptext12                      text12       06FE
__ptext13                      text13       06EE
__ptext14                      text14       070B
__ptext15                      text15       0689
__ptext2                       text2        0274
__ptext3                       text3        051F
__ptext4                       text4        06D8
__ptext5                       text5        04AE
__ptext6                       text6        06A6
__ptext7                       text7        0619
__ptext8                       text8        057C
__ptext9                       text9        0648
__size_of_InitKeypad           (abs)        0000
__size_of_Lcd_Clear_8bits      (abs)        0000
__size_of_Lcd_Cmd_8bits        (abs)        0000
__size_of_Lcd_Init_8bits       (abs)        0000
__size_of_Lcd_Port             (abs)        0000
__size_of_Lcd_Set_Cursor_8bits (abs)        0000
__size_of_Lcd_Write_Char       (abs)        0000
__size_of_Lcd_Write_String     (abs)        0000
__size_of_PWMconf              (abs)        0000
__size_of_funcAdc              (abs)        0000
__size_of_init                 (abs)        0000
__size_of_initOsc              (abs)        0000
__size_of_interrupciones       (abs)        0000
__size_of_keypad_scanner       (abs)        0000
__size_of_main                 (abs)        0000
__size_of_switch_press_scan    (abs)        0000
__stringbase                   strings      040E
__stringtab                    strings      0409
_compara                       bssBANK0     0032
_cont                          bssBANK0     003C
_contraAct                     bssBANK0     003D
_contrasena                    dataBANK0    003E
_funcAdc                       text5        04AE
_init                          text4        06D8
_initOsc                       text3        051F
_interrupciones                text15       0689
_keypad_scanner                text2        0274
_main                          maintext     0041
_res                           bssCOMMON    0079
_switch_press_scan             text1        06C0
btemp                          (abs)        007E
end_of_initialization          cinit        003D
funcAdc@anaP                   cstackCOMMON 0073
funcAdc@divD                   cstackBANK0  0020
funcAdc@just                   cstackCOMMON 0074
initOsc@frec                   cstackCOMMON 0075
interrupt_function             intentry     0004
intlevel0                      functab      0000
intlevel1                      functab      0000
intlevel2                      functab      0000
intlevel3                      functab      0000
intlevel4                      functab      0000
intlevel5                      functab      0000
main@Key                       cstackBANK0  0031
main@i                         cstackBANK0  002F
main@valor1                    cstackBANK0  002B
main@valor2                    cstackBANK0  002D
reset_vec                      reset_vec    0000
saved_w                        (abs)        007E
stackhi                        (abs)        0000
stacklo                        (abs)        0000
start                          init         000C
start_initialization           cinit        000F
switch_press_scan@key          cstackCOMMON 0076
wtemp0                         (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 119 in file "mainS1proyect.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  valor2          2   13[BANK0 ] int 
  valor1          2   11[BANK0 ] int 
  i               2   15[BANK0 ] int 
  Key             1   17[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       7       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      10       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_InitKeypad
		_Lcd_Clear_8bits
		_Lcd_Init_8bits
		_Lcd_Set_Cursor_8bits
		_Lcd_Write_Char
		_Lcd_Write_String
		_PWMconf
		_funcAdc
		_init
		_initOsc
		_keypad_scanner
		_switch_press_scan
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _switch_press_scan *****************
 Defined at:
		line 90 in file "KEYPAD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  key             1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_keypad_scanner
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _keypad_scanner *****************
 Defined at:
		line 14 in file "KEYPAD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_switch_press_scan
 This function uses a non-reentrant model


 *************** function _initOsc *****************
 Defined at:
		line 9 in file "FuncionOscilador.c"
 Parameters:    Size  Location     Type
  frec            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  frec            1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _init *****************
 Defined at:
		line 237 in file "mainS1proyect.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _funcAdc *****************
 Defined at:
		line 9 in file "ADCconf.c"
 Parameters:    Size  Location     Type
  divD            1    wreg     unsigned char 
  anaP            1    3[COMMON] unsigned char 
  just            1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  divD            1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          2       0       0       0       0
      Totals:         4       1       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _PWMconf *****************
 Defined at:
		line 258 in file "mainS1proyect.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 127 in file "LCD.c"
 Parameters:    Size  Location     Type
  a               1    wreg     PTR unsigned char 
		 -> STR_11(14), STR_10(16), STR_9(17), STR_8(16), 
		 -> STR_7(10), STR_6(16), STR_5(12), STR_4(8), 
		 -> STR_3(16), STR_2(17), STR_1(17), 
  modo            2    3[BANK0 ] int 
 Auto vars:     Size  Location     Type
  a               1    7[BANK0 ] PTR unsigned char 
		 -> STR_11(14), STR_10(16), STR_9(17), STR_8(16), 
		 -> STR_7(10), STR_6(16), STR_5(12), STR_4(8), 
		 -> STR_3(16), STR_2(17), STR_1(17), 
  i               2    5[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 98 in file "LCD.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  modo            2    4[COMMON] int 
 Auto vars:     Size  Location     Type
  a               1    2[BANK0 ] unsigned char 
  y               1    1[BANK0 ] unsigned char 
  temp            1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       3       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Port
 This function is called by:
		_main
		_Lcd_Write_String
 This function uses a non-reentrant model


 *************** function _Lcd_Port *****************
 Defined at:
		line 20 in file "LCD.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Write_Char
		_Lcd_Cmd
		_Lcd_Init
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor_8bits *****************
 Defined at:
		line 166 in file "LCD.c"
 Parameters:    Size  Location     Type
  y               1    wreg     unsigned char 
  x               1    5[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  y               1    6[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd_8bits
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Init_8bits *****************
 Defined at:
		line 180 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd_8bits
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Clear_8bits *****************
 Defined at:
		line 160 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd_8bits
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd_8bits *****************
 Defined at:
		line 149 in file "LCD.c"
 Parameters:    Size  Location     Type
  comando         1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  comando         1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Clear_8bits
		_Lcd_Set_Cursor_8bits
		_Lcd_Init_8bits
 This function uses a non-reentrant model


 *************** function _InitKeypad *****************
 Defined at:
		line 97 in file "KEYPAD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _interrupciones *****************
 Defined at:
		line 57 in file "mainS1proyect.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
KEYPAD.c
		_InitKeypad    		CODE           	070B	0000	10
		_switch_press_scan		CODE           	06C0	0000	25
		_keypad_scanner		CODE           	0274	0000	406

KEYPAD.c estimated size: 441

shared
		__stringtab    		STRING         	0409	0000	7
		__initialization		CODE           	000F	0000	47

shared estimated size: 54

FuncionOscilador.c
		_initOsc       		CODE           	051F	0000	94

FuncionOscilador.c estimated size: 94

ADCconf.c
		_funcAdc       		CODE           	04AE	0000	114

ADCconf.c estimated size: 114

mainS1proyect.c
		_init          		CODE           	06D8	0000	23
		_main          		CODE           	0041	0000	564
		_PWMconf       		CODE           	06A6	0000	27
		_interrupciones		CODE           	0689	0000	30

mainS1proyect.c estimated size: 644

LCD.c
		_Lcd_Write_String		CODE           	0619	0000	48
		_Lcd_Write_Char		CODE           	057C	0000	83
		_Lcd_Clear_8bits		CODE           	06FE	0000	14
		_Lcd_Set_Cursor_8bits		CODE           	066B	0000	31
		_Lcd_Init_8bits		CODE           	05CE	0000	76
		_Lcd_Cmd_8bits 		CODE           	06EE	0000	17
		_Lcd_Port      		CODE           	0648	0000	36

LCD.c estimated size: 305

