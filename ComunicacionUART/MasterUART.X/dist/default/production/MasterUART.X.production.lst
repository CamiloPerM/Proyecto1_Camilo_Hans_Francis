

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Mar 15 11:51:56 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_Enviar
   712                           	FNCALL	_main,_UART_Init
   713                           	FNCALL	_main,_init
   714                           	FNCALL	_main,_initOsc
   715                           	FNCALL	_UART_Init,___aldiv
   716                           	FNROOT	_main
   717                           	FNCALL	intlevel1,_interrupciones
   718                           	global	intlevel1
   719                           	FNROOT	intlevel1
   720                           	global	_Valor5
   721                           	global	_Valor4
   722                           	global	_Valor3
   723                           psect	idataCOMMON,class=CODE,space=0,delta=2,noexec
   724                           global __pidataCOMMON
   725                           __pidataCOMMON:
   726  0302                     	file	"MasterUart.c"
   727                           	line	55
   728                           
   729                           ;initializer for _controla
   730                           	retlw	0FFh
   731  0302  34FF               psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   732                           global __pidataBANK0
   733                           __pidataBANK0:
   734  02FF                     	line	53
   735                           
   736                           ;initializer for _Valor5
   737                           	retlw	01h
   738  02FF  3401               	line	52
   739                           
   740                           ;initializer for _Valor4
   741                           	retlw	01h
   742  0300  3401               	line	51
   743                           
   744                           ;initializer for _Valor3
   745                           	retlw	0Fh
   746  0301  340F               	global	_contador
   747                           	global	_temporalSec
   748                           	global	_Valor2
   749                           	global	_Valor1
   750                           	global	_PIR1bits
   751                           _PIR1bits	set	0xC
   752  000C                     	global	_PORTE
   753                           _PORTE	set	0x9
   754  0009                     	global	_PORTC
   755                           _PORTC	set	0x7
   756  0007                     	global	_PORTD
   757                           _PORTD	set	0x8
   758  0008                     	global	_PORTB
   759                           _PORTB	set	0x6
   760  0006                     	global	_PORTA
   761                           _PORTA	set	0x5
   762  0005                     	global	_RCREG
   763                           _RCREG	set	0x1A
   764  001A                     	global	_TXREG
   765                           _TXREG	set	0x19
   766  0019                     	global	_RCSTAbits
   767                           _RCSTAbits	set	0x18
   768  0018                     	global	_RCIF
   769                           _RCIF	set	0x65
   770  0065                     	global	_TRISCbits
   771                           _TRISCbits	set	0x87
   772  0087                     	global	_TRISE
   773                           _TRISE	set	0x89
   774  0089                     	global	_TRISC
   775                           _TRISC	set	0x87
   776  0087                     	global	_TRISD
   777                           _TRISD	set	0x88
   778  0088                     	global	_TRISB
   779                           _TRISB	set	0x86
   780  0086                     	global	_TRISA
   781                           _TRISA	set	0x85
   782  0085                     	global	_SPBRG
   783                           _SPBRG	set	0x99
   784  0099                     	global	_TXSTAbits
   785                           _TXSTAbits	set	0x98
   786  0098                     	global	_OSCCONbits
   787                           _OSCCONbits	set	0x8F
   788  008F                     	global	_TRMT
   789                           _TRMT	set	0x4C1
   790  04C1                     	global	_ANSELH
   791                           _ANSELH	set	0x189
   792  0189                     	global	_ANSEL
   793                           _ANSEL	set	0x188
   794  0188                     ; #config settings
   795                           global __CFG_FOSC$INTRC_NOCLKOUT
   796                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   797  0000                     global __CFG_WDTE$OFF
   798                           __CFG_WDTE$OFF equ 0x0
   799  0000                     global __CFG_PWRTE$OFF
   800                           __CFG_PWRTE$OFF equ 0x0
   801  0000                     global __CFG_MCLRE$OFF
   802                           __CFG_MCLRE$OFF equ 0x0
   803  0000                     global __CFG_CP$OFF
   804                           __CFG_CP$OFF equ 0x0
   805  0000                     global __CFG_CPD$OFF
   806                           __CFG_CPD$OFF equ 0x0
   807  0000                     global __CFG_BOREN$ON
   808                           __CFG_BOREN$ON equ 0x0
   809  0000                     global __CFG_IESO$OFF
   810                           __CFG_IESO$OFF equ 0x0
   811  0000                     global __CFG_FCMEN$OFF
   812                           __CFG_FCMEN$OFF equ 0x0
   813  0000                     global __CFG_LVP$OFF
   814                           __CFG_LVP$OFF equ 0x0
   815  0000                     global __CFG_BOR4V$BOR40V
   816                           __CFG_BOR4V$BOR40V equ 0x0
   817  0000                     global __CFG_WRT$OFF
   818                           __CFG_WRT$OFF equ 0x0
   819  0000                     	file	"C:\Users\DIBUJO~1\AppData\Local\Temp\saak."
   820                           	line	#
   821                           psect cinit,class=CODE,delta=2
   822                           global start_initialization
   823                           start_initialization:
   824  000F                     
   825                           global __initialization
   826                           __initialization:
   827  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   828                           global __pbssCOMMON
   829                           __pbssCOMMON:
   830  0079                     _contador:
   831  0079                            ds      1
   832  0079                     
   833                           _temporalSec:
   834  007A                            ds      1
   835  007A                     
   836                           psect	dataCOMMON,class=COMMON,space=1,noexec
   837                           global __pdataCOMMON
   838                           __pdataCOMMON:
   839  007B                     	file	"MasterUart.c"
   840                           	line	55
   841                           _controla:
   842  007B                            ds      1
   843  007B                     
   844                           psect	bssBANK0,class=BANK0,space=1,noexec
   845                           global __pbssBANK0
   846                           __pbssBANK0:
   847  0040                     _Valor2:
   848  0040                            ds      1
   849  0040                     
   850                           _Valor1:
   851  0041                            ds      1
   852  0041                     
   853                           psect	dataBANK0,class=BANK0,space=1,noexec
   854                           global __pdataBANK0
   855                           __pdataBANK0:
   856  003D                     	file	"MasterUart.c"
   857                           	line	53
   858                           _Valor5:
   859  003D                            ds      1
   860  003D                     
   861                           psect	dataBANK0
   862                           	file	"MasterUart.c"
   863                           	line	52
   864                           _Valor4:
   865  003E                            ds      1
   866  003E                     
   867                           psect	dataBANK0
   868                           	file	"MasterUart.c"
   869                           	line	51
   870                           _Valor3:
   871  003F                            ds      1
   872  003F                     
   873                           	file	"C:\Users\DIBUJO~1\AppData\Local\Temp\saak."
   874                           	line	#
   875                           ; Initialize objects allocated to BANK0
   876                           	global __pidataBANK0
   877                           psect cinit,class=CODE,delta=2,merge=1
   878                           	fcall	__pidataBANK0+0		;fetch initializer
   879  000F  120A  118A  22FF  120A  118A  	movwf	__pdataBANK0+0&07fh		
   880  0014  00BD               	fcall	__pidataBANK0+1		;fetch initializer
   881  0015  120A  118A  2300  120A  118A  	movwf	__pdataBANK0+1&07fh		
   882  001A  00BE               	fcall	__pidataBANK0+2		;fetch initializer
   883  001B  120A  118A  2301  120A  118A  	movwf	__pdataBANK0+2&07fh		
   884  0020  00BF               ; Initialize objects allocated to COMMON
   885                           	global __pidataCOMMON
   886                           psect cinit,class=CODE,delta=2,merge=1
   887                           	fcall	__pidataCOMMON+0		;fetch initializer
   888  0021  120A  118A  2302  120A  118A  	movwf	__pdataCOMMON+0&07fh		
   889  0026  00FB               	line	#
   890                           ; Clear objects allocated to BANK0
   891                           psect cinit,class=CODE,delta=2,merge=1
   892                           	clrf	((__pbssBANK0)+0)&07Fh
   893  0027  01C0               	clrf	((__pbssBANK0)+1)&07Fh
   894  0028  01C1               ; Clear objects allocated to COMMON
   895                           psect cinit,class=CODE,delta=2,merge=1
   896                           	clrf	((__pbssCOMMON)+0)&07Fh
   897  0029  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   898  002A  01FA               psect cinit,class=CODE,delta=2,merge=1
   899                           global end_of_initialization,__end_of__initialization
   900                           
   901                           ;End of C runtime variable initialization code
   902                           
   903                           end_of_initialization:
   904  002B                     __end_of__initialization:
   905  002B                     clrf status
   906  002B  0183               ljmp _main	;jump to C main() function
   907  002C  120A  118A  291C   psect	cstackCOMMON,class=COMMON,space=1,noexec
   908                           global __pcstackCOMMON
   909                           __pcstackCOMMON:
   910  0070                     ?_init:	; 1 bytes @ 0x0
   911  0070                     ?_Enviar:	; 1 bytes @ 0x0
   912  0070                     ?_initOsc:	; 1 bytes @ 0x0
   913  0070                     ?_interrupciones:	; 1 bytes @ 0x0
   914  0070                     ??_interrupciones:	; 1 bytes @ 0x0
   915  0070                     ?_main:	; 1 bytes @ 0x0
   916  0070                     	ds	2
   917  0070                     ??_init:	; 1 bytes @ 0x2
   918  0072                     ??_Enviar:	; 1 bytes @ 0x2
   919  0072                     ??_initOsc:	; 1 bytes @ 0x2
   920  0072                     ??___aldiv:	; 1 bytes @ 0x2
   921  0072                     	global	Enviar@Venviar
   922                           Enviar@Venviar:	; 1 bytes @ 0x2
   923  0072                     	ds	1
   924  0072                     	global	___aldiv@counter
   925                           ___aldiv@counter:	; 1 bytes @ 0x3
   926  0073                     	ds	1
   927  0073                     	global	initOsc@frec
   928                           initOsc@frec:	; 1 bytes @ 0x4
   929  0074                     	global	___aldiv@sign
   930                           ___aldiv@sign:	; 1 bytes @ 0x4
   931  0074                     	ds	1
   932  0074                     	global	___aldiv@quotient
   933                           ___aldiv@quotient:	; 4 bytes @ 0x5
   934  0075                     	ds	4
   935  0075                     psect	cstackBANK0,class=BANK0,space=1,noexec
   936                           global __pcstackBANK0
   937                           __pcstackBANK0:
   938  0020                     	global	?___aldiv
   939                           ?___aldiv:	; 4 bytes @ 0x0
   940  0020                     	global	___aldiv@divisor
   941                           ___aldiv@divisor:	; 4 bytes @ 0x0
   942  0020                     	ds	4
   943  0020                     	global	___aldiv@dividend
   944                           ___aldiv@dividend:	; 4 bytes @ 0x4
   945  0024                     	ds	4
   946  0024                     ?_UART_Init:	; 1 bytes @ 0x8
   947  0028                     	global	UART_Init@baudrate
   948                           UART_Init@baudrate:	; 4 bytes @ 0x8
   949  0028                     	ds	4
   950  0028                     ??_UART_Init:	; 1 bytes @ 0xC
   951  002C                     	ds	12
   952  002C                     	global	UART_Init@x
   953                           UART_Init@x:	; 2 bytes @ 0x18
   954  0038                     	ds	2
   955  0038                     ??_main:	; 1 bytes @ 0x1A
   956  003A                     	ds	3
   957  003A                     ;!
   958                           ;!Data Sizes:
   959                           ;!    Strings     0
   960                           ;!    Constant    0
   961                           ;!    Data        4
   962                           ;!    BSS         4
   963                           ;!    Persistent  0
   964                           ;!    Stack       0
   965                           ;!
   966                           ;!Auto Spaces:
   967                           ;!    Space          Size  Autos    Used
   968                           ;!    COMMON           14      9      12
   969                           ;!    BANK0            80     29      34
   970                           ;!    BANK1            80      0       0
   971                           ;!    BANK3            96      0       0
   972                           ;!    BANK2            96      0       0
   973                           
   974                           ;!
   975                           ;!Pointer List with Targets:
   976                           ;!
   977                           ;!    None.
   978                           
   979                           
   980                           ;!
   981                           ;!Critical Paths under _main in COMMON
   982                           ;!
   983                           ;!    _UART_Init->___aldiv
   984                           ;!
   985                           ;!Critical Paths under _interrupciones in COMMON
   986                           ;!
   987                           ;!    None.
   988                           ;!
   989                           ;!Critical Paths under _main in BANK0
   990                           ;!
   991                           ;!    _main->_UART_Init
   992                           ;!    _UART_Init->___aldiv
   993                           ;!
   994                           ;!Critical Paths under _interrupciones in BANK0
   995                           ;!
   996                           ;!    None.
   997                           ;!
   998                           ;!Critical Paths under _main in BANK1
   999                           ;!
  1000                           ;!    None.
  1001                           ;!
  1002                           ;!Critical Paths under _interrupciones in BANK1
  1003                           ;!
  1004                           ;!    None.
  1005                           ;!
  1006                           ;!Critical Paths under _main in BANK3
  1007                           ;!
  1008                           ;!    None.
  1009                           ;!
  1010                           ;!Critical Paths under _interrupciones in BANK3
  1011                           ;!
  1012                           ;!    None.
  1013                           ;!
  1014                           ;!Critical Paths under _main in BANK2
  1015                           ;!
  1016                           ;!    None.
  1017                           ;!
  1018                           ;!Critical Paths under _interrupciones in BANK2
  1019                           ;!
  1020                           ;!    None.
  1021                           
  1022 ;;
  1023 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1024 ;;
  1025                           
  1026                           ;!
  1027                           ;!Call Graph Tables:
  1028                           ;!
  1029                           ;! ---------------------------------------------------------------------------------
  1030                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1031                           ;! ---------------------------------------------------------------------------------
  1032                           ;! (0) _main                                                 3     3      0    1162
  1033                           ;!                                             26 BANK0      3     3      0
  1034                           ;!                             _Enviar
  1035                           ;!                          _UART_Init
  1036                           ;!                               _init
  1037                           ;!                            _initOsc
  1038                           ;! ---------------------------------------------------------------------------------
  1039                           ;! (1) _initOsc                                              3     3      0      22
  1040                           ;!                                              2 COMMON     3     3      0
  1041                           ;! ---------------------------------------------------------------------------------
  1042                           ;! (1) _init                                                 0     0      0       0
  1043                           ;! ---------------------------------------------------------------------------------
  1044                           ;! (1) _UART_Init                                           18    14      4    1118
  1045                           ;!                                              8 BANK0     18    14      4
  1046                           ;!                            ___aldiv
  1047                           ;! ---------------------------------------------------------------------------------
  1048                           ;! (2) ___aldiv                                             15     7      8     805
  1049                           ;!                                              2 COMMON     7     7      0
  1050                           ;!                                              0 BANK0      8     0      8
  1051                           ;! ---------------------------------------------------------------------------------
  1052                           ;! (1) _Enviar                                               1     1      0      22
  1053                           ;!                                              2 COMMON     1     1      0
  1054                           ;! ---------------------------------------------------------------------------------
  1055                           ;! Estimated maximum stack depth 2
  1056                           ;! ---------------------------------------------------------------------------------
  1057                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1058                           ;! ---------------------------------------------------------------------------------
  1059                           ;! (3) _interrupciones                                       2     2      0       0
  1060                           ;!                                              0 COMMON     2     2      0
  1061                           ;! ---------------------------------------------------------------------------------
  1062                           ;! Estimated maximum stack depth 3
  1063                           ;! ---------------------------------------------------------------------------------
  1064                           ;!
  1065                           ;! Call Graph Graphs:
  1066                           ;!
  1067                           ;! _main (ROOT)
  1068                           ;!   _Enviar
  1069                           ;!   _UART_Init
  1070                           ;!     ___aldiv
  1071                           ;!   _init
  1072                           ;!   _initOsc
  1073                           ;!
  1074                           ;! _interrupciones (ROOT)
  1075                           ;!
  1076                           
  1077                           ;! Address spaces:
  1078                           
  1079                           ;!Name               Size   Autos  Total    Cost      Usage
  1080                           ;!BANK3               60      0       0       9        0.0%
  1081                           ;!BITBANK3            60      0       0       8        0.0%
  1082                           ;!SFR3                 0      0       0       4        0.0%
  1083                           ;!BITSFR3              0      0       0       4        0.0%
  1084                           ;!BANK2               60      0       0      11        0.0%
  1085                           ;!BITBANK2            60      0       0      10        0.0%
  1086                           ;!SFR2                 0      0       0       5        0.0%
  1087                           ;!BITSFR2              0      0       0       5        0.0%
  1088                           ;!BANK1               50      0       0       7        0.0%
  1089                           ;!BITBANK1            50      0       0       6        0.0%
  1090                           ;!SFR1                 0      0       0       2        0.0%
  1091                           ;!BITSFR1              0      0       0       2        0.0%
  1092                           ;!BANK0               50     1D      22       5       42.5%
  1093                           ;!BITBANK0            50      0       0       4        0.0%
  1094                           ;!SFR0                 0      0       0       1        0.0%
  1095                           ;!BITSFR0              0      0       0       1        0.0%
  1096                           ;!COMMON               E      9       C       1       85.7%
  1097                           ;!BITCOMMON            E      0       0       0        0.0%
  1098                           ;!CODE                 0      0       0       0        0.0%
  1099                           ;!DATA                 0      0      2E      12        0.0%
  1100                           ;!ABS                  0      0      2E       3        0.0%
  1101                           ;!NULL                 0      0       0       0        0.0%
  1102                           ;!STACK                0      0       0       2        0.0%
  1103                           ;!EEDATA             100      0       0       0        0.0%
  1104                           
  1105                           	global	_main
  1106                           
  1107 ;; *************** function _main *****************
  1108 ;; Defined at:
  1109 ;;		line 69 in file "MasterUart.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : B00/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1123 ;;      Params:         0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0
  1125 ;;      Temps:          0       3       0       0       0
  1126 ;;      Totals:         0       3       0       0       0
  1127 ;;Total ram usage:        3 bytes
  1128 ;; Hardware stack levels required when called:    3
  1129 ;; This function calls:
  1130 ;;		_Enviar
  1131 ;;		_UART_Init
  1132 ;;		_init
  1133 ;;		_initOsc
  1134 ;; This function is called by:
  1135 ;;		Startup code after reset
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1139                           	file	"MasterUart.c"
  1140                           	line	69
  1141                           global __pmaintext
  1142                           __pmaintext:	;psect for function _main
  1143  011C                     psect	maintext
  1144                           	file	"MasterUart.c"
  1145                           	line	69
  1146                           	global	__size_of_main
  1147                           	__size_of_main	equ	__end_of_main-_main
  1148  00B3                     	
  1149                           _main:	
  1150  011C                     ;incstack = 0
  1151                           	opt	stack 5
  1152                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1153                           	line	70
  1154                           	
  1155                           l1210:	
  1156  011C                     ;MasterUart.c: 70:     init();
  1157                           	fcall	_init
  1158  011C  120A  118A  22D2  120A  118A  	line	71
  1159                           	
  1160                           l1212:	
  1161  0121                     ;MasterUart.c: 71:     initOsc(7);
  1162                           	movlw	low(07h)
  1163  0121  3007               	fcall	_initOsc
  1164  0122  120A  118A  2275  120A  118A  	line	72
  1165                           	
  1166                           l1214:	
  1167  0127                     ;MasterUart.c: 72:     UART_Init(9600);
  1168                           	movlw	0
  1169  0127  3000               	bcf	status, 5	;RP0=0, select bank0
  1170  0128  1283               	bcf	status, 6	;RP1=0, select bank0
  1171  0129  1303               	movwf	(UART_Init@baudrate+3)
  1172  012A  00AB               	movlw	0
  1173  012B  3000               	movwf	(UART_Init@baudrate+2)
  1174  012C  00AA               	movlw	025h
  1175  012D  3025               	movwf	(UART_Init@baudrate+1)
  1176  012E  00A9               	movlw	080h
  1177  012F  3080               	movwf	(UART_Init@baudrate)
  1178  0130  00A8               
  1179                           	fcall	_UART_Init
  1180  0131  120A  118A  202F  120A  118A  	goto	l1216
  1181  0136  2937               	line	74
  1182                           ;MasterUart.c: 74:     while(1){
  1183                           	
  1184                           l133:	
  1185  0137                     	line	77
  1186                           	
  1187                           l1216:	
  1188  0137                     ;MasterUart.c: 77:         Enviar(255);
  1189                           	movlw	low(0FFh)
  1190  0137  30FF               	fcall	_Enviar
  1191  0138  120A  118A  22EB  120A  118A  	line	78
  1192                           	
  1193                           l1218:	
  1194  013D                     ;MasterUart.c: 78:         Enviar(Valor1);
  1195                           	bcf	status, 5	;RP0=0, select bank0
  1196  013D  1283               	bcf	status, 6	;RP1=0, select bank0
  1197  013E  1303               	movf	(_Valor1),w
  1198  013F  0841               	fcall	_Enviar
  1199  0140  120A  118A  22EB  120A  118A  	line	81
  1200                           	
  1201                           l1220:	
  1202  0145                     ;MasterUart.c: 81:         Enviar(254);
  1203                           	movlw	low(0FEh)
  1204  0145  30FE               	fcall	_Enviar
  1205  0146  120A  118A  22EB  120A  118A  	line	82
  1206                           	
  1207                           l1222:	
  1208  014B                     ;MasterUart.c: 82:         Enviar(Valor2);
  1209                           	bcf	status, 5	;RP0=0, select bank0
  1210  014B  1283               	bcf	status, 6	;RP1=0, select bank0
  1211  014C  1303               	movf	(_Valor2),w
  1212  014D  0840               	fcall	_Enviar
  1213  014E  120A  118A  22EB  120A  118A  	line	85
  1214                           	
  1215                           l1224:	
  1216  0153                     ;MasterUart.c: 85:         Enviar(253);
  1217                           	movlw	low(0FDh)
  1218  0153  30FD               	fcall	_Enviar
  1219  0154  120A  118A  22EB  120A  118A  	line	86
  1220                           	
  1221                           l1226:	
  1222  0159                     ;MasterUart.c: 86:         Enviar(Valor3);
  1223                           	bcf	status, 5	;RP0=0, select bank0
  1224  0159  1283               	bcf	status, 6	;RP1=0, select bank0
  1225  015A  1303               	movf	(_Valor3),w
  1226  015B  083F               	fcall	_Enviar
  1227  015C  120A  118A  22EB  120A  118A  	line	89
  1228                           	
  1229                           l1228:	
  1230  0161                     ;MasterUart.c: 89:         Enviar(252);
  1231                           	movlw	low(0FCh)
  1232  0161  30FC               	fcall	_Enviar
  1233  0162  120A  118A  22EB  120A  118A  	line	90
  1234                           	
  1235                           l1230:	
  1236  0167                     ;MasterUart.c: 90:         Enviar(Valor4);
  1237                           	bcf	status, 5	;RP0=0, select bank0
  1238  0167  1283               	bcf	status, 6	;RP1=0, select bank0
  1239  0168  1303               	movf	(_Valor4),w
  1240  0169  083E               	fcall	_Enviar
  1241  016A  120A  118A  22EB  120A  118A  	line	93
  1242                           	
  1243                           l1232:	
  1244  016F                     ;MasterUart.c: 93:         Enviar(251);
  1245                           	movlw	low(0FBh)
  1246  016F  30FB               	fcall	_Enviar
  1247  0170  120A  118A  22EB  120A  118A  	line	94
  1248                           	
  1249                           l1234:	
  1250  0175                     ;MasterUart.c: 94:         Enviar(Valor5);
  1251                           	bcf	status, 5	;RP0=0, select bank0
  1252  0175  1283               	bcf	status, 6	;RP1=0, select bank0
  1253  0176  1303               	movf	(_Valor5),w
  1254  0177  083D               	fcall	_Enviar
  1255  0178  120A  118A  22EB  120A  118A  	line	96
  1256                           	
  1257                           l1236:	
  1258  017D                     ;MasterUart.c: 96:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1259                           	opt asmopt_push
  1260                           opt asmopt_off
  1261                           movlw  6
  1262  017D  3006               	bcf	status, 5	;RP0=0, select bank0
  1263  017E  1283               	bcf	status, 6	;RP1=0, select bank0
  1264  017F  1303               movwf	((??_main+0)+0+2),f
  1265  0180  00BC               movlw	19
  1266  0181  3013               movwf	((??_main+0)+0+1),f
  1267  0182  00BB               	movlw	173
  1268  0183  30AD               movwf	((??_main+0)+0),f
  1269  0184  00BA               	u847:
  1270  0185                     decfsz	((??_main+0)+0),f
  1271  0185  0BBA               	goto	u847
  1272  0186  2985               	decfsz	((??_main+0)+0+1),f
  1273  0187  0BBB               	goto	u847
  1274  0188  2985               	decfsz	((??_main+0)+0+2),f
  1275  0189  0BBC               	goto	u847
  1276  018A  2985               opt asmopt_pop
  1277                           
  1278                           	line	103
  1279                           	
  1280                           l1238:	
  1281  018B                     ;MasterUart.c: 103:         Valor1 ++;
  1282                           	movlw	low(01h)
  1283  018B  3001               	bcf	status, 5	;RP0=0, select bank0
  1284  018C  1283               	bcf	status, 6	;RP1=0, select bank0
  1285  018D  1303               	movwf	(??_main+0)+0
  1286  018E  00BA               	movf	(??_main+0)+0,w
  1287  018F  083A               	addwf	(_Valor1),f
  1288  0190  07C1               	line	104
  1289                           	
  1290                           l1240:	
  1291  0191                     ;MasterUart.c: 104:         Valor2 --;
  1292                           	movlw	01h
  1293  0191  3001               	subwf	(_Valor2),f
  1294  0192  02C0               	line	107
  1295                           	
  1296                           l1242:	
  1297  0193                     ;MasterUart.c: 107:         if (Valor3 == 15){
  1298                           		movlw	15
  1299  0193  300F               	xorwf	((_Valor3)),w
  1300  0194  063F               	btfss	status,2
  1301  0195  1D03               	goto	u781
  1302  0196  2998               	goto	u780
  1303  0197  2999               u781:
  1304  0198                     	goto	l1246
  1305  0198  299E               u780:
  1306  0199                     	line	108
  1307                           	
  1308                           l1244:	
  1309  0199                     ;MasterUart.c: 108:             Valor3 = 240;
  1310                           	movlw	low(0F0h)
  1311  0199  30F0               	movwf	(??_main+0)+0
  1312  019A  00BA               	movf	(??_main+0)+0,w
  1313  019B  083A               	movwf	(_Valor3)
  1314  019C  00BF               	line	109
  1315                           ;MasterUart.c: 109:         } else if (Valor3 == 240){
  1316                           	goto	l1250
  1317  019D  29AA               	
  1318                           l134:	
  1319  019E                     	
  1320                           l1246:	
  1321  019E                     		movlw	240
  1322  019E  30F0               	xorwf	((_Valor3)),w
  1323  019F  063F               	btfss	status,2
  1324  01A0  1D03               	goto	u791
  1325  01A1  29A3               	goto	u790
  1326  01A2  29A4               u791:
  1327  01A3                     	goto	l1250
  1328  01A3  29AA               u790:
  1329  01A4                     	line	110
  1330                           	
  1331                           l1248:	
  1332  01A4                     ;MasterUart.c: 110:             Valor3 = 15;
  1333                           	movlw	low(0Fh)
  1334  01A4  300F               	movwf	(??_main+0)+0
  1335  01A5  00BA               	movf	(??_main+0)+0,w
  1336  01A6  083A               	movwf	(_Valor3)
  1337  01A7  00BF               	goto	l1250
  1338  01A8  29AA               	line	111
  1339                           ;MasterUart.c: 111:         }
  1340                           	
  1341                           l136:	
  1342  01A9                     	goto	l1250
  1343  01A9  29AA               	
  1344                           l135:	
  1345  01AA                     	line	113
  1346                           	
  1347                           l1250:	
  1348  01AA                     ;MasterUart.c: 113:         if (Valor4 == 1){
  1349                           		decf	((_Valor4)),w
  1350  01AA  033E               	btfss	status,2
  1351  01AB  1D03               	goto	u801
  1352  01AC  29AE               	goto	u800
  1353  01AD  29AF               u801:
  1354  01AE                     	goto	l1254
  1355  01AE  29B1               u800:
  1356  01AF                     	line	114
  1357                           	
  1358                           l1252:	
  1359  01AF                     ;MasterUart.c: 114:             Valor4 = 0;
  1360                           	clrf	(_Valor4)
  1361  01AF  01BE               	line	115
  1362                           ;MasterUart.c: 115:         } else if (Valor4 == 0){
  1363                           	goto	l1258
  1364  01B0  29BA               	
  1365                           l137:	
  1366  01B1                     	
  1367                           l1254:	
  1368  01B1                     	movf	((_Valor4)),w
  1369  01B1  083E               	btfss	status,2
  1370  01B2  1D03               	goto	u811
  1371  01B3  29B5               	goto	u810
  1372  01B4  29B6               u811:
  1373  01B5                     	goto	l1258
  1374  01B5  29BA               u810:
  1375  01B6                     	line	116
  1376                           	
  1377                           l1256:	
  1378  01B6                     ;MasterUart.c: 116:             Valor4 = 1;
  1379                           	clrf	(_Valor4)
  1380  01B6  01BE               	incf	(_Valor4),f
  1381  01B7  0ABE               	goto	l1258
  1382  01B8  29BA               	line	117
  1383                           ;MasterUart.c: 117:         }
  1384                           	
  1385                           l139:	
  1386  01B9                     	goto	l1258
  1387  01B9  29BA               	
  1388                           l138:	
  1389  01BA                     	line	119
  1390                           	
  1391                           l1258:	
  1392  01BA                     ;MasterUart.c: 119:         if (Valor5 == 1){
  1393                           		decf	((_Valor5)),w
  1394  01BA  033D               	btfss	status,2
  1395  01BB  1D03               	goto	u821
  1396  01BC  29BE               	goto	u820
  1397  01BD  29BF               u821:
  1398  01BE                     	goto	l1262
  1399  01BE  29C1               u820:
  1400  01BF                     	line	120
  1401                           	
  1402                           l1260:	
  1403  01BF                     ;MasterUart.c: 120:             Valor5 = 0;
  1404                           	clrf	(_Valor5)
  1405  01BF  01BD               	line	121
  1406                           ;MasterUart.c: 121:         } else if (Valor5 == 0){
  1407                           	goto	l1216
  1408  01C0  2937               	
  1409                           l140:	
  1410  01C1                     	
  1411                           l1262:	
  1412  01C1                     	movf	((_Valor5)),w
  1413  01C1  083D               	btfss	status,2
  1414  01C2  1D03               	goto	u831
  1415  01C3  29C5               	goto	u830
  1416  01C4  29C6               u831:
  1417  01C5                     	goto	l1216
  1418  01C5  2937               u830:
  1419  01C6                     	line	122
  1420                           	
  1421                           l1264:	
  1422  01C6                     ;MasterUart.c: 122:             Valor5 = 1;
  1423                           	clrf	(_Valor5)
  1424  01C6  01BD               	incf	(_Valor5),f
  1425  01C7  0ABD               	goto	l1216
  1426  01C8  2937               	line	123
  1427                           ;MasterUart.c: 123:         }
  1428                           	
  1429                           l142:	
  1430  01C9                     	goto	l1216
  1431  01C9  2937               	
  1432                           l141:	
  1433  01CA                     	goto	l1216
  1434  01CA  2937               	line	126
  1435                           ;MasterUart.c: 126:     }
  1436                           	
  1437                           l143:	
  1438  01CB                     	goto	l1216
  1439  01CB  2937               	
  1440                           l144:	
  1441  01CC                     	line	130
  1442                           ;MasterUart.c: 129:     return;
  1443                           	
  1444                           l145:	
  1445  01CC                     	global	start
  1446                           	ljmp	start
  1447  01CC  120A  118A  280C   	opt stack 0
  1448                           GLOBAL	__end_of_main
  1449                           	__end_of_main:
  1450  01CF                     	signat	_main,89
  1451                           	global	_initOsc
  1452                           
  1453 ;; *************** function _initOsc *****************
  1454 ;; Defined at:
  1455 ;;		line 9 in file "FuncionOscilador.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  frec            1    wreg     unsigned char 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  frec            1    4[COMMON] unsigned char 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1469 ;;      Params:         0       0       0       0       0
  1470 ;;      Locals:         1       0       0       0       0
  1471 ;;      Temps:          2       0       0       0       0
  1472 ;;      Totals:         3       0       0       0       0
  1473 ;;Total ram usage:        3 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    1
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		_main
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1483                           	file	"FuncionOscilador.c"
  1484                           	line	9
  1485                           global __ptext1
  1486                           __ptext1:	;psect for function _initOsc
  1487  0275                     psect	text1
  1488                           	file	"FuncionOscilador.c"
  1489                           	line	9
  1490                           	global	__size_of_initOsc
  1491                           	__size_of_initOsc	equ	__end_of_initOsc-_initOsc
  1492  005D                     	
  1493                           _initOsc:	
  1494  0275                     ;incstack = 0
  1495                           	opt	stack 6
  1496                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1497                           ;initOsc@frec stored from wreg
  1498                           	movwf	(initOsc@frec)
  1499  0275  00F4               	line	10
  1500                           	
  1501                           l1008:	
  1502  0276                     ;FuncionOscilador.c: 10:     switch(frec){
  1503                           	goto	l1012
  1504  0276  2AAE               	line	11
  1505                           ;FuncionOscilador.c: 11:         case 0:
  1506                           	
  1507                           l6:	
  1508  0277                     	line	12
  1509                           ;FuncionOscilador.c: 12:             OSCCONbits.IRCF0 = 0;
  1510                           	bsf	status, 5	;RP0=1, select bank1
  1511  0277  1683               	bcf	status, 6	;RP1=0, select bank1
  1512  0278  1303               	bcf	(143)^080h,4	;volatile
  1513  0279  120F               	line	13
  1514                           ;FuncionOscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  1515                           	bcf	(143)^080h,5	;volatile
  1516  027A  128F               	line	14
  1517                           ;FuncionOscilador.c: 14:             OSCCONbits.IRCF2 = 0;
  1518                           	bcf	(143)^080h,6	;volatile
  1519  027B  130F               	line	15
  1520                           ;FuncionOscilador.c: 15:             break;
  1521                           	goto	l7
  1522  027C  2AD0               	line	16
  1523                           ;FuncionOscilador.c: 16:         case 1:
  1524                           	
  1525                           l8:	
  1526  027D                     	line	17
  1527                           ;FuncionOscilador.c: 17:             OSCCONbits.IRCF0 = 1;
  1528                           	bsf	status, 5	;RP0=1, select bank1
  1529  027D  1683               	bcf	status, 6	;RP1=0, select bank1
  1530  027E  1303               	bsf	(143)^080h,4	;volatile
  1531  027F  160F               	line	18
  1532                           ;FuncionOscilador.c: 18:             OSCCONbits.IRCF1 = 0;
  1533                           	bcf	(143)^080h,5	;volatile
  1534  0280  128F               	line	19
  1535                           ;FuncionOscilador.c: 19:             OSCCONbits.IRCF2 = 0;
  1536                           	bcf	(143)^080h,6	;volatile
  1537  0281  130F               	line	20
  1538                           ;FuncionOscilador.c: 20:             break;
  1539                           	goto	l7
  1540  0282  2AD0               	line	21
  1541                           ;FuncionOscilador.c: 21:         case 2:
  1542                           	
  1543                           l9:	
  1544  0283                     	line	22
  1545                           ;FuncionOscilador.c: 22:             OSCCONbits.IRCF0 = 0;
  1546                           	bsf	status, 5	;RP0=1, select bank1
  1547  0283  1683               	bcf	status, 6	;RP1=0, select bank1
  1548  0284  1303               	bcf	(143)^080h,4	;volatile
  1549  0285  120F               	line	23
  1550                           ;FuncionOscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1551                           	bsf	(143)^080h,5	;volatile
  1552  0286  168F               	line	24
  1553                           ;FuncionOscilador.c: 24:             OSCCONbits.IRCF2 = 0;
  1554                           	bcf	(143)^080h,6	;volatile
  1555  0287  130F               	line	25
  1556                           ;FuncionOscilador.c: 25:             break;
  1557                           	goto	l7
  1558  0288  2AD0               	line	26
  1559                           ;FuncionOscilador.c: 26:         case 3:
  1560                           	
  1561                           l10:	
  1562  0289                     	line	27
  1563                           ;FuncionOscilador.c: 27:             OSCCONbits.IRCF0 = 1;
  1564                           	bsf	status, 5	;RP0=1, select bank1
  1565  0289  1683               	bcf	status, 6	;RP1=0, select bank1
  1566  028A  1303               	bsf	(143)^080h,4	;volatile
  1567  028B  160F               	line	28
  1568                           ;FuncionOscilador.c: 28:             OSCCONbits.IRCF1 = 1;
  1569                           	bsf	(143)^080h,5	;volatile
  1570  028C  168F               	line	29
  1571                           ;FuncionOscilador.c: 29:             OSCCONbits.IRCF2 = 0;
  1572                           	bcf	(143)^080h,6	;volatile
  1573  028D  130F               	line	30
  1574                           ;FuncionOscilador.c: 30:             break;
  1575                           	goto	l7
  1576  028E  2AD0               	line	31
  1577                           ;FuncionOscilador.c: 31:         case 4:
  1578                           	
  1579                           l11:	
  1580  028F                     	line	32
  1581                           ;FuncionOscilador.c: 32:             OSCCONbits.IRCF0 = 0;
  1582                           	bsf	status, 5	;RP0=1, select bank1
  1583  028F  1683               	bcf	status, 6	;RP1=0, select bank1
  1584  0290  1303               	bcf	(143)^080h,4	;volatile
  1585  0291  120F               	line	33
  1586                           ;FuncionOscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1587                           	bcf	(143)^080h,5	;volatile
  1588  0292  128F               	line	34
  1589                           ;FuncionOscilador.c: 34:             OSCCONbits.IRCF2 = 1;
  1590                           	bsf	(143)^080h,6	;volatile
  1591  0293  170F               	line	35
  1592                           ;FuncionOscilador.c: 35:             break;
  1593                           	goto	l7
  1594  0294  2AD0               	line	36
  1595                           ;FuncionOscilador.c: 36:         case 5:
  1596                           	
  1597                           l12:	
  1598  0295                     	line	37
  1599                           ;FuncionOscilador.c: 37:             OSCCONbits.IRCF0 = 1;
  1600                           	bsf	status, 5	;RP0=1, select bank1
  1601  0295  1683               	bcf	status, 6	;RP1=0, select bank1
  1602  0296  1303               	bsf	(143)^080h,4	;volatile
  1603  0297  160F               	line	38
  1604                           ;FuncionOscilador.c: 38:             OSCCONbits.IRCF1 = 0;
  1605                           	bcf	(143)^080h,5	;volatile
  1606  0298  128F               	line	39
  1607                           ;FuncionOscilador.c: 39:             OSCCONbits.IRCF2 = 1;
  1608                           	bsf	(143)^080h,6	;volatile
  1609  0299  170F               	line	40
  1610                           ;FuncionOscilador.c: 40:             break;
  1611                           	goto	l7
  1612  029A  2AD0               	line	42
  1613                           ;FuncionOscilador.c: 42:         case 6:
  1614                           	
  1615                           l13:	
  1616  029B                     	line	43
  1617                           ;FuncionOscilador.c: 43:             OSCCONbits.IRCF0 = 0;
  1618                           	bsf	status, 5	;RP0=1, select bank1
  1619  029B  1683               	bcf	status, 6	;RP1=0, select bank1
  1620  029C  1303               	bcf	(143)^080h,4	;volatile
  1621  029D  120F               	line	44
  1622                           ;FuncionOscilador.c: 44:             OSCCONbits.IRCF1 = 1;
  1623                           	bsf	(143)^080h,5	;volatile
  1624  029E  168F               	line	45
  1625                           ;FuncionOscilador.c: 45:             OSCCONbits.IRCF2 = 1;
  1626                           	bsf	(143)^080h,6	;volatile
  1627  029F  170F               	line	46
  1628                           ;FuncionOscilador.c: 46:             break;
  1629                           	goto	l7
  1630  02A0  2AD0               	line	47
  1631                           ;FuncionOscilador.c: 47:         case 7:
  1632                           	
  1633                           l14:	
  1634  02A1                     	line	48
  1635                           ;FuncionOscilador.c: 48:             OSCCONbits.IRCF0 = 1;
  1636                           	bsf	status, 5	;RP0=1, select bank1
  1637  02A1  1683               	bcf	status, 6	;RP1=0, select bank1
  1638  02A2  1303               	bsf	(143)^080h,4	;volatile
  1639  02A3  160F               	line	49
  1640                           ;FuncionOscilador.c: 49:             OSCCONbits.IRCF1 = 1;
  1641                           	bsf	(143)^080h,5	;volatile
  1642  02A4  168F               	line	50
  1643                           ;FuncionOscilador.c: 50:             OSCCONbits.IRCF2 = 1;
  1644                           	bsf	(143)^080h,6	;volatile
  1645  02A5  170F               	line	51
  1646                           ;FuncionOscilador.c: 51:             break;
  1647                           	goto	l7
  1648  02A6  2AD0               	line	52
  1649                           ;FuncionOscilador.c: 52:         default:
  1650                           	
  1651                           l15:	
  1652  02A7                     	line	53
  1653                           ;FuncionOscilador.c: 53:             OSCCONbits.IRCF0 = 0;
  1654                           	bsf	status, 5	;RP0=1, select bank1
  1655  02A7  1683               	bcf	status, 6	;RP1=0, select bank1
  1656  02A8  1303               	bcf	(143)^080h,4	;volatile
  1657  02A9  120F               	line	54
  1658                           ;FuncionOscilador.c: 54:             OSCCONbits.IRCF1 = 1;
  1659                           	bsf	(143)^080h,5	;volatile
  1660  02AA  168F               	line	55
  1661                           ;FuncionOscilador.c: 55:             OSCCONbits.IRCF2 = 1;
  1662                           	bsf	(143)^080h,6	;volatile
  1663  02AB  170F               	line	56
  1664                           ;FuncionOscilador.c: 56:             break;
  1665                           	goto	l7
  1666  02AC  2AD0               	line	57
  1667                           	
  1668                           l1010:	
  1669  02AD                     ;FuncionOscilador.c: 57:     }
  1670                           	goto	l7
  1671  02AD  2AD0               	
  1672                           l5:	
  1673  02AE                     	
  1674                           l1012:	
  1675  02AE                     	movf	(initOsc@frec),w
  1676  02AE  0874               	movwf	(??_initOsc+0)+0
  1677  02AF  00F2               	clrf	(??_initOsc+0)+0+1
  1678  02B0  01F3               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1679                           ; Switch size 1, requested type "space"
  1680                           ; Number of cases is 1, Range of values is 0 to 0
  1681                           ; switch strategies available:
  1682                           ; Name         Instructions Cycles
  1683                           ; simple_byte            4     3 (average)
  1684                           ; direct_byte           11     8 (fixed)
  1685                           ; jumptable            260     6 (fixed)
  1686                           ;	Chosen strategy is simple_byte
  1687                           
  1688                           	movf 1+(??_initOsc+0)+0,w
  1689  02B1  0873               	opt asmopt_push
  1690                           	opt asmopt_off
  1691                           	xorlw	0^0	; case 0
  1692  02B2  3A00               	skipnz
  1693  02B3  1903               	goto	l1286
  1694  02B4  2AB6               	goto	l15
  1695  02B5  2AA7               	opt asmopt_pop
  1696                           	
  1697                           l1286:	
  1698  02B6                     ; Switch size 1, requested type "space"
  1699                           ; Number of cases is 8, Range of values is 0 to 7
  1700                           ; switch strategies available:
  1701                           ; Name         Instructions Cycles
  1702                           ; simple_byte           25    13 (average)
  1703                           ; direct_byte           32     8 (fixed)
  1704                           ; jumptable            260     6 (fixed)
  1705                           ;	Chosen strategy is simple_byte
  1706                           
  1707                           	movf 0+(??_initOsc+0)+0,w
  1708  02B6  0872               	opt asmopt_push
  1709                           	opt asmopt_off
  1710                           	xorlw	0^0	; case 0
  1711  02B7  3A00               	skipnz
  1712  02B8  1903               	goto	l6
  1713  02B9  2A77               	xorlw	1^0	; case 1
  1714  02BA  3A01               	skipnz
  1715  02BB  1903               	goto	l8
  1716  02BC  2A7D               	xorlw	2^1	; case 2
  1717  02BD  3A03               	skipnz
  1718  02BE  1903               	goto	l9
  1719  02BF  2A83               	xorlw	3^2	; case 3
  1720  02C0  3A01               	skipnz
  1721  02C1  1903               	goto	l10
  1722  02C2  2A89               	xorlw	4^3	; case 4
  1723  02C3  3A07               	skipnz
  1724  02C4  1903               	goto	l11
  1725  02C5  2A8F               	xorlw	5^4	; case 5
  1726  02C6  3A01               	skipnz
  1727  02C7  1903               	goto	l12
  1728  02C8  2A95               	xorlw	6^5	; case 6
  1729  02C9  3A03               	skipnz
  1730  02CA  1903               	goto	l13
  1731  02CB  2A9B               	xorlw	7^6	; case 7
  1732  02CC  3A01               	skipnz
  1733  02CD  1903               	goto	l14
  1734  02CE  2AA1               	goto	l15
  1735  02CF  2AA7               	opt asmopt_pop
  1736                           
  1737                           	
  1738                           l7:	
  1739  02D0                     	line	59
  1740                           ;FuncionOscilador.c: 59:     OSCCONbits.SCS = 1;
  1741                           	bsf	(143)^080h,0	;volatile
  1742  02D0  140F               	line	60
  1743                           	
  1744                           l16:	
  1745  02D1                     	return
  1746  02D1  0008               	opt stack 0
  1747                           GLOBAL	__end_of_initOsc
  1748                           	__end_of_initOsc:
  1749  02D2                     	signat	_initOsc,4217
  1750                           	global	_init
  1751                           
  1752 ;; *************** function _init *****************
  1753 ;; Defined at:
  1754 ;;		line 134 in file "MasterUart.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		status,2
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         0       0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0
  1771 ;;      Totals:         0       0       0       0       0
  1772 ;;Total ram usage:        0 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    1
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_main
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1782                           	file	"MasterUart.c"
  1783                           	line	134
  1784                           global __ptext2
  1785                           __ptext2:	;psect for function _init
  1786  02D2                     psect	text2
  1787                           	file	"MasterUart.c"
  1788                           	line	134
  1789                           	global	__size_of_init
  1790                           	__size_of_init	equ	__end_of_init-_init
  1791  0019                     	
  1792                           _init:	
  1793  02D2                     ;incstack = 0
  1794                           	opt	stack 6
  1795                           ; Regs used in _init: [status,2]
  1796                           	line	136
  1797                           	
  1798                           l1046:	
  1799  02D2                     ;MasterUart.c: 136:     TRISA = 0;
  1800                           	bsf	status, 5	;RP0=1, select bank1
  1801  02D2  1683               	bcf	status, 6	;RP1=0, select bank1
  1802  02D3  1303               	clrf	(133)^080h	;volatile
  1803  02D4  0185               	line	137
  1804                           ;MasterUart.c: 137:     TRISB = 0;
  1805                           	clrf	(134)^080h	;volatile
  1806  02D5  0186               	line	138
  1807                           ;MasterUart.c: 138:     TRISD = 0;
  1808                           	clrf	(136)^080h	;volatile
  1809  02D6  0188               	line	139
  1810                           ;MasterUart.c: 139:     TRISC = 0;
  1811                           	clrf	(135)^080h	;volatile
  1812  02D7  0187               	line	140
  1813                           ;MasterUart.c: 140:     TRISE = 0;
  1814                           	clrf	(137)^080h	;volatile
  1815  02D8  0189               	line	143
  1816                           	
  1817                           l1048:	
  1818  02D9                     ;MasterUart.c: 143:     TRISCbits.TRISC7 = 1;
  1819                           	bsf	(135)^080h,7	;volatile
  1820  02D9  1787               	line	144
  1821                           	
  1822                           l1050:	
  1823  02DA                     ;MasterUart.c: 144:     TRISCbits.TRISC6 = 1;
  1824                           	bsf	(135)^080h,6	;volatile
  1825  02DA  1707               	line	148
  1826                           	
  1827                           l1052:	
  1828  02DB                     ;MasterUart.c: 148:     TRISCbits.TRISC5 = 0;
  1829                           	bcf	(135)^080h,5	;volatile
  1830  02DB  1287               	line	149
  1831                           	
  1832                           l1054:	
  1833  02DC                     ;MasterUart.c: 149:     TRISCbits.TRISC4 = 1;
  1834                           	bsf	(135)^080h,4	;volatile
  1835  02DC  1607               	line	150
  1836                           	
  1837                           l1056:	
  1838  02DD                     ;MasterUart.c: 150:     TRISCbits.TRISC3 = 1;
  1839                           	bsf	(135)^080h,3	;volatile
  1840  02DD  1587               	line	153
  1841                           ;MasterUart.c: 153:     ANSEL = 0;
  1842                           	bsf	status, 5	;RP0=1, select bank3
  1843  02DE  1683               	bsf	status, 6	;RP1=1, select bank3
  1844  02DF  1703               	clrf	(392)^0180h	;volatile
  1845  02E0  0188               	line	154
  1846                           ;MasterUart.c: 154:     ANSELH = 0;
  1847                           	clrf	(393)^0180h	;volatile
  1848  02E1  0189               	line	157
  1849                           ;MasterUart.c: 157:     PORTA = 0;
  1850                           	bcf	status, 5	;RP0=0, select bank0
  1851  02E2  1283               	bcf	status, 6	;RP1=0, select bank0
  1852  02E3  1303               	clrf	(5)	;volatile
  1853  02E4  0185               	line	158
  1854                           ;MasterUart.c: 158:     PORTB = 0;
  1855                           	clrf	(6)	;volatile
  1856  02E5  0186               	line	159
  1857                           ;MasterUart.c: 159:     PORTD = 0;
  1858                           	clrf	(8)	;volatile
  1859  02E6  0188               	line	160
  1860                           ;MasterUart.c: 160:     PORTC = 0;
  1861                           	clrf	(7)	;volatile
  1862  02E7  0187               	line	161
  1863                           ;MasterUart.c: 161:     PORTE = 0;
  1864                           	clrf	(9)	;volatile
  1865  02E8  0189               	goto	l148
  1866  02E9  2AEA               	line	178
  1867                           	
  1868                           l1058:	
  1869  02EA                     	line	179
  1870                           ;MasterUart.c: 178:     return;
  1871                           	
  1872                           l148:	
  1873  02EA                     	return
  1874  02EA  0008               	opt stack 0
  1875                           GLOBAL	__end_of_init
  1876                           	__end_of_init:
  1877  02EB                     	signat	_init,89
  1878                           	global	_UART_Init
  1879                           
  1880 ;; *************** function _UART_Init *****************
  1881 ;; Defined at:
  1882 ;;		line 13 in file "USARTinit.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;  baudrate        4    8[BANK0 ] const long 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  x               2   24[BANK0 ] unsigned int 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      unsigned char 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0, pclath, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1896 ;;      Params:         0       4       0       0       0
  1897 ;;      Locals:         0       2       0       0       0
  1898 ;;      Temps:          0      12       0       0       0
  1899 ;;      Totals:         0      18       0       0       0
  1900 ;;Total ram usage:       18 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    2
  1903 ;; This function calls:
  1904 ;;		___aldiv
  1905 ;; This function is called by:
  1906 ;;		_main
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1910                           	file	"USARTinit.c"
  1911                           	line	13
  1912                           global __ptext3
  1913                           __ptext3:	;psect for function _UART_Init
  1914  002F                     psect	text3
  1915                           	file	"USARTinit.c"
  1916                           	line	13
  1917                           	global	__size_of_UART_Init
  1918                           	__size_of_UART_Init	equ	__end_of_UART_Init-_UART_Init
  1919  00ED                     	
  1920                           _UART_Init:	
  1921  002F                     ;incstack = 0
  1922                           	opt	stack 5
  1923                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1924                           	line	16
  1925                           	
  1926                           l1182:	
  1927  002F                     ;USARTinit.c: 13: char UART_Init(const long int baudrate);USARTinit.c: 14: {;USARTinit.c
                                 : 15:   unsigned int x;;USARTinit.c: 16:   x = (8000000 - baudrate*64)/(baudrate*64);
  1928                           	bcf	status, 5	;RP0=0, select bank0
  1929  002F  1283               	bcf	status, 6	;RP1=0, select bank0
  1930  0030  1303               	movf	(UART_Init@baudrate),w
  1931  0031  0828               	movwf	(??_UART_Init+0)+0
  1932  0032  00AC               	movf	(UART_Init@baudrate+1),w
  1933  0033  0829               	movwf	((??_UART_Init+0)+0+1)
  1934  0034  00AD               	movf	(UART_Init@baudrate+2),w
  1935  0035  082A               	movwf	((??_UART_Init+0)+0+2)
  1936  0036  00AE               	movf	(UART_Init@baudrate+3),w
  1937  0037  082B               	movwf	((??_UART_Init+0)+0+3)
  1938  0038  00AF               	movlw	06h
  1939  0039  3006               u705:
  1940  003A                     	clrc
  1941  003A  1003               	rlf	(??_UART_Init+0)+0,f
  1942  003B  0DAC               	rlf	(??_UART_Init+0)+1,f
  1943  003C  0DAD               	rlf	(??_UART_Init+0)+2,f
  1944  003D  0DAE               	rlf	(??_UART_Init+0)+3,f
  1945  003E  0DAF               u700:
  1946  003F                     	addlw	-1
  1947  003F  3EFF               	skipz
  1948  0040  1D03               	goto	u705
  1949  0041  283A               	movf	3+(??_UART_Init+0)+0,w
  1950  0042  082F               	movwf	(___aldiv@divisor+3)
  1951  0043  00A3               	movf	2+(??_UART_Init+0)+0,w
  1952  0044  082E               	movwf	(___aldiv@divisor+2)
  1953  0045  00A2               	movf	1+(??_UART_Init+0)+0,w
  1954  0046  082D               	movwf	(___aldiv@divisor+1)
  1955  0047  00A1               	movf	0+(??_UART_Init+0)+0,w
  1956  0048  082C               	movwf	(___aldiv@divisor)
  1957  0049  00A0               
  1958                           	movlw	0
  1959  004A  3000               	movwf	((??_UART_Init+4)+0)
  1960  004B  00B0               	movlw	012h
  1961  004C  3012               	movwf	((??_UART_Init+4)+0+1)
  1962  004D  00B1               	movlw	07Ah
  1963  004E  307A               	movwf	((??_UART_Init+4)+0+2)
  1964  004F  00B2               	movlw	0
  1965  0050  3000               	movwf	((??_UART_Init+4)+0+3)
  1966  0051  00B3               	movf	(UART_Init@baudrate),w
  1967  0052  0828               	movwf	(??_UART_Init+8)+0
  1968  0053  00B4               	movf	(UART_Init@baudrate+1),w
  1969  0054  0829               	movwf	((??_UART_Init+8)+0+1)
  1970  0055  00B5               	movf	(UART_Init@baudrate+2),w
  1971  0056  082A               	movwf	((??_UART_Init+8)+0+2)
  1972  0057  00B6               	movf	(UART_Init@baudrate+3),w
  1973  0058  082B               	movwf	((??_UART_Init+8)+0+3)
  1974  0059  00B7               	movlw	06h
  1975  005A  3006               u715:
  1976  005B                     	clrc
  1977  005B  1003               	rlf	(??_UART_Init+8)+0,f
  1978  005C  0DB4               	rlf	(??_UART_Init+8)+1,f
  1979  005D  0DB5               	rlf	(??_UART_Init+8)+2,f
  1980  005E  0DB6               	rlf	(??_UART_Init+8)+3,f
  1981  005F  0DB7               u710:
  1982  0060                     	addlw	-1
  1983  0060  3EFF               	skipz
  1984  0061  1D03               	goto	u715
  1985  0062  285B               	comf	(??_UART_Init+8)+0,f
  1986  0063  09B4               	comf	(??_UART_Init+8)+1,f
  1987  0064  09B5               	comf	(??_UART_Init+8)+2,f
  1988  0065  09B6               	comf	(??_UART_Init+8)+3,f
  1989  0066  09B7               	incf	(??_UART_Init+8)+0,f
  1990  0067  0AB4               	skipnz
  1991  0068  1903               	incf	(??_UART_Init+8)+1,f
  1992  0069  0AB5               	skipnz
  1993  006A  1903               	incf	(??_UART_Init+8)+2,f
  1994  006B  0AB6               	skipnz
  1995  006C  1903               	incf	(??_UART_Init+8)+3,f
  1996  006D  0AB7               	movf	0+(??_UART_Init+8)+0,w
  1997  006E  0834               	addwf	(??_UART_Init+4)+0,f
  1998  006F  07B0               	movf	1+(??_UART_Init+8)+0,w
  1999  0070  0835               	skipnc
  2000  0071  1803               	incfsz	1+(??_UART_Init+8)+0,w
  2001  0072  0F35               	goto	u720
  2002  0073  2875               	goto	u721
  2003  0074  2876               u720:
  2004  0075                     	addwf	(??_UART_Init+4)+1,f
  2005  0075  07B1               u721:
  2006  0076                     	movf	2+(??_UART_Init+8)+0,w
  2007  0076  0836               	skipnc
  2008  0077  1803               	incfsz	2+(??_UART_Init+8)+0,w
  2009  0078  0F36               	goto	u722
  2010  0079  287B               	goto	u723
  2011  007A  287C               u722:
  2012  007B                     	addwf	(??_UART_Init+4)+2,f
  2013  007B  07B2               u723:
  2014  007C                     	movf	3+(??_UART_Init+8)+0,w
  2015  007C  0837               	skipnc
  2016  007D  1803               	incf	3+(??_UART_Init+8)+0,w
  2017  007E  0A37               	addwf	(??_UART_Init+4)+3,f
  2018  007F  07B3               	movf	3+(??_UART_Init+4)+0,w
  2019  0080  0833               	movwf	(___aldiv@dividend+3)
  2020  0081  00A7               	movf	2+(??_UART_Init+4)+0,w
  2021  0082  0832               	movwf	(___aldiv@dividend+2)
  2022  0083  00A6               	movf	1+(??_UART_Init+4)+0,w
  2023  0084  0831               	movwf	(___aldiv@dividend+1)
  2024  0085  00A5               	movf	0+(??_UART_Init+4)+0,w
  2025  0086  0830               	movwf	(___aldiv@dividend)
  2026  0087  00A4               
  2027                           	fcall	___aldiv
  2028  0088  120A  118A  21CF  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2029  008D  1283               	bcf	status, 6	;RP1=0, select bank0
  2030  008E  1303               	movf	(1+(?___aldiv)),w
  2031  008F  0821               	movwf	(UART_Init@x+1)
  2032  0090  00B9               	movf	(0+(?___aldiv)),w
  2033  0091  0820               	movwf	(UART_Init@x)
  2034  0092  00B8               	line	17
  2035                           	
  2036                           l1184:	
  2037  0093                     ;USARTinit.c: 17:   if(x>255)
  2038                           	movlw	01h
  2039  0093  3001               	subwf	(UART_Init@x+1),w
  2040  0094  0239               	movlw	0
  2041  0095  3000               	skipnz
  2042  0096  1903               	subwf	(UART_Init@x),w
  2043  0097  0238               	skipc
  2044  0098  1C03               	goto	u731
  2045  0099  289B               	goto	u730
  2046  009A  289C               u731:
  2047  009B                     	goto	l1190
  2048  009B  2902               u730:
  2049  009C                     	line	19
  2050                           	
  2051                           l1186:	
  2052  009C                     ;USARTinit.c: 18:   {;USARTinit.c: 19:     x = (8000000 - baudrate*16)/(baudrate*16);
  2053                           	movf	(UART_Init@baudrate),w
  2054  009C  0828               	movwf	(??_UART_Init+0)+0
  2055  009D  00AC               	movf	(UART_Init@baudrate+1),w
  2056  009E  0829               	movwf	((??_UART_Init+0)+0+1)
  2057  009F  00AD               	movf	(UART_Init@baudrate+2),w
  2058  00A0  082A               	movwf	((??_UART_Init+0)+0+2)
  2059  00A1  00AE               	movf	(UART_Init@baudrate+3),w
  2060  00A2  082B               	movwf	((??_UART_Init+0)+0+3)
  2061  00A3  00AF               	movlw	04h
  2062  00A4  3004               u745:
  2063  00A5                     	clrc
  2064  00A5  1003               	rlf	(??_UART_Init+0)+0,f
  2065  00A6  0DAC               	rlf	(??_UART_Init+0)+1,f
  2066  00A7  0DAD               	rlf	(??_UART_Init+0)+2,f
  2067  00A8  0DAE               	rlf	(??_UART_Init+0)+3,f
  2068  00A9  0DAF               u740:
  2069  00AA                     	addlw	-1
  2070  00AA  3EFF               	skipz
  2071  00AB  1D03               	goto	u745
  2072  00AC  28A5               	movf	3+(??_UART_Init+0)+0,w
  2073  00AD  082F               	movwf	(___aldiv@divisor+3)
  2074  00AE  00A3               	movf	2+(??_UART_Init+0)+0,w
  2075  00AF  082E               	movwf	(___aldiv@divisor+2)
  2076  00B0  00A2               	movf	1+(??_UART_Init+0)+0,w
  2077  00B1  082D               	movwf	(___aldiv@divisor+1)
  2078  00B2  00A1               	movf	0+(??_UART_Init+0)+0,w
  2079  00B3  082C               	movwf	(___aldiv@divisor)
  2080  00B4  00A0               
  2081                           	movlw	0
  2082  00B5  3000               	movwf	((??_UART_Init+4)+0)
  2083  00B6  00B0               	movlw	012h
  2084  00B7  3012               	movwf	((??_UART_Init+4)+0+1)
  2085  00B8  00B1               	movlw	07Ah
  2086  00B9  307A               	movwf	((??_UART_Init+4)+0+2)
  2087  00BA  00B2               	movlw	0
  2088  00BB  3000               	movwf	((??_UART_Init+4)+0+3)
  2089  00BC  00B3               	movf	(UART_Init@baudrate),w
  2090  00BD  0828               	movwf	(??_UART_Init+8)+0
  2091  00BE  00B4               	movf	(UART_Init@baudrate+1),w
  2092  00BF  0829               	movwf	((??_UART_Init+8)+0+1)
  2093  00C0  00B5               	movf	(UART_Init@baudrate+2),w
  2094  00C1  082A               	movwf	((??_UART_Init+8)+0+2)
  2095  00C2  00B6               	movf	(UART_Init@baudrate+3),w
  2096  00C3  082B               	movwf	((??_UART_Init+8)+0+3)
  2097  00C4  00B7               	movlw	04h
  2098  00C5  3004               u755:
  2099  00C6                     	clrc
  2100  00C6  1003               	rlf	(??_UART_Init+8)+0,f
  2101  00C7  0DB4               	rlf	(??_UART_Init+8)+1,f
  2102  00C8  0DB5               	rlf	(??_UART_Init+8)+2,f
  2103  00C9  0DB6               	rlf	(??_UART_Init+8)+3,f
  2104  00CA  0DB7               u750:
  2105  00CB                     	addlw	-1
  2106  00CB  3EFF               	skipz
  2107  00CC  1D03               	goto	u755
  2108  00CD  28C6               	comf	(??_UART_Init+8)+0,f
  2109  00CE  09B4               	comf	(??_UART_Init+8)+1,f
  2110  00CF  09B5               	comf	(??_UART_Init+8)+2,f
  2111  00D0  09B6               	comf	(??_UART_Init+8)+3,f
  2112  00D1  09B7               	incf	(??_UART_Init+8)+0,f
  2113  00D2  0AB4               	skipnz
  2114  00D3  1903               	incf	(??_UART_Init+8)+1,f
  2115  00D4  0AB5               	skipnz
  2116  00D5  1903               	incf	(??_UART_Init+8)+2,f
  2117  00D6  0AB6               	skipnz
  2118  00D7  1903               	incf	(??_UART_Init+8)+3,f
  2119  00D8  0AB7               	movf	0+(??_UART_Init+8)+0,w
  2120  00D9  0834               	addwf	(??_UART_Init+4)+0,f
  2121  00DA  07B0               	movf	1+(??_UART_Init+8)+0,w
  2122  00DB  0835               	skipnc
  2123  00DC  1803               	incfsz	1+(??_UART_Init+8)+0,w
  2124  00DD  0F35               	goto	u760
  2125  00DE  28E0               	goto	u761
  2126  00DF  28E1               u760:
  2127  00E0                     	addwf	(??_UART_Init+4)+1,f
  2128  00E0  07B1               u761:
  2129  00E1                     	movf	2+(??_UART_Init+8)+0,w
  2130  00E1  0836               	skipnc
  2131  00E2  1803               	incfsz	2+(??_UART_Init+8)+0,w
  2132  00E3  0F36               	goto	u762
  2133  00E4  28E6               	goto	u763
  2134  00E5  28E7               u762:
  2135  00E6                     	addwf	(??_UART_Init+4)+2,f
  2136  00E6  07B2               u763:
  2137  00E7                     	movf	3+(??_UART_Init+8)+0,w
  2138  00E7  0837               	skipnc
  2139  00E8  1803               	incf	3+(??_UART_Init+8)+0,w
  2140  00E9  0A37               	addwf	(??_UART_Init+4)+3,f
  2141  00EA  07B3               	movf	3+(??_UART_Init+4)+0,w
  2142  00EB  0833               	movwf	(___aldiv@dividend+3)
  2143  00EC  00A7               	movf	2+(??_UART_Init+4)+0,w
  2144  00ED  0832               	movwf	(___aldiv@dividend+2)
  2145  00EE  00A6               	movf	1+(??_UART_Init+4)+0,w
  2146  00EF  0831               	movwf	(___aldiv@dividend+1)
  2147  00F0  00A5               	movf	0+(??_UART_Init+4)+0,w
  2148  00F1  0830               	movwf	(___aldiv@dividend)
  2149  00F2  00A4               
  2150                           	fcall	___aldiv
  2151  00F3  120A  118A  21CF  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2152  00F8  1283               	bcf	status, 6	;RP1=0, select bank0
  2153  00F9  1303               	movf	(1+(?___aldiv)),w
  2154  00FA  0821               	movwf	(UART_Init@x+1)
  2155  00FB  00B9               	movf	(0+(?___aldiv)),w
  2156  00FC  0820               	movwf	(UART_Init@x)
  2157  00FD  00B8               	line	20
  2158                           	
  2159                           l1188:	
  2160  00FE                     ;USARTinit.c: 20:     TXSTAbits.BRGH=1;
  2161                           	bsf	status, 5	;RP0=1, select bank1
  2162  00FE  1683               	bcf	status, 6	;RP1=0, select bank1
  2163  00FF  1303               	bsf	(152)^080h,2	;volatile
  2164  0100  1518               	goto	l1190
  2165  0101  2902               	line	21
  2166                           ;USARTinit.c: 21:   }
  2167                           	
  2168                           l33:	
  2169  0102                     	line	22
  2170                           	
  2171                           l1190:	
  2172  0102                     ;USARTinit.c: 22:   if(x<256)
  2173                           	movlw	01h
  2174  0102  3001               	bcf	status, 5	;RP0=0, select bank0
  2175  0103  1283               	subwf	(UART_Init@x+1),w
  2176  0104  0239               	movlw	0
  2177  0105  3000               	skipnz
  2178  0106  1903               	subwf	(UART_Init@x),w
  2179  0107  0238               	skipnc
  2180  0108  1803               	goto	u771
  2181  0109  290B               	goto	u770
  2182  010A  290C               u771:
  2183  010B                     	goto	l35
  2184  010B  291B               u770:
  2185  010C                     	line	24
  2186                           	
  2187                           l1192:	
  2188  010C                     ;USARTinit.c: 23:   {;USARTinit.c: 24:     SPBRG = x;
  2189                           	movf	(UART_Init@x),w
  2190  010C  0838               	bsf	status, 5	;RP0=1, select bank1
  2191  010D  1683               	bcf	status, 6	;RP1=0, select bank1
  2192  010E  1303               	movwf	(153)^080h	;volatile
  2193  010F  0099               	line	26
  2194                           	
  2195                           l1194:	
  2196  0110                     ;USARTinit.c: 26:     TXSTAbits.TX9=0;
  2197                           	bcf	(152)^080h,6	;volatile
  2198  0110  1318               	line	27
  2199                           	
  2200                           l1196:	
  2201  0111                     ;USARTinit.c: 27:     TXSTAbits.TXEN=1;
  2202                           	bsf	(152)^080h,5	;volatile
  2203  0111  1698               	line	28
  2204                           	
  2205                           l1198:	
  2206  0112                     ;USARTinit.c: 28:     TXSTAbits.SYNC=0;
  2207                           	bcf	(152)^080h,4	;volatile
  2208  0112  1218               	line	31
  2209                           	
  2210                           l1200:	
  2211  0113                     ;USARTinit.c: 31:     RCSTAbits.SPEN=1;
  2212                           	bcf	status, 5	;RP0=0, select bank0
  2213  0113  1283               	bcf	status, 6	;RP1=0, select bank0
  2214  0114  1303               	bsf	(24),7	;volatile
  2215  0115  1798               	line	32
  2216                           	
  2217                           l1202:	
  2218  0116                     ;USARTinit.c: 32:     RCSTAbits.RX9=0;
  2219                           	bcf	(24),6	;volatile
  2220  0116  1318               	line	33
  2221                           	
  2222                           l1204:	
  2223  0117                     ;USARTinit.c: 33:     RCSTAbits.CREN=1;
  2224                           	bsf	(24),4	;volatile
  2225  0117  1618               	line	34
  2226                           	
  2227                           l1206:	
  2228  0118                     ;USARTinit.c: 34:     RCSTAbits.ADDEN=0;
  2229                           	bcf	(24),3	;volatile
  2230  0118  1198               	goto	l35
  2231  0119  291B               	line	35
  2232                           	
  2233                           l1208:	
  2234  011A                     ;USARTinit.c: 35:     return 1;;	Return value of _UART_Init is never used
  2235                           	goto	l35
  2236  011A  291B               	line	36
  2237                           ;USARTinit.c: 36:   }
  2238                           	
  2239                           l34:	
  2240  011B                     	line	38
  2241                           ;USARTinit.c: 37:   return 0;;	Return value of _UART_Init is never used
  2242                           	
  2243                           l35:	
  2244  011B                     	return
  2245  011B  0008               	opt stack 0
  2246                           GLOBAL	__end_of_UART_Init
  2247                           	__end_of_UART_Init:
  2248  011C                     	signat	_UART_Init,4217
  2249                           	global	___aldiv
  2250                           
  2251 ;; *************** function ___aldiv *****************
  2252 ;; Defined at:
  2253 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  divisor         4    0[BANK0 ] long 
  2256 ;;  dividend        4    4[BANK0 ] long 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  quotient        4    5[COMMON] long 
  2259 ;;  sign            1    4[COMMON] unsigned char 
  2260 ;;  counter         1    3[COMMON] unsigned char 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  4    0[BANK0 ] long 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2270 ;;      Params:         0       8       0       0       0
  2271 ;;      Locals:         6       0       0       0       0
  2272 ;;      Temps:          1       0       0       0       0
  2273 ;;      Totals:         7       8       0       0       0
  2274 ;;Total ram usage:       15 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    1
  2277 ;; This function calls:
  2278 ;;		Nothing
  2279 ;; This function is called by:
  2280 ;;		_UART_Init
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  2284                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  2285                           	line	5
  2286                           global __ptext4
  2287                           __ptext4:	;psect for function ___aldiv
  2288  01CF                     psect	text4
  2289                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  2290                           	line	5
  2291                           	global	__size_of___aldiv
  2292                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  2293  00A6                     	
  2294                           ___aldiv:	
  2295  01CF                     ;incstack = 0
  2296                           	opt	stack 5
  2297                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2298                           	line	13
  2299                           	
  2300                           l1142:	
  2301  01CF                     	clrf	(___aldiv@sign)
  2302  01CF  01F4               	line	14
  2303                           	
  2304                           l1144:	
  2305  01D0                     	bcf	status, 5	;RP0=0, select bank0
  2306  01D0  1283               	bcf	status, 6	;RP1=0, select bank0
  2307  01D1  1303               	btfss	(___aldiv@divisor+3),7
  2308  01D2  1FA3               	goto	u601
  2309  01D3  29D5               	goto	u600
  2310  01D4  29D6               u601:
  2311  01D5                     	goto	l316
  2312  01D5  29E3               u600:
  2313  01D6                     	line	15
  2314                           	
  2315                           l1146:	
  2316  01D6                     	comf	(___aldiv@divisor),f
  2317  01D6  09A0               	comf	(___aldiv@divisor+1),f
  2318  01D7  09A1               	comf	(___aldiv@divisor+2),f
  2319  01D8  09A2               	comf	(___aldiv@divisor+3),f
  2320  01D9  09A3               	incf	(___aldiv@divisor),f
  2321  01DA  0AA0               	skipnz
  2322  01DB  1903               	incf	(___aldiv@divisor+1),f
  2323  01DC  0AA1               	skipnz
  2324  01DD  1903               	incf	(___aldiv@divisor+2),f
  2325  01DE  0AA2               	skipnz
  2326  01DF  1903               	incf	(___aldiv@divisor+3),f
  2327  01E0  0AA3               	line	16
  2328                           	clrf	(___aldiv@sign)
  2329  01E1  01F4               	incf	(___aldiv@sign),f
  2330  01E2  0AF4               	line	17
  2331                           	
  2332                           l316:	
  2333  01E3                     	line	18
  2334                           	btfss	(___aldiv@dividend+3),7
  2335  01E3  1FA7               	goto	u611
  2336  01E4  29E6               	goto	u610
  2337  01E5  29E7               u611:
  2338  01E6                     	goto	l1152
  2339  01E6  29F7               u610:
  2340  01E7                     	line	19
  2341                           	
  2342                           l1148:	
  2343  01E7                     	comf	(___aldiv@dividend),f
  2344  01E7  09A4               	comf	(___aldiv@dividend+1),f
  2345  01E8  09A5               	comf	(___aldiv@dividend+2),f
  2346  01E9  09A6               	comf	(___aldiv@dividend+3),f
  2347  01EA  09A7               	incf	(___aldiv@dividend),f
  2348  01EB  0AA4               	skipnz
  2349  01EC  1903               	incf	(___aldiv@dividend+1),f
  2350  01ED  0AA5               	skipnz
  2351  01EE  1903               	incf	(___aldiv@dividend+2),f
  2352  01EF  0AA6               	skipnz
  2353  01F0  1903               	incf	(___aldiv@dividend+3),f
  2354  01F1  0AA7               	line	20
  2355                           	
  2356                           l1150:	
  2357  01F2                     	movlw	low(01h)
  2358  01F2  3001               	movwf	(??___aldiv+0)+0
  2359  01F3  00F2               	movf	(??___aldiv+0)+0,w
  2360  01F4  0872               	xorwf	(___aldiv@sign),f
  2361  01F5  06F4               	goto	l1152
  2362  01F6  29F7               	line	21
  2363                           	
  2364                           l317:	
  2365  01F7                     	line	22
  2366                           	
  2367                           l1152:	
  2368  01F7                     	movlw	high highword(0)
  2369  01F7  3000               	movwf	(___aldiv@quotient+3)
  2370  01F8  00F8               	movlw	low highword(0)
  2371  01F9  3000               	movwf	(___aldiv@quotient+2)
  2372  01FA  00F7               	movlw	high(0)
  2373  01FB  3000               	movwf	(___aldiv@quotient+1)
  2374  01FC  00F6               	movlw	low(0)
  2375  01FD  3000               	movwf	(___aldiv@quotient)
  2376  01FE  00F5               
  2377                           	line	23
  2378                           	
  2379                           l1154:	
  2380  01FF                     	movf	(___aldiv@divisor+3),w
  2381  01FF  0823               	iorwf	(___aldiv@divisor+2),w
  2382  0200  0422               	iorwf	(___aldiv@divisor+1),w
  2383  0201  0421               	iorwf	(___aldiv@divisor),w
  2384  0202  0420               	skipnz
  2385  0203  1903               	goto	u621
  2386  0204  2A06               	goto	u620
  2387  0205  2A07               u621:
  2388  0206                     	goto	l1174
  2389  0206  2A5A               u620:
  2390  0207                     	line	24
  2391                           	
  2392                           l1156:	
  2393  0207                     	clrf	(___aldiv@counter)
  2394  0207  01F3               	incf	(___aldiv@counter),f
  2395  0208  0AF3               	line	25
  2396                           	goto	l1160
  2397  0209  2A18               	
  2398                           l320:	
  2399  020A                     	line	26
  2400                           	
  2401                           l1158:	
  2402  020A                     	movlw	01h
  2403  020A  3001               	movwf	(??___aldiv+0)+0
  2404  020B  00F2               u635:
  2405  020C                     	clrc
  2406  020C  1003               	rlf	(___aldiv@divisor),f
  2407  020D  0DA0               	rlf	(___aldiv@divisor+1),f
  2408  020E  0DA1               	rlf	(___aldiv@divisor+2),f
  2409  020F  0DA2               	rlf	(___aldiv@divisor+3),f
  2410  0210  0DA3               	decfsz	(??___aldiv+0)+0
  2411  0211  0BF2               	goto	u635
  2412  0212  2A0C               	line	27
  2413                           	movlw	low(01h)
  2414  0213  3001               	movwf	(??___aldiv+0)+0
  2415  0214  00F2               	movf	(??___aldiv+0)+0,w
  2416  0215  0872               	addwf	(___aldiv@counter),f
  2417  0216  07F3               	goto	l1160
  2418  0217  2A18               	line	28
  2419                           	
  2420                           l319:	
  2421  0218                     	line	25
  2422                           	
  2423                           l1160:	
  2424  0218                     	btfss	(___aldiv@divisor+3),(31)&7
  2425  0218  1FA3               	goto	u641
  2426  0219  2A1B               	goto	u640
  2427  021A  2A1C               u641:
  2428  021B                     	goto	l1158
  2429  021B  2A0A               u640:
  2430  021C                     	goto	l1162
  2431  021C  2A1E               	
  2432                           l321:	
  2433  021D                     	goto	l1162
  2434  021D  2A1E               	line	29
  2435                           	
  2436                           l322:	
  2437  021E                     	line	30
  2438                           	
  2439                           l1162:	
  2440  021E                     	movlw	01h
  2441  021E  3001               	movwf	(??___aldiv+0)+0
  2442  021F  00F2               u655:
  2443  0220                     	clrc
  2444  0220  1003               	rlf	(___aldiv@quotient),f
  2445  0221  0DF5               	rlf	(___aldiv@quotient+1),f
  2446  0222  0DF6               	rlf	(___aldiv@quotient+2),f
  2447  0223  0DF7               	rlf	(___aldiv@quotient+3),f
  2448  0224  0DF8               	decfsz	(??___aldiv+0)+0
  2449  0225  0BF2               	goto	u655
  2450  0226  2A20               	line	31
  2451                           	
  2452                           l1164:	
  2453  0227                     	movf	(___aldiv@divisor+3),w
  2454  0227  0823               	subwf	(___aldiv@dividend+3),w
  2455  0228  0227               	skipz
  2456  0229  1D03               	goto	u665
  2457  022A  2A35               	movf	(___aldiv@divisor+2),w
  2458  022B  0822               	subwf	(___aldiv@dividend+2),w
  2459  022C  0226               	skipz
  2460  022D  1D03               	goto	u665
  2461  022E  2A35               	movf	(___aldiv@divisor+1),w
  2462  022F  0821               	subwf	(___aldiv@dividend+1),w
  2463  0230  0225               	skipz
  2464  0231  1D03               	goto	u665
  2465  0232  2A35               	movf	(___aldiv@divisor),w
  2466  0233  0820               	subwf	(___aldiv@dividend),w
  2467  0234  0224               u665:
  2468  0235                     	skipc
  2469  0235  1C03               	goto	u661
  2470  0236  2A38               	goto	u660
  2471  0237  2A39               u661:
  2472  0238                     	goto	l1170
  2473  0238  2A49               u660:
  2474  0239                     	line	32
  2475                           	
  2476                           l1166:	
  2477  0239                     	movf	(___aldiv@divisor),w
  2478  0239  0820               	subwf	(___aldiv@dividend),f
  2479  023A  02A4               	movf	(___aldiv@divisor+1),w
  2480  023B  0821               	skipc
  2481  023C  1C03               	incfsz	(___aldiv@divisor+1),w
  2482  023D  0F21               	subwf	(___aldiv@dividend+1),f
  2483  023E  02A5               	movf	(___aldiv@divisor+2),w
  2484  023F  0822               	skipc
  2485  0240  1C03               	incfsz	(___aldiv@divisor+2),w
  2486  0241  0F22               	subwf	(___aldiv@dividend+2),f
  2487  0242  02A6               	movf	(___aldiv@divisor+3),w
  2488  0243  0823               	skipc
  2489  0244  1C03               	incfsz	(___aldiv@divisor+3),w
  2490  0245  0F23               	subwf	(___aldiv@dividend+3),f
  2491  0246  02A7               	line	33
  2492                           	
  2493                           l1168:	
  2494  0247                     	bsf	(___aldiv@quotient)+(0/8),(0)&7
  2495  0247  1475               	goto	l1170
  2496  0248  2A49               	line	34
  2497                           	
  2498                           l323:	
  2499  0249                     	line	35
  2500                           	
  2501                           l1170:	
  2502  0249                     	movlw	01h
  2503  0249  3001               u675:
  2504  024A                     	clrc
  2505  024A  1003               	rrf	(___aldiv@divisor+3),f
  2506  024B  0CA3               	rrf	(___aldiv@divisor+2),f
  2507  024C  0CA2               	rrf	(___aldiv@divisor+1),f
  2508  024D  0CA1               	rrf	(___aldiv@divisor),f
  2509  024E  0CA0               	addlw	-1
  2510  024F  3EFF               	skipz
  2511  0250  1D03               	goto	u675
  2512  0251  2A4A               
  2513                           	line	36
  2514                           	
  2515                           l1172:	
  2516  0252                     	movlw	01h
  2517  0252  3001               	subwf	(___aldiv@counter),f
  2518  0253  02F3               	btfss	status,2
  2519  0254  1D03               	goto	u681
  2520  0255  2A57               	goto	u680
  2521  0256  2A58               u681:
  2522  0257                     	goto	l1162
  2523  0257  2A1E               u680:
  2524  0258                     	goto	l1174
  2525  0258  2A5A               	
  2526                           l324:	
  2527  0259                     	goto	l1174
  2528  0259  2A5A               	line	37
  2529                           	
  2530                           l318:	
  2531  025A                     	line	38
  2532                           	
  2533                           l1174:	
  2534  025A                     	movf	((___aldiv@sign)),w
  2535  025A  0874               	btfsc	status,2
  2536  025B  1903               	goto	u691
  2537  025C  2A5E               	goto	u690
  2538  025D  2A5F               u691:
  2539  025E                     	goto	l1178
  2540  025E  2A6B               u690:
  2541  025F                     	line	39
  2542                           	
  2543                           l1176:	
  2544  025F                     	comf	(___aldiv@quotient),f
  2545  025F  09F5               	comf	(___aldiv@quotient+1),f
  2546  0260  09F6               	comf	(___aldiv@quotient+2),f
  2547  0261  09F7               	comf	(___aldiv@quotient+3),f
  2548  0262  09F8               	incf	(___aldiv@quotient),f
  2549  0263  0AF5               	skipnz
  2550  0264  1903               	incf	(___aldiv@quotient+1),f
  2551  0265  0AF6               	skipnz
  2552  0266  1903               	incf	(___aldiv@quotient+2),f
  2553  0267  0AF7               	skipnz
  2554  0268  1903               	incf	(___aldiv@quotient+3),f
  2555  0269  0AF8               	goto	l1178
  2556  026A  2A6B               	
  2557                           l325:	
  2558  026B                     	line	40
  2559                           	
  2560                           l1178:	
  2561  026B                     	movf	(___aldiv@quotient+3),w
  2562  026B  0878               	movwf	(?___aldiv+3)
  2563  026C  00A3               	movf	(___aldiv@quotient+2),w
  2564  026D  0877               	movwf	(?___aldiv+2)
  2565  026E  00A2               	movf	(___aldiv@quotient+1),w
  2566  026F  0876               	movwf	(?___aldiv+1)
  2567  0270  00A1               	movf	(___aldiv@quotient),w
  2568  0271  0875               	movwf	(?___aldiv)
  2569  0272  00A0               
  2570                           	goto	l326
  2571  0273  2A74               	
  2572                           l1180:	
  2573  0274                     	line	41
  2574                           	
  2575                           l326:	
  2576  0274                     	return
  2577  0274  0008               	opt stack 0
  2578                           GLOBAL	__end_of___aldiv
  2579                           	__end_of___aldiv:
  2580  0275                     	signat	___aldiv,8316
  2581                           	global	_Enviar
  2582                           
  2583 ;; *************** function _Enviar *****************
  2584 ;; Defined at:
  2585 ;;		line 182 in file "MasterUart.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  Venviar         1    wreg     unsigned char 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  Venviar         1    2[COMMON] unsigned char 
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		wreg
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2599 ;;      Params:         0       0       0       0       0
  2600 ;;      Locals:         1       0       0       0       0
  2601 ;;      Temps:          0       0       0       0       0
  2602 ;;      Totals:         1       0       0       0       0
  2603 ;;Total ram usage:        1 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    1
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_main
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2613                           	file	"MasterUart.c"
  2614                           	line	182
  2615                           global __ptext5
  2616                           __ptext5:	;psect for function _Enviar
  2617  02EB                     psect	text5
  2618                           	file	"MasterUart.c"
  2619                           	line	182
  2620                           	global	__size_of_Enviar
  2621                           	__size_of_Enviar	equ	__end_of_Enviar-_Enviar
  2622  000D                     	
  2623                           _Enviar:	
  2624  02EB                     ;incstack = 0
  2625                           	opt	stack 6
  2626                           ; Regs used in _Enviar: [wreg]
  2627                           ;Enviar@Venviar stored from wreg
  2628                           	movwf	(Enviar@Venviar)
  2629  02EB  00F2               	line	183
  2630                           	
  2631                           l1060:	
  2632  02EC                     ;MasterUart.c: 183:     TXREG = Venviar;
  2633                           	movf	(Enviar@Venviar),w
  2634  02EC  0872               	bcf	status, 5	;RP0=0, select bank0
  2635  02ED  1283               	bcf	status, 6	;RP1=0, select bank0
  2636  02EE  1303               	movwf	(25)	;volatile
  2637  02EF  0099               	goto	l1062
  2638  02F0  2AF1               	line	184
  2639                           ;MasterUart.c: 184:     Esperar:
  2640                           	
  2641                           l151:	
  2642  02F1                     	line	185
  2643                           	
  2644                           l1062:	
  2645  02F1                     ;MasterUart.c: 185:     if (PIR1bits.TXIF == 0){
  2646                           	btfsc	(12),4	;volatile
  2647  02F1  1A0C               	goto	u531
  2648  02F2  2AF4               	goto	u530
  2649  02F3  2AF5               u531:
  2650  02F4                     	goto	l153
  2651  02F4  2AF7               u530:
  2652  02F5                     	goto	l1062
  2653  02F5  2AF1               	line	186
  2654                           	
  2655                           l1064:	
  2656  02F6                     ;MasterUart.c: 186:         goto Esperar;
  2657                           	goto	l1062
  2658  02F6  2AF1               	line	187
  2659                           ;MasterUart.c: 187:         }
  2660                           	
  2661                           l152:	
  2662  02F7                     	line	188
  2663                           	
  2664                           l153:	
  2665  02F7                     	return
  2666  02F7  0008               	opt stack 0
  2667                           GLOBAL	__end_of_Enviar
  2668                           	__end_of_Enviar:
  2669  02F8                     	signat	_Enviar,4217
  2670                           	global	_interrupciones
  2671                           
  2672 ;; *************** function _interrupciones *****************
  2673 ;; Defined at:
  2674 ;;		line 64 in file "MasterUart.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		None
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2688 ;;      Params:         0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0
  2690 ;;      Temps:          2       0       0       0       0
  2691 ;;      Totals:         2       0       0       0       0
  2692 ;;Total ram usage:        2 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		Interrupt level 1
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2701                           	line	64
  2702                           global __ptext6
  2703                           __ptext6:	;psect for function _interrupciones
  2704  02F8                     psect	text6
  2705                           	file	"MasterUart.c"
  2706                           	line	64
  2707                           	global	__size_of_interrupciones
  2708                           	__size_of_interrupciones	equ	__end_of_interrupciones-_interrupciones
  2709  0007                     	
  2710                           _interrupciones:	
  2711  02F8                     ;incstack = 0
  2712                           	opt	stack 5
  2713                           ; Regs used in _interrupciones: []
  2714                           psect	intentry,class=CODE,delta=2
  2715                           global __pintentry
  2716                           __pintentry:
  2717  0004                     global interrupt_function
  2718                           interrupt_function:
  2719  0004                     	global saved_w
  2720                           	saved_w	set	btemp+0
  2721  007E                     	movwf	saved_w
  2722  0004  00FE               	swapf	status,w
  2723  0005  0E03               	movwf	(??_interrupciones+0)
  2724  0006  00F0               	movf	pclath,w
  2725  0007  080A               	movwf	(??_interrupciones+1)
  2726  0008  00F1               	ljmp	_interrupciones
  2727  0009  120A  118A  2AF8   psect	text6
  2728                           	line	66
  2729                           	
  2730                           i1l128:	
  2731  02F8                     	movf	(??_interrupciones+1),w
  2732  02F8  0871               	movwf	pclath
  2733  02F9  008A               	swapf	(??_interrupciones+0)^0FFFFFF80h,w
  2734  02FA  0E70               	movwf	status
  2735  02FB  0083               	swapf	saved_w,f
  2736  02FC  0EFE               	swapf	saved_w,w
  2737  02FD  0E7E               	retfie
  2738  02FE  0009               	opt stack 0
  2739                           GLOBAL	__end_of_interrupciones
  2740                           	__end_of_interrupciones:
  2741  02FF                     	signat	_interrupciones,89
  2742                           global	___latbits
  2743                           ___latbits	equ	2
  2744  0002                     	global	btemp
  2745                           	btemp set 07Eh
  2746  007E                     
  2747                           	DABS	1,126,2	;btemp
  2748                           	global	wtemp0
  2749                           	wtemp0 set btemp+0
  2750  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     29      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _UART_Init->___aldiv

Critical Paths under _interrupciones in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _interrupciones in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupciones in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupciones in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupciones in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1162
                                             26 BANK0      3     3      0
                             _Enviar
                          _UART_Init
                               _init
                            _initOsc
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4    1118
                                              8 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                              2 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _Enviar                                               1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interrupciones                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Enviar
   _UART_Init
     ___aldiv
   _init
   _initOsc

 _interrupciones (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1D      22       5       42.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2E      12        0.0%
ABS                  0      0      2E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Mar 15 11:51:56 2020

                       l5 02AE                         l6 0277                         l7 02D0  
                       l8 027D                         l9 0283               __CFG_CP$OFF 0000  
                      l10 0289                        l11 028F                        l12 0295  
                      l13 029B                        l14 02A1                        l15 02A7  
                      l16 02D1                        l33 0102                        l34 011B  
                      l35 011B    __end_of_interrupciones 02FF                       l140 01C1  
                     l141 01CA                       l133 0137                       l142 01C9  
                     l134 019E                       l151 02F1                       l143 01CB  
                     l135 01AA                       l152 02F7                       l320 020A  
                     l144 01CC                       l136 01A9                       l153 02F7  
                     l321 021D                       l145 01CC                       l137 01B1  
                     l322 021E                       l138 01BA                       l323 0249  
                     l139 01B9                       l324 0259                       l316 01E3  
                     l148 02EA                       l325 026B                       l317 01F7  
                     l326 0274                       l318 025A                       l319 0218  
                     u600 01D6                       u601 01D5                       u530 02F5  
                     u610 01E7              __CFG_CPD$OFF 0000                       u531 02F4  
                     u611 01E6                       u620 0207                       u700 003F  
                     u621 0206                       u710 0060                       u640 021C  
                     u720 0075                       u800 01AF                       u641 021B  
                     u721 0076                       u705 003A                       u801 01AE  
                     u730 009C                       u722 007B                       u810 01B6  
                     u635 020C                       u731 009B                       u723 007C  
                     u715 005B                       u811 01B5                       u660 0239  
                     u740 00AA                       u820 01BF                       u661 0238  
                     u821 01BE                       u750 00CB                       u830 01C6  
                     u655 0220                       u831 01C5                       u680 0258  
                     u760 00E0                       u681 0257                       u665 0235  
                     u761 00E1                       u745 00A5                       u690 025F  
                     u770 010C                       u762 00E6                       u691 025E  
                     u675 024A                       u771 010B                       u763 00E7  
                     u755 00C6                       u780 0199                       u781 0198  
                     u790 01A4                       u791 01A3                       u847 0185  
            __CFG_LVP$OFF 0000                      l1010 02AD                      l1012 02AE  
                    l1200 0113                      l1008 0276                      l1202 0116  
                    l1050 02DA                      l1210 011C                      l1060 02EC  
                    l1204 0117                      l1052 02DB                      l1220 0145  
                    l1212 0121                      l1062 02F1                      l1150 01F2  
                    l1142 01CF                      l1206 0118                      l1054 02DC  
                    l1046 02D2                      l1230 0167                      l1222 014B  
                    l1214 0127                      l1064 02F6                      l1160 0218  
                    l1152 01F7                      l1144 01D0                      l1208 011A  
                    l1056 02DD                      l1048 02D9                      l1240 0191  
                    l1232 016F                      l1224 0153                      l1216 0137  
                    l1170 0249                      l1162 021E                      l1154 01FF  
                    l1146 01D6                      l1058 02EA                      l1250 01AA  
                    l1242 0193                      l1234 0175                      l1226 0159  
                    l1218 013D                      l1180 0274                      l1172 0252  
                    l1164 0227                      l1156 0207                      l1148 01E7  
                    l1260 01BF                      l1252 01AF                      l1244 0199  
                    l1236 017D                      l1228 0161                      l1166 0239  
                    l1158 020A                      l1174 025A                      l1190 0102  
                    l1182 002F                      l1262 01C1                      l1254 01B1  
                    l1246 019E                      l1238 018B                      l1176 025F  
                    l1168 0247                      l1192 010C                      l1184 0093  
                    l1264 01C6                      l1256 01B6                      l1248 01A4  
                    l1178 026B                      l1194 0110                      l1186 009C  
                    l1258 01BA                      l1196 0111                      l1188 00FE  
                    l1198 0112                      l1286 02B6                      _RCIF 0065  
                    _TRMT 04C1              __CFG_WRT$OFF 0000                      _main 011C  
                    _init 02D2                      btemp 007E             __CFG_BOREN$ON 0000  
                    start 000C             __CFG_IESO$OFF 0000           ?_interrupciones 0070  
         __end_of___aldiv 0275                     ?_main 0070                     ?_init 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l128 02F8  
                   _RCREG 001A                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
                   _TXREG 0019            __CFG_FCMEN$OFF 0000        __size_of_UART_Init 00ED  
         __end_of_initOsc 02D2                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 01CF              __end_of_init 02EB                    ??_main 003A  
                  ??_init 0072                    _ANSELH 0189               initOsc@frec 0074  
          __CFG_PWRTE$OFF 0000                    _Enviar 02EB                    _Valor1 0041  
                  _Valor2 0040                    _Valor3 003F                    _Valor4 003E  
                  _Valor5 003D         __end_of_UART_Init 011C                 ??___aldiv 0072  
           Enviar@Venviar 0072                 ??_initOsc 0072              __pdataCOMMON 007B  
                  saved_w 007E   __end_of__initialization 002B            __pcstackCOMMON 0070  
            __pidataBANK0 02FF                __pbssBANK0 0040                   ?_Enviar 0070  
              __pmaintext 011C          ??_interrupciones 0070                __pintentry 0004  
         __size_of_Enviar 000D                   ___aldiv 01CF                   __ptext1 0275  
                 __ptext2 02D2                   __ptext3 002F                   __ptext4 01CF  
                 __ptext5 02EB                   __ptext6 02F8                   _initOsc 0275  
        ___aldiv@dividend 0024      end_of_initialization 002B                 _RCSTAbits 0018  
        ___aldiv@quotient 0075                 _UART_Init 002F                 _TRISCbits 0087  
               _TXSTAbits 0098            __end_of_Enviar 02F8                ?_UART_Init 0028  
           __pidataCOMMON 0302       start_initialization 000F  __CFG_FOSC$INTRC_NOCLKOUT 0000  
                ??_Enviar 0072               __pdataBANK0 003D               __pbssCOMMON 0079  
               ___latbits 0002             __pcstackBANK0 0020                  ?___aldiv 0020  
             ??_UART_Init 002C                  ?_initOsc 0070                UART_Init@x 0038  
         ___aldiv@divisor 0020         interrupt_function 0004           ___aldiv@counter 0073  
                _PIR1bits 000C         UART_Init@baudrate 0028   __size_of_interrupciones 0007  
        __size_of___aldiv 00A6          __size_of_initOsc 005D         __CFG_BOR4V$BOR40V 0000  
                _contador 0079                  _controla 007B             __size_of_main 00B3  
           __size_of_init 0019                  intlevel1 0000                _OSCCONbits 008F  
          _interrupciones 02F8               _temporalSec 007A              ___aldiv@sign 0074  
