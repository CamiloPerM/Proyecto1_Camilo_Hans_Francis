

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Mar 10 20:06:57 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     	FNCALL	_main,_UART_Data_Ready
   868                           	FNCALL	_main,_UART_Init
   869                           	FNCALL	_main,_UART_Read
   870                           	FNCALL	_main,_init
   871                           	FNCALL	_main,_initOsc
   872                           	FNCALL	_UART_Init,___aldiv
   873                           	FNROOT	_main
   874                           	FNCALL	intlevel1,_interrupciones
   875                           	global	intlevel1
   876                           	FNROOT	intlevel1
   877                           	global	_sensores
   878                           	global	_cont
   879                           	global	_RCREG
   880                           _RCREG	set	0x1A
   881  001A                     	global	_TXREG
   882                           _TXREG	set	0x19
   883  0019                     	global	_RCSTAbits
   884                           _RCSTAbits	set	0x18
   885  0018                     	global	_SSPBUF
   886                           _SSPBUF	set	0x13
   887  0013                     	global	_SSPCON
   888                           _SSPCON	set	0x14
   889  0014                     	global	_PORTE
   890                           _PORTE	set	0x9
   891  0009                     	global	_PORTC
   892                           _PORTC	set	0x7
   893  0007                     	global	_PORTEbits
   894                           _PORTEbits	set	0x9
   895  0009                     	global	_PORTD
   896                           _PORTD	set	0x8
   897  0008                     	global	_PORTB
   898                           _PORTB	set	0x6
   899  0006                     	global	_PORTA
   900                           _PORTA	set	0x5
   901  0005                     	global	_RCIF
   902                           _RCIF	set	0x65
   903  0065                     	global	_SPBRG
   904                           _SPBRG	set	0x99
   905  0099                     	global	_TXSTAbits
   906                           _TXSTAbits	set	0x98
   907  0098                     	global	_SSPSTATbits
   908                           _SSPSTATbits	set	0x94
   909  0094                     	global	_SSPSTAT
   910                           _SSPSTAT	set	0x94
   911  0094                     	global	_OSCCONbits
   912                           _OSCCONbits	set	0x8F
   913  008F                     	global	_TRISCbits
   914                           _TRISCbits	set	0x87
   915  0087                     	global	_TRISE
   916                           _TRISE	set	0x89
   917  0089                     	global	_TRISC
   918                           _TRISC	set	0x87
   919  0087                     	global	_TRISD
   920                           _TRISD	set	0x88
   921  0088                     	global	_TRISB
   922                           _TRISB	set	0x86
   923  0086                     	global	_TRISA
   924                           _TRISA	set	0x85
   925  0085                     	global	_TRMT
   926                           _TRMT	set	0x4C1
   927  04C1                     	global	_TRISC3
   928                           _TRISC3	set	0x43B
   929  043B                     	global	_TRISC5
   930                           _TRISC5	set	0x43D
   931  043D                     	global	_ANSELH
   932                           _ANSELH	set	0x189
   933  0189                     	global	_ANSEL
   934                           _ANSEL	set	0x188
   935  0188                     ; #config settings
   936                           global __CFG_FOSC$INTRC_NOCLKOUT
   937                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   938  0000                     global __CFG_WDTE$OFF
   939                           __CFG_WDTE$OFF equ 0x0
   940  0000                     global __CFG_PWRTE$OFF
   941                           __CFG_PWRTE$OFF equ 0x0
   942  0000                     global __CFG_MCLRE$ON
   943                           __CFG_MCLRE$ON equ 0x0
   944  0000                     global __CFG_CP$OFF
   945                           __CFG_CP$OFF equ 0x0
   946  0000                     global __CFG_CPD$OFF
   947                           __CFG_CPD$OFF equ 0x0
   948  0000                     global __CFG_BOREN$ON
   949                           __CFG_BOREN$ON equ 0x0
   950  0000                     global __CFG_IESO$OFF
   951                           __CFG_IESO$OFF equ 0x0
   952  0000                     global __CFG_FCMEN$OFF
   953                           __CFG_FCMEN$OFF equ 0x0
   954  0000                     global __CFG_LVP$OFF
   955                           __CFG_LVP$OFF equ 0x0
   956  0000                     global __CFG_BOR4V$BOR40V
   957                           __CFG_BOR4V$BOR40V equ 0x0
   958  0000                     global __CFG_WRT$OFF
   959                           __CFG_WRT$OFF equ 0x0
   960  0000                     	file	"C:\Users\DIBUJO~1\AppData\Local\Temp\sbbc."
   961                           	line	#
   962                           psect cinit,class=CODE,delta=2
   963                           global start_initialization
   964                           start_initialization:
   965  000F                     
   966                           global __initialization
   967                           __initialization:
   968  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   969                           global __pbssCOMMON
   970                           __pbssCOMMON:
   971  0079                     _Valor3:
   972  0079                            ds      1
   973  0079                     
   974                           _Valor2:
   975  007A                            ds      1
   976  007A                     
   977                           _Valor1:
   978  007B                            ds      1
   979  007B                     
   980                           psect	bssBANK0,class=BANK0,space=1,noexec
   981                           global __pbssBANK0
   982                           __pbssBANK0:
   983  003D                     _sensores:
   984  003D                            ds      8
   985  003D                     
   986                           _z:
   987  0045                            ds      1
   988  0045                     
   989                           _cont:
   990  0046                            ds      1
   991  0046                     
   992                           _controla:
   993  0047                            ds      1
   994  0047                     
   995                           _dato:
   996  0048                            ds      1
   997  0048                     
   998                           _Valor5:
   999  0049                            ds      1
  1000  0049                     
  1001                           _Valor4:
  1002  004A                            ds      1
  1003  004A                     
  1004                           	file	"C:\Users\DIBUJO~1\AppData\Local\Temp\sbbc."
  1005                           	line	#
  1006                           ; Clear objects allocated to COMMON
  1007                           psect cinit,class=CODE,delta=2,merge=1
  1008                           	clrf	((__pbssCOMMON)+0)&07Fh
  1009  000F  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
  1010  0010  01FA               	clrf	((__pbssCOMMON)+2)&07Fh
  1011  0011  01FB               ; Clear objects allocated to BANK0
  1012                           psect cinit,class=CODE,delta=2,merge=1
  1013                           	bcf	status, 5	;RP0=0, select bank0
  1014  0012  1283               	bcf	status, 6	;RP1=0, select bank0
  1015  0013  1303               	clrf	((__pbssBANK0)+0)&07Fh
  1016  0014  01BD               	clrf	((__pbssBANK0)+1)&07Fh
  1017  0015  01BE               	clrf	((__pbssBANK0)+2)&07Fh
  1018  0016  01BF               	clrf	((__pbssBANK0)+3)&07Fh
  1019  0017  01C0               	clrf	((__pbssBANK0)+4)&07Fh
  1020  0018  01C1               	clrf	((__pbssBANK0)+5)&07Fh
  1021  0019  01C2               	clrf	((__pbssBANK0)+6)&07Fh
  1022  001A  01C3               	clrf	((__pbssBANK0)+7)&07Fh
  1023  001B  01C4               	clrf	((__pbssBANK0)+8)&07Fh
  1024  001C  01C5               	clrf	((__pbssBANK0)+9)&07Fh
  1025  001D  01C6               	clrf	((__pbssBANK0)+10)&07Fh
  1026  001E  01C7               	clrf	((__pbssBANK0)+11)&07Fh
  1027  001F  01C8               	clrf	((__pbssBANK0)+12)&07Fh
  1028  0020  01C9               	clrf	((__pbssBANK0)+13)&07Fh
  1029  0021  01CA               psect cinit,class=CODE,delta=2,merge=1
  1030                           global end_of_initialization,__end_of__initialization
  1031                           
  1032                           ;End of C runtime variable initialization code
  1033                           
  1034                           end_of_initialization:
  1035  0022                     __end_of__initialization:
  1036  0022                     clrf status
  1037  0022  0183               ljmp _main	;jump to C main() function
  1038  0023  120A  118A  29B9   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1039                           global __pcstackCOMMON
  1040                           __pcstackCOMMON:
  1041  0070                     ?_init:	; 1 bytes @ 0x0
  1042  0070                     ?_initOsc:	; 1 bytes @ 0x0
  1043  0070                     ?_UART_Data_Ready:	; 1 bytes @ 0x0
  1044  0070                     ?_UART_Read:	; 1 bytes @ 0x0
  1045  0070                     ?_interrupciones:	; 1 bytes @ 0x0
  1046  0070                     ??_interrupciones:	; 1 bytes @ 0x0
  1047  0070                     ?_main:	; 1 bytes @ 0x0
  1048  0070                     	ds	2
  1049  0070                     ??_init:	; 1 bytes @ 0x2
  1050  0072                     ??_initOsc:	; 1 bytes @ 0x2
  1051  0072                     ??_UART_Data_Ready:	; 1 bytes @ 0x2
  1052  0072                     ??_UART_Read:	; 1 bytes @ 0x2
  1053  0072                     ??___aldiv:	; 1 bytes @ 0x2
  1054  0072                     	ds	1
  1055  0072                     	global	___aldiv@counter
  1056                           ___aldiv@counter:	; 1 bytes @ 0x3
  1057  0073                     	ds	1
  1058  0073                     	global	initOsc@frec
  1059                           initOsc@frec:	; 1 bytes @ 0x4
  1060  0074                     	global	___aldiv@sign
  1061                           ___aldiv@sign:	; 1 bytes @ 0x4
  1062  0074                     	ds	1
  1063  0074                     	global	___aldiv@quotient
  1064                           ___aldiv@quotient:	; 4 bytes @ 0x5
  1065  0075                     	ds	4
  1066  0075                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1067                           global __pcstackBANK0
  1068                           __pcstackBANK0:
  1069  0020                     	global	?___aldiv
  1070                           ?___aldiv:	; 4 bytes @ 0x0
  1071  0020                     	global	___aldiv@divisor
  1072                           ___aldiv@divisor:	; 4 bytes @ 0x0
  1073  0020                     	ds	4
  1074  0020                     	global	___aldiv@dividend
  1075                           ___aldiv@dividend:	; 4 bytes @ 0x4
  1076  0024                     	ds	4
  1077  0024                     ?_UART_Init:	; 1 bytes @ 0x8
  1078  0028                     	global	UART_Init@baudrate
  1079                           UART_Init@baudrate:	; 4 bytes @ 0x8
  1080  0028                     	ds	4
  1081  0028                     ??_UART_Init:	; 1 bytes @ 0xC
  1082  002C                     	ds	12
  1083  002C                     	global	UART_Init@x
  1084                           UART_Init@x:	; 2 bytes @ 0x18
  1085  0038                     	ds	2
  1086  0038                     ??_main:	; 1 bytes @ 0x1A
  1087  003A                     	ds	3
  1088  003A                     ;!
  1089                           ;!Data Sizes:
  1090                           ;!    Strings     0
  1091                           ;!    Constant    0
  1092                           ;!    Data        0
  1093                           ;!    BSS         17
  1094                           ;!    Persistent  0
  1095                           ;!    Stack       0
  1096                           ;!
  1097                           ;!Auto Spaces:
  1098                           ;!    Space          Size  Autos    Used
  1099                           ;!    COMMON           14      9      12
  1100                           ;!    BANK0            80     29      43
  1101                           ;!    BANK1            80      0       0
  1102                           ;!    BANK3            96      0       0
  1103                           ;!    BANK2            96      0       0
  1104                           
  1105                           ;!
  1106                           ;!Pointer List with Targets:
  1107                           ;!
  1108                           ;!    None.
  1109                           
  1110                           
  1111                           ;!
  1112                           ;!Critical Paths under _main in COMMON
  1113                           ;!
  1114                           ;!    _UART_Init->___aldiv
  1115                           ;!
  1116                           ;!Critical Paths under _interrupciones in COMMON
  1117                           ;!
  1118                           ;!    None.
  1119                           ;!
  1120                           ;!Critical Paths under _main in BANK0
  1121                           ;!
  1122                           ;!    _main->_UART_Init
  1123                           ;!    _UART_Init->___aldiv
  1124                           ;!
  1125                           ;!Critical Paths under _interrupciones in BANK0
  1126                           ;!
  1127                           ;!    None.
  1128                           ;!
  1129                           ;!Critical Paths under _main in BANK1
  1130                           ;!
  1131                           ;!    None.
  1132                           ;!
  1133                           ;!Critical Paths under _interrupciones in BANK1
  1134                           ;!
  1135                           ;!    None.
  1136                           ;!
  1137                           ;!Critical Paths under _main in BANK3
  1138                           ;!
  1139                           ;!    None.
  1140                           ;!
  1141                           ;!Critical Paths under _interrupciones in BANK3
  1142                           ;!
  1143                           ;!    None.
  1144                           ;!
  1145                           ;!Critical Paths under _main in BANK2
  1146                           ;!
  1147                           ;!    None.
  1148                           ;!
  1149                           ;!Critical Paths under _interrupciones in BANK2
  1150                           ;!
  1151                           ;!    None.
  1152                           
  1153 ;;
  1154 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1155 ;;
  1156                           
  1157                           ;!
  1158                           ;!Call Graph Tables:
  1159                           ;!
  1160                           ;! ---------------------------------------------------------------------------------
  1161                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1162                           ;! ---------------------------------------------------------------------------------
  1163                           ;! (0) _main                                                 3     3      0    1140
  1164                           ;!                                             26 BANK0      3     3      0
  1165                           ;!                    _UART_Data_Ready
  1166                           ;!                          _UART_Init
  1167                           ;!                          _UART_Read
  1168                           ;!                               _init
  1169                           ;!                            _initOsc
  1170                           ;! ---------------------------------------------------------------------------------
  1171                           ;! (1) _initOsc                                              3     3      0      22
  1172                           ;!                                              2 COMMON     3     3      0
  1173                           ;! ---------------------------------------------------------------------------------
  1174                           ;! (1) _init                                                 0     0      0       0
  1175                           ;! ---------------------------------------------------------------------------------
  1176                           ;! (1) _UART_Read                                            0     0      0       0
  1177                           ;! ---------------------------------------------------------------------------------
  1178                           ;! (1) _UART_Init                                           18    14      4    1118
  1179                           ;!                                              8 BANK0     18    14      4
  1180                           ;!                            ___aldiv
  1181                           ;! ---------------------------------------------------------------------------------
  1182                           ;! (2) ___aldiv                                             15     7      8     805
  1183                           ;!                                              2 COMMON     7     7      0
  1184                           ;!                                              0 BANK0      8     0      8
  1185                           ;! ---------------------------------------------------------------------------------
  1186                           ;! (1) _UART_Data_Ready                                      0     0      0       0
  1187                           ;! ---------------------------------------------------------------------------------
  1188                           ;! Estimated maximum stack depth 2
  1189                           ;! ---------------------------------------------------------------------------------
  1190                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1191                           ;! ---------------------------------------------------------------------------------
  1192                           ;! (3) _interrupciones                                       2     2      0       0
  1193                           ;!                                              0 COMMON     2     2      0
  1194                           ;! ---------------------------------------------------------------------------------
  1195                           ;! Estimated maximum stack depth 3
  1196                           ;! ---------------------------------------------------------------------------------
  1197                           ;!
  1198                           ;! Call Graph Graphs:
  1199                           ;!
  1200                           ;! _main (ROOT)
  1201                           ;!   _UART_Data_Ready
  1202                           ;!   _UART_Init
  1203                           ;!     ___aldiv
  1204                           ;!   _UART_Read
  1205                           ;!   _init
  1206                           ;!   _initOsc
  1207                           ;!
  1208                           ;! _interrupciones (ROOT)
  1209                           ;!
  1210                           
  1211                           ;! Address spaces:
  1212                           
  1213                           ;!Name               Size   Autos  Total    Cost      Usage
  1214                           ;!BITCOMMON            E      0       0       0        0.0%
  1215                           ;!EEDATA             100      0       0       0        0.0%
  1216                           ;!NULL                 0      0       0       0        0.0%
  1217                           ;!CODE                 0      0       0       0        0.0%
  1218                           ;!COMMON               E      9       C       1       85.7%
  1219                           ;!BITSFR0              0      0       0       1        0.0%
  1220                           ;!SFR0                 0      0       0       1        0.0%
  1221                           ;!BITSFR1              0      0       0       2        0.0%
  1222                           ;!SFR1                 0      0       0       2        0.0%
  1223                           ;!STACK                0      0       0       2        0.0%
  1224                           ;!ABS                  0      0      37       3        0.0%
  1225                           ;!BITBANK0            50      0       0       4        0.0%
  1226                           ;!BITSFR3              0      0       0       4        0.0%
  1227                           ;!SFR3                 0      0       0       4        0.0%
  1228                           ;!BANK0               50     1D      2B       5       53.8%
  1229                           ;!BITSFR2              0      0       0       5        0.0%
  1230                           ;!SFR2                 0      0       0       5        0.0%
  1231                           ;!BITBANK1            50      0       0       6        0.0%
  1232                           ;!BANK1               50      0       0       7        0.0%
  1233                           ;!BITBANK3            60      0       0       8        0.0%
  1234                           ;!BANK3               60      0       0       9        0.0%
  1235                           ;!BITBANK2            60      0       0      10        0.0%
  1236                           ;!BANK2               60      0       0      11        0.0%
  1237                           ;!DATA                 0      0      37      12        0.0%
  1238                           
  1239                           	global	_main
  1240                           
  1241 ;; *************** function _main *****************
  1242 ;; Defined at:
  1243 ;;		line 80 in file "SubMasterProyect.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;		None
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;		None
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : B00/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1257 ;;      Params:         0       0       0       0       0
  1258 ;;      Locals:         0       0       0       0       0
  1259 ;;      Temps:          0       3       0       0       0
  1260 ;;      Totals:         0       3       0       0       0
  1261 ;;Total ram usage:        3 bytes
  1262 ;; Hardware stack levels required when called:    3
  1263 ;; This function calls:
  1264 ;;		_UART_Data_Ready
  1265 ;;		_UART_Init
  1266 ;;		_UART_Read
  1267 ;;		_init
  1268 ;;		_initOsc
  1269 ;; This function is called by:
  1270 ;;		Startup code after reset
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1274                           	file	"SubMasterProyect.c"
  1275                           	line	80
  1276                           global __pmaintext
  1277                           __pmaintext:	;psect for function _main
  1278  01B9                     psect	maintext
  1279                           	file	"SubMasterProyect.c"
  1280                           	line	80
  1281                           	global	__size_of_main
  1282                           	__size_of_main	equ	__end_of_main-_main
  1283  0067                     	
  1284                           _main:	
  1285  01B9                     ;incstack = 0
  1286                           	opt	stack 5
  1287                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1288                           	line	81
  1289                           	
  1290                           l1187:	
  1291  01B9                     ;SubMasterProyect.c: 81:     init();
  1292                           	fcall	_init
  1293  01B9  120A  118A  227D  120A  118A  	line	82
  1294                           	
  1295                           l1189:	
  1296  01BE                     ;SubMasterProyect.c: 82:     initOsc(7);
  1297                           	movlw	low(07h)
  1298  01BE  3007               	fcall	_initOsc
  1299  01BF  120A  118A  2220  120A  118A  	line	83
  1300                           	
  1301                           l1191:	
  1302  01C4                     ;SubMasterProyect.c: 83:     UART_Init(9600);
  1303                           	movlw	0
  1304  01C4  3000               	bcf	status, 5	;RP0=0, select bank0
  1305  01C5  1283               	bcf	status, 6	;RP1=0, select bank0
  1306  01C6  1303               	movwf	(UART_Init@baudrate+3)
  1307  01C7  00AB               	movlw	0
  1308  01C8  3000               	movwf	(UART_Init@baudrate+2)
  1309  01C9  00AA               	movlw	025h
  1310  01CA  3025               	movwf	(UART_Init@baudrate+1)
  1311  01CB  00A9               	movlw	080h
  1312  01CC  3080               	movwf	(UART_Init@baudrate)
  1313  01CD  00A8               
  1314                           	fcall	_UART_Init
  1315  01CE  120A  118A  2026  120A  118A  	goto	l1193
  1316  01D3  29D6               	line	85
  1317                           ;SubMasterProyect.c: 85:     while(1){
  1318                           	
  1319                           l71:	
  1320  01D4                     	line	87
  1321                           ;SubMasterProyect.c: 87:        while(!UART_Data_Ready());
  1322                           	goto	l1193
  1323  01D4  29D6               	
  1324                           l73:	
  1325  01D5                     	goto	l1193
  1326  01D5  29D6               	
  1327                           l72:	
  1328  01D6                     	
  1329                           l1193:	
  1330  01D6                     	fcall	_UART_Data_Ready
  1331  01D6  120A  118A  22A9  120A  118A  	xorlw	0
  1332  01DB  3A00               	skipnz
  1333  01DC  1903               	goto	u711
  1334  01DD  29DF               	goto	u710
  1335  01DE  29E0               u711:
  1336  01DF                     	goto	l1193
  1337  01DF  29D6               u710:
  1338  01E0                     	goto	l1195
  1339  01E0  29E1               	
  1340                           l74:	
  1341  01E1                     	line	88
  1342                           	
  1343                           l1195:	
  1344  01E1                     ;SubMasterProyect.c: 88:        sensores[cont]= UART_Read();
  1345                           	fcall	_UART_Read
  1346  01E1  120A  118A  2296  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1347  01E6  1283               	bcf	status, 6	;RP1=0, select bank0
  1348  01E7  1303               	movwf	(??_main+0)+0
  1349  01E8  00BA               	clrf	(??_main+0)+0+1
  1350  01E9  01BB               	movf	(_cont),w
  1351  01EA  0846               	movwf	(??_main+2)+0
  1352  01EB  00BC               	addwf	(??_main+2)+0,w
  1353  01EC  073C               	addlw	low(_sensores|((0x0)<<8))&0ffh
  1354  01ED  3E3D               	movwf	fsr0
  1355  01EE  0084               	movf	0+(??_main+0)+0,w
  1356  01EF  083A               	bcf	status, 7	;select IRP bank0
  1357  01F0  1383               	movwf	indf
  1358  01F1  0080               	incf	fsr0,f
  1359  01F2  0A84               	movf	1+(??_main+0)+0,w
  1360  01F3  083B               	movwf	indf
  1361  01F4  0080               	line	89
  1362                           	
  1363                           l1197:	
  1364  01F5                     ;SubMasterProyect.c: 89:        cont++;
  1365                           	movlw	low(01h)
  1366  01F5  3001               	movwf	(??_main+0)+0
  1367  01F6  00BA               	movf	(??_main+0)+0,w
  1368  01F7  083A               	addwf	(_cont),f
  1369  01F8  07C6               	line	90
  1370                           	
  1371                           l1199:	
  1372  01F9                     ;SubMasterProyect.c: 90:        if (cont>3){cont=0;}
  1373                           	movlw	low(04h)
  1374  01F9  3004               	subwf	(_cont),w
  1375  01FA  0246               	skipc
  1376  01FB  1C03               	goto	u721
  1377  01FC  29FE               	goto	u720
  1378  01FD  29FF               u721:
  1379  01FE                     	goto	l1203
  1380  01FE  2A01               u720:
  1381  01FF                     	
  1382                           l1201:	
  1383  01FF                     	clrf	(_cont)
  1384  01FF  01C6               	goto	l1203
  1385  0200  2A01               	
  1386                           l75:	
  1387  0201                     	line	92
  1388                           	
  1389                           l1203:	
  1390  0201                     ;SubMasterProyect.c: 92:         PORTA = sensores[0];
  1391                           	movf	(_sensores),w
  1392  0201  083D               	movwf	(5)	;volatile
  1393  0202  0085               	line	93
  1394                           	
  1395                           l1205:	
  1396  0203                     ;SubMasterProyect.c: 93:         PORTB = sensores[1];
  1397                           	movf	0+(_sensores)+02h,w
  1398  0203  083F               	movwf	(6)	;volatile
  1399  0204  0086               	line	94
  1400                           	
  1401                           l1207:	
  1402  0205                     ;SubMasterProyect.c: 94:         PORTD = sensores[2];
  1403                           	movf	0+(_sensores)+04h,w
  1404  0205  0841               	movwf	(8)	;volatile
  1405  0206  0088               	line	98
  1406                           	
  1407                           l1209:	
  1408  0207                     ;SubMasterProyect.c: 98:         if (sensores[3] == 1){
  1409                           		decf	(0+(_sensores)+06h),w
  1410  0207  0343               iorwf	(1+(_sensores)+06h),w
  1411  0208  0444               	btfss	status,2
  1412  0209  1D03               	goto	u731
  1413  020A  2A0C               	goto	u730
  1414  020B  2A0D               u731:
  1415  020C                     	goto	l76
  1416  020C  2A0F               u730:
  1417  020D                     	line	99
  1418                           	
  1419                           l1211:	
  1420  020D                     ;SubMasterProyect.c: 99:             PORTEbits.RE0 =1;
  1421                           	bsf	(9),0	;volatile
  1422  020D  1409               	line	100
  1423                           ;SubMasterProyect.c: 100:         }else {
  1424                           	goto	l1213
  1425  020E  2A11               	
  1426                           l76:	
  1427  020F                     	line	101
  1428                           ;SubMasterProyect.c: 101:             PORTEbits.RE0 =0;
  1429                           	bcf	(9),0	;volatile
  1430  020F  1009               	goto	l1213
  1431  0210  2A11               	line	102
  1432                           ;SubMasterProyect.c: 102:         }
  1433                           	
  1434                           l77:	
  1435  0211                     	line	105
  1436                           	
  1437                           l1213:	
  1438  0211                     ;SubMasterProyect.c: 105:         if (sensores[4] == 1){
  1439                           		decf	(0+(_sensores)+08h),w
  1440  0211  0345               iorwf	(1+(_sensores)+08h),w
  1441  0212  0446               	btfss	status,2
  1442  0213  1D03               	goto	u741
  1443  0214  2A16               	goto	u740
  1444  0215  2A17               u741:
  1445  0216                     	goto	l78
  1446  0216  2A19               u740:
  1447  0217                     	line	106
  1448                           	
  1449                           l1215:	
  1450  0217                     ;SubMasterProyect.c: 106:             PORTEbits.RE1 =1;
  1451                           	bsf	(9),1	;volatile
  1452  0217  1489               	line	107
  1453                           ;SubMasterProyect.c: 107:         }else {
  1454                           	goto	l1193
  1455  0218  29D6               	
  1456                           l78:	
  1457  0219                     	line	108
  1458                           ;SubMasterProyect.c: 108:             PORTEbits.RE1 =0;
  1459                           	bcf	(9),1	;volatile
  1460  0219  1089               	goto	l1193
  1461  021A  29D6               	line	109
  1462                           ;SubMasterProyect.c: 109:         }
  1463                           	
  1464                           l79:	
  1465  021B                     	goto	l1193
  1466  021B  29D6               	line	111
  1467                           ;SubMasterProyect.c: 111:     }
  1468                           	
  1469                           l80:	
  1470  021C                     	goto	l1193
  1471  021C  29D6               	
  1472                           l81:	
  1473  021D                     	line	114
  1474                           ;SubMasterProyect.c: 113:     return;
  1475                           	
  1476                           l82:	
  1477  021D                     	global	start
  1478                           	ljmp	start
  1479  021D  120A  118A  280C   	opt stack 0
  1480                           GLOBAL	__end_of_main
  1481                           	__end_of_main:
  1482  0220                     	signat	_main,89
  1483                           	global	_initOsc
  1484                           
  1485 ;; *************** function _initOsc *****************
  1486 ;; Defined at:
  1487 ;;		line 9 in file "FuncionOscilador.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  frec            1    wreg     unsigned char 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  frec            1    4[COMMON] unsigned char 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1501 ;;      Params:         0       0       0       0       0
  1502 ;;      Locals:         1       0       0       0       0
  1503 ;;      Temps:          2       0       0       0       0
  1504 ;;      Totals:         3       0       0       0       0
  1505 ;;Total ram usage:        3 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1515                           	file	"FuncionOscilador.c"
  1516                           	line	9
  1517                           global __ptext1
  1518                           __ptext1:	;psect for function _initOsc
  1519  0220                     psect	text1
  1520                           	file	"FuncionOscilador.c"
  1521                           	line	9
  1522                           	global	__size_of_initOsc
  1523                           	__size_of_initOsc	equ	__end_of_initOsc-_initOsc
  1524  005D                     	
  1525                           _initOsc:	
  1526  0220                     ;incstack = 0
  1527                           	opt	stack 6
  1528                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1529                           ;initOsc@frec stored from wreg
  1530                           	movwf	(initOsc@frec)
  1531  0220  00F4               	line	10
  1532                           	
  1533                           l1013:	
  1534  0221                     ;FuncionOscilador.c: 10:     switch(frec){
  1535                           	goto	l1017
  1536  0221  2A59               	line	11
  1537                           ;FuncionOscilador.c: 11:         case 0:
  1538                           	
  1539                           l91:	
  1540  0222                     	line	12
  1541                           ;FuncionOscilador.c: 12:             OSCCONbits.IRCF0 = 0;
  1542                           	bsf	status, 5	;RP0=1, select bank1
  1543  0222  1683               	bcf	status, 6	;RP1=0, select bank1
  1544  0223  1303               	bcf	(143)^080h,4	;volatile
  1545  0224  120F               	line	13
  1546                           ;FuncionOscilador.c: 13:             OSCCONbits.IRCF1 = 0;
  1547                           	bcf	(143)^080h,5	;volatile
  1548  0225  128F               	line	14
  1549                           ;FuncionOscilador.c: 14:             OSCCONbits.IRCF2 = 0;
  1550                           	bcf	(143)^080h,6	;volatile
  1551  0226  130F               	line	15
  1552                           ;FuncionOscilador.c: 15:             break;
  1553                           	goto	l92
  1554  0227  2A7B               	line	16
  1555                           ;FuncionOscilador.c: 16:         case 1:
  1556                           	
  1557                           l93:	
  1558  0228                     	line	17
  1559                           ;FuncionOscilador.c: 17:             OSCCONbits.IRCF0 = 1;
  1560                           	bsf	status, 5	;RP0=1, select bank1
  1561  0228  1683               	bcf	status, 6	;RP1=0, select bank1
  1562  0229  1303               	bsf	(143)^080h,4	;volatile
  1563  022A  160F               	line	18
  1564                           ;FuncionOscilador.c: 18:             OSCCONbits.IRCF1 = 0;
  1565                           	bcf	(143)^080h,5	;volatile
  1566  022B  128F               	line	19
  1567                           ;FuncionOscilador.c: 19:             OSCCONbits.IRCF2 = 0;
  1568                           	bcf	(143)^080h,6	;volatile
  1569  022C  130F               	line	20
  1570                           ;FuncionOscilador.c: 20:             break;
  1571                           	goto	l92
  1572  022D  2A7B               	line	21
  1573                           ;FuncionOscilador.c: 21:         case 2:
  1574                           	
  1575                           l94:	
  1576  022E                     	line	22
  1577                           ;FuncionOscilador.c: 22:             OSCCONbits.IRCF0 = 0;
  1578                           	bsf	status, 5	;RP0=1, select bank1
  1579  022E  1683               	bcf	status, 6	;RP1=0, select bank1
  1580  022F  1303               	bcf	(143)^080h,4	;volatile
  1581  0230  120F               	line	23
  1582                           ;FuncionOscilador.c: 23:             OSCCONbits.IRCF1 = 1;
  1583                           	bsf	(143)^080h,5	;volatile
  1584  0231  168F               	line	24
  1585                           ;FuncionOscilador.c: 24:             OSCCONbits.IRCF2 = 0;
  1586                           	bcf	(143)^080h,6	;volatile
  1587  0232  130F               	line	25
  1588                           ;FuncionOscilador.c: 25:             break;
  1589                           	goto	l92
  1590  0233  2A7B               	line	26
  1591                           ;FuncionOscilador.c: 26:         case 3:
  1592                           	
  1593                           l95:	
  1594  0234                     	line	27
  1595                           ;FuncionOscilador.c: 27:             OSCCONbits.IRCF0 = 1;
  1596                           	bsf	status, 5	;RP0=1, select bank1
  1597  0234  1683               	bcf	status, 6	;RP1=0, select bank1
  1598  0235  1303               	bsf	(143)^080h,4	;volatile
  1599  0236  160F               	line	28
  1600                           ;FuncionOscilador.c: 28:             OSCCONbits.IRCF1 = 1;
  1601                           	bsf	(143)^080h,5	;volatile
  1602  0237  168F               	line	29
  1603                           ;FuncionOscilador.c: 29:             OSCCONbits.IRCF2 = 0;
  1604                           	bcf	(143)^080h,6	;volatile
  1605  0238  130F               	line	30
  1606                           ;FuncionOscilador.c: 30:             break;
  1607                           	goto	l92
  1608  0239  2A7B               	line	31
  1609                           ;FuncionOscilador.c: 31:         case 4:
  1610                           	
  1611                           l96:	
  1612  023A                     	line	32
  1613                           ;FuncionOscilador.c: 32:             OSCCONbits.IRCF0 = 0;
  1614                           	bsf	status, 5	;RP0=1, select bank1
  1615  023A  1683               	bcf	status, 6	;RP1=0, select bank1
  1616  023B  1303               	bcf	(143)^080h,4	;volatile
  1617  023C  120F               	line	33
  1618                           ;FuncionOscilador.c: 33:             OSCCONbits.IRCF1 = 0;
  1619                           	bcf	(143)^080h,5	;volatile
  1620  023D  128F               	line	34
  1621                           ;FuncionOscilador.c: 34:             OSCCONbits.IRCF2 = 1;
  1622                           	bsf	(143)^080h,6	;volatile
  1623  023E  170F               	line	35
  1624                           ;FuncionOscilador.c: 35:             break;
  1625                           	goto	l92
  1626  023F  2A7B               	line	36
  1627                           ;FuncionOscilador.c: 36:         case 5:
  1628                           	
  1629                           l97:	
  1630  0240                     	line	37
  1631                           ;FuncionOscilador.c: 37:             OSCCONbits.IRCF0 = 1;
  1632                           	bsf	status, 5	;RP0=1, select bank1
  1633  0240  1683               	bcf	status, 6	;RP1=0, select bank1
  1634  0241  1303               	bsf	(143)^080h,4	;volatile
  1635  0242  160F               	line	38
  1636                           ;FuncionOscilador.c: 38:             OSCCONbits.IRCF1 = 0;
  1637                           	bcf	(143)^080h,5	;volatile
  1638  0243  128F               	line	39
  1639                           ;FuncionOscilador.c: 39:             OSCCONbits.IRCF2 = 1;
  1640                           	bsf	(143)^080h,6	;volatile
  1641  0244  170F               	line	40
  1642                           ;FuncionOscilador.c: 40:             break;
  1643                           	goto	l92
  1644  0245  2A7B               	line	42
  1645                           ;FuncionOscilador.c: 42:         case 6:
  1646                           	
  1647                           l98:	
  1648  0246                     	line	43
  1649                           ;FuncionOscilador.c: 43:             OSCCONbits.IRCF0 = 0;
  1650                           	bsf	status, 5	;RP0=1, select bank1
  1651  0246  1683               	bcf	status, 6	;RP1=0, select bank1
  1652  0247  1303               	bcf	(143)^080h,4	;volatile
  1653  0248  120F               	line	44
  1654                           ;FuncionOscilador.c: 44:             OSCCONbits.IRCF1 = 1;
  1655                           	bsf	(143)^080h,5	;volatile
  1656  0249  168F               	line	45
  1657                           ;FuncionOscilador.c: 45:             OSCCONbits.IRCF2 = 1;
  1658                           	bsf	(143)^080h,6	;volatile
  1659  024A  170F               	line	46
  1660                           ;FuncionOscilador.c: 46:             break;
  1661                           	goto	l92
  1662  024B  2A7B               	line	47
  1663                           ;FuncionOscilador.c: 47:         case 7:
  1664                           	
  1665                           l99:	
  1666  024C                     	line	48
  1667                           ;FuncionOscilador.c: 48:             OSCCONbits.IRCF0 = 1;
  1668                           	bsf	status, 5	;RP0=1, select bank1
  1669  024C  1683               	bcf	status, 6	;RP1=0, select bank1
  1670  024D  1303               	bsf	(143)^080h,4	;volatile
  1671  024E  160F               	line	49
  1672                           ;FuncionOscilador.c: 49:             OSCCONbits.IRCF1 = 1;
  1673                           	bsf	(143)^080h,5	;volatile
  1674  024F  168F               	line	50
  1675                           ;FuncionOscilador.c: 50:             OSCCONbits.IRCF2 = 1;
  1676                           	bsf	(143)^080h,6	;volatile
  1677  0250  170F               	line	51
  1678                           ;FuncionOscilador.c: 51:             break;
  1679                           	goto	l92
  1680  0251  2A7B               	line	52
  1681                           ;FuncionOscilador.c: 52:         default:
  1682                           	
  1683                           l100:	
  1684  0252                     	line	53
  1685                           ;FuncionOscilador.c: 53:             OSCCONbits.IRCF0 = 0;
  1686                           	bsf	status, 5	;RP0=1, select bank1
  1687  0252  1683               	bcf	status, 6	;RP1=0, select bank1
  1688  0253  1303               	bcf	(143)^080h,4	;volatile
  1689  0254  120F               	line	54
  1690                           ;FuncionOscilador.c: 54:             OSCCONbits.IRCF1 = 1;
  1691                           	bsf	(143)^080h,5	;volatile
  1692  0255  168F               	line	55
  1693                           ;FuncionOscilador.c: 55:             OSCCONbits.IRCF2 = 1;
  1694                           	bsf	(143)^080h,6	;volatile
  1695  0256  170F               	line	56
  1696                           ;FuncionOscilador.c: 56:             break;
  1697                           	goto	l92
  1698  0257  2A7B               	line	57
  1699                           	
  1700                           l1015:	
  1701  0258                     ;FuncionOscilador.c: 57:     }
  1702                           	goto	l92
  1703  0258  2A7B               	
  1704                           l90:	
  1705  0259                     	
  1706                           l1017:	
  1707  0259                     	movf	(initOsc@frec),w
  1708  0259  0874               	movwf	(??_initOsc+0)+0
  1709  025A  00F2               	clrf	(??_initOsc+0)+0+1
  1710  025B  01F3               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1711                           ; Switch size 1, requested type "space"
  1712                           ; Number of cases is 1, Range of values is 0 to 0
  1713                           ; switch strategies available:
  1714                           ; Name         Instructions Cycles
  1715                           ; simple_byte            4     3 (average)
  1716                           ; direct_byte           11     8 (fixed)
  1717                           ; jumptable            260     6 (fixed)
  1718                           ;	Chosen strategy is simple_byte
  1719                           
  1720                           	movf 1+(??_initOsc+0)+0,w
  1721  025C  0873               	opt asmopt_push
  1722                           	opt asmopt_off
  1723                           	xorlw	0^0	; case 0
  1724  025D  3A00               	skipnz
  1725  025E  1903               	goto	l1237
  1726  025F  2A61               	goto	l100
  1727  0260  2A52               	opt asmopt_pop
  1728                           	
  1729                           l1237:	
  1730  0261                     ; Switch size 1, requested type "space"
  1731                           ; Number of cases is 8, Range of values is 0 to 7
  1732                           ; switch strategies available:
  1733                           ; Name         Instructions Cycles
  1734                           ; simple_byte           25    13 (average)
  1735                           ; direct_byte           32     8 (fixed)
  1736                           ; jumptable            260     6 (fixed)
  1737                           ;	Chosen strategy is simple_byte
  1738                           
  1739                           	movf 0+(??_initOsc+0)+0,w
  1740  0261  0872               	opt asmopt_push
  1741                           	opt asmopt_off
  1742                           	xorlw	0^0	; case 0
  1743  0262  3A00               	skipnz
  1744  0263  1903               	goto	l91
  1745  0264  2A22               	xorlw	1^0	; case 1
  1746  0265  3A01               	skipnz
  1747  0266  1903               	goto	l93
  1748  0267  2A28               	xorlw	2^1	; case 2
  1749  0268  3A03               	skipnz
  1750  0269  1903               	goto	l94
  1751  026A  2A2E               	xorlw	3^2	; case 3
  1752  026B  3A01               	skipnz
  1753  026C  1903               	goto	l95
  1754  026D  2A34               	xorlw	4^3	; case 4
  1755  026E  3A07               	skipnz
  1756  026F  1903               	goto	l96
  1757  0270  2A3A               	xorlw	5^4	; case 5
  1758  0271  3A01               	skipnz
  1759  0272  1903               	goto	l97
  1760  0273  2A40               	xorlw	6^5	; case 6
  1761  0274  3A03               	skipnz
  1762  0275  1903               	goto	l98
  1763  0276  2A46               	xorlw	7^6	; case 7
  1764  0277  3A01               	skipnz
  1765  0278  1903               	goto	l99
  1766  0279  2A4C               	goto	l100
  1767  027A  2A52               	opt asmopt_pop
  1768                           
  1769                           	
  1770                           l92:	
  1771  027B                     	line	59
  1772                           ;FuncionOscilador.c: 59:     OSCCONbits.SCS = 1;
  1773                           	bsf	(143)^080h,0	;volatile
  1774  027B  140F               	line	60
  1775                           	
  1776                           l101:	
  1777  027C                     	return
  1778  027C  0008               	opt stack 0
  1779                           GLOBAL	__end_of_initOsc
  1780                           	__end_of_initOsc:
  1781  027D                     	signat	_initOsc,4217
  1782                           	global	_init
  1783                           
  1784 ;; *************** function _init *****************
  1785 ;; Defined at:
  1786 ;;		line 118 in file "SubMasterProyect.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		status,2
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1800 ;;      Params:         0       0       0       0       0
  1801 ;;      Locals:         0       0       0       0       0
  1802 ;;      Temps:          0       0       0       0       0
  1803 ;;      Totals:         0       0       0       0       0
  1804 ;;Total ram usage:        0 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    1
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1814                           	file	"SubMasterProyect.c"
  1815                           	line	118
  1816                           global __ptext2
  1817                           __ptext2:	;psect for function _init
  1818  027D                     psect	text2
  1819                           	file	"SubMasterProyect.c"
  1820                           	line	118
  1821                           	global	__size_of_init
  1822                           	__size_of_init	equ	__end_of_init-_init
  1823  0019                     	
  1824                           _init:	
  1825  027D                     ;incstack = 0
  1826                           	opt	stack 6
  1827                           ; Regs used in _init: [status,2]
  1828                           	line	120
  1829                           	
  1830                           l999:	
  1831  027D                     ;SubMasterProyect.c: 120:     TRISA = 0;
  1832                           	bsf	status, 5	;RP0=1, select bank1
  1833  027D  1683               	bcf	status, 6	;RP1=0, select bank1
  1834  027E  1303               	clrf	(133)^080h	;volatile
  1835  027F  0185               	line	121
  1836                           ;SubMasterProyect.c: 121:     TRISB = 0;
  1837                           	clrf	(134)^080h	;volatile
  1838  0280  0186               	line	122
  1839                           ;SubMasterProyect.c: 122:     TRISD = 0;
  1840                           	clrf	(136)^080h	;volatile
  1841  0281  0188               	line	123
  1842                           ;SubMasterProyect.c: 123:     TRISC = 0;
  1843                           	clrf	(135)^080h	;volatile
  1844  0282  0187               	line	124
  1845                           ;SubMasterProyect.c: 124:     TRISE = 0;
  1846                           	clrf	(137)^080h	;volatile
  1847  0283  0189               	line	127
  1848                           	
  1849                           l1001:	
  1850  0284                     ;SubMasterProyect.c: 127:     TRISCbits.TRISC7 = 1;
  1851                           	bsf	(135)^080h,7	;volatile
  1852  0284  1787               	line	128
  1853                           	
  1854                           l1003:	
  1855  0285                     ;SubMasterProyect.c: 128:     TRISCbits.TRISC6 = 1;
  1856                           	bsf	(135)^080h,6	;volatile
  1857  0285  1707               	line	132
  1858                           	
  1859                           l1005:	
  1860  0286                     ;SubMasterProyect.c: 132:     TRISCbits.TRISC5 = 0;
  1861                           	bcf	(135)^080h,5	;volatile
  1862  0286  1287               	line	133
  1863                           	
  1864                           l1007:	
  1865  0287                     ;SubMasterProyect.c: 133:     TRISCbits.TRISC4 = 1;
  1866                           	bsf	(135)^080h,4	;volatile
  1867  0287  1607               	line	134
  1868                           	
  1869                           l1009:	
  1870  0288                     ;SubMasterProyect.c: 134:     TRISCbits.TRISC3 = 1;
  1871                           	bsf	(135)^080h,3	;volatile
  1872  0288  1587               	line	137
  1873                           ;SubMasterProyect.c: 137:     ANSEL = 0;
  1874                           	bsf	status, 5	;RP0=1, select bank3
  1875  0289  1683               	bsf	status, 6	;RP1=1, select bank3
  1876  028A  1703               	clrf	(392)^0180h	;volatile
  1877  028B  0188               	line	138
  1878                           ;SubMasterProyect.c: 138:     ANSELH = 0;
  1879                           	clrf	(393)^0180h	;volatile
  1880  028C  0189               	line	141
  1881                           ;SubMasterProyect.c: 141:     PORTA = 0;
  1882                           	bcf	status, 5	;RP0=0, select bank0
  1883  028D  1283               	bcf	status, 6	;RP1=0, select bank0
  1884  028E  1303               	clrf	(5)	;volatile
  1885  028F  0185               	line	142
  1886                           ;SubMasterProyect.c: 142:     PORTB = 0;
  1887                           	clrf	(6)	;volatile
  1888  0290  0186               	line	143
  1889                           ;SubMasterProyect.c: 143:     PORTD = 0;
  1890                           	clrf	(8)	;volatile
  1891  0291  0188               	line	144
  1892                           ;SubMasterProyect.c: 144:     PORTC = 0;
  1893                           	clrf	(7)	;volatile
  1894  0292  0187               	line	145
  1895                           ;SubMasterProyect.c: 145:     PORTE = 0;
  1896                           	clrf	(9)	;volatile
  1897  0293  0189               	goto	l85
  1898  0294  2A95               	line	159
  1899                           	
  1900                           l1011:	
  1901  0295                     	line	160
  1902                           ;SubMasterProyect.c: 159:     return;
  1903                           	
  1904                           l85:	
  1905  0295                     	return
  1906  0295  0008               	opt stack 0
  1907                           GLOBAL	__end_of_init
  1908                           	__end_of_init:
  1909  0296                     	signat	_init,89
  1910                           	global	_UART_Read
  1911                           
  1912 ;; *************** function _UART_Read *****************
  1913 ;; Defined at:
  1914 ;;		line 62 in file "USARTinit.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      unsigned char 
  1921 ;; Registers used:
  1922 ;;		wreg
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1928 ;;      Params:         0       0       0       0       0
  1929 ;;      Locals:         0       0       0       0       0
  1930 ;;      Temps:          0       0       0       0       0
  1931 ;;      Totals:         0       0       0       0       0
  1932 ;;Total ram usage:        0 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    1
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;;		_UART_Read_Text
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1943                           	file	"USARTinit.c"
  1944                           	line	62
  1945                           global __ptext3
  1946                           __ptext3:	;psect for function _UART_Read
  1947  0296                     psect	text3
  1948                           	file	"USARTinit.c"
  1949                           	line	62
  1950                           	global	__size_of_UART_Read
  1951                           	__size_of_UART_Read	equ	__end_of_UART_Read-_UART_Read
  1952  000B                     	
  1953                           _UART_Read:	
  1954  0296                     ;incstack = 0
  1955                           	opt	stack 6
  1956                           ; Regs used in _UART_Read: [wreg]
  1957                           	line	64
  1958                           	
  1959                           l1055:	
  1960  0296                     ;USARTinit.c: 64:   while(!RCIF);
  1961                           	goto	l175
  1962  0296  2A97               	
  1963                           l176:	
  1964  0297                     	
  1965                           l175:	
  1966  0297                     	bcf	status, 5	;RP0=0, select bank0
  1967  0297  1283               	bcf	status, 6	;RP1=0, select bank0
  1968  0298  1303               	btfss	(101/8),(101)&7	;volatile
  1969  0299  1E8C               	goto	u471
  1970  029A  2A9C               	goto	u470
  1971  029B  2A9D               u471:
  1972  029C                     	goto	l175
  1973  029C  2A97               u470:
  1974  029D                     	goto	l1057
  1975  029D  2A9E               	
  1976                           l177:	
  1977  029E                     	line	65
  1978                           	
  1979                           l1057:	
  1980  029E                     ;USARTinit.c: 65:   return RCREG;
  1981                           	movf	(26),w	;volatile
  1982  029E  081A               	goto	l178
  1983  029F  2AA0               	
  1984                           l1059:	
  1985  02A0                     	line	66
  1986                           	
  1987                           l178:	
  1988  02A0                     	return
  1989  02A0  0008               	opt stack 0
  1990                           GLOBAL	__end_of_UART_Read
  1991                           	__end_of_UART_Read:
  1992  02A1                     	signat	_UART_Read,89
  1993                           	global	_UART_Init
  1994                           
  1995 ;; *************** function _UART_Init *****************
  1996 ;; Defined at:
  1997 ;;		line 12 in file "USARTinit.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  baudrate        4    8[BANK0 ] const long 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  x               2   24[BANK0 ] unsigned int 
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      unsigned char 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0, pclath, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2011 ;;      Params:         0       4       0       0       0
  2012 ;;      Locals:         0       2       0       0       0
  2013 ;;      Temps:          0      12       0       0       0
  2014 ;;      Totals:         0      18       0       0       0
  2015 ;;Total ram usage:       18 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    2
  2018 ;; This function calls:
  2019 ;;		___aldiv
  2020 ;; This function is called by:
  2021 ;;		_main
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2025                           	line	12
  2026                           global __ptext4
  2027                           __ptext4:	;psect for function _UART_Init
  2028  0026                     psect	text4
  2029                           	file	"USARTinit.c"
  2030                           	line	12
  2031                           	global	__size_of_UART_Init
  2032                           	__size_of_UART_Init	equ	__end_of_UART_Init-_UART_Init
  2033  00ED                     	
  2034                           _UART_Init:	
  2035  0026                     ;incstack = 0
  2036                           	opt	stack 5
  2037                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  2038                           	line	15
  2039                           	
  2040                           l1159:	
  2041  0026                     ;USARTinit.c: 12: char UART_Init(const long int baudrate);USARTinit.c: 13: {;USARTinit.c
                                 : 14:   unsigned int x;;USARTinit.c: 15:   x = (8000000 - baudrate*64)/(baudrate*64);
  2042                           	bcf	status, 5	;RP0=0, select bank0
  2043  0026  1283               	bcf	status, 6	;RP1=0, select bank0
  2044  0027  1303               	movf	(UART_Init@baudrate),w
  2045  0028  0828               	movwf	(??_UART_Init+0)+0
  2046  0029  00AC               	movf	(UART_Init@baudrate+1),w
  2047  002A  0829               	movwf	((??_UART_Init+0)+0+1)
  2048  002B  00AD               	movf	(UART_Init@baudrate+2),w
  2049  002C  082A               	movwf	((??_UART_Init+0)+0+2)
  2050  002D  00AE               	movf	(UART_Init@baudrate+3),w
  2051  002E  082B               	movwf	((??_UART_Init+0)+0+3)
  2052  002F  00AF               	movlw	06h
  2053  0030  3006               u635:
  2054  0031                     	clrc
  2055  0031  1003               	rlf	(??_UART_Init+0)+0,f
  2056  0032  0DAC               	rlf	(??_UART_Init+0)+1,f
  2057  0033  0DAD               	rlf	(??_UART_Init+0)+2,f
  2058  0034  0DAE               	rlf	(??_UART_Init+0)+3,f
  2059  0035  0DAF               u630:
  2060  0036                     	addlw	-1
  2061  0036  3EFF               	skipz
  2062  0037  1D03               	goto	u635
  2063  0038  2831               	movf	3+(??_UART_Init+0)+0,w
  2064  0039  082F               	movwf	(___aldiv@divisor+3)
  2065  003A  00A3               	movf	2+(??_UART_Init+0)+0,w
  2066  003B  082E               	movwf	(___aldiv@divisor+2)
  2067  003C  00A2               	movf	1+(??_UART_Init+0)+0,w
  2068  003D  082D               	movwf	(___aldiv@divisor+1)
  2069  003E  00A1               	movf	0+(??_UART_Init+0)+0,w
  2070  003F  082C               	movwf	(___aldiv@divisor)
  2071  0040  00A0               
  2072                           	movlw	0
  2073  0041  3000               	movwf	((??_UART_Init+4)+0)
  2074  0042  00B0               	movlw	012h
  2075  0043  3012               	movwf	((??_UART_Init+4)+0+1)
  2076  0044  00B1               	movlw	07Ah
  2077  0045  307A               	movwf	((??_UART_Init+4)+0+2)
  2078  0046  00B2               	movlw	0
  2079  0047  3000               	movwf	((??_UART_Init+4)+0+3)
  2080  0048  00B3               	movf	(UART_Init@baudrate),w
  2081  0049  0828               	movwf	(??_UART_Init+8)+0
  2082  004A  00B4               	movf	(UART_Init@baudrate+1),w
  2083  004B  0829               	movwf	((??_UART_Init+8)+0+1)
  2084  004C  00B5               	movf	(UART_Init@baudrate+2),w
  2085  004D  082A               	movwf	((??_UART_Init+8)+0+2)
  2086  004E  00B6               	movf	(UART_Init@baudrate+3),w
  2087  004F  082B               	movwf	((??_UART_Init+8)+0+3)
  2088  0050  00B7               	movlw	06h
  2089  0051  3006               u645:
  2090  0052                     	clrc
  2091  0052  1003               	rlf	(??_UART_Init+8)+0,f
  2092  0053  0DB4               	rlf	(??_UART_Init+8)+1,f
  2093  0054  0DB5               	rlf	(??_UART_Init+8)+2,f
  2094  0055  0DB6               	rlf	(??_UART_Init+8)+3,f
  2095  0056  0DB7               u640:
  2096  0057                     	addlw	-1
  2097  0057  3EFF               	skipz
  2098  0058  1D03               	goto	u645
  2099  0059  2852               	comf	(??_UART_Init+8)+0,f
  2100  005A  09B4               	comf	(??_UART_Init+8)+1,f
  2101  005B  09B5               	comf	(??_UART_Init+8)+2,f
  2102  005C  09B6               	comf	(??_UART_Init+8)+3,f
  2103  005D  09B7               	incf	(??_UART_Init+8)+0,f
  2104  005E  0AB4               	skipnz
  2105  005F  1903               	incf	(??_UART_Init+8)+1,f
  2106  0060  0AB5               	skipnz
  2107  0061  1903               	incf	(??_UART_Init+8)+2,f
  2108  0062  0AB6               	skipnz
  2109  0063  1903               	incf	(??_UART_Init+8)+3,f
  2110  0064  0AB7               	movf	0+(??_UART_Init+8)+0,w
  2111  0065  0834               	addwf	(??_UART_Init+4)+0,f
  2112  0066  07B0               	movf	1+(??_UART_Init+8)+0,w
  2113  0067  0835               	skipnc
  2114  0068  1803               	incfsz	1+(??_UART_Init+8)+0,w
  2115  0069  0F35               	goto	u650
  2116  006A  286C               	goto	u651
  2117  006B  286D               u650:
  2118  006C                     	addwf	(??_UART_Init+4)+1,f
  2119  006C  07B1               u651:
  2120  006D                     	movf	2+(??_UART_Init+8)+0,w
  2121  006D  0836               	skipnc
  2122  006E  1803               	incfsz	2+(??_UART_Init+8)+0,w
  2123  006F  0F36               	goto	u652
  2124  0070  2872               	goto	u653
  2125  0071  2873               u652:
  2126  0072                     	addwf	(??_UART_Init+4)+2,f
  2127  0072  07B2               u653:
  2128  0073                     	movf	3+(??_UART_Init+8)+0,w
  2129  0073  0837               	skipnc
  2130  0074  1803               	incf	3+(??_UART_Init+8)+0,w
  2131  0075  0A37               	addwf	(??_UART_Init+4)+3,f
  2132  0076  07B3               	movf	3+(??_UART_Init+4)+0,w
  2133  0077  0833               	movwf	(___aldiv@dividend+3)
  2134  0078  00A7               	movf	2+(??_UART_Init+4)+0,w
  2135  0079  0832               	movwf	(___aldiv@dividend+2)
  2136  007A  00A6               	movf	1+(??_UART_Init+4)+0,w
  2137  007B  0831               	movwf	(___aldiv@dividend+1)
  2138  007C  00A5               	movf	0+(??_UART_Init+4)+0,w
  2139  007D  0830               	movwf	(___aldiv@dividend)
  2140  007E  00A4               
  2141                           	fcall	___aldiv
  2142  007F  120A  118A  2113  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2143  0084  1283               	bcf	status, 6	;RP1=0, select bank0
  2144  0085  1303               	movf	(1+(?___aldiv)),w
  2145  0086  0821               	movwf	(UART_Init@x+1)
  2146  0087  00B9               	movf	(0+(?___aldiv)),w
  2147  0088  0820               	movwf	(UART_Init@x)
  2148  0089  00B8               	line	16
  2149                           	
  2150                           l1161:	
  2151  008A                     ;USARTinit.c: 16:   if(x>255)
  2152                           	movlw	01h
  2153  008A  3001               	subwf	(UART_Init@x+1),w
  2154  008B  0239               	movlw	0
  2155  008C  3000               	skipnz
  2156  008D  1903               	subwf	(UART_Init@x),w
  2157  008E  0238               	skipc
  2158  008F  1C03               	goto	u661
  2159  0090  2892               	goto	u660
  2160  0091  2893               u661:
  2161  0092                     	goto	l1167
  2162  0092  28F9               u660:
  2163  0093                     	line	18
  2164                           	
  2165                           l1163:	
  2166  0093                     ;USARTinit.c: 17:   {;USARTinit.c: 18:     x = (8000000 - baudrate*16)/(baudrate*16);
  2167                           	movf	(UART_Init@baudrate),w
  2168  0093  0828               	movwf	(??_UART_Init+0)+0
  2169  0094  00AC               	movf	(UART_Init@baudrate+1),w
  2170  0095  0829               	movwf	((??_UART_Init+0)+0+1)
  2171  0096  00AD               	movf	(UART_Init@baudrate+2),w
  2172  0097  082A               	movwf	((??_UART_Init+0)+0+2)
  2173  0098  00AE               	movf	(UART_Init@baudrate+3),w
  2174  0099  082B               	movwf	((??_UART_Init+0)+0+3)
  2175  009A  00AF               	movlw	04h
  2176  009B  3004               u675:
  2177  009C                     	clrc
  2178  009C  1003               	rlf	(??_UART_Init+0)+0,f
  2179  009D  0DAC               	rlf	(??_UART_Init+0)+1,f
  2180  009E  0DAD               	rlf	(??_UART_Init+0)+2,f
  2181  009F  0DAE               	rlf	(??_UART_Init+0)+3,f
  2182  00A0  0DAF               u670:
  2183  00A1                     	addlw	-1
  2184  00A1  3EFF               	skipz
  2185  00A2  1D03               	goto	u675
  2186  00A3  289C               	movf	3+(??_UART_Init+0)+0,w
  2187  00A4  082F               	movwf	(___aldiv@divisor+3)
  2188  00A5  00A3               	movf	2+(??_UART_Init+0)+0,w
  2189  00A6  082E               	movwf	(___aldiv@divisor+2)
  2190  00A7  00A2               	movf	1+(??_UART_Init+0)+0,w
  2191  00A8  082D               	movwf	(___aldiv@divisor+1)
  2192  00A9  00A1               	movf	0+(??_UART_Init+0)+0,w
  2193  00AA  082C               	movwf	(___aldiv@divisor)
  2194  00AB  00A0               
  2195                           	movlw	0
  2196  00AC  3000               	movwf	((??_UART_Init+4)+0)
  2197  00AD  00B0               	movlw	012h
  2198  00AE  3012               	movwf	((??_UART_Init+4)+0+1)
  2199  00AF  00B1               	movlw	07Ah
  2200  00B0  307A               	movwf	((??_UART_Init+4)+0+2)
  2201  00B1  00B2               	movlw	0
  2202  00B2  3000               	movwf	((??_UART_Init+4)+0+3)
  2203  00B3  00B3               	movf	(UART_Init@baudrate),w
  2204  00B4  0828               	movwf	(??_UART_Init+8)+0
  2205  00B5  00B4               	movf	(UART_Init@baudrate+1),w
  2206  00B6  0829               	movwf	((??_UART_Init+8)+0+1)
  2207  00B7  00B5               	movf	(UART_Init@baudrate+2),w
  2208  00B8  082A               	movwf	((??_UART_Init+8)+0+2)
  2209  00B9  00B6               	movf	(UART_Init@baudrate+3),w
  2210  00BA  082B               	movwf	((??_UART_Init+8)+0+3)
  2211  00BB  00B7               	movlw	04h
  2212  00BC  3004               u685:
  2213  00BD                     	clrc
  2214  00BD  1003               	rlf	(??_UART_Init+8)+0,f
  2215  00BE  0DB4               	rlf	(??_UART_Init+8)+1,f
  2216  00BF  0DB5               	rlf	(??_UART_Init+8)+2,f
  2217  00C0  0DB6               	rlf	(??_UART_Init+8)+3,f
  2218  00C1  0DB7               u680:
  2219  00C2                     	addlw	-1
  2220  00C2  3EFF               	skipz
  2221  00C3  1D03               	goto	u685
  2222  00C4  28BD               	comf	(??_UART_Init+8)+0,f
  2223  00C5  09B4               	comf	(??_UART_Init+8)+1,f
  2224  00C6  09B5               	comf	(??_UART_Init+8)+2,f
  2225  00C7  09B6               	comf	(??_UART_Init+8)+3,f
  2226  00C8  09B7               	incf	(??_UART_Init+8)+0,f
  2227  00C9  0AB4               	skipnz
  2228  00CA  1903               	incf	(??_UART_Init+8)+1,f
  2229  00CB  0AB5               	skipnz
  2230  00CC  1903               	incf	(??_UART_Init+8)+2,f
  2231  00CD  0AB6               	skipnz
  2232  00CE  1903               	incf	(??_UART_Init+8)+3,f
  2233  00CF  0AB7               	movf	0+(??_UART_Init+8)+0,w
  2234  00D0  0834               	addwf	(??_UART_Init+4)+0,f
  2235  00D1  07B0               	movf	1+(??_UART_Init+8)+0,w
  2236  00D2  0835               	skipnc
  2237  00D3  1803               	incfsz	1+(??_UART_Init+8)+0,w
  2238  00D4  0F35               	goto	u690
  2239  00D5  28D7               	goto	u691
  2240  00D6  28D8               u690:
  2241  00D7                     	addwf	(??_UART_Init+4)+1,f
  2242  00D7  07B1               u691:
  2243  00D8                     	movf	2+(??_UART_Init+8)+0,w
  2244  00D8  0836               	skipnc
  2245  00D9  1803               	incfsz	2+(??_UART_Init+8)+0,w
  2246  00DA  0F36               	goto	u692
  2247  00DB  28DD               	goto	u693
  2248  00DC  28DE               u692:
  2249  00DD                     	addwf	(??_UART_Init+4)+2,f
  2250  00DD  07B2               u693:
  2251  00DE                     	movf	3+(??_UART_Init+8)+0,w
  2252  00DE  0837               	skipnc
  2253  00DF  1803               	incf	3+(??_UART_Init+8)+0,w
  2254  00E0  0A37               	addwf	(??_UART_Init+4)+3,f
  2255  00E1  07B3               	movf	3+(??_UART_Init+4)+0,w
  2256  00E2  0833               	movwf	(___aldiv@dividend+3)
  2257  00E3  00A7               	movf	2+(??_UART_Init+4)+0,w
  2258  00E4  0832               	movwf	(___aldiv@dividend+2)
  2259  00E5  00A6               	movf	1+(??_UART_Init+4)+0,w
  2260  00E6  0831               	movwf	(___aldiv@dividend+1)
  2261  00E7  00A5               	movf	0+(??_UART_Init+4)+0,w
  2262  00E8  0830               	movwf	(___aldiv@dividend)
  2263  00E9  00A4               
  2264                           	fcall	___aldiv
  2265  00EA  120A  118A  2113  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2266  00EF  1283               	bcf	status, 6	;RP1=0, select bank0
  2267  00F0  1303               	movf	(1+(?___aldiv)),w
  2268  00F1  0821               	movwf	(UART_Init@x+1)
  2269  00F2  00B9               	movf	(0+(?___aldiv)),w
  2270  00F3  0820               	movwf	(UART_Init@x)
  2271  00F4  00B8               	line	19
  2272                           	
  2273                           l1165:	
  2274  00F5                     ;USARTinit.c: 19:     TXSTAbits.BRGH=1;
  2275                           	bsf	status, 5	;RP0=1, select bank1
  2276  00F5  1683               	bcf	status, 6	;RP1=0, select bank1
  2277  00F6  1303               	bsf	(152)^080h,2	;volatile
  2278  00F7  1518               	goto	l1167
  2279  00F8  28F9               	line	20
  2280                           ;USARTinit.c: 20:   }
  2281                           	
  2282                           l152:	
  2283  00F9                     	line	21
  2284                           	
  2285                           l1167:	
  2286  00F9                     ;USARTinit.c: 21:   if(x<256)
  2287                           	movlw	01h
  2288  00F9  3001               	bcf	status, 5	;RP0=0, select bank0
  2289  00FA  1283               	subwf	(UART_Init@x+1),w
  2290  00FB  0239               	movlw	0
  2291  00FC  3000               	skipnz
  2292  00FD  1903               	subwf	(UART_Init@x),w
  2293  00FE  0238               	skipnc
  2294  00FF  1803               	goto	u701
  2295  0100  2902               	goto	u700
  2296  0101  2903               u701:
  2297  0102                     	goto	l154
  2298  0102  2912               u700:
  2299  0103                     	line	23
  2300                           	
  2301                           l1169:	
  2302  0103                     ;USARTinit.c: 22:   {;USARTinit.c: 23:     SPBRG = x;
  2303                           	movf	(UART_Init@x),w
  2304  0103  0838               	bsf	status, 5	;RP0=1, select bank1
  2305  0104  1683               	bcf	status, 6	;RP1=0, select bank1
  2306  0105  1303               	movwf	(153)^080h	;volatile
  2307  0106  0099               	line	25
  2308                           	
  2309                           l1171:	
  2310  0107                     ;USARTinit.c: 25:     TXSTAbits.TX9=0;
  2311                           	bcf	(152)^080h,6	;volatile
  2312  0107  1318               	line	26
  2313                           	
  2314                           l1173:	
  2315  0108                     ;USARTinit.c: 26:     TXSTAbits.TXEN=1;
  2316                           	bsf	(152)^080h,5	;volatile
  2317  0108  1698               	line	27
  2318                           	
  2319                           l1175:	
  2320  0109                     ;USARTinit.c: 27:     TXSTAbits.SYNC=0;
  2321                           	bcf	(152)^080h,4	;volatile
  2322  0109  1218               	line	30
  2323                           	
  2324                           l1177:	
  2325  010A                     ;USARTinit.c: 30:     RCSTAbits.SPEN=1;
  2326                           	bcf	status, 5	;RP0=0, select bank0
  2327  010A  1283               	bcf	status, 6	;RP1=0, select bank0
  2328  010B  1303               	bsf	(24),7	;volatile
  2329  010C  1798               	line	31
  2330                           	
  2331                           l1179:	
  2332  010D                     ;USARTinit.c: 31:     RCSTAbits.RX9=0;
  2333                           	bcf	(24),6	;volatile
  2334  010D  1318               	line	32
  2335                           	
  2336                           l1181:	
  2337  010E                     ;USARTinit.c: 32:     RCSTAbits.CREN=1;
  2338                           	bsf	(24),4	;volatile
  2339  010E  1618               	line	33
  2340                           	
  2341                           l1183:	
  2342  010F                     ;USARTinit.c: 33:     RCSTAbits.ADDEN=0;
  2343                           	bcf	(24),3	;volatile
  2344  010F  1198               	goto	l154
  2345  0110  2912               	line	34
  2346                           	
  2347                           l1185:	
  2348  0111                     ;USARTinit.c: 34:     return 1;;	Return value of _UART_Init is never used
  2349                           	goto	l154
  2350  0111  2912               	line	35
  2351                           ;USARTinit.c: 35:   }
  2352                           	
  2353                           l153:	
  2354  0112                     	line	37
  2355                           ;USARTinit.c: 36:   return 0;;	Return value of _UART_Init is never used
  2356                           	
  2357                           l154:	
  2358  0112                     	return
  2359  0112  0008               	opt stack 0
  2360                           GLOBAL	__end_of_UART_Init
  2361                           	__end_of_UART_Init:
  2362  0113                     	signat	_UART_Init,4217
  2363                           	global	___aldiv
  2364                           
  2365 ;; *************** function ___aldiv *****************
  2366 ;; Defined at:
  2367 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  divisor         4    0[BANK0 ] long 
  2370 ;;  dividend        4    4[BANK0 ] long 
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;  quotient        4    5[COMMON] long 
  2373 ;;  sign            1    4[COMMON] unsigned char 
  2374 ;;  counter         1    3[COMMON] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  4    0[BANK0 ] long 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         0       8       0       0       0
  2385 ;;      Locals:         6       0       0       0       0
  2386 ;;      Temps:          1       0       0       0       0
  2387 ;;      Totals:         7       8       0       0       0
  2388 ;;Total ram usage:       15 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    1
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_UART_Init
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  2398                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  2399                           	line	5
  2400                           global __ptext5
  2401                           __ptext5:	;psect for function ___aldiv
  2402  0113                     psect	text5
  2403                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  2404                           	line	5
  2405                           	global	__size_of___aldiv
  2406                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  2407  00A6                     	
  2408                           ___aldiv:	
  2409  0113                     ;incstack = 0
  2410                           	opt	stack 5
  2411                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2412                           	line	13
  2413                           	
  2414                           l1119:	
  2415  0113                     	clrf	(___aldiv@sign)
  2416  0113  01F4               	line	14
  2417                           	
  2418                           l1121:	
  2419  0114                     	bcf	status, 5	;RP0=0, select bank0
  2420  0114  1283               	bcf	status, 6	;RP1=0, select bank0
  2421  0115  1303               	btfss	(___aldiv@divisor+3),7
  2422  0116  1FA3               	goto	u531
  2423  0117  2919               	goto	u530
  2424  0118  291A               u531:
  2425  0119                     	goto	l335
  2426  0119  2927               u530:
  2427  011A                     	line	15
  2428                           	
  2429                           l1123:	
  2430  011A                     	comf	(___aldiv@divisor),f
  2431  011A  09A0               	comf	(___aldiv@divisor+1),f
  2432  011B  09A1               	comf	(___aldiv@divisor+2),f
  2433  011C  09A2               	comf	(___aldiv@divisor+3),f
  2434  011D  09A3               	incf	(___aldiv@divisor),f
  2435  011E  0AA0               	skipnz
  2436  011F  1903               	incf	(___aldiv@divisor+1),f
  2437  0120  0AA1               	skipnz
  2438  0121  1903               	incf	(___aldiv@divisor+2),f
  2439  0122  0AA2               	skipnz
  2440  0123  1903               	incf	(___aldiv@divisor+3),f
  2441  0124  0AA3               	line	16
  2442                           	clrf	(___aldiv@sign)
  2443  0125  01F4               	incf	(___aldiv@sign),f
  2444  0126  0AF4               	line	17
  2445                           	
  2446                           l335:	
  2447  0127                     	line	18
  2448                           	btfss	(___aldiv@dividend+3),7
  2449  0127  1FA7               	goto	u541
  2450  0128  292A               	goto	u540
  2451  0129  292B               u541:
  2452  012A                     	goto	l1129
  2453  012A  293B               u540:
  2454  012B                     	line	19
  2455                           	
  2456                           l1125:	
  2457  012B                     	comf	(___aldiv@dividend),f
  2458  012B  09A4               	comf	(___aldiv@dividend+1),f
  2459  012C  09A5               	comf	(___aldiv@dividend+2),f
  2460  012D  09A6               	comf	(___aldiv@dividend+3),f
  2461  012E  09A7               	incf	(___aldiv@dividend),f
  2462  012F  0AA4               	skipnz
  2463  0130  1903               	incf	(___aldiv@dividend+1),f
  2464  0131  0AA5               	skipnz
  2465  0132  1903               	incf	(___aldiv@dividend+2),f
  2466  0133  0AA6               	skipnz
  2467  0134  1903               	incf	(___aldiv@dividend+3),f
  2468  0135  0AA7               	line	20
  2469                           	
  2470                           l1127:	
  2471  0136                     	movlw	low(01h)
  2472  0136  3001               	movwf	(??___aldiv+0)+0
  2473  0137  00F2               	movf	(??___aldiv+0)+0,w
  2474  0138  0872               	xorwf	(___aldiv@sign),f
  2475  0139  06F4               	goto	l1129
  2476  013A  293B               	line	21
  2477                           	
  2478                           l336:	
  2479  013B                     	line	22
  2480                           	
  2481                           l1129:	
  2482  013B                     	movlw	high highword(0)
  2483  013B  3000               	movwf	(___aldiv@quotient+3)
  2484  013C  00F8               	movlw	low highword(0)
  2485  013D  3000               	movwf	(___aldiv@quotient+2)
  2486  013E  00F7               	movlw	high(0)
  2487  013F  3000               	movwf	(___aldiv@quotient+1)
  2488  0140  00F6               	movlw	low(0)
  2489  0141  3000               	movwf	(___aldiv@quotient)
  2490  0142  00F5               
  2491                           	line	23
  2492                           	
  2493                           l1131:	
  2494  0143                     	movf	(___aldiv@divisor+3),w
  2495  0143  0823               	iorwf	(___aldiv@divisor+2),w
  2496  0144  0422               	iorwf	(___aldiv@divisor+1),w
  2497  0145  0421               	iorwf	(___aldiv@divisor),w
  2498  0146  0420               	skipnz
  2499  0147  1903               	goto	u551
  2500  0148  294A               	goto	u550
  2501  0149  294B               u551:
  2502  014A                     	goto	l1151
  2503  014A  299E               u550:
  2504  014B                     	line	24
  2505                           	
  2506                           l1133:	
  2507  014B                     	clrf	(___aldiv@counter)
  2508  014B  01F3               	incf	(___aldiv@counter),f
  2509  014C  0AF3               	line	25
  2510                           	goto	l1137
  2511  014D  295C               	
  2512                           l339:	
  2513  014E                     	line	26
  2514                           	
  2515                           l1135:	
  2516  014E                     	movlw	01h
  2517  014E  3001               	movwf	(??___aldiv+0)+0
  2518  014F  00F2               u565:
  2519  0150                     	clrc
  2520  0150  1003               	rlf	(___aldiv@divisor),f
  2521  0151  0DA0               	rlf	(___aldiv@divisor+1),f
  2522  0152  0DA1               	rlf	(___aldiv@divisor+2),f
  2523  0153  0DA2               	rlf	(___aldiv@divisor+3),f
  2524  0154  0DA3               	decfsz	(??___aldiv+0)+0
  2525  0155  0BF2               	goto	u565
  2526  0156  2950               	line	27
  2527                           	movlw	low(01h)
  2528  0157  3001               	movwf	(??___aldiv+0)+0
  2529  0158  00F2               	movf	(??___aldiv+0)+0,w
  2530  0159  0872               	addwf	(___aldiv@counter),f
  2531  015A  07F3               	goto	l1137
  2532  015B  295C               	line	28
  2533                           	
  2534                           l338:	
  2535  015C                     	line	25
  2536                           	
  2537                           l1137:	
  2538  015C                     	btfss	(___aldiv@divisor+3),(31)&7
  2539  015C  1FA3               	goto	u571
  2540  015D  295F               	goto	u570
  2541  015E  2960               u571:
  2542  015F                     	goto	l1135
  2543  015F  294E               u570:
  2544  0160                     	goto	l1139
  2545  0160  2962               	
  2546                           l340:	
  2547  0161                     	goto	l1139
  2548  0161  2962               	line	29
  2549                           	
  2550                           l341:	
  2551  0162                     	line	30
  2552                           	
  2553                           l1139:	
  2554  0162                     	movlw	01h
  2555  0162  3001               	movwf	(??___aldiv+0)+0
  2556  0163  00F2               u585:
  2557  0164                     	clrc
  2558  0164  1003               	rlf	(___aldiv@quotient),f
  2559  0165  0DF5               	rlf	(___aldiv@quotient+1),f
  2560  0166  0DF6               	rlf	(___aldiv@quotient+2),f
  2561  0167  0DF7               	rlf	(___aldiv@quotient+3),f
  2562  0168  0DF8               	decfsz	(??___aldiv+0)+0
  2563  0169  0BF2               	goto	u585
  2564  016A  2964               	line	31
  2565                           	
  2566                           l1141:	
  2567  016B                     	movf	(___aldiv@divisor+3),w
  2568  016B  0823               	subwf	(___aldiv@dividend+3),w
  2569  016C  0227               	skipz
  2570  016D  1D03               	goto	u595
  2571  016E  2979               	movf	(___aldiv@divisor+2),w
  2572  016F  0822               	subwf	(___aldiv@dividend+2),w
  2573  0170  0226               	skipz
  2574  0171  1D03               	goto	u595
  2575  0172  2979               	movf	(___aldiv@divisor+1),w
  2576  0173  0821               	subwf	(___aldiv@dividend+1),w
  2577  0174  0225               	skipz
  2578  0175  1D03               	goto	u595
  2579  0176  2979               	movf	(___aldiv@divisor),w
  2580  0177  0820               	subwf	(___aldiv@dividend),w
  2581  0178  0224               u595:
  2582  0179                     	skipc
  2583  0179  1C03               	goto	u591
  2584  017A  297C               	goto	u590
  2585  017B  297D               u591:
  2586  017C                     	goto	l1147
  2587  017C  298D               u590:
  2588  017D                     	line	32
  2589                           	
  2590                           l1143:	
  2591  017D                     	movf	(___aldiv@divisor),w
  2592  017D  0820               	subwf	(___aldiv@dividend),f
  2593  017E  02A4               	movf	(___aldiv@divisor+1),w
  2594  017F  0821               	skipc
  2595  0180  1C03               	incfsz	(___aldiv@divisor+1),w
  2596  0181  0F21               	subwf	(___aldiv@dividend+1),f
  2597  0182  02A5               	movf	(___aldiv@divisor+2),w
  2598  0183  0822               	skipc
  2599  0184  1C03               	incfsz	(___aldiv@divisor+2),w
  2600  0185  0F22               	subwf	(___aldiv@dividend+2),f
  2601  0186  02A6               	movf	(___aldiv@divisor+3),w
  2602  0187  0823               	skipc
  2603  0188  1C03               	incfsz	(___aldiv@divisor+3),w
  2604  0189  0F23               	subwf	(___aldiv@dividend+3),f
  2605  018A  02A7               	line	33
  2606                           	
  2607                           l1145:	
  2608  018B                     	bsf	(___aldiv@quotient)+(0/8),(0)&7
  2609  018B  1475               	goto	l1147
  2610  018C  298D               	line	34
  2611                           	
  2612                           l342:	
  2613  018D                     	line	35
  2614                           	
  2615                           l1147:	
  2616  018D                     	movlw	01h
  2617  018D  3001               u605:
  2618  018E                     	clrc
  2619  018E  1003               	rrf	(___aldiv@divisor+3),f
  2620  018F  0CA3               	rrf	(___aldiv@divisor+2),f
  2621  0190  0CA2               	rrf	(___aldiv@divisor+1),f
  2622  0191  0CA1               	rrf	(___aldiv@divisor),f
  2623  0192  0CA0               	addlw	-1
  2624  0193  3EFF               	skipz
  2625  0194  1D03               	goto	u605
  2626  0195  298E               
  2627                           	line	36
  2628                           	
  2629                           l1149:	
  2630  0196                     	movlw	01h
  2631  0196  3001               	subwf	(___aldiv@counter),f
  2632  0197  02F3               	btfss	status,2
  2633  0198  1D03               	goto	u611
  2634  0199  299B               	goto	u610
  2635  019A  299C               u611:
  2636  019B                     	goto	l1139
  2637  019B  2962               u610:
  2638  019C                     	goto	l1151
  2639  019C  299E               	
  2640                           l343:	
  2641  019D                     	goto	l1151
  2642  019D  299E               	line	37
  2643                           	
  2644                           l337:	
  2645  019E                     	line	38
  2646                           	
  2647                           l1151:	
  2648  019E                     	movf	((___aldiv@sign)),w
  2649  019E  0874               	btfsc	status,2
  2650  019F  1903               	goto	u621
  2651  01A0  29A2               	goto	u620
  2652  01A1  29A3               u621:
  2653  01A2                     	goto	l1155
  2654  01A2  29AF               u620:
  2655  01A3                     	line	39
  2656                           	
  2657                           l1153:	
  2658  01A3                     	comf	(___aldiv@quotient),f
  2659  01A3  09F5               	comf	(___aldiv@quotient+1),f
  2660  01A4  09F6               	comf	(___aldiv@quotient+2),f
  2661  01A5  09F7               	comf	(___aldiv@quotient+3),f
  2662  01A6  09F8               	incf	(___aldiv@quotient),f
  2663  01A7  0AF5               	skipnz
  2664  01A8  1903               	incf	(___aldiv@quotient+1),f
  2665  01A9  0AF6               	skipnz
  2666  01AA  1903               	incf	(___aldiv@quotient+2),f
  2667  01AB  0AF7               	skipnz
  2668  01AC  1903               	incf	(___aldiv@quotient+3),f
  2669  01AD  0AF8               	goto	l1155
  2670  01AE  29AF               	
  2671                           l344:	
  2672  01AF                     	line	40
  2673                           	
  2674                           l1155:	
  2675  01AF                     	movf	(___aldiv@quotient+3),w
  2676  01AF  0878               	movwf	(?___aldiv+3)
  2677  01B0  00A3               	movf	(___aldiv@quotient+2),w
  2678  01B1  0877               	movwf	(?___aldiv+2)
  2679  01B2  00A2               	movf	(___aldiv@quotient+1),w
  2680  01B3  0876               	movwf	(?___aldiv+1)
  2681  01B4  00A1               	movf	(___aldiv@quotient),w
  2682  01B5  0875               	movwf	(?___aldiv)
  2683  01B6  00A0               
  2684                           	goto	l345
  2685  01B7  29B8               	
  2686                           l1157:	
  2687  01B8                     	line	41
  2688                           	
  2689                           l345:	
  2690  01B8                     	return
  2691  01B8  0008               	opt stack 0
  2692                           GLOBAL	__end_of___aldiv
  2693                           	__end_of___aldiv:
  2694  01B9                     	signat	___aldiv,8316
  2695                           	global	_UART_Data_Ready
  2696                           
  2697 ;; *************** function _UART_Data_Ready *****************
  2698 ;; Defined at:
  2699 ;;		line 57 in file "USARTinit.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;		None
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      unsigned char 
  2706 ;; Registers used:
  2707 ;;		wreg
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2713 ;;      Params:         0       0       0       0       0
  2714 ;;      Locals:         0       0       0       0       0
  2715 ;;      Temps:          0       0       0       0       0
  2716 ;;      Totals:         0       0       0       0       0
  2717 ;;Total ram usage:        0 bytes
  2718 ;; Hardware stack levels used:    1
  2719 ;; Hardware stack levels required when called:    1
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2727                           	file	"USARTinit.c"
  2728                           	line	57
  2729                           global __ptext6
  2730                           __ptext6:	;psect for function _UART_Data_Ready
  2731  02A9                     psect	text6
  2732                           	file	"USARTinit.c"
  2733                           	line	57
  2734                           	global	__size_of_UART_Data_Ready
  2735                           	__size_of_UART_Data_Ready	equ	__end_of_UART_Data_Ready-_UART_Data_Ready
  2736  0007                     	
  2737                           _UART_Data_Ready:	
  2738  02A9                     ;incstack = 0
  2739                           	opt	stack 6
  2740                           ; Regs used in _UART_Data_Ready: [wreg]
  2741                           	line	59
  2742                           	
  2743                           l1051:	
  2744  02A9                     ;USARTinit.c: 59:   return RCIF;
  2745                           	movlw	0
  2746  02A9  3000               	bcf	status, 5	;RP0=0, select bank0
  2747  02AA  1283               	bcf	status, 6	;RP1=0, select bank0
  2748  02AB  1303               	btfsc	(101/8),(101)&7	;volatile
  2749  02AC  1A8C               	movlw	1
  2750  02AD  3001               	goto	l172
  2751  02AE  2AAF               	
  2752                           l1053:	
  2753  02AF                     	line	60
  2754                           	
  2755                           l172:	
  2756  02AF                     	return
  2757  02AF  0008               	opt stack 0
  2758                           GLOBAL	__end_of_UART_Data_Ready
  2759                           	__end_of_UART_Data_Ready:
  2760  02B0                     	signat	_UART_Data_Ready,89
  2761                           	global	_interrupciones
  2762                           
  2763 ;; *************** function _interrupciones *****************
  2764 ;; Defined at:
  2765 ;;		line 63 in file "SubMasterProyect.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;		None
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		None
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2779 ;;      Params:         0       0       0       0       0
  2780 ;;      Locals:         0       0       0       0       0
  2781 ;;      Temps:          2       0       0       0       0
  2782 ;;      Totals:         2       0       0       0       0
  2783 ;;Total ram usage:        2 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		Interrupt level 1
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2792                           	file	"SubMasterProyect.c"
  2793                           	line	63
  2794                           global __ptext7
  2795                           __ptext7:	;psect for function _interrupciones
  2796  02A1                     psect	text7
  2797                           	file	"SubMasterProyect.c"
  2798                           	line	63
  2799                           	global	__size_of_interrupciones
  2800                           	__size_of_interrupciones	equ	__end_of_interrupciones-_interrupciones
  2801  0008                     	
  2802                           _interrupciones:	
  2803  02A1                     ;incstack = 0
  2804                           	opt	stack 5
  2805                           ; Regs used in _interrupciones: []
  2806                           psect	intentry,class=CODE,delta=2
  2807                           global __pintentry
  2808                           __pintentry:
  2809  0004                     global interrupt_function
  2810                           interrupt_function:
  2811  0004                     	global saved_w
  2812                           	saved_w	set	btemp+0
  2813  007E                     	movwf	saved_w
  2814  0004  00FE               	swapf	status,w
  2815  0005  0E03               	movwf	(??_interrupciones+0)
  2816  0006  00F0               	movf	pclath,w
  2817  0007  080A               	movwf	(??_interrupciones+1)
  2818  0008  00F1               	ljmp	_interrupciones
  2819  0009  120A  118A  2AA1   psect	text7
  2820                           	line	64
  2821                           	
  2822                           i1l865:	
  2823  02A1                     ;SubMasterProyect.c: 64:     if(RCIF==1){
  2824                           	goto	i1l66
  2825  02A1  2AA2               	line	66
  2826                           ;SubMasterProyect.c: 66:     }
  2827                           	
  2828                           i1l65:	
  2829  02A2                     	line	77
  2830                           	
  2831                           i1l66:	
  2832  02A2                     	movf	(??_interrupciones+1),w
  2833  02A2  0871               	movwf	pclath
  2834  02A3  008A               	swapf	(??_interrupciones+0)^0FFFFFF80h,w
  2835  02A4  0E70               	movwf	status
  2836  02A5  0083               	swapf	saved_w,f
  2837  02A6  0EFE               	swapf	saved_w,w
  2838  02A7  0E7E               	retfie
  2839  02A8  0009               	opt stack 0
  2840                           GLOBAL	__end_of_interrupciones
  2841                           	__end_of_interrupciones:
  2842  02A9                     	signat	_interrupciones,89
  2843                           global	___latbits
  2844                           ___latbits	equ	2
  2845  0002                     	global	btemp
  2846                           	btemp set 07Eh
  2847  007E                     
  2848                           	DABS	1,126,2	;btemp
  2849                           	global	wtemp0
  2850                           	wtemp0 set btemp+0
  2851  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     29      43
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _UART_Init->___aldiv

Critical Paths under _interrupciones in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _interrupciones in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupciones in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupciones in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupciones in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1140
                                             26 BANK0      3     3      0
                    _UART_Data_Ready
                          _UART_Init
                          _UART_Read
                               _init
                            _initOsc
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4    1118
                                              8 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                              2 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _UART_Data_Ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interrupciones                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Data_Ready
   _UART_Init
     ___aldiv
   _UART_Read
   _init
   _initOsc

 _interrupciones (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      37       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1D      2B       5       53.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      37      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Mar 10 20:06:57 2020

                       _z 0045               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      l71 01D4                        l80 021C                        l72 01D6  
                      l81 021D                        l73 01D5                        l90 0259  
                      l82 021D                        l74 01E1                        l91 0222  
                      l75 0201                        l92 027B                        l76 020F  
                      l85 0295                        l93 0228                        l77 0211  
                      l94 022E                        l78 0219                        l95 0234  
                      l79 021B                        l96 023A                        l97 0240  
                      l98 0246                        l99 024C    __end_of_interrupciones 02A9  
                     l100 0252                       l101 027C                       l152 00F9  
                     l153 0112                       l154 0112                       l172 02AF  
                     l340 0161                       l341 0162                       l342 018D  
                     l343 019D                       l335 0127                       l175 0297  
                     l344 01AF                       l336 013B                       l176 0297  
                     l345 01B8                       l337 019E                       l177 029E  
                     l338 015C                       l178 02A0                       l339 014E  
                     l999 027D                       u610 019C                       u530 011A  
            __CFG_CPD$OFF 0000                       u611 019B                       u531 0119  
                     u620 01A3                       u540 012B                       u700 0103  
                     u621 01A2                       u605 018E                       u541 012A  
                     u701 0102                       u550 014B                       u630 0036  
                     u470 029D                       u710 01E0                       u551 014A  
                     u471 029C                       u711 01DF                       u640 0057  
                     u720 01FF                       u721 01FE                       u570 0160  
                     u650 006C                       u730 020D                       u571 015F  
                     u651 006D                       u635 0031                       u731 020C  
                     u660 0093                       u652 0072                       u740 0217  
                     u565 0150                       u661 0092                       u653 0073  
                     u645 0052                       u741 0216                       u590 017D  
                     u670 00A1                       u591 017C                       u680 00C2  
                     u585 0164                       u690 00D7                       u595 0179  
                     u691 00D8                       u675 009C                       u692 00DD  
                     u693 00DE                       u685 00BD                       fsr0 0004  
                     indf 0000              __CFG_LVP$OFF 0000                      l1001 0284  
                    l1011 0295                      l1003 0285                      l1005 0286  
                    l1013 0221                      l1007 0287                      l1015 0258  
                    l1121 0114                      l1009 0288                      l1017 0259  
                    l1201 01FF                      l1051 02A9                      l1131 0143  
                    l1123 011A                      l1211 020D                      l1203 0201  
                    l1053 02AF                      l1141 016B                      l1133 014B  
                    l1125 012B                      l1213 0211                      l1205 0203  
                    l1143 017D                      l1135 014E                      l1151 019E  
                    l1127 0136                      l1119 0113                      l1055 0296  
                    l1215 0217                      l1207 0205                      l1153 01A3  
                    l1145 018B                      l1137 015C                      l1129 013B  
                    l1161 008A                      l1057 029E                      l1209 0207  
                    l1155 01AF                      l1147 018D                      l1139 0162  
                    l1171 0107                      l1163 0093                      l1059 02A0  
                    l1157 01B8                      l1149 0196                      l1181 010E  
                    l1173 0108                      l1165 00F5                      l1237 0261  
                    l1183 010F                      l1175 0109                      l1167 00F9  
                    l1159 0026                      l1191 01C4                      l1185 0111  
                    l1177 010A                      l1169 0103                      l1193 01D6  
                    l1179 010D                      l1195 01E1                      l1187 01B9  
                    l1197 01F5                      l1189 01BE                      l1199 01F9  
                    _RCIF 0065                      i1l65 02A2                      i1l66 02A2  
                    _TRMT 04C1              __CFG_WRT$OFF 0000                      _dato 0048  
                    _cont 0046                      _main 01B9                      _init 027D  
                    btemp 007E             __CFG_BOREN$ON 0000                      start 000C  
           __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000           ?_interrupciones 0070  
         __end_of___aldiv 01B9                     ?_main 0070                     ?_init 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l865 02A1  
                   _RCREG 001A                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TRISE 0089  
                   _TXREG 0019            __CFG_FCMEN$OFF 0000        __size_of_UART_Init 00ED  
      __size_of_UART_Read 000B           __end_of_initOsc 027D                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 000F  
            __end_of_main 0220              __end_of_init 0296                    ??_main 003A  
                  ??_init 0072                    _ANSELH 0189               initOsc@frec 0074  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000                    _Valor1 007B  
                  _Valor2 007A                    _Valor3 0079                    _Valor4 004A  
                  _Valor5 0049         __end_of_UART_Init 0113         __end_of_UART_Read 02A1  
               ??___aldiv 0072                 ??_initOsc 0072                    saved_w 007E  
 __end_of__initialization 0022            __pcstackCOMMON 0070                __pbssBANK0 003D  
__size_of_UART_Data_Ready 0007                __pmaintext 01B9          ??_interrupciones 0070  
              __pintentry 0004                   _SSPSTAT 0094                   ___aldiv 0113  
                 __ptext1 0220                   __ptext2 027D                   __ptext3 0296  
                 __ptext4 0026                   __ptext5 0113                   __ptext6 02A9  
                 __ptext7 02A1                   _initOsc 0220          ___aldiv@dividend 0024  
    end_of_initialization 0022                 _RCSTAbits 0018          ___aldiv@quotient 0075  
       ??_UART_Data_Ready 0072                 _UART_Init 0026                 _UART_Read 0296  
               _PORTEbits 0009                 _TRISCbits 0087                 _TXSTAbits 0098  
              ?_UART_Init 0028                ?_UART_Read 0070       start_initialization 000F  
__CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0079                 ___latbits 0002  
           __pcstackBANK0 0020                  ?___aldiv 0020               ??_UART_Init 002C  
             ??_UART_Read 0072                  ?_initOsc 0070                UART_Init@x 0038  
         ___aldiv@divisor 0020         interrupt_function 0004           ___aldiv@counter 0073  
         _UART_Data_Ready 02A9         UART_Init@baudrate 0028   __size_of_interrupciones 0008  
        __size_of___aldiv 00A6          __size_of_initOsc 005D   __end_of_UART_Data_Ready 02B0  
       __CFG_BOR4V$BOR40V 0000                  _controla 0047             __size_of_main 0067  
           __size_of_init 0019                  _sensores 003D                  intlevel1 0000  
              _OSCCONbits 008F            _interrupciones 02A1              ___aldiv@sign 0074  
        ?_UART_Data_Ready 0070  
